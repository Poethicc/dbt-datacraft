[0m12:08:47.854103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:47.856837 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m12:08:47.862847 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:47.866559 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m12:08:47.869492 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:47.870820 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-04-10 12:08:47.804107 => 2024-04-10 12:08:47.870758
[0m12:08:47.871364 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364325480>]}
[0m12:08:47.871694 [info ] [Thread-2 (]: 51 of 72 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.08s]
[0m12:08:47.872035 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m12:08:47.873320 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m12:08:47.874606 [info ] [Thread-1 (]: 52 of 72 START sql table model test.graph_glue ................................. [RUN]
[0m12:08:47.875625 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m12:08:47.875985 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m12:08:47.876193 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m12:08:47.880448 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m12:08:47.880934 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-04-10 12:08:47.876292 => 2024-04-10 12:08:47.880867
[0m12:08:47.881113 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m12:08:47.891294 [debug] [Thread-1 (]: Running iteration 0
[0m12:08:47.892097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m12:08:47.933539 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m12:08:47.934815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m12:08:47.960540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:47.961902 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m12:08:47.969137 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:47.970214 [debug] [Thread-1 (]: VALUE: 1
[0m12:08:47.970406 [debug] [Thread-1 (]: Running iteration 1
[0m12:08:47.970739 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m12:08:47.999917 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:48.001325 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m12:08:48.024581 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:48.026002 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m12:08:48.035166 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.036331 [debug] [Thread-1 (]: VALUE: 0
[0m12:08:48.036578 [debug] [Thread-1 (]: Running iteration 2
[0m12:08:48.036700 [debug] [Thread-1 (]: Running iteration 3
[0m12:08:48.036802 [debug] [Thread-1 (]: Running iteration 4
[0m12:08:48.036902 [debug] [Thread-1 (]: Running iteration 5
[0m12:08:48.037011 [debug] [Thread-1 (]: Running iteration 6
[0m12:08:48.037109 [debug] [Thread-1 (]: Running iteration 7
[0m12:08:48.037204 [debug] [Thread-1 (]: Running iteration 8
[0m12:08:48.037298 [debug] [Thread-1 (]: Running iteration 9
[0m12:08:48.037393 [debug] [Thread-1 (]: Running iteration 10
[0m12:08:48.037515 [debug] [Thread-1 (]: Running iteration 11
[0m12:08:48.037618 [debug] [Thread-1 (]: Running iteration 12
[0m12:08:48.037722 [debug] [Thread-1 (]: Running iteration 13
[0m12:08:48.040639 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m12:08:48.053293 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.055838 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:48.060260 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:48.062263 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m12:08:48.062701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m12:08:48.077264 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.078404 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m12:08:48.081473 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:48.085173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m12:08:48.088636 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:48.089931 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-04-10 12:08:47.881245 => 2024-04-10 12:08:48.089869
[0m12:08:48.090474 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3643ae230>]}
[0m12:08:48.090853 [info ] [Thread-1 (]: 52 of 72 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.22s]
[0m12:08:48.091197 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m12:08:48.092370 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m12:08:48.093991 [info ] [Thread-2 (]: 53 of 72 START sql table model test.graph_qid .................................. [RUN]
[0m12:08:48.094920 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m12:08:48.095048 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m12:08:48.095199 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m12:08:48.099955 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m12:08:48.100504 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-04-10 12:08:48.095330 => 2024-04-10 12:08:48.100425
[0m12:08:48.100768 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m12:08:48.105384 [debug] [Thread-2 (]: Running iteration 0
[0m12:08:48.106070 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m12:08:48.136170 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:48.137345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m12:08:48.169172 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:48.170194 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m12:08:48.177407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.178494 [debug] [Thread-2 (]: VALUE: 0
[0m12:08:48.178708 [debug] [Thread-2 (]: Running iteration 1
[0m12:08:48.178819 [debug] [Thread-2 (]: Running iteration 2
[0m12:08:48.178919 [debug] [Thread-2 (]: Running iteration 3
[0m12:08:48.179030 [debug] [Thread-2 (]: Running iteration 4
[0m12:08:48.179125 [debug] [Thread-2 (]: Running iteration 5
[0m12:08:48.179219 [debug] [Thread-2 (]: Running iteration 6
[0m12:08:48.179313 [debug] [Thread-2 (]: Running iteration 7
[0m12:08:48.179407 [debug] [Thread-2 (]: Running iteration 8
[0m12:08:48.179501 [debug] [Thread-2 (]: Running iteration 9
[0m12:08:48.179597 [debug] [Thread-2 (]: Running iteration 10
[0m12:08:48.179693 [debug] [Thread-2 (]: Running iteration 11
[0m12:08:48.179790 [debug] [Thread-2 (]: Running iteration 12
[0m12:08:48.179884 [debug] [Thread-2 (]: Running iteration 13
[0m12:08:48.181240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m12:08:48.197862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:48.200682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:48.205292 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:48.206823 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m12:08:48.207282 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m12:08:48.217635 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.218760 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m12:08:48.223872 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:48.229029 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m12:08:48.232189 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:48.233639 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-04-10 12:08:48.100885 => 2024-04-10 12:08:48.233578
[0m12:08:48.234155 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364061570>]}
[0m12:08:48.234466 [info ] [Thread-2 (]: 53 of 72 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.14s]
[0m12:08:48.234798 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m12:08:48.236849 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:08:48.237314 [info ] [Thread-1 (]: 54 of 72 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m12:08:48.237949 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m12:08:48.238507 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:08:48.238956 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m12:08:48.239635 [info ] [Thread-2 (]: 55 of 72 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m12:08:48.240268 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:08:48.241233 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m12:08:48.250107 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m12:08:48.250547 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m12:08:48.251115 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:08:48.251498 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-04-10 12:08:48.241740 => 2024-04-10 12:08:48.251422
[0m12:08:48.255156 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m12:08:48.255855 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:08:48.262229 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m12:08:48.263847 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-04-10 12:08:48.251753 => 2024-04-10 12:08:48.263715
[0m12:08:48.264247 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:08:48.269126 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m12:08:48.291826 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:48.296729 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:48.297815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:48.301325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:48.305726 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.307913 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m12:08:48.308983 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:48.311630 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m12:08:48.312461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m12:08:48.313668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m12:08:49.120814 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.81 seconds
[0m12:08:49.122441 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m12:08:49.127597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:49.131820 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m12:08:49.135612 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:49.137153 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-04-10 12:08:48.257208 => 2024-04-10 12:08:49.137082
[0m12:08:49.137960 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364060fa0>]}
[0m12:08:49.138552 [info ] [Thread-1 (]: 54 of 72 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.90s]
[0m12:08:49.139062 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:08:49.140242 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:08:49.140677 [info ] [Thread-1 (]: 56 of 72 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m12:08:49.141489 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m12:08:49.141802 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m12:08:49.142116 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:08:49.149689 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.84 seconds
[0m12:08:49.154189 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m12:08:49.156564 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m12:08:49.158265 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-04-10 12:08:49.142236 => 2024-04-10 12:08:49.158004
[0m12:08:49.158885 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:08:49.164054 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m12:08:49.165187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:49.172292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m12:08:49.177521 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:49.179468 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-04-10 12:08:48.264537 => 2024-04-10 12:08:49.179369
[0m12:08:49.180380 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd36411b730>]}
[0m12:08:49.185359 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:49.188191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:49.195205 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:49.196807 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m12:08:49.197281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m12:08:49.205923 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:49.207000 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m12:08:49.212635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:49.217320 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m12:08:49.221575 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:49.223301 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-04-10 12:08:49.159046 => 2024-04-10 12:08:49.223237
[0m12:08:49.223840 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364060640>]}
[0m12:08:50.020789 [info ] [Thread-2 (]: 55 of 72 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.94s]
[0m12:08:50.022477 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:08:50.021524 [info ] [Thread-1 (]: 56 of 72 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.08s]
[0m12:08:50.023996 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:08:50.024379 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:08:50.024831 [info ] [Thread-2 (]: 57 of 72 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m12:08:50.026298 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m12:08:50.026704 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m12:08:50.026978 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:08:50.032117 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m12:08:50.032567 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:08:50.033421 [info ] [Thread-1 (]: 58 of 72 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m12:08:50.034149 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m12:08:50.034506 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m12:08:50.034884 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:08:50.035462 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-04-10 12:08:50.027139 => 2024-04-10 12:08:50.035195
[0m12:08:50.044284 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m12:08:50.045169 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:08:50.050540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m12:08:50.051975 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-04-10 12:08:50.036137 => 2024-04-10 12:08:50.051858
[0m12:08:50.052347 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:08:50.057757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m12:08:50.069426 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.072701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.075369 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.079468 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.081138 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.084017 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m12:08:50.084517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m12:08:50.086235 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.087990 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m12:08:50.088704 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m12:08:50.097810 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.099211 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m12:08:50.099830 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.101903 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m12:08:50.104245 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.108358 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m12:08:50.109405 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.115825 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m12:08:50.116915 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.119576 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-04-10 12:08:50.046312 => 2024-04-10 12:08:50.119510
[0m12:08:50.120131 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd36441d090>]}
[0m12:08:50.121219 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.120531 [info ] [Thread-2 (]: 57 of 72 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.09s]
[0m12:08:50.123166 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-04-10 12:08:50.052643 => 2024-04-10 12:08:50.123074
[0m12:08:50.123802 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:08:50.124534 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364417760>]}
[0m12:08:50.125461 [info ] [Thread-1 (]: 58 of 72 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.09s]
[0m12:08:50.126307 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:08:50.127539 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:08:50.128448 [info ] [Thread-2 (]: 59 of 72 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m12:08:50.129256 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:08:50.130337 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m12:08:50.131154 [info ] [Thread-1 (]: 60 of 72 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m12:08:50.131666 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m12:08:50.132489 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m12:08:50.133164 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:08:50.133629 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m12:08:50.137104 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m12:08:50.137671 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:08:50.143745 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-04-10 12:08:50.134009 => 2024-04-10 12:08:50.143581
[0m12:08:50.148976 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m12:08:50.149755 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:08:50.154668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m12:08:50.155934 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-04-10 12:08:50.138277 => 2024-04-10 12:08:50.155802
[0m12:08:50.156314 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:08:50.162330 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m12:08:50.172738 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.176326 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.181808 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.184525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.185619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.189166 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m12:08:50.189722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m12:08:50.191547 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.193924 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m12:08:50.194505 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m12:08:50.201108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.202433 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m12:08:50.206275 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.211128 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m12:08:50.211999 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.213991 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m12:08:50.215979 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.217452 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-04-10 12:08:50.150292 => 2024-04-10 12:08:50.217364
[0m12:08:50.218195 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364416e30>]}
[0m12:08:50.219267 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.218764 [info ] [Thread-2 (]: 59 of 72 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.09s]
[0m12:08:50.223139 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m12:08:50.223857 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:08:50.225906 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:08:50.226448 [info ] [Thread-2 (]: 61 of 72 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m12:08:50.227434 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m12:08:50.228193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.228438 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m12:08:50.230107 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-04-10 12:08:50.156456 => 2024-04-10 12:08:50.230046
[0m12:08:50.230472 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:08:50.231083 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd36438e3b0>]}
[0m12:08:50.238199 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m12:08:50.239240 [info ] [Thread-1 (]: 60 of 72 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.10s]
[0m12:08:50.240177 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:08:50.241309 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-04-10 12:08:50.231402 => 2024-04-10 12:08:50.241089
[0m12:08:50.242020 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:08:50.242591 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:08:50.243419 [info ] [Thread-1 (]: 62 of 72 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m12:08:50.249040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m12:08:50.249856 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m12:08:50.251145 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m12:08:50.251895 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:08:50.257074 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m12:08:50.257843 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-04-10 12:08:50.252104 => 2024-04-10 12:08:50.257679
[0m12:08:50.258268 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:08:50.263255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m12:08:50.271908 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.275549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.279637 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.282691 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.283879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.287845 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m12:08:50.288424 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m12:08:50.292274 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.294148 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m12:08:50.294748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m12:08:50.299057 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.300375 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m12:08:50.303239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.304588 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m12:08:50.305283 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.310657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m12:08:50.312368 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.317056 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m12:08:50.318395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.319936 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-04-10 12:08:50.244080 => 2024-04-10 12:08:50.319865
[0m12:08:50.320619 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3640cf940>]}
[0m12:08:50.321114 [info ] [Thread-2 (]: 61 of 72 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.09s]
[0m12:08:50.321533 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:08:50.322488 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:08:50.323350 [info ] [Thread-2 (]: 63 of 72 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m12:08:50.324038 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m12:08:50.324787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.325068 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m12:08:50.326613 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-04-10 12:08:50.258380 => 2024-04-10 12:08:50.326555
[0m12:08:50.327254 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:08:50.328268 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364159f30>]}
[0m12:08:50.331629 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m12:08:50.332335 [info ] [Thread-1 (]: 62 of 72 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.08s]
[0m12:08:50.333119 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:08:50.334605 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:08:50.335166 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-04-10 12:08:50.328555 => 2024-04-10 12:08:50.335066
[0m12:08:50.335986 [info ] [Thread-1 (]: 64 of 72 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m12:08:50.336592 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:08:50.337580 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m12:08:50.342053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m12:08:50.342746 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m12:08:50.344608 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:08:50.350923 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m12:08:50.351776 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-04-10 12:08:50.345418 => 2024-04-10 12:08:50.351606
[0m12:08:50.352126 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:08:50.358167 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m12:08:50.360855 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.364672 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.370164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.372223 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m12:08:50.372727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m12:08:50.383629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.384870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m12:08:50.386083 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.388874 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.393473 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.394480 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.399045 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m12:08:50.401518 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m12:08:50.404120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m12:08:50.406026 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.407547 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-04-10 12:08:50.338029 => 2024-04-10 12:08:50.407470
[0m12:08:50.409160 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364441cc0>]}
[0m12:08:50.409936 [info ] [Thread-2 (]: 63 of 72 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m12:08:50.410451 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:08:50.411617 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:08:50.412090 [info ] [Thread-2 (]: 65 of 72 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m12:08:50.412728 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m12:08:50.412855 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m12:08:50.413009 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:08:50.416174 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m12:08:50.416655 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-04-10 12:08:50.413122 => 2024-04-10 12:08:50.416583
[0m12:08:50.416838 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:08:50.421618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m12:08:50.432370 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.433791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m12:08:50.439232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.446960 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m12:08:50.448312 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.452060 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.453709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.455342 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-04-10 12:08:50.352227 => 2024-04-10 12:08:50.455264
[0m12:08:50.456154 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd36415a080>]}
[0m12:08:50.457334 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.456736 [info ] [Thread-1 (]: 64 of 72 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.12s]
[0m12:08:50.459863 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m12:08:50.460887 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:08:50.462691 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m12:08:50.464482 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.465425 [info ] [Thread-1 (]: 66 of 72 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m12:08:50.466637 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m12:08:50.467038 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m12:08:50.467214 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.480468 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m12:08:50.481104 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 12:08:50.467310 => 2024-04-10 12:08:50.480999
[0m12:08:50.481360 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.485358 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m12:08:50.486772 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.488438 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m12:08:50.493563 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.500044 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m12:08:50.503305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.504899 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-04-10 12:08:50.417029 => 2024-04-10 12:08:50.504773
[0m12:08:50.505576 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364415300>]}
[0m12:08:50.506282 [info ] [Thread-2 (]: 65 of 72 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.09s]
[0m12:08:50.506873 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:08:50.508691 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.509660 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.510423 [info ] [Thread-2 (]: 67 of 72 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m12:08:50.591524 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.592664 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m12:08:50.594264 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m12:08:50.594694 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.600301 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m12:08:50.601629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.604973 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m12:08:50.605707 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m12:08:50.606168 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 12:08:50.594876 => 2024-04-10 12:08:50.606017
[0m12:08:50.607249 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.611842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m12:08:50.621471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.622808 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m12:08:50.626975 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.631148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m12:08:50.633114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.636670 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.637441 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.640385 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 12:08:50.481471 => 2024-04-10 12:08:50.640313
[0m12:08:50.641061 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3640bd3c0>]}
[0m12:08:50.641603 [info ] [Thread-1 (]: 66 of 72 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.17s]
[0m12:08:50.642087 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.643350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.643811 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:08:50.646110 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m12:08:50.646815 [info ] [Thread-1 (]: 68 of 72 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m12:08:50.648322 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m12:08:50.649220 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m12:08:50.649865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m12:08:50.650389 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:08:50.666649 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m12:08:50.667151 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-04-10 12:08:50.651607 => 2024-04-10 12:08:50.667076
[0m12:08:50.667333 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:08:50.671305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m12:08:50.678452 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.680276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m12:08:50.685343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.690168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m12:08:50.694730 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.696827 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 12:08:50.607493 => 2024-04-10 12:08:50.696752
[0m12:08:50.697569 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3640bdba0>]}
[0m12:08:50.698259 [info ] [Thread-2 (]: 67 of 72 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.11s]
[0m12:08:50.698821 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:08:50.699985 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:08:50.700608 [info ] [Thread-2 (]: 69 of 72 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m12:08:50.701671 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m12:08:50.701987 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m12:08:50.702208 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:08:50.708392 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m12:08:50.710044 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m12:08:50.713844 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.716578 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-04-10 12:08:50.702355 => 2024-04-10 12:08:50.716421
[0m12:08:50.716984 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:08:50.721657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m12:08:50.722858 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.724902 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m12:08:50.725528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m12:08:50.745538 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.749561 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.754435 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.755736 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m12:08:50.756588 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.759545 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m12:08:50.760805 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m12:08:50.763405 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.768447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m12:08:50.772182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.773646 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-10 12:08:50.667422 => 2024-04-10 12:08:50.773571
[0m12:08:50.774586 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd357f49480>]}
[0m12:08:50.775357 [info ] [Thread-1 (]: 68 of 72 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.13s]
[0m12:08:50.776184 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:08:50.777595 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.778811 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:08:50.780009 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m12:08:50.780674 [info ] [Thread-1 (]: 70 of 72 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m12:08:50.783347 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m12:08:50.783913 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m12:08:50.784268 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:08:50.789416 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m12:08:50.790309 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.794960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m12:08:50.796583 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-10 12:08:50.784404 => 2024-04-10 12:08:50.796396
[0m12:08:50.797669 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:08:50.801805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m12:08:50.803082 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.805003 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-10 12:08:50.717127 => 2024-04-10 12:08:50.804925
[0m12:08:50.805828 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3641ef670>]}
[0m12:08:50.806502 [info ] [Thread-2 (]: 69 of 72 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.10s]
[0m12:08:50.806880 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:08:50.807845 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:08:50.808504 [info ] [Thread-2 (]: 71 of 72 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m12:08:50.809364 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m12:08:50.809619 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m12:08:50.809877 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:08:50.813538 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m12:08:50.814227 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-10 12:08:50.810058 => 2024-04-10 12:08:50.814100
[0m12:08:50.814544 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:08:50.819145 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m12:08:50.830227 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.834662 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.840156 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.843693 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m12:08:50.844510 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:08:50.848192 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.849364 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m12:08:50.854401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.856584 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m12:08:50.857074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m12:08:50.876261 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.878088 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m12:08:50.882151 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.885898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m12:08:50.887216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:08:50.888457 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m12:08:50.891721 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.893526 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-10 12:08:50.797896 => 2024-04-10 12:08:50.893448
[0m12:08:50.894279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.895425 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3641edf90>]}
[0m12:08:50.899642 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m12:08:50.901391 [info ] [Thread-1 (]: 70 of 72 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.11s]
[0m12:08:50.902436 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:08:50.903724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:50.905173 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-10 12:08:50.814652 => 2024-04-10 12:08:50.905113
[0m12:08:50.905577 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m12:08:50.906330 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd3641ee860>]}
[0m12:08:50.907002 [info ] [Thread-1 (]: 72 of 72 START sql table model test.dataset_event_table ........................ [RUN]
[0m12:08:50.907809 [info ] [Thread-2 (]: 71 of 72 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.10s]
[0m12:08:50.909392 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m12:08:50.910134 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:08:50.910544 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m12:08:50.911222 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m12:08:50.922626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.929365 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.935325 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:50.940891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:08:50.948948 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m12:08:50.949562 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-10 12:08:50.911349 => 2024-04-10 12:08:50.949485
[0m12:08:50.949762 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m12:08:50.953921 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
    )
        ...
[0m12:08:51.023959 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m12:08:51.026706 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:08:51.031484 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:51.033949 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m12:08:51.034454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("_dbt_source_relation", "None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
  ...
[0m12:08:51.135491 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m12:08:51.136716 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m12:08:51.141417 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:51.145020 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m12:08:51.148393 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:08:51.149627 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-10 12:08:50.949853 => 2024-04-10 12:08:51.149564
[0m12:08:51.150154 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ddba6f6e-060e-4af3-a510-894711f614ff', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364217910>]}
[0m12:08:51.150474 [info ] [Thread-1 (]: 72 of 72 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.24s]
[0m12:08:51.150806 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m12:08:51.153539 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m12:08:51.154012 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:08:51.154135 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m12:08:51.154258 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m12:08:51.154355 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table' was left open.
[0m12:08:51.154456 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: Close
[0m12:08:51.154857 [info ] [MainThread]: 
[0m12:08:51.155189 [info ] [MainThread]: Finished running 33 view models, 12 incremental models, 27 table models in 0 hours 0 minutes and 11.96 seconds (11.96s).
[0m12:08:51.157827 [debug] [MainThread]: Command end result
[0m12:08:51.175046 [info ] [MainThread]: 
[0m12:08:51.175554 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:08:51.175946 [info ] [MainThread]: 
[0m12:08:51.176205 [info ] [MainThread]: Done. PASS=72 WARN=0 ERROR=0 SKIP=0 TOTAL=72
[0m12:08:51.177144 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd36439ee60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd36439e7a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd364181720>]}
[0m12:08:51.177622 [debug] [MainThread]: Flushing usage events


============================== 2024-04-10 12:23:02.430861 | 8139523c-9864-493f-89fc-7df6f3f41285 ==============================
[0m12:23:02.430861 [info ] [MainThread]: Running with dbt=1.4.7
[0m12:23:02.432534 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m12:23:02.432706 [debug] [MainThread]: Tracking: tracking
[0m12:23:02.434730 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809dbf1c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809dc83910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809dc83f10>]}
[0m12:23:02.461385 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m12:23:02.509712 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:23:02.509972 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m12:23:02.518277 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809d040dc0>]}
[0m12:23:02.537840 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809d004c40>]}
[0m12:23:02.538339 [info ] [MainThread]: Found 72 models, 8 tests, 0 snapshots, 0 analyses, 527 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m12:23:02.538625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809d004d00>]}
[0m12:23:02.541726 [info ] [MainThread]: 
[0m12:23:02.543372 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m12:23:02.547762 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m12:23:02.558255 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m12:23:03.053820 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m12:23:03.056850 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.063116 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m12:23:03.063573 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m12:23:03.069590 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m12:23:03.076074 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.086257 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809dc33df0>]}
[0m12:23:03.087075 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m12:23:03.087488 [info ] [MainThread]: 
[0m12:23:03.092226 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m12:23:03.092629 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m12:23:03.093310 [info ] [Thread-1 (]: 1 of 72 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m12:23:03.094432 [info ] [Thread-2 (]: 2 of 72 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m12:23:03.095701 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m12:23:03.096947 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m12:23:03.097455 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m12:23:03.098014 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m12:23:03.098400 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m12:23:03.158812 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m12:23:03.157388 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m12:23:03.174201 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.205560 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.210701 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.223317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.233175 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.234809 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.241961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.273091 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m12:23:03.275824 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-04-10 12:23:03.109302 => 2024-04-10 12:23:03.275614
[0m12:23:03.276503 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m12:23:03.299955 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m12:23:03.312943 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m12:23:03.314467 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'period') AS period, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )
  )...
[0m12:23:03.319597 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.323975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.326666 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.333119 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m12:23:03.334520 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.337838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.338626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.341972 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m12:23:03.344450 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.346214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.347487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.351336 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m12:23:03.355405 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.356578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m12:23:03.357724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.364326 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.366983 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m12:23:03.391522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m12:23:03.392876 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-04-10 12:23:03.098653 => 2024-04-10 12:23:03.392698
[0m12:23:03.393399 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m12:23:03.397973 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m12:23:03.398901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.400419 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-04-10 12:23:03.276793 => 2024-04-10 12:23:03.400351
[0m12:23:03.401295 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8089940f10>]}
[0m12:23:03.402025 [info ] [Thread-1 (]: 1 of 72 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.31s]
[0m12:23:03.403779 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m12:23:03.404258 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )
  )...
[0m12:23:03.404837 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m12:23:03.407028 [info ] [Thread-1 (]: 3 of 72 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m12:23:03.407756 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m12:23:03.408013 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m12:23:03.408199 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m12:23:03.412860 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m12:23:03.417826 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.421814 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m12:23:03.422961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.427787 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.429820 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.432429 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m12:23:03.434676 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.437319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.438220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.443590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m12:23:03.446721 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.447974 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m12:23:03.449628 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.451697 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.453163 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.458223 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m12:23:03.459611 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.465959 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.470879 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m12:23:03.472994 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-04-10 12:23:03.393581 => 2024-04-10 12:23:03.472934
[0m12:23:03.474109 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8089941570>]}
[0m12:23:03.474828 [info ] [Thread-2 (]: 2 of 72 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.38s]
[0m12:23:03.475187 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-04-10 12:23:03.408299 => 2024-04-10 12:23:03.475095
[0m12:23:03.475642 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m12:23:03.475984 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m12:23:03.476690 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m12:23:03.483260 [info ] [Thread-2 (]: 4 of 72 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m12:23:03.483991 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m12:23:03.484868 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m12:23:03.485887 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m12:23:03.486556 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m12:23:03.487092 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
JSONExtractString(_airbyte_data, 'description') AS description, 
JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'section') AS section, 
JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )
  )...
[0m12:23:03.491055 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m12:23:03.499407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.503736 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.505538 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.509289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m12:23:03.510427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.513897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.514635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.517890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m12:23:03.521786 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.522797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.525829 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m12:23:03.528280 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.531965 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.533565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m12:23:03.535414 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.542657 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.547904 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m12:23:03.552574 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m12:23:03.554286 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-04-10 12:23:03.487395 => 2024-04-10 12:23:03.554095
[0m12:23:03.554761 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m12:23:03.560128 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m12:23:03.561205 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.562628 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-04-10 12:23:03.477313 => 2024-04-10 12:23:03.562570
[0m12:23:03.563664 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80884796c0>]}
[0m12:23:03.564473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
JSONExtractString(_airbyte_data, 'installs') AS installs, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )
  )...
[0m12:23:03.564145 [info ] [Thread-1 (]: 3 of 72 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.16s]
[0m12:23:03.566262 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m12:23:03.567019 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m12:23:03.567776 [info ] [Thread-1 (]: 5 of 72 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m12:23:03.569256 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m12:23:03.569451 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m12:23:03.569617 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m12:23:03.574148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m12:23:03.574940 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.579452 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m12:23:03.581748 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.585700 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.587547 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.589632 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m12:23:03.592557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.593347 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.596088 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.599775 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m12:23:03.605684 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.606908 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m12:23:03.607535 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.610073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.611441 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.616077 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m12:23:03.617275 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.632375 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m12:23:03.633696 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:03.635335 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-04-10 12:23:03.554897 => 2024-04-10 12:23:03.635258
[0m12:23:03.636821 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80882b2080>]}
[0m12:23:03.637326 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-04-10 12:23:03.569720 => 2024-04-10 12:23:03.637194
[0m12:23:03.639262 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m12:23:03.643917 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m12:23:03.638650 [info ] [Thread-2 (]: 4 of 72 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.15s]
[0m12:23:03.645000 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m12:23:03.645421 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m12:23:03.646899 [info ] [Thread-2 (]: 6 of 72 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m12:23:03.647653 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m12:23:03.647899 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m12:23:03.648157 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m12:23:03.648752 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )
  )...
[0m12:23:03.653478 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m12:23:03.662777 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.665997 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m12:23:03.666928 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.672617 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.675357 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.676577 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m12:23:03.678101 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.680715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.681651 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.686633 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m12:23:03.688619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.690579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.691478 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.695657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m12:23:03.697151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.704011 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.718781 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m12:23:03.719735 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m12:23:03.721689 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-04-10 12:23:03.649246 => 2024-04-10 12:23:03.721570
[0m12:23:03.722077 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m12:23:03.726583 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m12:23:03.727495 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.728967 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-04-10 12:23:03.639492 => 2024-04-10 12:23:03.728905
[0m12:23:03.729685 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088478b20>]}
[0m12:23:03.730520 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name != 'screen_view'
  )...
[0m12:23:03.730206 [info ] [Thread-1 (]: 5 of 72 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.16s]
[0m12:23:03.732401 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m12:23:03.733267 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m12:23:03.734197 [info ] [Thread-1 (]: 7 of 72 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m12:23:03.735657 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m12:23:03.736158 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m12:23:03.736657 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m12:23:03.740920 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m12:23:03.742649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.745526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m12:23:03.747819 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.752296 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.753011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.756359 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m12:23:03.759446 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.760154 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.762407 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.767151 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m12:23:03.772124 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.773710 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m12:23:03.775364 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.777913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.779526 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.843143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m12:23:03.846430 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.847884 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-04-10 12:23:03.722274 => 2024-04-10 12:23:03.847816
[0m12:23:03.848580 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80883131f0>]}
[0m12:23:03.849323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m12:23:03.849821 [info ] [Thread-2 (]: 6 of 72 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.20s]
[0m12:23:03.863326 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m12:23:03.863792 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m12:23:03.864235 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m12:23:03.864932 [info ] [Thread-2 (]: 8 of 72 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m12:23:03.865814 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-04-10 12:23:03.737022 => 2024-04-10 12:23:03.865625
[0m12:23:03.866953 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m12:23:03.867798 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m12:23:03.868263 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m12:23:03.874526 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m12:23:03.875044 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m12:23:03.876005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )
  )...
[0m12:23:03.880450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m12:23:03.890638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.894784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.895370 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.899776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m12:23:03.903057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.904318 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m12:23:03.905451 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.909494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.912529 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.916415 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m12:23:03.918094 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.920071 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:03.923670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.924708 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m12:23:03.925838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.937394 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.942902 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m12:23:03.947514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m12:23:03.949630 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-04-10 12:23:03.876670 => 2024-04-10 12:23:03.949464
[0m12:23:03.950041 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m12:23:03.954498 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m12:23:03.955405 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.956613 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-04-10 12:23:03.868670 => 2024-04-10 12:23:03.956558
[0m12:23:03.957222 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088313c40>]}
[0m12:23:03.957671 [info ] [Thread-1 (]: 7 of 72 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.22s]
[0m12:23:03.958071 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m12:23:03.958663 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m12:23:03.959447 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m12:23:03.960253 [info ] [Thread-1 (]: 9 of 72 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m12:23:03.962736 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m12:23:03.962992 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m12:23:03.963209 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m12:23:03.967282 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m12:23:03.973612 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.977307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:03.978231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:03.984938 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m12:23:03.986894 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:03.989299 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )  LIMIT 1
  ...
[0m12:23:03.990190 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.993345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m12:23:03.996859 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:03.997751 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.001285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m12:23:04.004734 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.008903 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.010146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m12:23:04.010855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.019021 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.028940 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m12:23:04.031386 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m12:23:04.032770 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-04-10 12:23:03.963335 => 2024-04-10 12:23:04.032546
[0m12:23:04.033450 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m12:23:04.038325 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m12:23:04.039586 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.041053 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-04-10 12:23:03.950248 => 2024-04-10 12:23:04.040971
[0m12:23:04.042073 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808842df30>]}
[0m12:23:04.042960 [info ] [Thread-2 (]: 8 of 72 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.18s]
[0m12:23:04.043841 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )
  )...
[0m12:23:04.044444 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m12:23:04.045843 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m12:23:04.047783 [info ] [Thread-2 (]: 10 of 72 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m12:23:04.048594 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m12:23:04.048850 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m12:23:04.049060 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m12:23:04.053529 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m12:23:04.054386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.059751 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m12:23:04.061606 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.066287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.067961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.070701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m12:23:04.074796 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.077986 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.078995 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.085348 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m12:23:04.087835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.091206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.092351 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.094531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m12:23:04.097807 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.103557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.105420 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m12:23:04.109770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m12:23:04.111117 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-04-10 12:23:04.049225 => 2024-04-10 12:23:04.110734
[0m12:23:04.112451 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m12:23:04.117474 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m12:23:04.118466 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.119887 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-04-10 12:23:04.033727 => 2024-04-10 12:23:04.119826
[0m12:23:04.120794 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80882ba470>]}
[0m12:23:04.121284 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )
  )...
[0m12:23:04.122498 [info ] [Thread-1 (]: 9 of 72 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.16s]
[0m12:23:04.124626 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m12:23:04.125458 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m12:23:04.126584 [info ] [Thread-1 (]: 11 of 72 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m12:23:04.127658 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m12:23:04.127932 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m12:23:04.128123 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m12:23:04.131998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m12:23:04.132762 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.138964 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m12:23:04.139675 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.143934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.145292 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.147839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m12:23:04.148941 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.152952 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.153704 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.159066 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m12:23:04.160296 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.162600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.163403 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.165267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m12:23:04.168443 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.173366 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m12:23:04.174145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.182607 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m12:23:04.184092 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-04-10 12:23:04.128223 => 2024-04-10 12:23:04.183864
[0m12:23:04.184689 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m12:23:04.185617 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.190275 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m12:23:04.192857 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-04-10 12:23:04.112941 => 2024-04-10 12:23:04.192771
[0m12:23:04.193848 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809d043220>]}
[0m12:23:04.194308 [info ] [Thread-2 (]: 10 of 72 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.15s]
[0m12:23:04.194704 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m12:23:04.195062 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m12:23:04.196228 [info ] [Thread-2 (]: 12 of 72 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m12:23:04.197337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )
  )...
[0m12:23:04.198149 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m12:23:04.199665 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m12:23:04.200702 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m12:23:04.205258 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m12:23:04.207723 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.215631 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m12:23:04.217233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.223700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.224962 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.227656 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m12:23:04.232627 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.236304 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.237544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.244720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m12:23:04.246310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.248191 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.250524 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.252050 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m12:23:04.253979 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.260654 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.262342 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m12:23:04.266197 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m12:23:04.268216 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-04-10 12:23:04.201005 => 2024-04-10 12:23:04.268022
[0m12:23:04.268720 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m12:23:04.274132 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m12:23:04.275174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.277051 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-04-10 12:23:04.186009 => 2024-04-10 12:23:04.276988
[0m12:23:04.278097 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80896a5870>]}
[0m12:23:04.279041 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )
  )...
[0m12:23:04.278725 [info ] [Thread-1 (]: 11 of 72 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.15s]
[0m12:23:04.280456 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m12:23:04.281329 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m12:23:04.281797 [info ] [Thread-1 (]: 13 of 72 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m12:23:04.282969 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m12:23:04.283788 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m12:23:04.284082 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m12:23:04.290101 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m12:23:04.291392 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.296575 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m12:23:04.298963 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.303532 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.305123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.307180 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m12:23:04.310387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.311287 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.313412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.317163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m12:23:04.322014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.324442 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m12:23:04.326113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.327736 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.328367 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.335086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.335713 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m12:23:04.343366 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m12:23:04.346110 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-04-10 12:23:04.284607 => 2024-04-10 12:23:04.345891
[0m12:23:04.346707 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m12:23:04.351411 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m12:23:04.352821 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.354491 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-04-10 12:23:04.268920 => 2024-04-10 12:23:04.354430
[0m12:23:04.355451 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088313190>]}
[0m12:23:04.355958 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )
  )...
[0m12:23:04.356642 [info ] [Thread-2 (]: 12 of 72 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.16s]
[0m12:23:04.358552 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m12:23:04.359307 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m12:23:04.359996 [info ] [Thread-2 (]: 14 of 72 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m12:23:04.360908 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m12:23:04.361729 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m12:23:04.362354 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m12:23:04.367262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m12:23:04.367980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.373279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m12:23:04.377909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.378730 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.379921 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m12:23:04.383471 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.388573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.392204 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m12:23:04.393095 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.396562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.399559 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.401073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m12:23:04.403836 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.405687 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.407145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.411120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m12:23:04.414590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.416231 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-04-10 12:23:04.346949 => 2024-04-10 12:23:04.416159
[0m12:23:04.417217 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8089943010>]}
[0m12:23:04.418677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.417977 [info ] [Thread-1 (]: 13 of 72 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.13s]
[0m12:23:04.435729 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m12:23:04.436415 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m12:23:04.437304 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m12:23:04.440110 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-04-10 12:23:04.362471 => 2024-04-10 12:23:04.439968
[0m12:23:04.440710 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m12:23:04.439232 [info ] [Thread-1 (]: 15 of 72 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m12:23:04.447021 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m12:23:04.447986 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m12:23:04.448704 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m12:23:04.449003 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m12:23:04.454050 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m12:23:04.455491 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
JSONExtractString(_airbyte_data, 'created') AS created, 
JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'objective') AS objective, 
JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
JSONExtractString(_airbyte_data, 'status') AS status, 
JSONExtractString(_airbyte_data, 'updated') AS updated, 
JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )
  )...
[0m12:23:04.461312 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.465576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.467293 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.471629 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m12:23:04.473276 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.475937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.476793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.478705 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m12:23:04.481857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.485223 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m12:23:04.487258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.489338 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.490368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.492786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m12:23:04.495705 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.507597 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.512489 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m12:23:04.517660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m12:23:04.518970 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-10 12:23:04.449314 => 2024-04-10 12:23:04.518864
[0m12:23:04.519300 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m12:23:04.524679 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m12:23:04.525611 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.528243 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-04-10 12:23:04.441463 => 2024-04-10 12:23:04.528185
[0m12:23:04.528835 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808822f160>]}
[0m12:23:04.529228 [info ] [Thread-2 (]: 14 of 72 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.17s]
[0m12:23:04.529587 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m12:23:04.529912 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m12:23:04.531614 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'moat') AS moat, 
JSONExtractString(_airbyte_data, 'playable') AS playable, 
JSONExtractString(_airbyte_data, 'romi') AS romi, 
JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
JSONExtractString(_airbyte_data, 'tps') AS tps, 
JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )
  )...
[0m12:23:04.530891 [info ] [Thread-2 (]: 16 of 72 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m12:23:04.533823 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m12:23:04.534131 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m12:23:04.534342 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m12:23:04.538126 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m12:23:04.545881 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.549954 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.552321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:04.555946 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m12:23:04.557737 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.560347 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.563232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.564913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m12:23:04.567286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.568094 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.570073 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.574307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m12:23:04.578641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.579907 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m12:23:04.581455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.592418 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m12:23:04.593280 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.598704 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m12:23:04.600165 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-04-10 12:23:04.534477 => 2024-04-10 12:23:04.599987
[0m12:23:04.600682 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m12:23:04.605520 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m12:23:04.606508 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.607757 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-10 12:23:04.519499 => 2024-04-10 12:23:04.607700
[0m12:23:04.608403 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088276980>]}
[0m12:23:04.609080 [info ] [Thread-1 (]: 15 of 72 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.16s]
[0m12:23:04.609663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Date') AS Date, 
JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )
  )...
[0m12:23:04.610086 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m12:23:04.611857 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m12:23:04.612583 [info ] [Thread-1 (]: 17 of 72 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m12:23:04.614096 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m12:23:04.614456 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m12:23:04.614655 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m12:23:04.618550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m12:23:04.621578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.625286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m12:23:04.626006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.630913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.631836 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.635410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m12:23:04.637833 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.640365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )  LIMIT 1
  ...
[0m12:23:04.642140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.646530 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m12:23:04.647805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.649810 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m12:23:04.653265 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.655133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m12:23:04.656558 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.668210 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.749892 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m12:23:04.754750 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m12:23:04.755520 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-04-10 12:23:04.614772 => 2024-04-10 12:23:04.755385
[0m12:23:04.755858 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m12:23:04.760729 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m12:23:04.761900 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.762855 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )
  )...
[0m12:23:04.764636 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-04-10 12:23:04.600859 => 2024-04-10 12:23:04.764576
[0m12:23:04.766526 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808837d420>]}
[0m12:23:04.767167 [info ] [Thread-2 (]: 16 of 72 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.23s]
[0m12:23:04.767729 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m12:23:04.768378 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m12:23:04.769068 [info ] [Thread-2 (]: 18 of 72 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m12:23:04.770055 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m12:23:04.770315 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m12:23:04.770490 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m12:23:04.781750 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m12:23:04.782645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:04.786412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m12:23:04.788431 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-04-10 12:23:04.770668 => 2024-04-10 12:23:04.788176
[0m12:23:04.789359 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m12:23:04.802774 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:04.804626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m12:23:04.832246 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.833063 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:04.838560 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m12:23:04.841552 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.842733 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m12:23:04.843925 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.847639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.849215 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.854247 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m12:23:04.855496 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.862090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.863373 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-04-10 12:23:04.756002 => 2024-04-10 12:23:04.863313
[0m12:23:04.867506 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:04.868491 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808823efb0>]}
[0m12:23:04.877729 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:04.878874 [info ] [Thread-1 (]: 17 of 72 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.25s]
[0m12:23:04.880811 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m12:23:04.881425 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m12:23:04.882237 [info ] [Thread-1 (]: 19 of 72 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m12:23:04.883507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.884441 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m12:23:04.909387 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m12:23:04.909743 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m12:23:04.911527 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m12:23:04.916261 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m12:23:04.916962 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-04-10 12:23:04.912156 => 2024-04-10 12:23:04.916809
[0m12:23:04.917419 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m12:23:04.924262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.926236 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:04.930817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.932641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.937386 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.938567 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.941364 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m12:23:04.942094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
      ...
[0m12:23:04.946323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.948589 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:04.953067 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:04.953713 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.955831 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:04.956992 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.959337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m12:23:04.973753 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.977718 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.983711 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:04.985858 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m12:23:04.986630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:04.989342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:04.989780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
      ...
[0m12:23:04.994671 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:04.996474 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:04.999497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.000784 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.002518 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.005783 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.009233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.012644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m12:23:05.016998 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.019451 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-04-10 12:23:04.789797 => 2024-04-10 12:23:05.019352
[0m12:23:05.020411 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088425960>]}
[0m12:23:05.021083 [info ] [Thread-2 (]: 18 of 72 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.25s]
[0m12:23:05.021809 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m12:23:05.022546 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m12:23:05.023198 [info ] [Thread-2 (]: 20 of 72 START sql view model test.incremental_adjust_events_default_events .... [RUN]
[0m12:23:05.024734 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m12:23:05.025130 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m12:23:05.025441 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m12:23:05.030125 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m12:23:05.030801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:05.033641 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.034051 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-04-10 12:23:05.025718 => 2024-04-10 12:23:05.033929
[0m12:23:05.035297 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m12:23:05.042347 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m12:23:05.043430 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.046115 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.047333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */


  create view test.incremental_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_adjust_events_default_events

  )...
[0m12:23:05.054827 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.057933 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.059622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.063310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m12:23:05.064909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.069283 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m12:23:05.070492 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.072898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events to test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m12:23:05.075019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.077075 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-04-10 12:23:04.917563 => 2024-04-10 12:23:05.077008
[0m12:23:05.077792 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.078512 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088218400>]}
[0m12:23:05.082198 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events 
  
  ...
[0m12:23:05.083109 [info ] [Thread-1 (]: 19 of 72 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.19s]
[0m12:23:05.085111 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m12:23:05.085662 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m12:23:05.086619 [info ] [Thread-1 (]: 21 of 72 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m12:23:05.088216 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m12:23:05.088478 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m12:23:05.088678 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m12:23:05.092046 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m12:23:05.093058 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.094579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events__dbt_tmp to test.incremental_adjust_events_default_events 
  
  ...
[0m12:23:05.095760 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-04-10 12:23:05.088856 => 2024-04-10 12:23:05.095624
[0m12:23:05.096149 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m12:23:05.104070 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.105083 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.110668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m12:23:05.111862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.114925 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.119164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.120854 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-04-10 12:23:05.035582 => 2024-04-10 12:23:05.120781
[0m12:23:05.121687 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808845de10>]}
[0m12:23:05.122476 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.123834 [info ] [Thread-2 (]: 20 of 72 OK created sql view model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.10s]
[0m12:23:05.126626 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:05.127279 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m12:23:05.129881 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.130640 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m12:23:05.132520 [info ] [Thread-2 (]: 22 of 72 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m12:23:05.134630 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m12:23:05.135207 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m12:23:05.135577 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m12:23:05.143921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.144649 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m12:23:05.147646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m12:23:05.150162 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-04-10 12:23:05.135899 => 2024-04-10 12:23:05.149946
[0m12:23:05.150632 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m12:23:05.158385 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.164975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.168568 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.170210 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:05.173602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.177927 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.180534 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:05.181324 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.184891 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.186725 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m12:23:05.189045 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
      ...
[0m12:23:05.191199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.193489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m12:23:05.197883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.199266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.209672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:05.214409 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.220046 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.222141 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m12:23:05.222795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
      ...
[0m12:23:05.227986 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:05.230925 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.232477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.233945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.237038 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.239038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.244687 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.247883 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.251248 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.255295 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m12:23:05.258725 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.261181 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-04-10 12:23:05.096301 => 2024-04-10 12:23:05.261083
[0m12:23:05.262042 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808845da80>]}
[0m12:23:05.262688 [info ] [Thread-1 (]: 21 of 72 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.17s]
[0m12:23:05.263327 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m12:23:05.263899 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m12:23:05.264763 [info ] [Thread-1 (]: 23 of 72 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m12:23:05.265721 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m12:23:05.266065 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m12:23:05.266310 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m12:23:05.269919 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m12:23:05.270359 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-04-10 12:23:05.266434 => 2024-04-10 12:23:05.270295
[0m12:23:05.270558 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m12:23:05.277843 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.278930 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m12:23:05.284326 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.288271 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.292257 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.293179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.295989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.302215 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.305821 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:05.308924 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.309923 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.313943 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.317594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.320175 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m12:23:05.320919 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.324786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m12:23:05.327647 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.329690 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-04-10 12:23:05.150818 => 2024-04-10 12:23:05.329623
[0m12:23:05.330258 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808826f1f0>]}
[0m12:23:05.330603 [info ] [Thread-2 (]: 22 of 72 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.20s]
[0m12:23:05.330879 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m12:23:05.331257 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m12:23:05.332322 [info ] [Thread-2 (]: 24 of 72 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m12:23:05.333563 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m12:23:05.333998 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m12:23:05.334373 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m12:23:05.339946 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m12:23:05.340752 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:05.343801 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.345971 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-04-10 12:23:05.334648 => 2024-04-10 12:23:05.345788
[0m12:23:05.346552 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m12:23:05.353828 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.355558 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.358826 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m12:23:05.360205 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.363286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.365545 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
      ...
[0m12:23:05.370262 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.373819 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_install:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:05.376999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.380224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.382893 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m12:23:05.383661 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:05.385575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.401966 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:05.409160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.414414 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.415075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:05.417080 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m12:23:05.420866 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.422922 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
      ...
[0m12:23:05.426369 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.428416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.433892 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.435405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

      delete from test.incremental_appmetrica_events_default_install where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.436798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.440045 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.444913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.448135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m12:23:05.451786 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.455075 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-04-10 12:23:05.270663 => 2024-04-10 12:23:05.454979
[0m12:23:05.455930 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088218130>]}
[0m12:23:05.456623 [info ] [Thread-1 (]: 23 of 72 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.19s]
[0m12:23:05.457486 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m12:23:05.458204 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m12:23:05.459334 [info ] [Thread-1 (]: 25 of 72 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m12:23:05.460505 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m12:23:05.461094 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m12:23:05.461365 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m12:23:05.465963 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m12:23:05.466593 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-04-10 12:23:05.461471 => 2024-04-10 12:23:05.466490
[0m12:23:05.466944 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m12:23:05.474132 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.475937 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m12:23:05.479353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.484971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.485876 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.490462 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.492856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        insert into test.incremental_appmetrica_events_default_install select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.497863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.501083 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:05.504210 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.505817 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.509496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.510327 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.513982 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m12:23:05.518381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.522279 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_distributed_new_data 
  ...
[0m12:23:05.525755 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.528158 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-04-10 12:23:05.347050 => 2024-04-10 12:23:05.528005
[0m12:23:05.528918 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808845f670>]}
[0m12:23:05.529396 [info ] [Thread-2 (]: 24 of 72 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.20s]
[0m12:23:05.529748 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m12:23:05.530160 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m12:23:05.530908 [info ] [Thread-2 (]: 26 of 72 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m12:23:05.531760 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m12:23:05.532725 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:05.533152 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m12:23:05.537715 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.538340 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m12:23:05.544698 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m12:23:05.545805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.548102 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m12:23:05.548641 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-04-10 12:23:05.540364 => 2024-04-10 12:23:05.548498
[0m12:23:05.549187 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m12:23:05.555376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
      ...
[0m12:23:05.558033 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.563444 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.567380 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.573719 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.576641 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:05.579210 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.583402 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.586633 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m12:23:05.601634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.606342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.612900 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.614631 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m12:23:05.615222 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
      ...
[0m12:23:05.623002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.624100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.649649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:05.652714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.658234 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.660038 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.667160 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.670308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.673896 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.677158 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m12:23:05.679908 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.682183 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-04-10 12:23:05.549941 => 2024-04-10 12:23:05.682109
[0m12:23:05.682846 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80884da830>]}
[0m12:23:05.872916 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.31 seconds
[0m12:23:05.874033 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:05.905058 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:05.907785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:05.913132 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.914671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:05.921395 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:05.924377 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:05.927882 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.933552 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m12:23:05.936386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:05.938268 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-04-10 12:23:05.467106 => 2024-04-10 12:23:05.938206
[0m12:23:05.938959 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808823efb0>]}
[0m12:23:06.365433 [info ] [Thread-2 (]: 26 of 72 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.15s]
[0m12:23:06.367706 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m12:23:06.366919 [info ] [Thread-1 (]: 25 of 72 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.48s]
[0m12:23:06.368801 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m12:23:06.369451 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m12:23:06.370155 [info ] [Thread-2 (]: 27 of 72 START sql view model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m12:23:06.370826 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m12:23:06.372520 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m12:23:06.373828 [info ] [Thread-1 (]: 28 of 72 START sql view model test.incremental_mt_datestat_default_banners ..... [RUN]
[0m12:23:06.374413 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m12:23:06.375416 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m12:23:06.375975 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m12:23:06.376257 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m12:23:06.470134 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m12:23:06.470784 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m12:23:06.474697 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m12:23:06.476021 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-04-10 12:23:06.376644 => 2024-04-10 12:23:06.475750
[0m12:23:06.476766 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-04-10 12:23:06.471435 => 2024-04-10 12:23:06.476576
[0m12:23:06.477301 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m12:23:06.477744 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m12:23:06.483051 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m12:23:06.488540 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m12:23:06.490240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */


  create view test.incremental_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  )...
[0m12:23:06.491852 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */


  create view test.incremental_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_banners

  )...
[0m12:23:06.500772 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.504727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m12:23:06.505953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.511691 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m12:23:06.513233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.515160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles to test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m12:23:06.518668 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.520505 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners to test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m12:23:06.524676 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.528193 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m12:23:06.528990 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.533602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners 
  
  ...
[0m12:23:06.536911 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.538442 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles__dbt_tmp to test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m12:23:06.539381 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.542419 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners__dbt_tmp to test.incremental_mt_datestat_default_banners 
  
  ...
[0m12:23:06.544583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.552097 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m12:23:06.554345 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.560704 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m12:23:06.562617 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.564724 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-04-10 12:23:06.478115 => 2024-04-10 12:23:06.564613
[0m12:23:06.566075 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80880ba110>]}
[0m12:23:06.568411 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.569366 [info ] [Thread-2 (]: 27 of 72 OK created sql view model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.19s]
[0m12:23:06.571830 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-04-10 12:23:06.483698 => 2024-04-10 12:23:06.571697
[0m12:23:06.572630 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m12:23:06.573727 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80880b9c30>]}
[0m12:23:06.574797 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m12:23:06.576393 [info ] [Thread-1 (]: 28 of 72 OK created sql view model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.20s]
[0m12:23:06.578480 [info ] [Thread-2 (]: 29 of 72 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m12:23:06.580074 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m12:23:06.581678 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m12:23:06.583059 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m12:23:06.584654 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m12:23:06.586352 [info ] [Thread-1 (]: 30 of 72 START sql view model test.incremental_mt_datestat_default_campaigns ... [RUN]
[0m12:23:06.588471 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m12:23:06.590681 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m12:23:06.597855 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m12:23:06.598604 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m12:23:06.599568 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m12:23:06.611128 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m12:23:06.612729 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-04-10 12:23:06.591580 => 2024-04-10 12:23:06.612499
[0m12:23:06.614134 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m12:23:06.628719 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-04-10 12:23:06.600137 => 2024-04-10 12:23:06.628259
[0m12:23:06.636723 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.637804 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m12:23:06.655099 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m12:23:06.656553 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.664731 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.668928 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */


  create view test.incremental_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  )...
[0m12:23:06.675497 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.678569 [debug] [Thread-2 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:06.683385 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:06.684654 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.692096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.693671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m12:23:06.696819 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m12:23:06.702504 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.704163 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns to test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m12:23:06.709257 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.714658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m12:23:06.715839 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.722331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.723825 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.726859 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns__dbt_tmp to test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m12:23:06.731233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.739279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m12:23:06.740613 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.746339 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m12:23:06.747994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
      ...
[0m12:23:06.751157 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.754456 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-04-10 12:23:06.640498 => 2024-04-10 12:23:06.754348
[0m12:23:06.755475 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809d050520>]}
[0m12:23:06.756373 [info ] [Thread-1 (]: 30 of 72 OK created sql view model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.17s]
[0m12:23:06.757095 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m12:23:06.757525 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m12:23:06.758240 [info ] [Thread-1 (]: 31 of 72 START sql view model test.incremental_vkads_datestat_default_ad_plans . [RUN]
[0m12:23:06.759165 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m12:23:06.759598 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m12:23:06.759825 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m12:23:06.765377 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m12:23:06.767016 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.768866 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-04-10 12:23:06.759944 => 2024-04-10 12:23:06.768505
[0m12:23:06.771592 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:06.772672 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m12:23:06.781980 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m12:23:06.783637 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */


  create view test.incremental_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  )...
[0m12:23:06.804999 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.811828 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m12:23:06.815510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.817144 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans to test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m12:23:06.821296 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m12:23:06.824607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.825642 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.830575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m12:23:06.832040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.834392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:06.835189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.837709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m12:23:06.841788 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.842794 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.847209 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m12:23:06.851448 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:06.856396 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.860217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m12:23:06.861517 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.864323 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-04-10 12:23:06.774386 => 2024-04-10 12:23:06.864253
[0m12:23:06.865052 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808845cf70>]}
[0m12:23:06.865631 [info ] [Thread-1 (]: 31 of 72 OK created sql view model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.11s]
[0m12:23:06.866679 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:06.867179 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m12:23:06.869577 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-04-10 12:23:06.615180 => 2024-04-10 12:23:06.869508
[0m12:23:06.870298 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m12:23:06.871404 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808843fd90>]}
[0m12:23:06.872442 [info ] [Thread-1 (]: 32 of 72 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m12:23:06.873946 [info ] [Thread-2 (]: 29 of 72 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.29s]
[0m12:23:06.875562 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m12:23:06.876238 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m12:23:06.876597 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m12:23:06.877070 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m12:23:06.877944 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m12:23:06.878624 [info ] [Thread-2 (]: 33 of 72 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m12:23:06.885661 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m12:23:06.886936 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m12:23:06.887887 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m12:23:06.888231 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m12:23:06.892903 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m12:23:06.893653 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-10 12:23:06.879031 => 2024-04-10 12:23:06.893367
[0m12:23:06.894986 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m12:23:06.895421 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-04-10 12:23:06.888489 => 2024-04-10 12:23:06.895330
[0m12:23:06.902562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.903246 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m12:23:06.912191 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.914141 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.921916 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.922816 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.928596 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.933127 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.937018 [debug] [Thread-1 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:06.938033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.942115 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:06.945086 [debug] [Thread-2 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:06.950717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:06.952141 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.955150 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m12:23:06.958212 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.960569 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m12:23:06.972177 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.975602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.978284 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:06.981479 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:06.983280 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.985126 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m12:23:06.986330 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
      ...
[0m12:23:06.991332 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.993469 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m12:23:06.994016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
      ...
[0m12:23:06.996751 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:06.998013 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:07.008609 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.009894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:07.032544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:07.041517 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.044058 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:07.047168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.048575 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.052377 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:07.056165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.059384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:07.062483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.069657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:07.073128 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.078183 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:07.079002 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.085157 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m12:23:07.087319 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.092039 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m12:23:07.092945 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.096231 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-10 12:23:06.895616 => 2024-04-10 12:23:07.096145
[0m12:23:07.097056 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.097841 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80896a2c80>]}
[0m12:23:07.100394 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-04-10 12:23:06.904498 => 2024-04-10 12:23:07.100303
[0m12:23:07.101407 [info ] [Thread-1 (]: 32 of 72 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.22s]
[0m12:23:07.103368 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80880ba170>]}
[0m12:23:07.103949 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m12:23:07.105827 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m12:23:07.105007 [info ] [Thread-2 (]: 33 of 72 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.22s]
[0m12:23:07.106882 [info ] [Thread-1 (]: 34 of 72 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m12:23:07.108567 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m12:23:07.110134 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m12:23:07.111334 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m12:23:07.112106 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m12:23:07.113315 [info ] [Thread-2 (]: 35 of 72 START sql view model test.join_appmetrica_events ...................... [RUN]
[0m12:23:07.114071 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m12:23:07.114873 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m12:23:07.123988 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m12:23:07.124553 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m12:23:07.125052 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m12:23:07.136253 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-04-10 12:23:07.115448 => 2024-04-10 12:23:07.136032
[0m12:23:07.146685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m12:23:07.147108 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m12:23:07.158402 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.160583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.168612 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m12:23:07.170934 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.175977 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.181858 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.183266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.188360 [debug] [Thread-1 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m12:23:07.191274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m12:23:07.194470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:07.200215 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.203246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m12:23:07.222507 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:07.225032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.230156 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.232142 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m12:23:07.232723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
      ...
[0m12:23:07.242706 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.243790 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285);
    ...
[0m12:23:07.257883 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m12:23:07.272038 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m12:23:07.276248 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:07.279235 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.279918 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.286325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.287048 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.290173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285
    ...
[0m12:23:07.293003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.296037 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m12:23:07.298826 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.302575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_8139523c_9864_493f_89fc_7df6f3f41285 
  ...
[0m12:23:07.303920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.307672 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.308596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.314151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m12:23:07.314967 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.320481 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m12:23:07.322122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.324759 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-04-10 12:23:07.148296 => 2024-04-10 12:23:07.324681
[0m12:23:07.325509 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808842c760>]}
[0m12:23:07.326123 [info ] [Thread-1 (]: 34 of 72 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.22s]
[0m12:23:07.326691 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m12:23:07.327224 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m12:23:07.328140 [info ] [Thread-1 (]: 36 of 72 START sql view model test.join_appmetrica_registry_app_profile_matching  [RUN]
[0m12:23:07.329540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.330193 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching'
[0m12:23:07.334305 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.334710 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching)
[0m12:23:07.335984 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m12:23:07.339806 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m12:23:07.340766 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.345876 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m12:23:07.348548 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.351427 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m12:23:07.356689 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.359895 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.361418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.364109 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m12:23:07.366186 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.369838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m12:23:07.376185 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.380094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.385769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.392549 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m12:23:07.393230 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-04-10 12:23:07.125286 => 2024-04-10 12:23:07.393109
[0m12:23:07.393580 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m12:23:07.400636 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m12:23:07.401342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


  create view test.join_appmetrica_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    '' AS visitId,
    '' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts







  )...
[0m12:23:07.420675 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m12:23:07.432395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m12:23:07.440117 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.447546 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.453573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.456286 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"
[0m12:23:07.456985 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching (compile): 2024-04-10 12:23:07.336472 => 2024-04-10 12:23:07.456838
[0m12:23:07.457412 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m12:23:07.462340 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"
[0m12:23:07.462819 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */


  create view test.join_appmetrica_registry_app_profile_matching__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )





  )...
[0m12:23:07.473906 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.476800 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    drop table if exists test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  
  ...
[0m12:23:07.479949 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.481780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    rename table test.join_appmetrica_registry_app_profile_matching to test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  
  ...
[0m12:23:07.485787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.490064 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    drop table if exists test.join_appmetrica_registry_app_profile_matching 
  
  ...
[0m12:23:07.493162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.494315 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    rename table test.join_appmetrica_registry_app_profile_matching__dbt_tmp to test.join_appmetrica_registry_app_profile_matching 
  
  ...
[0m12:23:07.497540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.502749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */
drop table if exists test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  ...
[0m12:23:07.507289 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.508927 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching (execute): 2024-04-10 12:23:07.457595 => 2024-04-10 12:23:07.508856
[0m12:23:07.509601 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881e3550>]}
[0m12:23:07.510200 [info ] [Thread-1 (]: 36 of 72 OK created sql view model test.join_appmetrica_registry_app_profile_matching  [[32mOK[0m in 0.18s]
[0m12:23:07.510773 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m12:23:07.511216 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m12:23:07.512354 [info ] [Thread-1 (]: 37 of 72 START sql view model test.join_mt_datestat ............................ [RUN]
[0m12:23:07.513495 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m12:23:07.513918 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m12:23:07.514133 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m12:23:07.522089 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m12:23:07.529810 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.531373 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m12:23:07.537574 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m12:23:07.540516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m12:23:07.542234 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.543961 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m12:23:07.547693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.549010 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m12:23:07.553754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.557020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events 
  
  ...
[0m12:23:07.559731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.561514 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events 
  
  ...
[0m12:23:07.562154 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:07.571563 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m12:23:07.572417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.577730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m12:23:07.580242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.584492 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.587205 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.588758 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-04-10 12:23:07.393738 => 2024-04-10 12:23:07.588691
[0m12:23:07.589465 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088388fa0>]}
[0m12:23:07.590099 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.590645 [info ] [Thread-2 (]: 35 of 72 OK created sql view model test.join_appmetrica_events ................. [[32mOK[0m in 0.48s]
[0m12:23:07.594204 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m12:23:07.594780 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m12:23:07.596447 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m12:23:07.597888 [info ] [Thread-2 (]: 38 of 72 START sql view model test.join_vkads_datestat ......................... [RUN]
[0m12:23:07.598791 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m12:23:07.599189 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m12:23:07.599513 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m12:23:07.603497 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m12:23:07.604976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.691885 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.694564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m12:23:07.695976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m12:23:07.697525 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.701047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m12:23:07.701733 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.704005 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m12:23:07.712073 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.716099 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.717577 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.723888 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m12:23:07.727366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.729658 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m12:23:07.730138 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-04-10 12:23:07.514244 => 2024-04-10 12:23:07.730068
[0m12:23:07.730327 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m12:23:07.734448 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m12:23:07.735661 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.739402 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.740538 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


  create view test.join_mt_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    '' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    '' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    '' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    '' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id







  )...
[0m12:23:07.744734 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.747868 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m12:23:07.755592 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.759666 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.761000 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:07.764922 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m12:23:07.768314 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.769576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat to test.join_mt_datestat__dbt_backup 
  
  ...
[0m12:23:07.770291 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.774117 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m12:23:07.775166 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.778658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat 
  
  ...
[0m12:23:07.780175 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-04-10 12:23:07.599770 => 2024-04-10 12:23:07.780066
[0m12:23:07.780548 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m12:23:07.785460 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m12:23:07.786501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.788263 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat 
  
  ...
[0m12:23:07.789495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


  create view test.join_vkads_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    '' AS productName,
    ad_plans.name AS adCampaignName,
    '' AS adGroupName,
    ad_plans.id AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id







  )...
[0m12:23:07.791871 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.795783 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m12:23:07.799951 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.801850 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-04-10 12:23:07.730420 => 2024-04-10 12:23:07.801780
[0m12:23:07.802539 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088395900>]}
[0m12:23:07.803032 [info ] [Thread-1 (]: 37 of 72 OK created sql view model test.join_mt_datestat ....................... [[32mOK[0m in 0.29s]
[0m12:23:07.803506 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m12:23:07.803974 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m12:23:07.804678 [info ] [Thread-1 (]: 39 of 72 START sql view model test.join_yd_datestat ............................ [RUN]
[0m12:23:07.805470 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m12:23:07.805772 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m12:23:07.805950 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m12:23:07.809397 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m12:23:07.810032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:07.815125 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m12:23:07.816918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.818742 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m12:23:07.821317 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.823214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m12:23:07.825183 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.826975 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m12:23:07.827815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.834467 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat 
  
  ...
[0m12:23:07.837939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.839523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat 
  
  ...
[0m12:23:07.843077 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.847224 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m12:23:07.847837 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:07.853907 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m12:23:07.857819 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.859345 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-04-10 12:23:07.780661 => 2024-04-10 12:23:07.859277
[0m12:23:07.860161 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80883f5e10>]}
[0m12:23:07.860765 [info ] [Thread-2 (]: 38 of 72 OK created sql view model test.join_vkads_datestat .................... [[32mOK[0m in 0.26s]
[0m12:23:07.861399 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m12:23:07.861840 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m12:23:07.862601 [info ] [Thread-2 (]: 40 of 72 START sql view model test.join_ym_events .............................. [RUN]
[0m12:23:07.863407 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m12:23:07.864146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.864411 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m12:23:07.867794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.868331 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m12:23:07.872861 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m12:23:07.874388 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.878354 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m12:23:07.879068 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-04-10 12:23:07.806047 => 2024-04-10 12:23:07.878928
[0m12:23:07.879522 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m12:23:07.880273 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.886252 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m12:23:07.888105 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m12:23:07.890058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


  create view test.join_yd_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    '' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps






  )...
[0m12:23:07.894755 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.896387 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m12:23:07.904302 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.908237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m12:23:07.910705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.920364 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m12:23:07.921403 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.924490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat to test.join_yd_datestat__dbt_backup 
  
  ...
[0m12:23:07.927703 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.930620 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat 
  
  ...
[0m12:23:07.931540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.938022 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:07.941077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.942529 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat 
  
  ...
[0m12:23:07.943338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.947311 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m12:23:07.948356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:07.953208 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m12:23:07.954484 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-04-10 12:23:07.869728 => 2024-04-10 12:23:07.954341
[0m12:23:07.954921 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m12:23:07.959226 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m12:23:07.960049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:07.962111 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-04-10 12:23:07.880555 => 2024-04-10 12:23:07.962051
[0m12:23:07.962810 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80882b2d10>]}
[0m12:23:07.963236 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


  create view test.join_ym_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    NULL AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events






  )...
[0m12:23:07.963884 [info ] [Thread-1 (]: 39 of 72 OK created sql view model test.join_yd_datestat ....................... [[32mOK[0m in 0.16s]
[0m12:23:07.965312 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m12:23:07.966079 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m12:23:07.967182 [info ] [Thread-1 (]: 41 of 72 START sql view model test.hash_registry_app_profile_matching .......... [RUN]
[0m12:23:07.968314 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_app_profile_matching'
[0m12:23:07.968632 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_app_profile_matching)
[0m12:23:07.968800 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m12:23:07.989269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:07.998009 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m12:23:08.002191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_app_profile_matching')        
...
[0m12:23:08.005366 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.006733 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events to test.join_ym_events__dbt_backup 
  
  ...
[0m12:23:08.009343 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.015710 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.025009 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_app_profile_matching'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.028808 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events 
  
  ...
[0m12:23:08.034876 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.035877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.048511 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events 
  
  ...
[0m12:23:08.055926 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_app_profile_matching"
[0m12:23:08.057098 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_app_profile_matching (compile): 2024-04-10 12:23:07.968897 => 2024-04-10 12:23:08.056877
[0m12:23:08.057653 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m12:23:08.064457 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_app_profile_matching"
[0m12:23:08.065061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.070255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m12:23:08.071723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */


  create view test.hash_registry_app_profile_matching__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_registry_app_profile_matching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id,

  assumeNotNull(CASE 







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    


FROM (

        (
            select

                toLowCardinality('join_appmetrica_registry_app_profile_matching')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_app_profile_matching
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m12:23:08.073771 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.075514 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-04-10 12:23:07.955057 => 2024-04-10 12:23:08.075445
[0m12:23:08.076757 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80882e8670>]}
[0m12:23:08.077247 [info ] [Thread-2 (]: 40 of 72 OK created sql view model test.join_ym_events ......................... [[32mOK[0m in 0.21s]
[0m12:23:08.077646 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m12:23:08.078003 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m12:23:08.078798 [info ] [Thread-2 (]: 42 of 72 START sql view model test.combine_datestat ............................ [RUN]
[0m12:23:08.079990 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m12:23:08.080345 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m12:23:08.080575 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m12:23:08.089292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m12:23:08.097397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.098293 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:08.103375 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.106326 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    drop table if exists test.hash_registry_app_profile_matching__dbt_backup 
  
  ...
[0m12:23:08.111571 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.112914 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.114303 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    rename table test.hash_registry_app_profile_matching to test.hash_registry_app_profile_matching__dbt_backup 
  
  ...
[0m12:23:08.119441 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.123118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.127390 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    drop table if exists test.hash_registry_app_profile_matching 
  
  ...
[0m12:23:08.128301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.134486 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.136293 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.138594 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    rename table test.hash_registry_app_profile_matching__dbt_tmp to test.hash_registry_app_profile_matching 
  
  ...
[0m12:23:08.140099 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.144779 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m12:23:08.145776 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.150714 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */
drop table if exists test.hash_registry_app_profile_matching__dbt_backup 
  ...
[0m12:23:08.152654 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-04-10 12:23:08.080697 => 2024-04-10 12:23:08.152332
[0m12:23:08.153264 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m12:23:08.161516 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m12:23:08.163101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.165362 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_app_profile_matching (execute): 2024-04-10 12:23:08.057930 => 2024-04-10 12:23:08.165212
[0m12:23:08.166732 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80883e1de0>]}
[0m12:23:08.168663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


  create view test.combine_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                toLowCardinality('join_mt_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_mt_datestat
        )

        union all
        

        (
            select

                toLowCardinality('join_vkads_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select

                toLowCardinality('join_yd_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_yd_datestat
        )

        )
  )...
[0m12:23:08.167999 [info ] [Thread-1 (]: 41 of 72 OK created sql view model test.hash_registry_app_profile_matching ..... [[32mOK[0m in 0.20s]
[0m12:23:08.171588 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m12:23:08.173713 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m12:23:08.174890 [info ] [Thread-1 (]: 43 of 72 START sql view model test.combine_events .............................. [RUN]
[0m12:23:08.176407 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m12:23:08.177059 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m12:23:08.177390 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m12:23:08.183730 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m12:23:08.196506 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.201867 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.204177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:08.210303 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m12:23:08.212334 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.219013 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.220776 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.224275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat to test.combine_datestat__dbt_backup 
  
  ...
[0m12:23:08.227589 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.228798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.237269 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.247161 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat 
  
  ...
[0m12:23:08.255009 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.255793 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.257062 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat 
  
  ...
[0m12:23:08.261353 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_install'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.265076 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.275430 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m12:23:08.277223 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.291090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.292285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.294158 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-04-10 12:23:08.153440 => 2024-04-10 12:23:08.294062
[0m12:23:08.296305 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80882d4b50>]}
[0m12:23:08.297061 [info ] [Thread-2 (]: 42 of 72 OK created sql view model test.combine_datestat ....................... [[32mOK[0m in 0.22s]
[0m12:23:08.297690 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m12:23:08.300056 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m12:23:08.301501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.302682 [info ] [Thread-2 (]: 44 of 72 START sql view model test.hash_datestat ............................... [RUN]
[0m12:23:08.312151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.314347 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m12:23:08.316671 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m12:23:08.317508 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m12:23:08.326133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m12:23:08.326929 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.333655 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.335386 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.340199 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.341638 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.351958 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.354296 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m12:23:08.359972 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m12:23:08.360808 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-04-10 12:23:08.177518 => 2024-04-10 12:23:08.360701
[0m12:23:08.361236 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m12:23:08.367672 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-04-10 12:23:08.317787 => 2024-04-10 12:23:08.367086
[0m12:23:08.369762 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m12:23:08.370410 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m12:23:08.375563 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m12:23:08.376281 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


  create view test.hash_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id,

  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    
    


FROM (

        (
            select

                toLowCardinality('combine_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m12:23:08.376771 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


  create view test.combine_events__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                toLowCardinality('join_appmetrica_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_deeplinks')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString('') as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_deeplinks
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString('') as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_events
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_install')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString('') as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_install
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_screen_view')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString('') as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_screen_view
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_sessions_starts')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as transactionId ,
                            toString('') as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_sessions_starts
        )

        union all
        

        (
            select

                toLowCardinality('join_ym_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        )
  )...
[0m12:23:08.397797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:08.402293 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m12:23:08.405464 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.406681 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat to test.hash_datestat__dbt_backup 
  
  ...
[0m12:23:08.410248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.413579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat 
  
  ...
[0m12:23:08.417941 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.419912 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat 
  
  ...
[0m12:23:08.423301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.428334 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m12:23:08.431718 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.433670 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-04-10 12:23:08.371085 => 2024-04-10 12:23:08.433563
[0m12:23:08.434675 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088499660>]}
[0m12:23:08.435541 [info ] [Thread-2 (]: 44 of 72 OK created sql view model test.hash_datestat .......................... [[32mOK[0m in 0.12s]
[0m12:23:08.436202 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m12:23:08.437348 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m12:23:08.437838 [info ] [Thread-2 (]: 45 of 72 START sql table model test.full_datestat .............................. [RUN]
[0m12:23:08.438419 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m12:23:08.438543 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m12:23:08.438694 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m12:23:08.441766 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m12:23:08.442323 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-04-10 12:23:08.438787 => 2024-04-10 12:23:08.442240
[0m12:23:08.442538 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m12:23:08.458516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
    )
        ...
[0m12:23:08.460214 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m12:23:08.464576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m12:23:08.469232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.471040 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events to test.combine_events__dbt_backup 
  
  ...
[0m12:23:08.474228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.477548 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events 
  
  ...
[0m12:23:08.478689 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:08.481918 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.484474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.486164 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events 
  
  ...
[0m12:23:08.490317 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.491281 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.493268 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m12:23:08.497933 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m12:23:08.500423 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

  
    
    
        
        insert into test.full_datestat__dbt_backup ("None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
  ...
[0m12:23:08.503396 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.504892 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-04-10 12:23:08.361535 => 2024-04-10 12:23:08.504812
[0m12:23:08.505539 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80882b38b0>]}
[0m12:23:08.505882 [info ] [Thread-1 (]: 43 of 72 OK created sql view model test.combine_events ......................... [[32mOK[0m in 0.33s]
[0m12:23:08.506219 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m12:23:08.507269 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m12:23:08.507725 [info ] [Thread-1 (]: 46 of 72 START sql view model test.hash_events ................................. [RUN]
[0m12:23:08.508344 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m12:23:08.508571 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m12:23:08.508762 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m12:23:08.516473 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m12:23:08.526416 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.530243 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.536087 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.543015 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m12:23:08.543528 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-04-10 12:23:08.508873 => 2024-04-10 12:23:08.543457
[0m12:23:08.543719 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m12:23:08.548680 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m12:23:08.549395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


  create view test.hash_events__dbt_tmp 
  
  as (
    -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id,

  assumeNotNull(CASE 


WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    


FROM (

        (
            select

                toLowCardinality('combine_events')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m12:23:08.604142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m12:23:08.607510 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m12:23:08.610631 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.611989 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events to test.hash_events__dbt_backup 
  
  ...
[0m12:23:08.615233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.619837 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events 
  
  ...
[0m12:23:08.623818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.625094 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events 
  
  ...
[0m12:23:08.627955 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.632568 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m12:23:08.636284 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.637780 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-04-10 12:23:08.543813 => 2024-04-10 12:23:08.637710
[0m12:23:08.638517 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808961cca0>]}
[0m12:23:08.639064 [info ] [Thread-1 (]: 46 of 72 OK created sql view model test.hash_events ............................ [[32mOK[0m in 0.13s]
[0m12:23:08.639609 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m12:23:08.640928 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m12:23:08.641689 [info ] [Thread-1 (]: 47 of 72 START sql table model test.full_events ................................ [RUN]
[0m12:23:08.642464 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m12:23:08.642722 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m12:23:08.642908 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m12:23:08.725613 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.22 seconds
[0m12:23:08.728642 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m12:23:08.734582 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m12:23:08.736289 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-04-10 12:23:08.643009 => 2024-04-10 12:23:08.736059
[0m12:23:08.736758 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m12:23:08.741617 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
* 
FROM  test.hash_events
    )
        ...
[0m12:23:08.742902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.747398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m12:23:08.751670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:08.753343 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-04-10 12:23:08.442632 => 2024-04-10 12:23:08.753264
[0m12:23:08.754264 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088368dc0>]}
[0m12:23:08.754930 [info ] [Thread-2 (]: 45 of 72 OK created sql table model test.full_datestat ......................... [[32mOK[0m in 0.32s]
[0m12:23:08.755285 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m12:23:08.755634 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m12:23:08.756379 [info ] [Thread-2 (]: 48 of 72 START sql table model test.graph_tuples ............................... [RUN]
[0m12:23:08.757384 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m12:23:08.757702 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m12:23:08.757886 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m12:23:08.770369 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m12:23:08.771516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:08.775185 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.776639 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-04-10 12:23:08.757997 => 2024-04-10 12:23:08.776428
[0m12:23:08.777263 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m12:23:08.786750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m12:23:08.787581 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.790919 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m12:23:08.791578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  


SELECT 
* 
FROM  test.hash_events
  ...
[0m12:23:08.809053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:08.812719 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:08.819125 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:08.821237 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m12:23:08.821896 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m12:23:09.614131 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.82 seconds
[0m12:23:09.615591 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m12:23:09.619439 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:09.623557 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m12:23:09.627162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:09.629015 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-04-10 12:23:08.736905 => 2024-04-10 12:23:09.628933
[0m12:23:09.629812 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088118040>]}
[0m12:23:09.630424 [info ] [Thread-1 (]: 47 of 72 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.99s]
[0m12:23:09.630980 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m12:23:10.924341 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 2.10 seconds
[0m12:23:10.926001 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m12:23:10.929454 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:10.934382 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m12:23:10.938446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:10.939935 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-04-10 12:23:08.777758 => 2024-04-10 12:23:10.939826
[0m12:23:10.940654 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808836ab00>]}
[0m12:23:10.941221 [info ] [Thread-2 (]: 48 of 72 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 2.18s]
[0m12:23:10.941637 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m12:23:10.942709 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m12:23:10.943473 [info ] [Thread-1 (]: 49 of 72 START sql table model test.graph_lookup ............................... [RUN]
[0m12:23:10.944558 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m12:23:10.945216 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m12:23:10.945575 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m12:23:10.950844 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m12:23:10.951475 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-04-10 12:23:10.945766 => 2024-04-10 12:23:10.951394
[0m12:23:10.951671 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m12:23:10.957797 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m12:23:10.974287 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:10.976901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:10.983579 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:10.985394 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m12:23:10.986047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m12:23:10.998988 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.000429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m12:23:11.004297 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.008454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m12:23:11.012799 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.014130 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-04-10 12:23:10.951762 => 2024-04-10 12:23:11.014076
[0m12:23:11.014698 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088455fc0>]}
[0m12:23:11.015035 [info ] [Thread-1 (]: 49 of 72 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.07s]
[0m12:23:11.015573 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m12:23:11.017076 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m12:23:11.017606 [info ] [Thread-2 (]: 50 of 72 START sql table model test.graph_unique ............................... [RUN]
[0m12:23:11.018229 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m12:23:11.018454 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m12:23:11.018632 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m12:23:11.023129 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m12:23:11.023590 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-04-10 12:23:11.018736 => 2024-04-10 12:23:11.023525
[0m12:23:11.023770 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m12:23:11.027967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m12:23:11.041521 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.044342 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:11.049820 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.051427 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m12:23:11.052068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m12:23:11.058356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.059947 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m12:23:11.063806 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.069125 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m12:23:11.072471 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.074191 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-04-10 12:23:11.023867 => 2024-04-10 12:23:11.074075
[0m12:23:11.074803 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80896a1630>]}
[0m12:23:11.075125 [info ] [Thread-2 (]: 50 of 72 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m12:23:11.075443 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m12:23:11.076775 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m12:23:11.077906 [info ] [Thread-1 (]: 51 of 72 START sql table model test.graph_edge ................................. [RUN]
[0m12:23:11.079002 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m12:23:11.079213 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m12:23:11.079378 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m12:23:11.084758 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m12:23:11.085249 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-04-10 12:23:11.079471 => 2024-04-10 12:23:11.085182
[0m12:23:11.085445 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m12:23:11.090086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m12:23:11.108883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:11.111777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:11.116746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.119402 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m12:23:11.119989 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m12:23:11.128387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.129589 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m12:23:11.134229 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.136998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m12:23:11.141989 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.145090 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m12:23:11.148428 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.149901 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-04-10 12:23:11.085612 => 2024-04-10 12:23:11.149839
[0m12:23:11.150499 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80896a0700>]}
[0m12:23:11.150890 [info ] [Thread-1 (]: 51 of 72 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m12:23:11.151240 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m12:23:11.152369 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m12:23:11.152825 [info ] [Thread-2 (]: 52 of 72 START sql table model test.graph_glue ................................. [RUN]
[0m12:23:11.153437 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m12:23:11.153616 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m12:23:11.153786 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m12:23:11.159509 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m12:23:11.159961 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-04-10 12:23:11.153886 => 2024-04-10 12:23:11.159898
[0m12:23:11.160146 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m12:23:11.169016 [debug] [Thread-2 (]: Running iteration 0
[0m12:23:11.169512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m12:23:11.198540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:11.200122 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m12:23:11.228970 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:11.229993 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m12:23:11.235386 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.236642 [debug] [Thread-2 (]: VALUE: 1
[0m12:23:11.236890 [debug] [Thread-2 (]: Running iteration 1
[0m12:23:11.237278 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m12:23:11.262694 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:11.263727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m12:23:11.288563 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:11.290000 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m12:23:11.297262 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.298315 [debug] [Thread-2 (]: VALUE: 0
[0m12:23:11.298495 [debug] [Thread-2 (]: Running iteration 2
[0m12:23:11.298606 [debug] [Thread-2 (]: Running iteration 3
[0m12:23:11.298717 [debug] [Thread-2 (]: Running iteration 4
[0m12:23:11.298815 [debug] [Thread-2 (]: Running iteration 5
[0m12:23:11.298915 [debug] [Thread-2 (]: Running iteration 6
[0m12:23:11.299013 [debug] [Thread-2 (]: Running iteration 7
[0m12:23:11.299110 [debug] [Thread-2 (]: Running iteration 8
[0m12:23:11.299206 [debug] [Thread-2 (]: Running iteration 9
[0m12:23:11.299302 [debug] [Thread-2 (]: Running iteration 10
[0m12:23:11.299397 [debug] [Thread-2 (]: Running iteration 11
[0m12:23:11.299491 [debug] [Thread-2 (]: Running iteration 12
[0m12:23:11.299586 [debug] [Thread-2 (]: Running iteration 13
[0m12:23:11.300842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m12:23:11.315381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.318170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:11.324247 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.325538 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m12:23:11.325967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m12:23:11.372335 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m12:23:11.373460 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m12:23:11.377038 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.380735 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m12:23:11.384571 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.385979 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-04-10 12:23:11.160244 => 2024-04-10 12:23:11.385916
[0m12:23:11.386545 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809d004490>]}
[0m12:23:11.386883 [info ] [Thread-2 (]: 52 of 72 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.23s]
[0m12:23:11.387207 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m12:23:11.388634 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m12:23:11.389327 [info ] [Thread-1 (]: 53 of 72 START sql table model test.graph_qid .................................. [RUN]
[0m12:23:11.390005 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m12:23:11.390283 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m12:23:11.390467 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m12:23:11.395414 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m12:23:11.395911 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-04-10 12:23:11.390566 => 2024-04-10 12:23:11.395838
[0m12:23:11.396100 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m12:23:11.399907 [debug] [Thread-1 (]: Running iteration 0
[0m12:23:11.400360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m12:23:11.425813 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:11.426911 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m12:23:11.453887 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:11.454940 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m12:23:11.463356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.464429 [debug] [Thread-1 (]: VALUE: 0
[0m12:23:11.464615 [debug] [Thread-1 (]: Running iteration 1
[0m12:23:11.464726 [debug] [Thread-1 (]: Running iteration 2
[0m12:23:11.464826 [debug] [Thread-1 (]: Running iteration 3
[0m12:23:11.464922 [debug] [Thread-1 (]: Running iteration 4
[0m12:23:11.465021 [debug] [Thread-1 (]: Running iteration 5
[0m12:23:11.465115 [debug] [Thread-1 (]: Running iteration 6
[0m12:23:11.465209 [debug] [Thread-1 (]: Running iteration 7
[0m12:23:11.465303 [debug] [Thread-1 (]: Running iteration 8
[0m12:23:11.465397 [debug] [Thread-1 (]: Running iteration 9
[0m12:23:11.465491 [debug] [Thread-1 (]: Running iteration 10
[0m12:23:11.465588 [debug] [Thread-1 (]: Running iteration 11
[0m12:23:11.465684 [debug] [Thread-1 (]: Running iteration 12
[0m12:23:11.465788 [debug] [Thread-1 (]: Running iteration 13
[0m12:23:11.468761 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m12:23:11.484316 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:11.487165 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:11.492740 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.494231 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m12:23:11.494640 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m12:23:11.504815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.505943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m12:23:11.510245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.514069 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m12:23:11.517250 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.518490 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-04-10 12:23:11.396193 => 2024-04-10 12:23:11.518435
[0m12:23:11.519053 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088483280>]}
[0m12:23:11.519400 [info ] [Thread-1 (]: 53 of 72 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.13s]
[0m12:23:11.519730 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m12:23:11.520997 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:23:11.522045 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:23:11.522884 [info ] [Thread-2 (]: 54 of 72 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m12:23:11.523473 [info ] [Thread-1 (]: 55 of 72 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m12:23:11.524684 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m12:23:11.525440 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m12:23:11.525810 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m12:23:11.526173 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m12:23:11.526435 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:23:11.526673 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:23:11.535940 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m12:23:11.539925 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m12:23:11.540892 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-04-10 12:23:11.526861 => 2024-04-10 12:23:11.540756
[0m12:23:11.541487 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:23:11.545676 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m12:23:11.546812 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-04-10 12:23:11.536308 => 2024-04-10 12:23:11.546588
[0m12:23:11.548038 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:23:11.555032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m12:23:11.571783 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:11.575292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:11.580523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:11.582903 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m12:23:11.583482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m12:23:11.593571 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m12:23:11.596473 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:11.602988 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:11.605987 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m12:23:11.606528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m12:23:12.470796 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.89 seconds
[0m12:23:12.472548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m12:23:12.473590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.87 seconds
[0m12:23:12.476134 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m12:23:12.477631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:12.483196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m12:23:12.484530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:12.492241 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m12:23:12.493014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:12.496293 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-04-10 12:23:11.541654 => 2024-04-10 12:23:12.496229
[0m12:23:12.497352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:12.498339 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088482aa0>]}
[0m12:23:12.500046 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-04-10 12:23:11.548312 => 2024-04-10 12:23:12.499965
[0m12:23:12.500803 [info ] [Thread-2 (]: 54 of 72 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.97s]
[0m12:23:12.502456 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f809dc33dc0>]}
[0m12:23:12.503042 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m12:23:12.506009 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:23:12.506521 [info ] [Thread-2 (]: 56 of 72 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m12:23:12.507305 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m12:23:12.507581 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m12:23:12.507792 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:23:12.523070 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m12:23:12.523588 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-04-10 12:23:12.507906 => 2024-04-10 12:23:12.523516
[0m12:23:12.523816 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:23:12.528259 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m12:23:12.548029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:12.551680 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:12.556981 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:12.558539 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m12:23:12.559111 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m12:23:12.565734 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:12.567697 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m12:23:12.572467 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:12.575999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m12:23:12.579425 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:12.580673 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-04-10 12:23:12.523913 => 2024-04-10 12:23:12.580616
[0m12:23:12.581337 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80883a58d0>]}
[0m12:23:13.369960 [info ] [Thread-1 (]: 55 of 72 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.98s]
[0m12:23:13.371499 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m12:23:13.370865 [info ] [Thread-2 (]: 56 of 72 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.07s]
[0m12:23:13.373242 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:23:13.373720 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m12:23:13.374208 [info ] [Thread-1 (]: 57 of 72 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m12:23:13.375558 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:23:13.376251 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m12:23:13.376762 [info ] [Thread-2 (]: 58 of 72 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m12:23:13.377310 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m12:23:13.378396 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m12:23:13.379124 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:23:13.379627 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m12:23:13.389195 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m12:23:13.390023 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:23:13.395695 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m12:23:13.396348 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-04-10 12:23:13.390841 => 2024-04-10 12:23:13.396216
[0m12:23:13.396810 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-04-10 12:23:13.379966 => 2024-04-10 12:23:13.396613
[0m12:23:13.397265 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:23:13.398031 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:23:13.404119 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m12:23:13.408845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m12:23:13.425969 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.428967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.429717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.441076 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.436319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.443108 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m12:23:13.444950 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m12:23:13.448801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.451328 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m12:23:13.452203 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m12:23:13.461292 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.462722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m12:23:13.464161 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.465781 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m12:23:13.469347 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.470174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.475058 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m12:23:13.479531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m12:23:13.485016 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.485730 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.488092 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-04-10 12:23:13.404526 => 2024-04-10 12:23:13.488022
[0m12:23:13.489528 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-04-10 12:23:13.398458 => 2024-04-10 12:23:13.489470
[0m12:23:13.491007 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088368dc0>]}
[0m12:23:13.491909 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088275690>]}
[0m12:23:13.492755 [info ] [Thread-1 (]: 57 of 72 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.11s]
[0m12:23:13.493958 [info ] [Thread-2 (]: 58 of 72 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.11s]
[0m12:23:13.494850 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m12:23:13.495414 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m12:23:13.497312 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:23:13.497625 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:23:13.498174 [info ] [Thread-1 (]: 59 of 72 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m12:23:13.498853 [info ] [Thread-2 (]: 60 of 72 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m12:23:13.500048 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m12:23:13.501210 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m12:23:13.501709 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m12:23:13.502067 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m12:23:13.502648 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:23:13.503402 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:23:13.507226 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m12:23:13.519818 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m12:23:13.520849 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-04-10 12:23:13.507838 => 2024-04-10 12:23:13.520513
[0m12:23:13.521493 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:23:13.527055 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-04-10 12:23:13.503873 => 2024-04-10 12:23:13.526863
[0m12:23:13.528651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m12:23:13.529276 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:23:13.536205 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m12:23:13.547749 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.552139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.554241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.558536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.560173 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.562167 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m12:23:13.563135 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m12:23:13.568225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.570184 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m12:23:13.570765 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m12:23:13.576646 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.578168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m12:23:13.581547 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.583062 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m12:23:13.583798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.589446 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m12:23:13.590257 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.597057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m12:23:13.597935 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.600578 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-04-10 12:23:13.521664 => 2024-04-10 12:23:13.600498
[0m12:23:13.601424 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088480160>]}
[0m12:23:13.602225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.603023 [info ] [Thread-2 (]: 60 of 72 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.10s]
[0m12:23:13.604807 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-04-10 12:23:13.530619 => 2024-04-10 12:23:13.604747
[0m12:23:13.605408 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m12:23:13.606118 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80880be6e0>]}
[0m12:23:13.607195 [info ] [Thread-1 (]: 59 of 72 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.11s]
[0m12:23:13.607830 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:23:13.608272 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m12:23:13.608805 [info ] [Thread-2 (]: 61 of 72 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m12:23:13.610630 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m12:23:13.611687 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:23:13.612247 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m12:23:13.613142 [info ] [Thread-1 (]: 62 of 72 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m12:23:13.614041 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:23:13.615337 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m12:23:13.623811 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m12:23:13.624318 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m12:23:13.624973 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:23:13.630708 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-04-10 12:23:13.616089 => 2024-04-10 12:23:13.630616
[0m12:23:13.631099 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m12:23:13.631430 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:23:13.637743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m12:23:13.639201 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-04-10 12:23:13.625430 => 2024-04-10 12:23:13.638970
[0m12:23:13.639605 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:23:13.645573 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m12:23:13.654305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.657745 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.664005 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.665896 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m12:23:13.667373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.671178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.671706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m12:23:13.677659 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.679959 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m12:23:13.680741 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m12:23:13.683560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.685782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m12:23:13.691301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.696274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m12:23:13.697755 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.699550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m12:23:13.701451 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.703392 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-04-10 12:23:13.631742 => 2024-04-10 12:23:13.703288
[0m12:23:13.704247 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80880bceb0>]}
[0m12:23:13.705025 [info ] [Thread-2 (]: 61 of 72 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m12:23:13.705511 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m12:23:13.706460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.707580 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:23:13.712262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m12:23:13.713105 [info ] [Thread-2 (]: 63 of 72 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m12:23:13.716111 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m12:23:13.716496 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m12:23:13.716737 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:23:13.723465 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.724203 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m12:23:13.726267 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-04-10 12:23:13.639729 => 2024-04-10 12:23:13.726187
[0m12:23:13.727275 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808855f520>]}
[0m12:23:13.728510 [info ] [Thread-1 (]: 62 of 72 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.11s]
[0m12:23:13.729441 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m12:23:13.730292 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-04-10 12:23:13.716876 => 2024-04-10 12:23:13.730118
[0m12:23:13.731960 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:23:13.733238 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:23:13.743218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m12:23:13.744366 [info ] [Thread-1 (]: 64 of 72 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m12:23:13.746733 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m12:23:13.747009 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m12:23:13.747170 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:23:13.751544 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m12:23:13.752696 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-04-10 12:23:13.747265 => 2024-04-10 12:23:13.752487
[0m12:23:13.753199 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:23:13.759264 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m12:23:13.772031 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:13.776016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.779177 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:13.782943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.785000 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.788558 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m12:23:13.789192 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m12:23:13.790696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.792806 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m12:23:13.793305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m12:23:13.802783 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.804304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m12:23:13.809709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.813894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m12:23:13.814891 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:13.817676 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m12:23:13.819919 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.821760 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-04-10 12:23:13.753385 => 2024-04-10 12:23:13.821650
[0m12:23:13.822925 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088344820>]}
[0m12:23:13.824637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.823869 [info ] [Thread-1 (]: 64 of 72 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.08s]
[0m12:23:13.832450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m12:23:13.833103 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m12:23:13.835484 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:23:13.837126 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:13.836329 [info ] [Thread-1 (]: 65 of 72 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m12:23:13.840004 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-04-10 12:23:13.733591 => 2024-04-10 12:23:13.839940
[0m12:23:13.840864 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m12:23:13.841813 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088125000>]}
[0m12:23:13.842391 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m12:23:13.843484 [info ] [Thread-2 (]: 63 of 72 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.13s]
[0m12:23:13.844236 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:23:13.844668 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m12:23:13.848359 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m12:23:13.850368 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:23:13.851209 [info ] [Thread-2 (]: 66 of 72 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m12:23:13.852681 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m12:23:13.853550 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m12:23:13.854403 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:23:13.860215 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-04-10 12:23:13.844926 => 2024-04-10 12:23:13.860029
[0m12:23:13.870576 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m12:23:13.871255 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:23:13.876565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m12:23:13.878229 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 12:23:13.854809 => 2024-04-10 12:23:13.877953
[0m12:23:13.878955 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:23:13.885597 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m12:23:13.966521 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m12:23:13.970882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.976599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.978231 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m12:23:13.978827 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m12:23:13.988190 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m12:23:13.991714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:13.992479 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:13.995717 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m12:23:13.998107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.000352 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m12:23:14.001277 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.005434 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m12:23:14.006656 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m12:23:14.008968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.010766 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-04-10 12:23:13.871768 => 2024-04-10 12:23:14.010672
[0m12:23:14.011709 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881d4520>]}
[0m12:23:14.012310 [info ] [Thread-1 (]: 65 of 72 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.17s]
[0m12:23:14.012869 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m12:23:14.013866 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:23:14.014300 [info ] [Thread-1 (]: 67 of 72 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m12:23:14.014868 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m12:23:14.015008 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m12:23:14.015163 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:23:14.020874 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m12:23:14.021544 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 12:23:14.015259 => 2024-04-10 12:23:14.021460
[0m12:23:14.021748 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:23:14.027121 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m12:23:14.028785 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.030980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m12:23:14.040930 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.046898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m12:23:14.052152 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.054478 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 12:23:13.879222 => 2024-04-10 12:23:14.054222
[0m12:23:14.055374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:14.056983 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f808840d660>]}
[0m12:23:14.061909 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.063186 [info ] [Thread-2 (]: 66 of 72 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.20s]
[0m12:23:14.065503 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m12:23:14.067412 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:23:14.068248 [info ] [Thread-2 (]: 68 of 72 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m12:23:14.069504 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m12:23:14.069898 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m12:23:14.070276 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:23:14.083627 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.091955 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m12:23:14.092825 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m12:23:14.093782 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-04-10 12:23:14.070597 => 2024-04-10 12:23:14.093690
[0m12:23:14.094211 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m12:23:14.094680 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:23:14.102673 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m12:23:14.120293 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.122246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m12:23:14.127082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.131575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m12:23:14.133145 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:14.136839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.137715 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.140201 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 12:23:14.021844 => 2024-04-10 12:23:14.140124
[0m12:23:14.141203 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088471570>]}
[0m12:23:14.141977 [info ] [Thread-1 (]: 67 of 72 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.13s]
[0m12:23:14.143002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.143585 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m12:23:14.145219 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m12:23:14.146849 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:23:14.147377 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m12:23:14.147860 [info ] [Thread-1 (]: 69 of 72 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m12:23:14.150533 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m12:23:14.151440 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m12:23:14.151971 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:23:14.158190 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m12:23:14.158704 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-04-10 12:23:14.152282 => 2024-04-10 12:23:14.158625
[0m12:23:14.159017 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:23:14.164758 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m12:23:14.171555 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.172862 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m12:23:14.177841 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.182897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m12:23:14.188060 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.189546 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-10 12:23:14.095959 => 2024-04-10 12:23:14.189487
[0m12:23:14.190378 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881ed1e0>]}
[0m12:23:14.191141 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:14.195255 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.192363 [info ] [Thread-2 (]: 68 of 72 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.12s]
[0m12:23:14.197084 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m12:23:14.198885 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:23:14.199537 [info ] [Thread-2 (]: 70 of 72 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m12:23:14.201532 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m12:23:14.202194 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m12:23:14.203121 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.203468 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:23:14.205323 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m12:23:14.210381 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m12:23:14.211461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m12:23:14.213668 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-10 12:23:14.205656 => 2024-04-10 12:23:14.213501
[0m12:23:14.214107 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:23:14.219315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m12:23:14.229817 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.232047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m12:23:14.237052 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.241209 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m12:23:14.242615 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.246839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.248230 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.250789 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-10 12:23:14.159143 => 2024-04-10 12:23:14.250691
[0m12:23:14.252563 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881c58d0>]}
[0m12:23:14.253560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.254523 [info ] [Thread-1 (]: 69 of 72 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.10s]
[0m12:23:14.257569 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m12:23:14.258224 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m12:23:14.259710 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:23:14.260037 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m12:23:14.260590 [info ] [Thread-1 (]: 71 of 72 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m12:23:14.263165 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m12:23:14.263449 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m12:23:14.263624 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:23:14.267464 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m12:23:14.268173 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-10 12:23:14.263718 => 2024-04-10 12:23:14.268032
[0m12:23:14.268581 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:23:14.272864 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m12:23:14.289995 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:14.291591 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m12:23:14.294777 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m12:23:14.297785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.298363 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.305232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m12:23:14.306241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.309903 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m12:23:14.310602 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.312119 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-10 12:23:14.214277 => 2024-04-10 12:23:14.312053
[0m12:23:14.312760 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088352e90>]}
[0m12:23:14.313303 [info ] [Thread-2 (]: 70 of 72 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.11s]
[0m12:23:14.313891 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m12:23:14.314334 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m12:23:14.316765 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m12:23:14.317329 [info ] [Thread-2 (]: 72 of 72 START sql table model test.dataset_event_table ........................ [RUN]
[0m12:23:14.318645 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m12:23:14.318910 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m12:23:14.319076 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m12:23:14.333851 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.339645 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.340485 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m12:23:14.344404 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.346701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m12:23:14.352192 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.356522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m12:23:14.357814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.364010 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m12:23:14.367695 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m12:23:14.369343 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-10 12:23:14.268719 => 2024-04-10 12:23:14.369281
[0m12:23:14.370525 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088219f60>]}
[0m12:23:14.371213 [info ] [Thread-1 (]: 71 of 72 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.11s]
[0m12:23:14.371647 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m12:23:14.372376 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-10 12:23:14.319174 => 2024-04-10 12:23:14.372253
[0m12:23:14.372802 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m12:23:14.376831 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
    )
        ...
[0m12:23:14.434978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m12:23:14.437817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m12:23:14.443002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.445507 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m12:23:14.446050 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("_dbt_source_relation", "None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
  ...
[0m12:23:14.554798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m12:23:14.555988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m12:23:14.560412 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.565672 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m12:23:14.568944 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m12:23:14.570201 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-10 12:23:14.372959 => 2024-04-10 12:23:14.570144
[0m12:23:14.570791 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8139523c-9864-493f-89fc-7df6f3f41285', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881efc10>]}
[0m12:23:14.571211 [info ] [Thread-2 (]: 72 of 72 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.25s]
[0m12:23:14.571538 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m12:23:14.574477 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m12:23:14.575012 [debug] [MainThread]: Connection 'master' was properly closed.
[0m12:23:14.575171 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table' was left open.
[0m12:23:14.575302 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: Close
[0m12:23:14.575399 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m12:23:14.575504 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m12:23:14.575939 [info ] [MainThread]: 
[0m12:23:14.576195 [info ] [MainThread]: Finished running 33 view models, 12 incremental models, 27 table models in 0 hours 0 minutes and 12.03 seconds (12.03s).
[0m12:23:14.578525 [debug] [MainThread]: Command end result
[0m12:23:14.595682 [info ] [MainThread]: 
[0m12:23:14.596189 [info ] [MainThread]: [32mCompleted successfully[0m
[0m12:23:14.596481 [info ] [MainThread]: 
[0m12:23:14.596706 [info ] [MainThread]: Done. PASS=72 WARN=0 ERROR=0 SKIP=0 TOTAL=72
[0m12:23:14.597185 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8088488400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881ec0d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f80881ecca0>]}
[0m12:23:14.597522 [debug] [MainThread]: Flushing usage events


============================== 2024-04-10 13:29:46.479802 | 307d67be-4cbc-4b15-972b-8d154d35e687 ==============================
[0m13:29:46.479802 [info ] [MainThread]: Running with dbt=1.4.7
[0m13:29:46.482748 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m13:29:46.483074 [debug] [MainThread]: Tracking: tracking
[0m13:29:46.489735 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18d3953ca0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18d3951900>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18d3953e80>]}
[0m13:29:46.593553 [debug] [MainThread]: Executing "git --help"
[0m13:29:46.614226 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m13:29:46.614664 [debug] [MainThread]: STDERR: "b''"
[0m13:29:46.622159 [debug] [MainThread]: Acquiring new clickhouse connection 'debug'
[0m13:29:46.622884 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:29:47.800140 [debug] [MainThread]: dbt_clickhouse adapter: On debug: select 1 as id...
[0m13:29:47.812434 [debug] [MainThread]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:29:47.813754 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18d4137430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18d6020dc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18d40f2890>]}
[0m13:29:47.814225 [debug] [MainThread]: Flushing usage events
[0m13:29:48.526960 [debug] [MainThread]: Connection 'debug' was left open.
[0m13:29:48.527824 [debug] [MainThread]: On debug: Close


============================== 2024-04-10 13:29:54.458587 | 2641a5e4-b4e0-4f9c-acde-7fea974fa919 ==============================
[0m13:29:54.458587 [info ] [MainThread]: Running with dbt=1.4.7
[0m13:29:54.460092 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'which': 'deps', 'rpc_method': 'deps', 'indirect_selection': 'eager'}
[0m13:29:54.460268 [debug] [MainThread]: Tracking: tracking
[0m13:29:54.462900 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250de8bca0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250de8bfd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250de8bc40>]}
[0m13:29:54.467336 [debug] [MainThread]: Set downloads directory='/tmp/dbt-downloads-e5_k9u7r'
[0m13:29:54.477387 [debug] [MainThread]: Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m13:29:54.707799 [debug] [MainThread]: Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m13:29:54.708370 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m13:29:54.830258 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m13:29:54.835375 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/yu-iskw/dbt_unittest.json
[0m13:29:55.098611 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/yu-iskw/dbt_unittest.json 200
[0m13:29:55.144095 [info ] [MainThread]: Installing ../
[0m13:29:55.144539 [debug] [MainThread]:   Creating symlink to local dependency.
[0m13:29:55.144700 [info ] [MainThread]:   Installed from <local @ ../>
[0m13:29:55.145018 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '2641a5e4-b4e0-4f9c-acde-7fea974fa919', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250e631f60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250e631fc0>]}
[0m13:29:55.145244 [info ] [MainThread]: Installing dbt-labs/dbt_utils
[0m13:29:55.633625 [info ] [MainThread]:   Installed from version 1.1.1
[0m13:29:55.634062 [info ] [MainThread]:   Up to date!
[0m13:29:55.634376 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '2641a5e4-b4e0-4f9c-acde-7fea974fa919', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250f2bd7b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250e6328c0>]}
[0m13:29:55.634676 [info ] [MainThread]: Installing yu-iskw/dbt_unittest
[0m13:29:55.949984 [info ] [MainThread]:   Installed from version 0.3.3
[0m13:29:55.950491 [info ] [MainThread]:   Up to date!
[0m13:29:55.950825 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '2641a5e4-b4e0-4f9c-acde-7fea974fa919', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250ec07280>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250e633d00>]}
[0m13:29:55.951622 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250f3f42b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250f2bd7b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f250e630b80>]}
[0m13:29:55.952051 [debug] [MainThread]: Flushing usage events


============================== 2024-04-10 13:30:05.001823 | 1cd4b8c7-8e41-46eb-99e7-70d0e345ce42 ==============================
[0m13:30:05.001823 [info ] [MainThread]: Running with dbt=1.4.7
[0m13:30:05.003586 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m13:30:05.003749 [debug] [MainThread]: Tracking: tracking
[0m13:30:05.006182 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f11e1cf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f127b8b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f127a680>]}
[0m13:30:05.034836 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m13:30:05.182441 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 2 files added, 0 files changed.
[0m13:30:05.183649 [debug] [MainThread]: Partial parsing: added file: etlcraft_integration_tests://models/1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m13:30:05.184041 [debug] [MainThread]: Partial parsing: added file: etlcraft_integration_tests://models/1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m13:30:05.195793 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m13:30:05.226540 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m13:30:05.227715 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m13:30:05.237054 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m13:30:05.254432 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f06d56c0>]}
[0m13:30:05.272511 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f07dfe20>]}
[0m13:30:05.272924 [info ] [MainThread]: Found 74 models, 8 tests, 0 snapshots, 0 analyses, 527 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m13:30:05.273229 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f07dffa0>]}
[0m13:30:05.276436 [info ] [MainThread]: 
[0m13:30:05.278203 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m13:30:05.282604 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m13:30:05.291621 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:30:05.892785 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m13:30:05.896300 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:05.902141 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m13:30:05.902446 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m13:30:05.907121 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m13:30:05.945242 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:05.955781 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f06bd270>]}
[0m13:30:05.956607 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m13:30:05.956991 [info ] [MainThread]: 
[0m13:30:05.964286 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m13:30:05.964873 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m13:30:05.965383 [info ] [Thread-1 (]: 1 of 74 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m13:30:05.965991 [info ] [Thread-2 (]: 2 of 74 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m13:30:05.967081 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m13:30:05.968670 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m13:30:05.969298 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m13:30:05.969867 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m13:30:05.970510 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m13:30:05.993719 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m13:30:05.992393 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m13:30:06.034677 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:06.072904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.087800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.099311 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.124686 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.126428 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.136940 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.167337 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m13:30:06.168811 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-04-10 13:30:05.981762 => 2024-04-10 13:30:06.168668
[0m13:30:06.169206 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m13:30:06.194686 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m13:30:06.208146 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m13:30:06.208821 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.212455 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.213732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'period') AS period, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )
  )...
[0m13:30:06.219553 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.221866 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.231774 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.238694 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.239742 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m13:30:06.241984 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.246784 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.248232 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m13:30:06.248920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.258257 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m13:30:06.259158 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.262887 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m13:30:06.264378 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-04-10 13:30:05.971040 => 2024-04-10 13:30:06.264127
[0m13:30:06.265160 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m13:30:06.269341 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m13:30:06.270479 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.270977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )
  )...
[0m13:30:06.271957 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m13:30:06.277113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.292340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.300965 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m13:30:06.305405 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m13:30:06.310266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.311656 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m13:30:06.312390 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.314705 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-04-10 13:30:06.169376 => 2024-04-10 13:30:06.314634
[0m13:30:06.315491 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3058a0>]}
[0m13:30:06.316136 [info ] [Thread-1 (]: 1 of 74 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.35s]
[0m13:30:06.316940 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.318737 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m13:30:06.321674 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m13:30:06.322462 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m13:30:06.324862 [info ] [Thread-1 (]: 3 of 74 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m13:30:06.326163 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m13:30:06.326658 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m13:30:06.327013 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m13:30:06.331053 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m13:30:06.332291 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.334983 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m13:30:06.339353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.344063 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m13:30:06.345977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.352146 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.354398 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.356172 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-04-10 13:30:06.265467 => 2024-04-10 13:30:06.356091
[0m13:30:06.357256 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dccd0fd0>]}
[0m13:30:06.358477 [info ] [Thread-2 (]: 2 of 74 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.39s]
[0m13:30:06.359370 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m13:30:06.360002 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m13:30:06.360918 [info ] [Thread-2 (]: 4 of 74 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m13:30:06.361993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.362644 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m13:30:06.364906 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.365378 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m13:30:06.366787 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m13:30:06.372128 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m13:30:06.381143 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.385355 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.388251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.397268 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.398661 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.413837 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.416677 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m13:30:06.421313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.423878 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-04-10 13:30:06.327169 => 2024-04-10 13:30:06.423617
[0m13:30:06.424451 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m13:30:06.429641 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m13:30:06.430147 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
JSONExtractString(_airbyte_data, 'description') AS description, 
JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'section') AS section, 
JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )
  )...
[0m13:30:06.431430 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.433923 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.441690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.447841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.454050 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m13:30:06.458005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m13:30:06.459684 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-04-10 13:30:06.367046 => 2024-04-10 13:30:06.459521
[0m13:30:06.460198 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m13:30:06.465466 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m13:30:06.466531 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.468156 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m13:30:06.469531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
JSONExtractString(_airbyte_data, 'installs') AS installs, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )
  )...
[0m13:30:06.472863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.476335 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m13:30:06.479881 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.481126 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m13:30:06.481745 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.486416 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m13:30:06.487285 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.491793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m13:30:06.493903 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.494989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m13:30:06.496957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.498342 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-04-10 13:30:06.424613 => 2024-04-10 13:30:06.498278
[0m13:30:06.498957 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.499881 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3058a0>]}
[0m13:30:06.502936 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m13:30:06.503725 [info ] [Thread-1 (]: 3 of 74 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.17s]
[0m13:30:06.505245 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m13:30:06.505672 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m13:30:06.506356 [info ] [Thread-1 (]: 5 of 74 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m13:30:06.507593 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.508603 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m13:30:06.510307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m13:30:06.510613 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m13:30:06.511506 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m13:30:06.515636 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m13:30:06.517202 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.523633 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m13:30:06.529535 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.530442 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.531987 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-04-10 13:30:06.460376 => 2024-04-10 13:30:06.531910
[0m13:30:06.537025 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.538294 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc94730>]}
[0m13:30:06.540421 [info ] [Thread-2 (]: 4 of 74 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.18s]
[0m13:30:06.540986 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m13:30:06.541468 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m13:30:06.542290 [info ] [Thread-2 (]: 6 of 74 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m13:30:06.543929 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m13:30:06.544266 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m13:30:06.544503 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m13:30:06.548028 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m13:30:06.548942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.553272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.558310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.562298 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.563006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.565769 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.571419 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.574074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.574743 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.590247 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m13:30:06.591108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.593072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.594533 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-04-10 13:30:06.512007 => 2024-04-10 13:30:06.594337
[0m13:30:06.595136 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m13:30:06.600504 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m13:30:06.601558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.617704 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m13:30:06.618281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )
  )...
[0m13:30:06.620944 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-04-10 13:30:06.544628 => 2024-04-10 13:30:06.620713
[0m13:30:06.621633 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m13:30:06.678394 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m13:30:06.681949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m13:30:06.686467 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m13:30:06.688653 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name != 'screen_view'
  )...
[0m13:30:06.690539 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.691796 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m13:30:06.697198 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.701059 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m13:30:06.706092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.707857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m13:30:06.711606 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.716084 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m13:30:06.717772 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:06.721817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m13:30:06.723799 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.725471 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-04-10 13:30:06.595385 => 2024-04-10 13:30:06.725390
[0m13:30:06.726607 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc291f90>]}
[0m13:30:06.727540 [info ] [Thread-1 (]: 5 of 74 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.22s]
[0m13:30:06.728103 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m13:30:06.728597 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m13:30:06.729679 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.732518 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m13:30:06.730755 [info ] [Thread-1 (]: 7 of 74 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m13:30:06.734701 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m13:30:06.735244 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m13:30:06.735675 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m13:30:06.741467 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m13:30:06.742339 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.749879 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m13:30:06.752012 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.757377 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.758243 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.760895 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m13:30:06.763996 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.768673 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m13:30:06.770328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.773328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.777457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.779194 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-04-10 13:30:06.621775 => 2024-04-10 13:30:06.779052
[0m13:30:06.780070 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dccab2b0>]}
[0m13:30:06.780698 [info ] [Thread-2 (]: 6 of 74 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.24s]
[0m13:30:06.781321 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m13:30:06.781769 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m13:30:06.782343 [info ] [Thread-2 (]: 8 of 74 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m13:30:06.783821 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.784797 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m13:30:06.787136 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.787656 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m13:30:06.789315 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m13:30:06.794036 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m13:30:06.794743 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.809563 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m13:30:06.810320 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.814476 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.815909 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-04-10 13:30:06.736458 => 2024-04-10 13:30:06.815787
[0m13:30:06.816292 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m13:30:06.823208 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m13:30:06.824570 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.827272 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.828703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )
  )...
[0m13:30:06.833315 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.836549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.839951 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.843003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m13:30:06.843807 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.859414 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m13:30:06.860356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.861685 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m13:30:06.862909 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-04-10 13:30:06.789712 => 2024-04-10 13:30:06.862724
[0m13:30:06.863326 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m13:30:06.867965 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m13:30:06.868881 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.872209 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m13:30:06.873615 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m13:30:06.875734 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.876937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m13:30:06.880706 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.884890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m13:30:06.888970 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:06.890676 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-04-10 13:30:06.816434 => 2024-04-10 13:30:06.890591
[0m13:30:06.891476 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc246110>]}
[0m13:30:06.892071 [info ] [Thread-1 (]: 7 of 74 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.16s]
[0m13:30:06.892452 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m13:30:06.892898 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m13:30:06.893656 [info ] [Thread-1 (]: 9 of 74 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m13:30:06.894749 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m13:30:06.895044 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m13:30:06.895204 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m13:30:06.899763 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m13:30:06.905825 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:06.909252 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m13:30:06.910212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.915888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:06.917129 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.920682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m13:30:06.926452 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.929516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m13:30:06.931005 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.933253 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )  LIMIT 1
  ...
[0m13:30:06.937703 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.939318 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m13:30:06.942190 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.943908 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:06.945257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.949556 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m13:30:06.958312 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:06.970224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:06.972347 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-04-10 13:30:06.863510 => 2024-04-10 13:30:06.972271
[0m13:30:06.973185 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m13:30:06.973938 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3d7670>]}
[0m13:30:06.974642 [info ] [Thread-2 (]: 8 of 74 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.19s]
[0m13:30:06.975092 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m13:30:06.975478 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m13:30:06.976858 [info ] [Thread-2 (]: 10 of 74 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m13:30:06.977611 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-04-10 13:30:06.895298 => 2024-04-10 13:30:06.977464
[0m13:30:06.978731 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m13:30:06.979551 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m13:30:06.980126 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m13:30:06.985540 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m13:30:06.986337 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m13:30:06.992623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m13:30:06.994767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )
  )...
[0m13:30:07.004307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.008197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.010665 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:07.014206 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m13:30:07.015484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.018323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.019732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.022032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m13:30:07.027074 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.030324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m13:30:07.031590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.033532 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.034791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.038405 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m13:30:07.041642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.047616 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.048785 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m13:30:07.053775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m13:30:07.056164 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-04-10 13:30:06.987886 => 2024-04-10 13:30:07.055955
[0m13:30:07.056754 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m13:30:07.064653 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m13:30:07.065720 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.067892 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-04-10 13:30:06.980427 => 2024-04-10 13:30:07.067772
[0m13:30:07.069143 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc94970>]}
[0m13:30:07.070269 [info ] [Thread-1 (]: 9 of 74 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.17s]
[0m13:30:07.070783 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )
  )...
[0m13:30:07.071207 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m13:30:07.073418 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m13:30:07.074313 [info ] [Thread-1 (]: 11 of 74 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m13:30:07.075535 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m13:30:07.075764 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m13:30:07.075910 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m13:30:07.079970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m13:30:07.082093 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.085580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m13:30:07.089706 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.093983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.094797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.097502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m13:30:07.102249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.104992 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.105742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.110390 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m13:30:07.113474 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.114599 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m13:30:07.118453 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.123221 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m13:30:07.124318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:07.127380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.130879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.132512 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-04-10 13:30:07.057028 => 2024-04-10 13:30:07.132426
[0m13:30:07.133314 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3d5ff0>]}
[0m13:30:07.134246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.135010 [info ] [Thread-2 (]: 10 of 74 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.16s]
[0m13:30:07.143275 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m13:30:07.144352 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m13:30:07.145273 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m13:30:07.145873 [info ] [Thread-2 (]: 12 of 74 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m13:30:07.148068 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m13:30:07.148779 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-04-10 13:30:07.076000 => 2024-04-10 13:30:07.148524
[0m13:30:07.149306 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m13:30:07.149952 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m13:30:07.150449 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m13:30:07.159387 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m13:30:07.164109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m13:30:07.165849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )
  )...
[0m13:30:07.174844 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.179053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.180573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.183592 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m13:30:07.187735 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.189012 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m13:30:07.191238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.193661 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.194961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.198551 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m13:30:07.202260 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.204428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.205461 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.208418 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m13:30:07.213226 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.217519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m13:30:07.218647 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.226951 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m13:30:07.227870 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.229309 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-04-10 13:30:07.150830 => 2024-04-10 13:30:07.229233
[0m13:30:07.229825 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-04-10 13:30:07.159862 => 2024-04-10 13:30:07.229733
[0m13:30:07.230892 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc10cca0>]}
[0m13:30:07.231385 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m13:30:07.232119 [info ] [Thread-1 (]: 11 of 74 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.16s]
[0m13:30:07.239906 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m13:30:07.240408 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m13:30:07.241439 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m13:30:07.242123 [info ] [Thread-1 (]: 13 of 74 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m13:30:07.243691 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m13:30:07.244459 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )
  )...
[0m13:30:07.245015 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m13:30:07.247617 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m13:30:07.252679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m13:30:07.258732 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.261715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m13:30:07.263481 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.267272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.268847 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.272776 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m13:30:07.276186 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.278375 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.279836 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.282762 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m13:30:07.287027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.288564 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m13:30:07.291524 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.293208 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.294810 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.300322 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m13:30:07.301249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.309178 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.310626 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m13:30:07.312104 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-04-10 13:30:07.232593 => 2024-04-10 13:30:07.312042
[0m13:30:07.313051 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc15d6f0>]}
[0m13:30:07.313992 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-04-10 13:30:07.248112 => 2024-04-10 13:30:07.313893
[0m13:30:07.313657 [info ] [Thread-2 (]: 12 of 74 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.17s]
[0m13:30:07.314894 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m13:30:07.315584 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m13:30:07.320886 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m13:30:07.321623 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m13:30:07.322900 [info ] [Thread-2 (]: 14 of 74 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m13:30:07.323775 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m13:30:07.324502 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m13:30:07.325357 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )
  )...
[0m13:30:07.325737 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m13:30:07.331217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m13:30:07.337760 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.341192 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m13:30:07.342171 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.347363 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.348337 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.351011 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m13:30:07.354271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.357174 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.359005 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.362401 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m13:30:07.363752 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.365282 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.366615 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.368007 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m13:30:07.371798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.380230 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m13:30:07.381170 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.388886 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m13:30:07.390188 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-10 13:30:07.326987 => 2024-04-10 13:30:07.390089
[0m13:30:07.390627 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m13:30:07.395464 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m13:30:07.396340 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.398284 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-04-10 13:30:07.315941 => 2024-04-10 13:30:07.398225
[0m13:30:07.399459 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc105000>]}
[0m13:30:07.400440 [info ] [Thread-1 (]: 13 of 74 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.16s]
[0m13:30:07.401380 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m13:30:07.402008 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m13:30:07.402622 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m13:30:07.403494 [info ] [Thread-1 (]: 15 of 74 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m13:30:07.405638 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m13:30:07.406295 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m13:30:07.406587 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m13:30:07.410632 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m13:30:07.415830 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.419981 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m13:30:07.420830 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.425296 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.428889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.430032 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m13:30:07.431532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.434466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.436023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.440158 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m13:30:07.444406 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.445970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.446718 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.450102 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m13:30:07.455256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.455884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.474198 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m13:30:07.478167 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m13:30:07.480110 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-04-10 13:30:07.406705 => 2024-04-10 13:30:07.479968
[0m13:30:07.480632 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m13:30:07.485648 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m13:30:07.486380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
JSONExtractString(_airbyte_data, 'created') AS created, 
JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'objective') AS objective, 
JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
JSONExtractString(_airbyte_data, 'status') AS status, 
JSONExtractString(_airbyte_data, 'updated') AS updated, 
JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )
  )...
[0m13:30:07.487557 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.488919 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-10 13:30:07.390857 => 2024-04-10 13:30:07.488859
[0m13:30:07.489662 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc19fbb0>]}
[0m13:30:07.490205 [info ] [Thread-2 (]: 14 of 74 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.17s]
[0m13:30:07.490953 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m13:30:07.491446 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m13:30:07.492281 [info ] [Thread-2 (]: 16 of 74 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m13:30:07.493397 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m13:30:07.493805 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m13:30:07.493981 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m13:30:07.497833 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m13:30:07.500142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.503461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m13:30:07.507241 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.510575 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.511863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.514901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m13:30:07.517874 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.520247 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.521823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.527016 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m13:30:07.528179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.530324 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.534577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.535690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.537055 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m13:30:07.551046 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m13:30:07.554060 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-10 13:30:07.494085 => 2024-04-10 13:30:07.553885
[0m13:30:07.554516 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m13:30:07.559225 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m13:30:07.560110 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.564184 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m13:30:07.565273 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'moat') AS moat, 
JSONExtractString(_airbyte_data, 'playable') AS playable, 
JSONExtractString(_airbyte_data, 'romi') AS romi, 
JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
JSONExtractString(_airbyte_data, 'tps') AS tps, 
JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )
  )...
[0m13:30:07.569175 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.571667 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-04-10 13:30:07.480834 => 2024-04-10 13:30:07.571571
[0m13:30:07.572615 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1b6a10>]}
[0m13:30:07.573210 [info ] [Thread-1 (]: 15 of 74 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.17s]
[0m13:30:07.573713 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m13:30:07.574079 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m13:30:07.574584 [info ] [Thread-1 (]: 17 of 74 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m13:30:07.576016 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m13:30:07.576479 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m13:30:07.576694 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m13:30:07.580040 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m13:30:07.581597 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:07.585897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m13:30:07.589201 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.590560 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m13:30:07.591994 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.596583 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.598500 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.673168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m13:30:07.676993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.677743 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m13:30:07.678786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m13:30:07.680853 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.686070 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.690217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m13:30:07.691200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.694086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.697689 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.699088 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-10 13:30:07.554654 => 2024-04-10 13:30:07.699016
[0m13:30:07.699844 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d670c430>]}
[0m13:30:07.700641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.701514 [info ] [Thread-2 (]: 16 of 74 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.21s]
[0m13:30:07.711819 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m13:30:07.712462 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m13:30:07.713316 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m13:30:07.715427 [info ] [Thread-2 (]: 18 of 74 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m13:30:07.716242 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-04-10 13:30:07.576795 => 2024-04-10 13:30:07.716088
[0m13:30:07.716997 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m13:30:07.717608 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m13:30:07.717970 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m13:30:07.723257 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m13:30:07.723880 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m13:30:07.725076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Date') AS Date, 
JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )
  )...
[0m13:30:07.728593 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m13:30:07.738294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.742465 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.746445 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:07.750149 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m13:30:07.752002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.754841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )  LIMIT 1
  ...
[0m13:30:07.758906 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.760330 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m13:30:07.763952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.764633 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.768123 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m13:30:07.770765 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m13:30:07.775328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.776575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m13:30:07.778182 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.790519 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.806551 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m13:30:07.807277 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m13:30:07.808983 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-04-10 13:30:07.725438 => 2024-04-10 13:30:07.808813
[0m13:30:07.809479 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m13:30:07.814207 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m13:30:07.814951 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.816649 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-04-10 13:30:07.718190 => 2024-04-10 13:30:07.816588
[0m13:30:07.817500 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d677ace0>]}
[0m13:30:07.818606 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )
  )...
[0m13:30:07.818250 [info ] [Thread-1 (]: 17 of 74 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.24s]
[0m13:30:07.820321 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m13:30:07.820814 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m13:30:07.821671 [info ] [Thread-1 (]: 19 of 74 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m13:30:07.822693 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m13:30:07.823400 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m13:30:07.823915 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m13:30:07.829658 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m13:30:07.830183 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-04-10 13:30:07.824120 => 2024-04-10 13:30:07.830093
[0m13:30:07.830418 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m13:30:07.836687 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:07.845772 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m13:30:07.864129 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.865255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m13:30:07.877472 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.881851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.885568 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m13:30:07.891156 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.892339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m13:30:07.893933 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.897208 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.897862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.906437 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m13:30:07.907281 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.920008 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.920473 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:07.921963 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-04-10 13:30:07.809807 => 2024-04-10 13:30:07.921896
[0m13:30:07.931172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:07.932767 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d6773be0>]}
[0m13:30:07.934579 [info ] [Thread-2 (]: 18 of 74 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.22s]
[0m13:30:07.935191 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m13:30:07.935740 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m13:30:07.937125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:07.938079 [info ] [Thread-2 (]: 20 of 74 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m13:30:07.955072 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m13:30:07.960750 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m13:30:07.964073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m13:30:07.964748 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m13:30:07.970755 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m13:30:07.971339 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-04-10 13:30:07.966317 => 2024-04-10 13:30:07.971232
[0m13:30:07.971620 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m13:30:07.977689 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.983838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:07.989811 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.992242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:07.996657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:07.997832 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.001572 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:08.006012 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.006912 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.010613 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m13:30:08.011828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.014074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m13:30:08.016017 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
      ...
[0m13:30:08.034195 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.035292 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.038274 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.042444 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.047587 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.049216 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m13:30:08.049761 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
      ...
[0m13:30:08.060949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.062156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.122157 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m13:30:08.127262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.128491 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m13:30:08.134027 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.137890 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.139902 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.141202 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.144895 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.153546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.160210 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.161062 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.166882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.168883 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.173462 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m13:30:08.174466 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.180058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m13:30:08.181210 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.186400 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-04-10 13:30:07.971729 => 2024-04-10 13:30:08.186289
[0m13:30:08.187394 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.188546 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2a9f00>]}
[0m13:30:08.191330 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-04-10 13:30:07.830533 => 2024-04-10 13:30:08.191238
[0m13:30:08.192244 [info ] [Thread-2 (]: 20 of 74 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.23s]
[0m13:30:08.193765 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2aaa70>]}
[0m13:30:08.194588 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m13:30:08.195345 [info ] [Thread-1 (]: 19 of 74 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.37s]
[0m13:30:08.196603 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m13:30:08.197611 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m13:30:08.198465 [info ] [Thread-2 (]: 21 of 74 START sql view model test.incremental_adjust_events_default_events .... [RUN]
[0m13:30:08.199487 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m13:30:08.201198 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m13:30:08.202088 [info ] [Thread-1 (]: 22 of 74 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m13:30:08.202927 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m13:30:08.204235 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m13:30:08.204970 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m13:30:08.205657 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m13:30:08.210888 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m13:30:08.211463 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m13:30:08.216954 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m13:30:08.217493 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-04-10 13:30:08.206221 => 2024-04-10 13:30:08.217365
[0m13:30:08.218232 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m13:30:08.229103 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m13:30:08.229558 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-04-10 13:30:08.212361 => 2024-04-10 13:30:08.229398
[0m13:30:08.230135 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m13:30:08.236893 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.238496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */


  create view test.incremental_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_adjust_events_default_events

  )...
[0m13:30:08.247693 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.248360 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.252770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.256527 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m13:30:08.261835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.263023 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events to test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m13:30:08.264925 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.267568 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:08.268649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.272160 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.277529 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events 
  
  ...
[0m13:30:08.282222 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.283599 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events__dbt_tmp to test.incremental_adjust_events_default_events 
  
  ...
[0m13:30:08.285781 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.288750 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m13:30:08.290064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.294074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m13:30:08.299121 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.300865 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-04-10 13:30:08.219037 => 2024-04-10 13:30:08.300767
[0m13:30:08.301579 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2262f0>]}
[0m13:30:08.302029 [info ] [Thread-2 (]: 21 of 74 OK created sql view model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.10s]
[0m13:30:08.302367 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m13:30:08.302718 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m13:30:08.303617 [info ] [Thread-2 (]: 23 of 74 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m13:30:08.304614 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m13:30:08.304939 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m13:30:08.305192 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m13:30:08.309304 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m13:30:08.309772 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-04-10 13:30:08.305331 => 2024-04-10 13:30:08.309675
[0m13:30:08.310050 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m13:30:08.316030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.316736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:08.321739 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.323829 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.328808 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.329787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.333565 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m13:30:08.334949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
      ...
[0m13:30:08.339904 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.342602 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:08.346044 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.349148 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.350358 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.351176 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.354701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m13:30:08.377777 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.382195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.391280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.393014 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m13:30:08.393660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
      ...
[0m13:30:08.408316 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m13:30:08.411941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.413305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.414665 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.418220 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.419769 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.429805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.433828 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.438047 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.442217 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m13:30:08.445974 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.448289 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-04-10 13:30:08.230348 => 2024-04-10 13:30:08.448206
[0m13:30:08.449082 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc247700>]}
[0m13:30:08.449725 [info ] [Thread-1 (]: 22 of 74 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.25s]
[0m13:30:08.450189 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m13:30:08.450859 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m13:30:08.451740 [info ] [Thread-1 (]: 24 of 74 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m13:30:08.452647 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m13:30:08.452968 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m13:30:08.453153 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m13:30:08.459144 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m13:30:08.459722 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-04-10 13:30:08.453261 => 2024-04-10 13:30:08.459612
[0m13:30:08.460053 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m13:30:08.466634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.467824 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m13:30:08.473162 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.478162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.481130 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.482146 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.485378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.488675 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.491831 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:08.495277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.497737 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.501937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.503059 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.506941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m13:30:08.507736 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.511913 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m13:30:08.514895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.517019 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-04-10 13:30:08.310172 => 2024-04-10 13:30:08.516931
[0m13:30:08.517923 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d6773be0>]}
[0m13:30:08.518788 [info ] [Thread-2 (]: 23 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.21s]
[0m13:30:08.519523 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m13:30:08.520228 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m13:30:08.520798 [info ] [Thread-2 (]: 25 of 74 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m13:30:08.522107 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m13:30:08.522435 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m13:30:08.522594 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m13:30:08.526408 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m13:30:08.526923 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-04-10 13:30:08.522686 => 2024-04-10 13:30:08.526843
[0m13:30:08.527123 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m13:30:08.532508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.534272 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:08.538338 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.543386 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.544169 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.548618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.552539 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m13:30:08.555454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
      ...
[0m13:30:08.558879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.561842 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_install:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:08.564999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.569427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.571942 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m13:30:08.581652 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:08.582832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.593303 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.596499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.602829 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.605894 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m13:30:08.606853 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
      ...
[0m13:30:08.621751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.622805 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

      delete from test.incremental_appmetrica_events_default_install where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.624279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:08.627534 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.632424 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.634528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.642448 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.646578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.650828 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.655169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m13:30:08.658259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.660563 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-04-10 13:30:08.460224 => 2024-04-10 13:30:08.660484
[0m13:30:08.661372 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc27fc10>]}
[0m13:30:08.661976 [info ] [Thread-1 (]: 24 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.21s]
[0m13:30:08.662817 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m13:30:08.663347 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m13:30:08.663930 [info ] [Thread-1 (]: 26 of 74 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m13:30:08.664610 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m13:30:08.665004 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m13:30:08.665231 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m13:30:08.669889 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m13:30:08.670590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m13:30:08.673681 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.675187 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-04-10 13:30:08.665366 => 2024-04-10 13:30:08.674971
[0m13:30:08.675637 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m13:30:08.683131 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.685051 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.687232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        insert into test.incremental_appmetrica_events_default_install select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.692721 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.696675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.698032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.700952 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.705814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.710256 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_distributed_new_data 
  ...
[0m13:30:08.712338 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.714954 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:08.715805 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.791332 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.793893 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-04-10 13:30:08.527212 => 2024-04-10 13:30:08.793832
[0m13:30:08.795587 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d660c4c0>]}
[0m13:30:08.799201 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.801570 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m13:30:08.820230 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:08.822735 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.829116 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.830614 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m13:30:08.831058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
      ...
[0m13:30:08.867860 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:08.868925 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:08.935590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m13:30:08.938276 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:08.944476 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.946115 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:08.952563 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:08.955504 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:08.959146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.961949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m13:30:08.966029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:08.968248 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-04-10 13:30:08.675769 => 2024-04-10 13:30:08.968179
[0m13:30:08.968828 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f06a3a90>]}
[0m13:30:09.493815 [info ] [Thread-2 (]: 25 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.27s]
[0m13:30:09.495400 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m13:30:09.494906 [info ] [Thread-1 (]: 26 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.30s]
[0m13:30:09.496223 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m13:30:09.497179 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m13:30:09.497835 [info ] [Thread-2 (]: 27 of 74 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m13:30:09.499098 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m13:30:09.500468 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m13:30:09.501260 [info ] [Thread-1 (]: 28 of 74 START sql view model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m13:30:09.501883 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m13:30:09.503239 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m13:30:09.503986 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m13:30:09.504321 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m13:30:09.509572 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m13:30:09.510313 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m13:30:09.514643 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m13:30:09.515232 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-04-10 13:30:09.511106 => 2024-04-10 13:30:09.515149
[0m13:30:09.515528 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m13:30:09.521282 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-04-10 13:30:09.504553 => 2024-04-10 13:30:09.520965
[0m13:30:09.522450 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m13:30:09.523007 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m13:30:09.523994 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */


  create view test.incremental_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  )...
[0m13:30:09.531445 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.538001 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.542898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.543942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.549721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m13:30:09.550713 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.556048 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:09.559116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:09.560111 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.563525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles to test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m13:30:09.564855 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.567721 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m13:30:09.569869 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.573355 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m13:30:09.576618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.577752 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles__dbt_tmp to test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m13:30:09.581371 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.586447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m13:30:09.590669 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.592123 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-04-10 13:30:09.515706 => 2024-04-10 13:30:09.592045
[0m13:30:09.592792 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f06a2cb0>]}
[0m13:30:09.593205 [info ] [Thread-1 (]: 28 of 74 OK created sql view model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.09s]
[0m13:30:09.593726 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m13:30:09.594113 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m13:30:09.595024 [info ] [Thread-1 (]: 29 of 74 START sql view model test.incremental_mt_datestat_default_banners ..... [RUN]
[0m13:30:09.596337 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m13:30:09.596992 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:09.597710 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m13:30:09.600436 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.601122 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m13:30:09.606624 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m13:30:09.607466 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-04-10 13:30:09.603392 => 2024-04-10 13:30:09.607364
[0m13:30:09.607800 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m13:30:09.613699 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m13:30:09.614951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.617217 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m13:30:09.618930 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */


  create view test.incremental_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_banners

  )...
[0m13:30:09.619825 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
      ...
[0m13:30:09.628418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.631963 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m13:30:09.632768 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.635800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:09.636888 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.639380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners to test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m13:30:09.642739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.646126 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners 
  
  ...
[0m13:30:09.649497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.651323 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners__dbt_tmp to test.incremental_mt_datestat_default_banners 
  
  ...
[0m13:30:09.656082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.661763 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m13:30:09.666101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.668138 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-04-10 13:30:09.607931 => 2024-04-10 13:30:09.667995
[0m13:30:09.669627 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc27b430>]}
[0m13:30:09.670323 [info ] [Thread-1 (]: 29 of 74 OK created sql view model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.07s]
[0m13:30:09.671091 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m13:30:09.671710 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m13:30:09.673008 [info ] [Thread-1 (]: 30 of 74 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m13:30:09.673881 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m13:30:09.674132 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m13:30:09.674298 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m13:30:09.677876 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m13:30:09.678336 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-04-10 13:30:09.674393 => 2024-04-10 13:30:09.678266
[0m13:30:09.679024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:09.679407 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m13:30:09.682241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.691815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.697660 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.699617 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:09.700870 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.704620 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.712050 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.714444 [debug] [Thread-1 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:09.717041 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:09.717984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:09.723393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:09.724545 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.728149 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m13:30:09.728877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.732903 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m13:30:09.738385 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.741140 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-04-10 13:30:09.524259 => 2024-04-10 13:30:09.741063
[0m13:30:09.741850 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f06a3460>]}
[0m13:30:09.742334 [info ] [Thread-2 (]: 27 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.24s]
[0m13:30:09.742697 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m13:30:09.742993 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m13:30:09.743781 [info ] [Thread-2 (]: 31 of 74 START sql view model test.incremental_mt_datestat_default_campaigns ... [RUN]
[0m13:30:09.744941 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m13:30:09.745499 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m13:30:09.745762 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m13:30:09.749982 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m13:30:09.750861 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:09.756443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.758571 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-04-10 13:30:09.745895 => 2024-04-10 13:30:09.758402
[0m13:30:09.758995 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m13:30:09.763771 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m13:30:09.764728 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.766126 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m13:30:09.766646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
      ...
[0m13:30:09.767175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */


  create view test.incremental_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  )...
[0m13:30:09.776717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.778177 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:09.781042 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.784832 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m13:30:09.790378 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.791975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns to test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m13:30:09.795015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.798092 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m13:30:09.802092 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.804533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns__dbt_tmp to test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m13:30:09.808267 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.812973 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m13:30:09.816306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.818055 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-04-10 13:30:09.759164 => 2024-04-10 13:30:09.817954
[0m13:30:09.819023 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1e0040>]}
[0m13:30:09.819875 [info ] [Thread-2 (]: 31 of 74 OK created sql view model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.07s]
[0m13:30:09.820507 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m13:30:09.820876 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m13:30:09.821346 [info ] [Thread-2 (]: 32 of 74 START sql view model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m13:30:09.822537 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m13:30:09.822814 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m13:30:09.822984 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m13:30:09.827443 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m13:30:09.828298 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m13:30:09.831818 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.833205 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-10 13:30:09.823108 => 2024-04-10 13:30:09.833064
[0m13:30:09.833599 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m13:30:09.838492 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m13:30:09.839428 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.841434 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:09.842841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */


  create view test.incremental_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  )...
[0m13:30:09.847533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.850726 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:09.852251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.856645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m13:30:09.857471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.862793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m13:30:09.865301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.866032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.867196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult to test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m13:30:09.869979 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-04-10 13:30:09.682667 => 2024-04-10 13:30:09.869892
[0m13:30:09.871949 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1e1e70>]}
[0m13:30:09.872855 [info ] [Thread-1 (]: 30 of 74 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.20s]
[0m13:30:09.873298 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m13:30:09.873608 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m13:30:09.875191 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.874247 [info ] [Thread-1 (]: 33 of 74 START sql view model test.incremental_vkads_datestat_default_ad_plans . [RUN]
[0m13:30:09.880260 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m13:30:09.881373 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m13:30:09.882371 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m13:30:09.882648 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m13:30:09.886807 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m13:30:09.887823 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.890373 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult__dbt_tmp to test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m13:30:09.891898 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-04-10 13:30:09.882957 => 2024-04-10 13:30:09.891682
[0m13:30:09.892521 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m13:30:09.896840 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m13:30:09.897569 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.901946 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m13:30:09.903650 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */


  create view test.incremental_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  )...
[0m13:30:09.907156 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:09.909758 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-10 13:30:09.833700 => 2024-04-10 13:30:09.909667
[0m13:30:09.910500 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3d6230>]}
[0m13:30:09.910952 [info ] [Thread-2 (]: 32 of 74 OK created sql view model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.09s]
[0m13:30:09.911320 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m13:30:09.911679 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m13:30:09.912047 [info ] [Thread-2 (]: 34 of 74 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m13:30:09.913379 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m13:30:09.913852 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m13:30:09.914090 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m13:30:09.918489 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m13:30:09.920114 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:09.926554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m13:30:09.928723 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-10 13:30:09.914213 => 2024-04-10 13:30:09.928321
[0m13:30:09.930033 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m13:30:09.942905 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:09.944605 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.946839 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans to test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m13:30:09.954665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.959997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:09.961161 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.969005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m13:30:09.972316 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.976962 [debug] [Thread-2 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:09.977880 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.981654 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:09.984049 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m13:30:09.990299 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.991179 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:09.994799 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m13:30:10.000076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m13:30:10.006476 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.008057 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-04-10 13:30:09.892753 => 2024-04-10 13:30:10.007976
[0m13:30:10.008765 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc94370>]}
[0m13:30:10.009259 [info ] [Thread-1 (]: 33 of 74 OK created sql view model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.13s]
[0m13:30:10.009758 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m13:30:10.010200 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m13:30:10.011006 [info ] [Thread-1 (]: 35 of 74 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m13:30:10.011849 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m13:30:10.012206 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m13:30:10.012468 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m13:30:10.019109 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m13:30:10.019838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:10.023644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.025015 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-04-10 13:30:10.012575 => 2024-04-10 13:30:10.024832
[0m13:30:10.025677 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m13:30:10.035895 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.037043 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.042340 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m13:30:10.043593 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
      ...
[0m13:30:10.050003 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.054902 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.057297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.059356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:10.065529 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.069111 [debug] [Thread-1 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:10.074893 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:10.079425 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.082690 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m13:30:10.107147 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:10.116275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.123699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.126836 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m13:30:10.127728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
      ...
[0m13:30:10.130332 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m13:30:10.134706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.141423 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.142504 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:10.143711 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.145627 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:10.154177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.158009 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:10.162592 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.167395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m13:30:10.171083 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.174664 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-10 13:30:09.930368 => 2024-04-10 13:30:10.174580
[0m13:30:10.175668 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67555d0>]}
[0m13:30:10.176390 [info ] [Thread-2 (]: 34 of 74 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.26s]
[0m13:30:10.176949 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m13:30:10.177546 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m13:30:10.178936 [info ] [Thread-2 (]: 36 of 74 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m13:30:10.180003 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m13:30:10.180350 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m13:30:10.180582 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m13:30:10.187203 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m13:30:10.187911 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-04-10 13:30:10.180704 => 2024-04-10 13:30:10.187829
[0m13:30:10.188139 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m13:30:10.196910 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m13:30:10.199572 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.203922 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.210068 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.212371 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:10.212989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.220143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.223583 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.227312 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:10.228902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.233472 [debug] [Thread-2 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m13:30:10.237411 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:10.239288 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.243215 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m13:30:10.244369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.248499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m13:30:10.250037 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.252865 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-04-10 13:30:10.026021 => 2024-04-10 13:30:10.252740
[0m13:30:10.254170 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc6aa70>]}
[0m13:30:10.255030 [info ] [Thread-1 (]: 35 of 74 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.24s]
[0m13:30:10.255581 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m13:30:10.256044 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m13:30:10.257126 [info ] [Thread-1 (]: 37 of 74 START sql view model test.join_appmetrica_registry_app_profile_matching  [RUN]
[0m13:30:10.258077 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching'
[0m13:30:10.258393 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching)
[0m13:30:10.258704 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m13:30:10.276199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:10.281785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m13:30:10.285072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.292610 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.295232 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m13:30:10.295799 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
      ...
[0m13:30:10.299121 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.306532 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m13:30:10.308688 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.310562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42);
    ...
[0m13:30:10.313453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.315438 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m13:30:10.351260 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:10.354980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.362135 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.364064 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42
    ...
[0m13:30:10.375010 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.378553 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_1cd4b8c7_8e41_46eb_99e7_70d0e345ce42 
  ...
[0m13:30:10.382834 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.387701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m13:30:10.391588 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.394014 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-04-10 13:30:10.188243 => 2024-04-10 13:30:10.393922
[0m13:30:10.394742 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67cb880>]}
[0m13:30:10.395203 [info ] [Thread-2 (]: 36 of 74 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.22s]
[0m13:30:10.395706 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m13:30:10.396166 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m13:30:10.397397 [info ] [Thread-2 (]: 38 of 74 START sql view model test.join_appmetrica_events ...................... [RUN]
[0m13:30:10.398378 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m13:30:10.398651 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m13:30:10.398839 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m13:30:10.406850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m13:30:10.408188 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m13:30:10.414613 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m13:30:10.424914 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:10.426330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m13:30:10.427021 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.432530 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.433628 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.438338 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m13:30:10.440660 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.443007 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"
[0m13:30:10.443606 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching (compile): 2024-04-10 13:30:10.258849 => 2024-04-10 13:30:10.443506
[0m13:30:10.443864 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m13:30:10.448450 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"
[0m13:30:10.449042 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */


  create view test.join_appmetrica_registry_app_profile_matching__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )





  )...
[0m13:30:10.462644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.466164 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    drop table if exists test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  
  ...
[0m13:30:10.471618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.473206 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    rename table test.join_appmetrica_registry_app_profile_matching to test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  
  ...
[0m13:30:10.477220 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.480528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    drop table if exists test.join_appmetrica_registry_app_profile_matching 
  
  ...
[0m13:30:10.484976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.487323 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    rename table test.join_appmetrica_registry_app_profile_matching__dbt_tmp to test.join_appmetrica_registry_app_profile_matching 
  
  ...
[0m13:30:10.492625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.496946 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */
drop table if exists test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  ...
[0m13:30:10.501348 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.503383 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching (execute): 2024-04-10 13:30:10.443979 => 2024-04-10 13:30:10.503296
[0m13:30:10.504306 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1e1300>]}
[0m13:30:10.504780 [info ] [Thread-1 (]: 37 of 74 OK created sql view model test.join_appmetrica_registry_app_profile_matching  [[32mOK[0m in 0.25s]
[0m13:30:10.505240 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m13:30:10.505566 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m13:30:10.505897 [info ] [Thread-1 (]: 39 of 74 START sql view model test.join_mt_datestat ............................ [RUN]
[0m13:30:10.506976 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m13:30:10.507815 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m13:30:10.508184 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m13:30:10.515759 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m13:30:10.523340 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.524464 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m13:30:10.526272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m13:30:10.539055 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m13:30:10.545464 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.547786 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m13:30:10.557397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:10.561674 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.568286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.573320 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m13:30:10.574134 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:10.583110 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m13:30:10.587423 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.591993 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.592736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.597527 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.599011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.603833 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m13:30:10.605791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.609629 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m13:30:10.612485 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.616109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.618264 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.623443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.628227 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.705424 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m13:30:10.706316 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m13:30:10.711116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m13:30:10.713925 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.718131 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.719671 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.723113 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.728280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.729069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.732495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m13:30:10.737166 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m13:30:10.739555 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-04-10 13:30:10.508329 => 2024-04-10 13:30:10.739403
[0m13:30:10.740130 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m13:30:10.745337 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m13:30:10.746090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.750396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.752451 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


  create view test.join_mt_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    '' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    '' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    '' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    '' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id







  )...
[0m13:30:10.756188 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.760448 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m13:30:10.761065 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-04-10 13:30:10.398953 => 2024-04-10 13:30:10.760959
[0m13:30:10.761366 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m13:30:10.766450 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m13:30:10.767030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


  create view test.join_appmetrica_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    '' AS visitId,
    '' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts







  )...
[0m13:30:10.809205 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m13:30:10.814428 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m13:30:10.818458 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.819745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat to test.join_mt_datestat__dbt_backup 
  
  ...
[0m13:30:10.824308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.828153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat 
  
  ...
[0m13:30:10.831191 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.832765 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat 
  
  ...
[0m13:30:10.836649 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.840755 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m13:30:10.844989 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.847000 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-04-10 13:30:10.740306 => 2024-04-10 13:30:10.846921
[0m13:30:10.847834 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc145420>]}
[0m13:30:10.848542 [info ] [Thread-1 (]: 39 of 74 OK created sql view model test.join_mt_datestat ....................... [[32mOK[0m in 0.34s]
[0m13:30:10.849010 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m13:30:10.849461 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m13:30:10.850405 [info ] [Thread-1 (]: 40 of 74 START sql view model test.join_vkads_datestat ......................... [RUN]
[0m13:30:10.851429 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m13:30:10.851842 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m13:30:10.852099 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m13:30:10.856163 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m13:30:10.862906 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.864708 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m13:30:10.874561 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.878120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m13:30:10.901168 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:10.909117 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m13:30:10.910695 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m13:30:10.914829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m13:30:10.917572 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.924873 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.925515 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.927450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m13:30:10.931155 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.931918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.935449 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events 
  
  ...
[0m13:30:10.939642 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m13:30:10.944011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:10.945300 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events 
  
  ...
[0m13:30:10.948059 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.951965 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:10.952805 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.958453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m13:30:10.959304 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.963718 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m13:30:10.964711 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.966429 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-04-10 13:30:10.761478 => 2024-04-10 13:30:10.966360
[0m13:30:10.967507 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc23d3c0>]}
[0m13:30:10.968030 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-04-10 13:30:10.852210 => 2024-04-10 13:30:10.967894
[0m13:30:10.968687 [info ] [Thread-2 (]: 38 of 74 OK created sql view model test.join_appmetrica_events ................. [[32mOK[0m in 0.57s]
[0m13:30:10.969554 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m13:30:10.970546 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m13:30:10.977221 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m13:30:10.977803 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m13:30:10.978805 [info ] [Thread-2 (]: 41 of 74 START sql view model test.join_yd_datestat ............................ [RUN]
[0m13:30:10.979696 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m13:30:10.980601 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m13:30:10.981579 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


  create view test.join_vkads_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    '' AS productName,
    ad_plans.name AS adCampaignName,
    '' AS adGroupName,
    ad_plans.id AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id







  )...
[0m13:30:10.982359 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m13:30:10.991657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m13:30:10.998046 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:10.999523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m13:30:11.009961 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.011911 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m13:30:11.015791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:11.025924 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m13:30:11.030185 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.031777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m13:30:11.036352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.041103 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat 
  
  ...
[0m13:30:11.042036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:11.048273 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m13:30:11.052380 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.054656 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat 
  
  ...
[0m13:30:11.057669 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.061300 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.062386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.069099 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m13:30:11.073578 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.074817 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.077044 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-04-10 13:30:10.971130 => 2024-04-10 13:30:11.076923
[0m13:30:11.080551 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m13:30:11.081870 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc181270>]}
[0m13:30:11.082944 [info ] [Thread-1 (]: 40 of 74 OK created sql view model test.join_vkads_datestat .................... [[32mOK[0m in 0.23s]
[0m13:30:11.084165 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-04-10 13:30:10.984642 => 2024-04-10 13:30:11.083912
[0m13:30:11.084808 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m13:30:11.085324 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m13:30:11.085935 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m13:30:11.091357 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m13:30:11.092093 [info ] [Thread-1 (]: 42 of 74 START sql view model test.join_ym_events .............................. [RUN]
[0m13:30:11.093791 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m13:30:11.094578 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m13:30:11.095125 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m13:30:11.095843 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


  create view test.join_yd_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    '' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps






  )...
[0m13:30:11.100488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m13:30:11.111283 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.113980 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m13:30:11.121370 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.124612 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m13:30:11.126440 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:11.134806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m13:30:11.138534 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.139935 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat to test.join_yd_datestat__dbt_backup 
  
  ...
[0m13:30:11.142927 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.146285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat 
  
  ...
[0m13:30:11.149949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.151259 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat 
  
  ...
[0m13:30:11.153054 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:11.159940 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m13:30:11.161737 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.167189 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m13:30:11.168319 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.173743 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.174738 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.177020 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-04-10 13:30:11.086600 => 2024-04-10 13:30:11.176948
[0m13:30:11.177781 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2661a0>]}
[0m13:30:11.178932 [info ] [Thread-2 (]: 41 of 74 OK created sql view model test.join_yd_datestat ....................... [[32mOK[0m in 0.20s]
[0m13:30:11.179759 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m13:30:11.180399 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m13:30:11.181512 [info ] [Thread-2 (]: 43 of 74 START sql view model test.hash_registry_app_profile_matching .......... [RUN]
[0m13:30:11.182805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.183653 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_app_profile_matching'
[0m13:30:11.188295 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m13:30:11.188735 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_app_profile_matching)
[0m13:30:11.189985 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m13:30:11.196103 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-04-10 13:30:11.096248 => 2024-04-10 13:30:11.195916
[0m13:30:11.212789 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m13:30:11.220389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_app_profile_matching')        
...
[0m13:30:11.226151 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m13:30:11.228957 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


  create view test.join_ym_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    NULL AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events






  )...
[0m13:30:11.236957 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.255855 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_app_profile_matching'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.259113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:11.262352 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m13:30:11.263774 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.275694 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.282290 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events to test.join_ym_events__dbt_backup 
  
  ...
[0m13:30:11.285275 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_app_profile_matching"
[0m13:30:11.286572 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_app_profile_matching (compile): 2024-04-10 13:30:11.190657 => 2024-04-10 13:30:11.286400
[0m13:30:11.287027 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m13:30:11.292758 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_app_profile_matching"
[0m13:30:11.293563 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.297973 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events 
  
  ...
[0m13:30:11.299310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */


  create view test.hash_registry_app_profile_matching__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_registry_app_profile_matching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id,

  assumeNotNull(CASE 







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    


FROM (

        (
            select

                toLowCardinality('join_appmetrica_registry_app_profile_matching')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_app_profile_matching
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m13:30:11.301195 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.302495 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events 
  
  ...
[0m13:30:11.306924 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.311135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m13:30:11.315650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.317311 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-04-10 13:30:11.220756 => 2024-04-10 13:30:11.317215
[0m13:30:11.318078 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc11b7c0>]}
[0m13:30:11.318688 [info ] [Thread-1 (]: 42 of 74 OK created sql view model test.join_ym_events ......................... [[32mOK[0m in 0.22s]
[0m13:30:11.319347 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m13:30:11.319786 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m13:30:11.320551 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:11.321406 [info ] [Thread-1 (]: 44 of 74 START sql view model test.combine_datestat ............................ [RUN]
[0m13:30:11.325605 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    drop table if exists test.hash_registry_app_profile_matching__dbt_backup 
  
  ...
[0m13:30:11.326365 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m13:30:11.327777 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m13:30:11.328155 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m13:30:11.338562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m13:30:11.339607 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.342312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    rename table test.hash_registry_app_profile_matching to test.hash_registry_app_profile_matching__dbt_backup 
  
  ...
[0m13:30:11.345956 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.349634 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    drop table if exists test.hash_registry_app_profile_matching 
  
  ...
[0m13:30:11.351267 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.356520 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.357371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.359789 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    rename table test.hash_registry_app_profile_matching__dbt_tmp to test.hash_registry_app_profile_matching 
  
  ...
[0m13:30:11.364333 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.371842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */
drop table if exists test.hash_registry_app_profile_matching__dbt_backup 
  ...
[0m13:30:11.373071 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:11.377552 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.379396 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.381086 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_app_profile_matching (execute): 2024-04-10 13:30:11.287182 => 2024-04-10 13:30:11.381018
[0m13:30:11.381837 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc236e90>]}
[0m13:30:11.382290 [info ] [Thread-2 (]: 43 of 74 OK created sql view model test.hash_registry_app_profile_matching ..... [[32mOK[0m in 0.20s]
[0m13:30:11.382733 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m13:30:11.383255 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m13:30:11.384215 [info ] [Thread-2 (]: 45 of 74 START sql view model test.combine_events .............................. [RUN]
[0m13:30:11.385453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.386418 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m13:30:11.390868 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.391550 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m13:30:11.393121 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m13:30:11.397358 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m13:30:11.398031 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.403965 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m13:30:11.404825 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-04-10 13:30:11.328729 => 2024-04-10 13:30:11.404692
[0m13:30:11.405187 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m13:30:11.410124 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m13:30:11.411128 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.416348 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.417900 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


  create view test.combine_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                toLowCardinality('join_mt_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_mt_datestat
        )

        union all
        

        (
            select

                toLowCardinality('join_vkads_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select

                toLowCardinality('join_yd_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_yd_datestat
        )

        )
  )...
[0m13:30:11.423328 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.428859 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.435927 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.440570 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.441863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:11.446740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m13:30:11.448312 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.454356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_install'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.455628 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.457808 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat to test.combine_datestat__dbt_backup 
  
  ...
[0m13:30:11.460982 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.461571 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.465395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.469143 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat 
  
  ...
[0m13:30:11.474162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.475474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat 
  
  ...
[0m13:30:11.476658 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.481604 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.484165 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.488760 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m13:30:11.489596 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.495016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.496625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.499210 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-04-10 13:30:11.405306 => 2024-04-10 13:30:11.499145
[0m13:30:11.500053 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc25be20>]}
[0m13:30:11.501477 [info ] [Thread-1 (]: 44 of 74 OK created sql view model test.combine_datestat ....................... [[32mOK[0m in 0.17s]
[0m13:30:11.501970 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m13:30:11.503003 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m13:30:11.503773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.504185 [info ] [Thread-1 (]: 46 of 74 START sql view model test.hash_datestat ............................... [RUN]
[0m13:30:11.514744 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m13:30:11.515712 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m13:30:11.516176 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m13:30:11.516387 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m13:30:11.523351 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m13:30:11.525169 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-04-10 13:30:11.393566 => 2024-04-10 13:30:11.525059
[0m13:30:11.525862 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m13:30:11.532832 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m13:30:11.534024 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.538663 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.540451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


  create view test.combine_events__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                toLowCardinality('join_appmetrica_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_deeplinks')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString('') as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_deeplinks
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString('') as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_events
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_install')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString('') as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_install
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_screen_view')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString('') as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_screen_view
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_sessions_starts')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as transactionId ,
                            toString('') as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_sessions_starts
        )

        union all
        

        (
            select

                toLowCardinality('join_ym_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        )
  )...
[0m13:30:11.544996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.548873 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m13:30:11.549536 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-04-10 13:30:11.516570 => 2024-04-10 13:30:11.549368
[0m13:30:11.549870 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m13:30:11.556512 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m13:30:11.557071 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


  create view test.hash_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id,

  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    
    


FROM (

        (
            select

                toLowCardinality('combine_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m13:30:11.593518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:11.596903 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m13:30:11.600653 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.602141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat to test.hash_datestat__dbt_backup 
  
  ...
[0m13:30:11.607146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.610272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat 
  
  ...
[0m13:30:11.611596 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m13:30:11.615190 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m13:30:11.615851 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.618431 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat 
  
  ...
[0m13:30:11.620078 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.621206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events to test.combine_events__dbt_backup 
  
  ...
[0m13:30:11.622366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.628740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m13:30:11.630449 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.709593 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m13:30:11.711311 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events 
  
  ...
[0m13:30:11.713475 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-04-10 13:30:11.550023 => 2024-04-10 13:30:11.713358
[0m13:30:11.715758 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc25b460>]}
[0m13:30:11.716267 [info ] [Thread-1 (]: 46 of 74 OK created sql view model test.hash_datestat .......................... [[32mOK[0m in 0.20s]
[0m13:30:11.716623 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m13:30:11.717904 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m13:30:11.718601 [info ] [Thread-1 (]: 47 of 74 START sql table model test.full_datestat .............................. [RUN]
[0m13:30:11.719603 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.720306 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m13:30:11.721490 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events 
  
  ...
[0m13:30:11.721802 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m13:30:11.722694 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m13:30:11.725790 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m13:30:11.726618 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.731857 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m13:30:11.733123 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-04-10 13:30:11.722936 => 2024-04-10 13:30:11.732944
[0m13:30:11.733677 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m13:30:11.742064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.749419 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-04-10 13:30:11.526174 => 2024-04-10 13:30:11.749329
[0m13:30:11.754030 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
    )
        ...
[0m13:30:11.755232 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67b1420>]}
[0m13:30:11.756971 [info ] [Thread-2 (]: 45 of 74 OK created sql view model test.combine_events ......................... [[32mOK[0m in 0.37s]
[0m13:30:11.757570 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m13:30:11.758706 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m13:30:11.759165 [info ] [Thread-2 (]: 48 of 74 START sql view model test.hash_events ................................. [RUN]
[0m13:30:11.760201 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m13:30:11.760435 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m13:30:11.760705 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m13:30:11.767906 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m13:30:11.775816 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.776474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:11.779595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.783006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.790031 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.797067 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m13:30:11.798268 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.800590 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m13:30:11.801613 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-04-10 13:30:11.760801 => 2024-04-10 13:30:11.801247
[0m13:30:11.802134 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m13:30:11.807239 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m13:30:11.808105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

  
    
    
        
        insert into test.full_datestat__dbt_backup ("None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
  ...
[0m13:30:11.810353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


  create view test.hash_events__dbt_tmp 
  
  as (
    -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id,

  assumeNotNull(CASE 


WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    


FROM (

        (
            select

                toLowCardinality('combine_events')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m13:30:11.872149 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m13:30:11.875778 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m13:30:11.879154 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.880490 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events to test.hash_events__dbt_backup 
  
  ...
[0m13:30:11.884869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.887559 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events 
  
  ...
[0m13:30:11.891256 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.892515 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events 
  
  ...
[0m13:30:11.897095 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.902393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m13:30:11.905930 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:11.907814 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-04-10 13:30:11.802300 => 2024-04-10 13:30:11.907734
[0m13:30:11.908601 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1e8ac0>]}
[0m13:30:11.909291 [info ] [Thread-2 (]: 48 of 74 OK created sql view model test.hash_events ............................ [[32mOK[0m in 0.15s]
[0m13:30:11.909843 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m13:30:11.911124 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m13:30:11.911814 [info ] [Thread-2 (]: 49 of 74 START sql table model test.full_events ................................ [RUN]
[0m13:30:11.912556 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m13:30:11.912839 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m13:30:11.913004 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m13:30:11.915799 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m13:30:11.916251 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-04-10 13:30:11.913093 => 2024-04-10 13:30:11.916165
[0m13:30:11.916556 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m13:30:11.920856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
* 
FROM  test.hash_events
    )
        ...
[0m13:30:11.941809 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:11.945200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:11.951153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.954351 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m13:30:11.955204 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  


SELECT 
* 
FROM  test.hash_events
  ...
[0m13:30:11.978380 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.17 seconds
[0m13:30:11.982490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m13:30:11.990255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:11.994461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m13:30:11.999405 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:12.001165 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-04-10 13:30:11.733921 => 2024-04-10 13:30:12.001082
[0m13:30:12.001834 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc25b6a0>]}
[0m13:30:12.002312 [info ] [Thread-1 (]: 47 of 74 OK created sql table model test.full_datestat ......................... [[32mOK[0m in 0.28s]
[0m13:30:12.002699 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m13:30:12.003062 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m13:30:12.003954 [info ] [Thread-1 (]: 50 of 74 START sql table model test.graph_tuples ............................... [RUN]
[0m13:30:12.004806 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m13:30:12.005102 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m13:30:12.005272 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m13:30:12.020279 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m13:30:12.021012 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-04-10 13:30:12.005410 => 2024-04-10 13:30:12.020884
[0m13:30:12.021329 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m13:30:12.026128 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m13:30:12.089152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m13:30:12.092664 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:12.099202 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:12.101432 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m13:30:12.102128 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m13:30:12.893395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.94 seconds
[0m13:30:12.895278 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m13:30:12.900812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:12.905247 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m13:30:12.909264 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:12.911432 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-04-10 13:30:11.916684 => 2024-04-10 13:30:12.911375
[0m13:30:12.911953 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1eb3d0>]}
[0m13:30:12.912362 [info ] [Thread-2 (]: 49 of 74 OK created sql table model test.full_events ........................... [[32mOK[0m in 1.00s]
[0m13:30:12.912679 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m13:30:14.302277 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 2.20 seconds
[0m13:30:14.303565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m13:30:14.308494 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:14.312502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m13:30:14.317147 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:14.319053 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-04-10 13:30:12.021478 => 2024-04-10 13:30:14.318983
[0m13:30:14.319783 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc25bb20>]}
[0m13:30:14.320234 [info ] [Thread-1 (]: 50 of 74 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 2.32s]
[0m13:30:14.320558 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m13:30:14.321960 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m13:30:14.322428 [info ] [Thread-2 (]: 51 of 74 START sql table model test.graph_lookup ............................... [RUN]
[0m13:30:14.323013 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m13:30:14.323208 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m13:30:14.323368 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m13:30:14.328992 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m13:30:14.329435 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-04-10 13:30:14.323615 => 2024-04-10 13:30:14.329373
[0m13:30:14.329608 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m13:30:14.333761 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m13:30:14.362286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:14.365797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:14.372062 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.373839 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m13:30:14.374266 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m13:30:14.397938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.399055 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m13:30:14.405304 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.408899 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m13:30:14.413853 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:14.415341 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-04-10 13:30:14.329695 => 2024-04-10 13:30:14.415287
[0m13:30:14.415838 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22f07df8e0>]}
[0m13:30:14.416232 [info ] [Thread-2 (]: 51 of 74 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.09s]
[0m13:30:14.416534 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m13:30:14.418008 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m13:30:14.418904 [info ] [Thread-1 (]: 52 of 74 START sql table model test.graph_unique ............................... [RUN]
[0m13:30:14.420029 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m13:30:14.420302 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m13:30:14.420482 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m13:30:14.424788 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m13:30:14.425259 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-04-10 13:30:14.420583 => 2024-04-10 13:30:14.425184
[0m13:30:14.425489 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m13:30:14.429302 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m13:30:14.449371 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.454426 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:14.459865 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.461223 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m13:30:14.461693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m13:30:14.471258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.472703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m13:30:14.478228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.481971 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m13:30:14.486075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:14.488029 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-04-10 13:30:14.425601 => 2024-04-10 13:30:14.487961
[0m13:30:14.488613 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1becb0>]}
[0m13:30:14.488971 [info ] [Thread-1 (]: 52 of 74 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.07s]
[0m13:30:14.489292 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m13:30:14.490478 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m13:30:14.490899 [info ] [Thread-2 (]: 53 of 74 START sql table model test.graph_edge ................................. [RUN]
[0m13:30:14.491442 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m13:30:14.491619 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m13:30:14.491770 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m13:30:14.496972 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m13:30:14.497527 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-04-10 13:30:14.491865 => 2024-04-10 13:30:14.497443
[0m13:30:14.497747 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m13:30:14.501966 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m13:30:14.521894 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.524824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:14.532274 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.534269 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m13:30:14.534886 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m13:30:14.552470 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.554790 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m13:30:14.561064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.563779 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m13:30:14.571164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.574647 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m13:30:14.578301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:14.579891 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-04-10 13:30:14.497837 => 2024-04-10 13:30:14.579789
[0m13:30:14.580627 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc1bc520>]}
[0m13:30:14.581017 [info ] [Thread-2 (]: 53 of 74 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.09s]
[0m13:30:14.581323 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m13:30:14.582480 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m13:30:14.583209 [info ] [Thread-1 (]: 54 of 74 START sql table model test.graph_glue ................................. [RUN]
[0m13:30:14.584063 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m13:30:14.584372 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m13:30:14.584539 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m13:30:14.590889 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m13:30:14.591634 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-04-10 13:30:14.584630 => 2024-04-10 13:30:14.591506
[0m13:30:14.592026 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m13:30:14.601278 [debug] [Thread-1 (]: Running iteration 0
[0m13:30:14.602081 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m13:30:14.652402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m13:30:14.654667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m13:30:14.692996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:14.694270 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m13:30:14.705419 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.706468 [debug] [Thread-1 (]: VALUE: 1
[0m13:30:14.706674 [debug] [Thread-1 (]: Running iteration 1
[0m13:30:14.707041 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m13:30:14.741542 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:14.742715 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m13:30:14.779990 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:14.781991 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m13:30:14.795788 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.796892 [debug] [Thread-1 (]: VALUE: 0
[0m13:30:14.797167 [debug] [Thread-1 (]: Running iteration 2
[0m13:30:14.797307 [debug] [Thread-1 (]: Running iteration 3
[0m13:30:14.797425 [debug] [Thread-1 (]: Running iteration 4
[0m13:30:14.797525 [debug] [Thread-1 (]: Running iteration 5
[0m13:30:14.797621 [debug] [Thread-1 (]: Running iteration 6
[0m13:30:14.797716 [debug] [Thread-1 (]: Running iteration 7
[0m13:30:14.797809 [debug] [Thread-1 (]: Running iteration 8
[0m13:30:14.797902 [debug] [Thread-1 (]: Running iteration 9
[0m13:30:14.797996 [debug] [Thread-1 (]: Running iteration 10
[0m13:30:14.798089 [debug] [Thread-1 (]: Running iteration 11
[0m13:30:14.798181 [debug] [Thread-1 (]: Running iteration 12
[0m13:30:14.798273 [debug] [Thread-1 (]: Running iteration 13
[0m13:30:14.799550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m13:30:14.815237 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.818247 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:14.827532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.828827 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m13:30:14.829225 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m13:30:14.850503 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.851734 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m13:30:14.857391 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.860838 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m13:30:14.865797 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:14.867169 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-04-10 13:30:14.592169 => 2024-04-10 13:30:14.867091
[0m13:30:14.867872 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2108b0>]}
[0m13:30:14.868256 [info ] [Thread-1 (]: 54 of 74 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.28s]
[0m13:30:14.868591 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m13:30:14.870035 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m13:30:14.870493 [info ] [Thread-2 (]: 55 of 74 START sql table model test.graph_qid .................................. [RUN]
[0m13:30:14.871090 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m13:30:14.871278 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m13:30:14.871442 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m13:30:14.876486 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m13:30:14.877206 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-04-10 13:30:14.871547 => 2024-04-10 13:30:14.877077
[0m13:30:14.877658 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m13:30:14.882978 [debug] [Thread-2 (]: Running iteration 0
[0m13:30:14.883894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m13:30:14.928596 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:14.929648 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m13:30:14.964064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:14.965085 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m13:30:14.975693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:14.976843 [debug] [Thread-2 (]: VALUE: 0
[0m13:30:14.977053 [debug] [Thread-2 (]: Running iteration 1
[0m13:30:14.977178 [debug] [Thread-2 (]: Running iteration 2
[0m13:30:14.977278 [debug] [Thread-2 (]: Running iteration 3
[0m13:30:14.977372 [debug] [Thread-2 (]: Running iteration 4
[0m13:30:14.977465 [debug] [Thread-2 (]: Running iteration 5
[0m13:30:14.977562 [debug] [Thread-2 (]: Running iteration 6
[0m13:30:14.977664 [debug] [Thread-2 (]: Running iteration 7
[0m13:30:14.977757 [debug] [Thread-2 (]: Running iteration 8
[0m13:30:14.977853 [debug] [Thread-2 (]: Running iteration 9
[0m13:30:14.977945 [debug] [Thread-2 (]: Running iteration 10
[0m13:30:14.978039 [debug] [Thread-2 (]: Running iteration 11
[0m13:30:14.978131 [debug] [Thread-2 (]: Running iteration 12
[0m13:30:14.978224 [debug] [Thread-2 (]: Running iteration 13
[0m13:30:14.979688 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m13:30:14.996101 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:14.998602 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:15.004768 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:15.006128 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m13:30:15.006666 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m13:30:15.019557 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:15.020659 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m13:30:15.026299 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:15.029860 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m13:30:15.033705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:15.035479 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-04-10 13:30:14.877835 => 2024-04-10 13:30:15.035418
[0m13:30:15.036070 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d660e020>]}
[0m13:30:15.718393 [info ] [Thread-2 (]: 55 of 74 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.17s]
[0m13:30:15.719209 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m13:30:15.720774 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m13:30:15.721600 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m13:30:15.722300 [info ] [Thread-1 (]: 56 of 74 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m13:30:15.722962 [info ] [Thread-2 (]: 57 of 74 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m13:30:15.724238 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m13:30:15.725115 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m13:30:15.725428 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m13:30:15.725748 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m13:30:15.726116 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m13:30:15.726365 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m13:30:15.734738 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m13:30:15.739967 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m13:30:15.741004 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-04-10 13:30:15.726562 => 2024-04-10 13:30:15.740856
[0m13:30:15.741559 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m13:30:15.746266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m13:30:15.746708 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-04-10 13:30:15.735409 => 2024-04-10 13:30:15.746578
[0m13:30:15.747817 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m13:30:15.756175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m13:30:15.780674 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:15.784035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:15.785130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m13:30:15.790411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:15.795505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:15.797564 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m13:30:15.798204 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:15.800495 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m13:30:15.801661 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m13:30:15.803433 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m13:30:16.681168 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.88 seconds
[0m13:30:16.682566 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m13:30:16.687697 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.692155 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m13:30:16.695599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.697070 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-04-10 13:30:15.741975 => 2024-04-10 13:30:16.696994
[0m13:30:16.697715 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d660fd00>]}
[0m13:30:16.698094 [info ] [Thread-1 (]: 56 of 74 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.97s]
[0m13:30:16.698419 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m13:30:16.699424 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m13:30:16.700047 [info ] [Thread-1 (]: 58 of 74 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m13:30:16.700810 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m13:30:16.701034 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m13:30:16.701206 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m13:30:16.715419 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m13:30:16.716666 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-04-10 13:30:16.701300 => 2024-04-10 13:30:16.716382
[0m13:30:16.717277 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m13:30:16.724912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m13:30:16.747560 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:16.752385 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:16.753650 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.95 seconds
[0m13:30:16.756898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m13:30:16.763297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.764267 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.770499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m13:30:16.772820 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m13:30:16.775307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m13:30:16.777407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.779053 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-04-10 13:30:15.748261 => 2024-04-10 13:30:16.778948
[0m13:30:16.780076 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d660fd90>]}
[0m13:30:16.780734 [info ] [Thread-2 (]: 57 of 74 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 1.06s]
[0m13:30:16.781239 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m13:30:16.782574 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m13:30:16.783274 [info ] [Thread-2 (]: 59 of 74 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m13:30:16.784500 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m13:30:16.785002 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m13:30:16.785306 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m13:30:16.793246 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m13:30:16.793945 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:16.795365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m13:30:16.796604 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-04-10 13:30:16.785424 => 2024-04-10 13:30:16.796396
[0m13:30:16.797225 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m13:30:16.803415 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m13:30:16.804308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.809913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m13:30:16.815034 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.816805 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-04-10 13:30:16.717559 => 2024-04-10 13:30:16.816718
[0m13:30:16.817985 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc199d80>]}
[0m13:30:16.818704 [info ] [Thread-1 (]: 58 of 74 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.12s]
[0m13:30:16.819209 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m13:30:16.820515 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m13:30:16.821200 [info ] [Thread-1 (]: 60 of 74 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m13:30:16.822158 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m13:30:16.822601 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m13:30:16.822932 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m13:30:16.829470 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m13:30:16.830369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:16.834490 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:16.835094 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-04-10 13:30:16.823094 => 2024-04-10 13:30:16.834895
[0m13:30:16.836382 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m13:30:16.842402 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m13:30:16.843221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.846460 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m13:30:16.847590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m13:30:16.857997 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.858597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.859683 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m13:30:16.864485 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:16.870341 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.874934 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m13:30:16.876518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.878322 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m13:30:16.879306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.880976 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-04-10 13:30:16.797494 => 2024-04-10 13:30:16.880917
[0m13:30:16.881687 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2ce830>]}
[0m13:30:16.882291 [info ] [Thread-2 (]: 59 of 74 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.10s]
[0m13:30:16.882919 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m13:30:16.883947 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m13:30:16.885052 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m13:30:16.886670 [info ] [Thread-2 (]: 61 of 74 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m13:30:16.887919 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m13:30:16.888346 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m13:30:16.888559 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m13:30:16.891731 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m13:30:16.892766 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-04-10 13:30:16.888656 => 2024-04-10 13:30:16.892475
[0m13:30:16.893805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.894298 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m13:30:16.895824 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m13:30:16.900330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m13:30:16.904853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.909571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m13:30:16.914040 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.915669 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-04-10 13:30:16.836959 => 2024-04-10 13:30:16.915551
[0m13:30:16.916601 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d660d8d0>]}
[0m13:30:16.917363 [info ] [Thread-1 (]: 60 of 74 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.09s]
[0m13:30:16.918409 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m13:30:16.920026 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m13:30:16.920649 [info ] [Thread-1 (]: 62 of 74 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m13:30:16.921564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:16.922425 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m13:30:16.926268 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:16.926796 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m13:30:16.928612 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m13:30:16.941672 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m13:30:16.942973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:16.944707 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m13:30:16.945633 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-04-10 13:30:16.929177 => 2024-04-10 13:30:16.945464
[0m13:30:16.946266 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m13:30:16.950906 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m13:30:16.952465 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m13:30:16.962436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.964004 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m13:30:16.968873 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:16.974092 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m13:30:16.975588 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:16.979304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:16.980104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:16.983282 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-04-10 13:30:16.896265 => 2024-04-10 13:30:16.983199
[0m13:30:16.984094 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc2cce20>]}
[0m13:30:16.984809 [info ] [Thread-2 (]: 61 of 74 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.10s]
[0m13:30:16.985582 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m13:30:16.986985 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m13:30:16.987909 [info ] [Thread-2 (]: 63 of 74 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m13:30:16.988903 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m13:30:16.989238 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m13:30:16.989439 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m13:30:17.088530 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m13:30:17.089649 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m13:30:17.091789 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m13:30:17.092370 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-04-10 13:30:16.989539 => 2024-04-10 13:30:17.092243
[0m13:30:17.093002 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m13:30:17.097750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m13:30:17.099502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m13:30:17.113873 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.117206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.117982 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.120285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m13:30:17.122560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.124210 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m13:30:17.125186 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.129285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m13:30:17.130449 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m13:30:17.132620 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.134176 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-04-10 13:30:16.946462 => 2024-04-10 13:30:17.134100
[0m13:30:17.135022 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d660f850>]}
[0m13:30:17.135543 [info ] [Thread-1 (]: 62 of 74 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.21s]
[0m13:30:17.136015 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m13:30:17.137370 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m13:30:17.137907 [info ] [Thread-1 (]: 64 of 74 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m13:30:17.138638 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m13:30:17.138875 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m13:30:17.139058 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m13:30:17.144881 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m13:30:17.146006 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.147456 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m13:30:17.149158 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-04-10 13:30:17.139153 => 2024-04-10 13:30:17.148968
[0m13:30:17.150053 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m13:30:17.157251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.158607 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m13:30:17.163341 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m13:30:17.169342 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.171694 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-04-10 13:30:17.093241 => 2024-04-10 13:30:17.171587
[0m13:30:17.172695 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3994b0>]}
[0m13:30:17.173290 [info ] [Thread-2 (]: 63 of 74 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.18s]
[0m13:30:17.173798 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m13:30:17.175699 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m13:30:17.176233 [info ] [Thread-2 (]: 65 of 74 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m13:30:17.176971 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m13:30:17.177355 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m13:30:17.177529 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m13:30:17.181156 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m13:30:17.182115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.186602 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.188425 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-04-10 13:30:17.177623 => 2024-04-10 13:30:17.188247
[0m13:30:17.189061 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m13:30:17.196054 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m13:30:17.197024 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.199753 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m13:30:17.200571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m13:30:17.211654 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.213251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m13:30:17.214550 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.221622 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.222739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.228447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m13:30:17.229399 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.231733 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m13:30:17.233145 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m13:30:17.235653 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.237894 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-04-10 13:30:17.150406 => 2024-04-10 13:30:17.237804
[0m13:30:17.238828 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67e5ae0>]}
[0m13:30:17.239370 [info ] [Thread-1 (]: 64 of 74 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.10s]
[0m13:30:17.239868 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m13:30:17.241019 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m13:30:17.241532 [info ] [Thread-1 (]: 66 of 74 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m13:30:17.242276 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m13:30:17.242635 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m13:30:17.242872 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m13:30:17.248278 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m13:30:17.249131 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.252371 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m13:30:17.253539 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-04-10 13:30:17.243043 => 2024-04-10 13:30:17.253244
[0m13:30:17.255290 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m13:30:17.260056 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m13:30:17.261076 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.267567 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m13:30:17.272962 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.275272 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-04-10 13:30:17.189297 => 2024-04-10 13:30:17.275188
[0m13:30:17.276208 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc60700>]}
[0m13:30:17.276823 [info ] [Thread-2 (]: 65 of 74 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.10s]
[0m13:30:17.277294 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m13:30:17.278351 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m13:30:17.278830 [info ] [Thread-2 (]: 67 of 74 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m13:30:17.279505 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m13:30:17.279947 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m13:30:17.280176 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m13:30:17.284618 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m13:30:17.285515 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-04-10 13:30:17.280291 => 2024-04-10 13:30:17.285350
[0m13:30:17.286036 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m13:30:17.294858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m13:30:17.295791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.299983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.307209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.309268 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m13:30:17.309776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m13:30:17.327908 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.331343 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.337338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.338416 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.340669 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m13:30:17.342196 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m13:30:17.344014 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m13:30:17.348593 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.354920 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m13:30:17.359340 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.360843 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-04-10 13:30:17.255525 => 2024-04-10 13:30:17.360768
[0m13:30:17.361656 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67e5ab0>]}
[0m13:30:17.362560 [info ] [Thread-1 (]: 66 of 74 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.12s]
[0m13:30:17.363356 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m13:30:17.364401 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.364957 [info ] [Thread-1 (]: 68 of 74 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m13:30:17.365757 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.367185 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m13:30:17.369414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m13:30:17.370031 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m13:30:17.371417 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.388078 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m13:30:17.389153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.393559 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m13:30:17.395809 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 13:30:17.371596 => 2024-04-10 13:30:17.395466
[0m13:30:17.396312 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.401356 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m13:30:17.402879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.406579 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-04-10 13:30:17.286230 => 2024-04-10 13:30:17.406471
[0m13:30:17.407834 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc62ef0>]}
[0m13:30:17.408928 [info ] [Thread-2 (]: 67 of 74 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.13s]
[0m13:30:17.409597 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m13:30:17.410790 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.411539 [info ] [Thread-2 (]: 69 of 74 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m13:30:17.412662 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m13:30:17.413014 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m13:30:17.413349 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.421603 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m13:30:17.422468 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 13:30:17.413464 => 2024-04-10 13:30:17.422356
[0m13:30:17.422749 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.428832 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m13:30:17.431460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.437462 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.445519 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.448025 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m13:30:17.448601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m13:30:17.453116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.457601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.463153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.465474 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m13:30:17.466280 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m13:30:17.473559 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m13:30:17.475078 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m13:30:17.480087 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.486131 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m13:30:17.490302 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.492108 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 13:30:17.396423 => 2024-04-10 13:30:17.491970
[0m13:30:17.492861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.493562 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc23eef0>]}
[0m13:30:17.494776 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m13:30:17.495451 [info ] [Thread-1 (]: 68 of 74 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.13s]
[0m13:30:17.497168 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.498728 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m13:30:17.499436 [info ] [Thread-1 (]: 70 of 74 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m13:30:17.500527 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m13:30:17.500938 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m13:30:17.501211 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m13:30:17.507584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.524894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m13:30:17.526813 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m13:30:17.528324 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-04-10 13:30:17.501473 => 2024-04-10 13:30:17.528149
[0m13:30:17.528757 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m13:30:17.533360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m13:30:17.535107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.538490 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 13:30:17.422854 => 2024-04-10 13:30:17.538393
[0m13:30:17.539245 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc60700>]}
[0m13:30:17.539803 [info ] [Thread-2 (]: 69 of 74 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.13s]
[0m13:30:17.540222 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m13:30:17.541457 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m13:30:17.541911 [info ] [Thread-2 (]: 71 of 74 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m13:30:17.542871 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m13:30:17.543321 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m13:30:17.543536 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m13:30:17.550164 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m13:30:17.551501 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-04-10 13:30:17.543651 => 2024-04-10 13:30:17.551285
[0m13:30:17.552122 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m13:30:17.559601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m13:30:17.565593 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.572874 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.579956 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.581874 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m13:30:17.582773 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m13:30:17.585561 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.589615 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.595435 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.597260 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m13:30:17.597914 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m13:30:17.609395 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.610791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m13:30:17.616760 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.622802 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m13:30:17.624251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.626082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m13:30:17.626744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.629160 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-10 13:30:17.528874 => 2024-04-10 13:30:17.629064
[0m13:30:17.630077 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d6719db0>]}
[0m13:30:17.630901 [info ] [Thread-1 (]: 70 of 74 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.13s]
[0m13:30:17.631446 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m13:30:17.632607 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m13:30:17.633217 [info ] [Thread-1 (]: 72 of 74 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m13:30:17.634010 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m13:30:17.635286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.635625 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m13:30:17.639533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m13:30:17.640126 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m13:30:17.646873 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.648687 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-10 13:30:17.552415 => 2024-04-10 13:30:17.648552
[0m13:30:17.650891 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m13:30:17.652284 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d6740a00>]}
[0m13:30:17.653899 [info ] [Thread-2 (]: 71 of 74 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.11s]
[0m13:30:17.654813 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m13:30:17.655658 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-10 13:30:17.641067 => 2024-04-10 13:30:17.655395
[0m13:30:17.656943 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m13:30:17.661561 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m13:30:17.662876 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m13:30:17.663743 [info ] [Thread-2 (]: 73 of 74 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m13:30:17.664859 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m13:30:17.665425 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m13:30:17.665900 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m13:30:17.673493 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m13:30:17.674516 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-10 13:30:17.666191 => 2024-04-10 13:30:17.674081
[0m13:30:17.675254 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m13:30:17.679977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m13:30:17.692292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.695501 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.701953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.706375 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m13:30:17.707148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m13:30:17.710380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.713521 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.720020 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.723112 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m13:30:17.723830 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m13:30:17.742226 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.743673 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m13:30:17.748638 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.754573 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m13:30:17.756511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m13:30:17.757923 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m13:30:17.758637 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.760964 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-10 13:30:17.657234 => 2024-04-10 13:30:17.760851
[0m13:30:17.761827 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67e7490>]}
[0m13:30:17.762641 [info ] [Thread-1 (]: 72 of 74 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.13s]
[0m13:30:17.763141 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m13:30:17.764503 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m13:30:17.765427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.770904 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m13:30:17.766217 [info ] [Thread-1 (]: 74 of 74 START sql table model test.dataset_event_table ........................ [RUN]
[0m13:30:17.773025 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m13:30:17.773377 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m13:30:17.773596 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m13:30:17.779922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.781269 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-10 13:30:17.675457 => 2024-04-10 13:30:17.781205
[0m13:30:17.787284 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22d67dc160>]}
[0m13:30:17.791349 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.792103 [info ] [Thread-2 (]: 73 of 74 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.12s]
[0m13:30:17.794353 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m13:30:17.798188 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.803038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.808798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m13:30:17.817730 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m13:30:17.818546 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-10 13:30:17.773732 => 2024-04-10 13:30:17.818410
[0m13:30:17.818986 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m13:30:17.824547 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
    )
        ...
[0m13:30:17.891517 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m13:30:17.894522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m13:30:17.899830 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:17.902427 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m13:30:17.903141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("_dbt_source_relation", "None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
  ...
[0m13:30:18.020941 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m13:30:18.022125 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m13:30:18.025472 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:18.029196 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m13:30:18.032760 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m13:30:18.034653 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-10 13:30:17.819108 => 2024-04-10 13:30:18.034515
[0m13:30:18.035571 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1cd4b8c7-8e41-46eb-99e7-70d0e345ce42', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc20ace0>]}
[0m13:30:18.036338 [info ] [Thread-1 (]: 74 of 74 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.26s]
[0m13:30:18.036760 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m13:30:18.039002 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m13:30:18.039654 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:30:18.039845 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m13:30:18.040109 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m13:30:18.040236 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table' was left open.
[0m13:30:18.040349 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: Close
[0m13:30:18.040818 [info ] [MainThread]: 
[0m13:30:18.041142 [info ] [MainThread]: Finished running 35 view models, 12 incremental models, 27 table models in 0 hours 0 minutes and 12.76 seconds (12.76s).
[0m13:30:18.045612 [debug] [MainThread]: Command end result
[0m13:30:18.064029 [info ] [MainThread]: 
[0m13:30:18.064469 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:30:18.064834 [info ] [MainThread]: 
[0m13:30:18.065105 [info ] [MainThread]: Done. PASS=74 WARN=0 ERROR=0 SKIP=0 TOTAL=74
[0m13:30:18.065942 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc59c60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dcc59930>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f22dc3be770>]}
[0m13:30:18.066468 [debug] [MainThread]: Flushing usage events


============================== 2024-04-10 14:01:47.561222 | a5ae1888-9257-4a70-8a77-2c262e2d98f6 ==============================
[0m14:01:47.561222 [info ] [MainThread]: Running with dbt=1.4.7
[0m14:01:47.564285 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m14:01:47.564545 [debug] [MainThread]: Tracking: tracking
[0m14:01:47.566861 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90d0f5cf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90d1838b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90d182680>]}
[0m14:01:47.596892 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m14:01:47.747291 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:01:47.747553 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:01:47.755996 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90c5555a0>]}
[0m14:01:47.775122 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90c511300>]}
[0m14:01:47.775550 [info ] [MainThread]: Found 74 models, 8 tests, 0 snapshots, 0 analyses, 527 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m14:01:47.775829 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90c5114e0>]}
[0m14:01:47.779077 [info ] [MainThread]: 
[0m14:01:47.780824 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:01:47.784649 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m14:01:47.793734 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:01:48.074699 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m14:01:48.078251 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.083767 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m14:01:48.084248 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m14:01:48.089526 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m14:01:48.097511 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.107920 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90c579360>]}
[0m14:01:48.108579 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m14:01:48.108855 [info ] [MainThread]: 
[0m14:01:48.112896 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m14:01:48.113233 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m14:01:48.114093 [info ] [Thread-1 (]: 1 of 74 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m14:01:48.114930 [info ] [Thread-2 (]: 2 of 74 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m14:01:48.115809 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m14:01:48.116582 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m14:01:48.117002 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m14:01:48.117438 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m14:01:48.117849 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m14:01:48.176181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m14:01:48.176945 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m14:01:48.184459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.215075 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.220817 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.232662 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.244570 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.246287 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.253672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.284115 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m14:01:48.287587 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-04-10 14:01:48.128999 => 2024-04-10 14:01:48.287361
[0m14:01:48.287964 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m14:01:48.320910 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m14:01:48.325324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'period') AS period, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )
  )...
[0m14:01:48.339516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.347767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m14:01:48.351485 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.352703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m14:01:48.354055 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m14:01:48.355917 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.359308 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m14:01:48.362097 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.363418 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m14:01:48.366155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.378666 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.389381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m14:01:48.392934 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.398316 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.399096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.400636 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-04-10 14:01:48.288087 => 2024-04-10 14:01:48.400559
[0m14:01:48.403549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.404725 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b61270>]}
[0m14:01:48.406322 [info ] [Thread-1 (]: 1 of 74 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.29s]
[0m14:01:48.408668 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m14:01:48.409147 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m14:01:48.410000 [info ] [Thread-1 (]: 3 of 74 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m14:01:48.411619 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m14:01:48.411992 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m14:01:48.412162 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m14:01:48.416544 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m14:01:48.417277 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.420469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.425041 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.431775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.432932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.441667 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m14:01:48.442796 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-04-10 14:01:48.118149 => 2024-04-10 14:01:48.442479
[0m14:01:48.443381 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m14:01:48.448712 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m14:01:48.450022 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.454216 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.454947 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )
  )...
[0m14:01:48.464839 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.467097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.469408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.472688 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m14:01:48.473889 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.484055 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m14:01:48.485036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.486919 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m14:01:48.488112 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-04-10 14:01:48.412260 => 2024-04-10 14:01:48.487949
[0m14:01:48.488656 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m14:01:48.493282 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m14:01:48.494095 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.497533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m14:01:48.499689 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
JSONExtractString(_airbyte_data, 'description') AS description, 
JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'section') AS section, 
JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )
  )...
[0m14:01:48.503240 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.504565 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m14:01:48.508309 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.512252 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m14:01:48.513485 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.519138 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m14:01:48.520165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.522221 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-04-10 14:01:48.443773 => 2024-04-10 14:01:48.522137
[0m14:01:48.523268 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b611e0>]}
[0m14:01:48.523819 [info ] [Thread-2 (]: 2 of 74 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.41s]
[0m14:01:48.524230 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m14:01:48.524601 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m14:01:48.525650 [info ] [Thread-2 (]: 4 of 74 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m14:01:48.526541 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.527367 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m14:01:48.528554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m14:01:48.528950 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m14:01:48.530741 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m14:01:48.535309 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m14:01:48.537088 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.541776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m14:01:48.545419 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.547279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m14:01:48.548184 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.553111 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.553836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.558548 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m14:01:48.563390 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.565003 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-04-10 14:01:48.488990 => 2024-04-10 14:01:48.564935
[0m14:01:48.565687 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.566521 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b60bb0>]}
[0m14:01:48.569294 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.570321 [info ] [Thread-1 (]: 3 of 74 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.16s]
[0m14:01:48.572422 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m14:01:48.572897 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m14:01:48.573767 [info ] [Thread-1 (]: 5 of 74 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m14:01:48.574922 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m14:01:48.575199 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m14:01:48.575373 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m14:01:48.579935 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m14:01:48.582216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.585310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.591811 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.595478 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.597598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.604055 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.606448 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.617315 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m14:01:48.618783 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-04-10 14:01:48.531277 => 2024-04-10 14:01:48.618464
[0m14:01:48.619574 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m14:01:48.628803 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m14:01:48.629729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.632452 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.634407 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
JSONExtractString(_airbyte_data, 'installs') AS installs, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )
  )...
[0m14:01:48.638412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.651846 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m14:01:48.652630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.655940 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m14:01:48.657076 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-04-10 14:01:48.575485 => 2024-04-10 14:01:48.656971
[0m14:01:48.657468 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m14:01:48.662208 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m14:01:48.663128 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.665772 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m14:01:48.667218 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )
  )...
[0m14:01:48.670667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.674544 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m14:01:48.679598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.680775 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m14:01:48.682001 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.685163 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m14:01:48.686353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.690069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m14:01:48.693960 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.695179 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m14:01:48.696586 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.698238 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-04-10 14:01:48.620024 => 2024-04-10 14:01:48.698163
[0m14:01:48.699504 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b60d90>]}
[0m14:01:48.700418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.701007 [info ] [Thread-2 (]: 4 of 74 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.17s]
[0m14:01:48.704172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m14:01:48.704653 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m14:01:48.705844 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m14:01:48.707245 [info ] [Thread-2 (]: 6 of 74 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m14:01:48.708009 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m14:01:48.708919 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.709215 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m14:01:48.710826 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m14:01:48.711441 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m14:01:48.718173 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m14:01:48.721147 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.725219 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m14:01:48.727713 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.734971 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.735678 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.737483 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-04-10 14:01:48.657750 => 2024-04-10 14:01:48.737410
[0m14:01:48.738365 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27272b0>]}
[0m14:01:48.738851 [info ] [Thread-1 (]: 5 of 74 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.16s]
[0m14:01:48.739340 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m14:01:48.739767 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m14:01:48.740628 [info ] [Thread-1 (]: 7 of 74 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m14:01:48.741876 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m14:01:48.742205 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m14:01:48.742392 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m14:01:48.746070 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m14:01:48.748614 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.751488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.762714 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.765140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.766025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.771174 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.773141 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.788680 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m14:01:48.789790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.792484 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.794851 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-04-10 14:01:48.712617 => 2024-04-10 14:01:48.794660
[0m14:01:48.795259 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m14:01:48.801156 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m14:01:48.801635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name != 'screen_view'
  )...
[0m14:01:48.802813 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.805476 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.812157 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.821313 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:48.828004 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m14:01:48.832121 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m14:01:48.833831 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-04-10 14:01:48.742549 => 2024-04-10 14:01:48.833640
[0m14:01:48.834403 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m14:01:48.897436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m14:01:48.898842 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m14:01:48.900583 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m14:01:48.902722 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )
  )...
[0m14:01:48.904836 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.908068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m14:01:48.911448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.912842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m14:01:48.914093 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.917464 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m14:01:48.918719 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.923133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m14:01:48.923862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.926458 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m14:01:48.928529 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.930104 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-04-10 14:01:48.795382 => 2024-04-10 14:01:48.930031
[0m14:01:48.930703 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.931540 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2605240>]}
[0m14:01:48.935069 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m14:01:48.935919 [info ] [Thread-2 (]: 6 of 74 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.22s]
[0m14:01:48.937307 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m14:01:48.938051 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m14:01:48.938530 [info ] [Thread-2 (]: 8 of 74 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m14:01:48.939856 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m14:01:48.940706 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.941000 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m14:01:48.942076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m14:01:48.942430 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m14:01:48.947552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m14:01:48.949504 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.956152 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.957005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m14:01:48.961108 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.966473 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:48.968147 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-04-10 14:01:48.834655 => 2024-04-10 14:01:48.968070
[0m14:01:48.968737 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80f0c10>]}
[0m14:01:48.969818 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.969100 [info ] [Thread-1 (]: 7 of 74 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.23s]
[0m14:01:48.972933 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m14:01:48.973571 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m14:01:48.975321 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m14:01:48.976360 [info ] [Thread-1 (]: 9 of 74 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m14:01:48.977199 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m14:01:48.977484 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m14:01:48.977690 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m14:01:48.982610 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m14:01:48.983818 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.986777 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:48.991386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:48.994634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:48.997390 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.008106 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.016633 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.017077 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m14:01:49.019110 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-04-10 14:01:48.943662 => 2024-04-10 14:01:49.018948
[0m14:01:49.019662 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m14:01:49.025408 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m14:01:49.026178 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.028070 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.029828 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m14:01:49.035389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.046035 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m14:01:49.047107 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-04-10 14:01:48.977815 => 2024-04-10 14:01:49.046866
[0m14:01:49.047696 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m14:01:49.055299 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m14:01:49.056373 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:49.060553 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m14:01:49.062463 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )
  )...
[0m14:01:49.064928 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.066677 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m14:01:49.071510 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.075101 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m14:01:49.076765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.080451 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m14:01:49.083268 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.083818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.084778 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m14:01:49.086400 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m14:01:49.090276 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.094102 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m14:01:49.094893 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.099297 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m14:01:49.100395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.102634 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-04-10 14:01:49.019830 => 2024-04-10 14:01:49.102493
[0m14:01:49.103781 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f82444f0>]}
[0m14:01:49.104506 [info ] [Thread-2 (]: 8 of 74 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.16s]
[0m14:01:49.105177 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m14:01:49.106063 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m14:01:49.107618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.106655 [info ] [Thread-2 (]: 10 of 74 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m14:01:49.109500 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m14:01:49.110119 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m14:01:49.110879 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m14:01:49.111172 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m14:01:49.116552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m14:01:49.117646 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.124322 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m14:01:49.129351 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.130496 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.132119 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-04-10 14:01:49.047918 => 2024-04-10 14:01:49.132043
[0m14:01:49.136530 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.137557 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80f31c0>]}
[0m14:01:49.139415 [info ] [Thread-1 (]: 9 of 74 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.16s]
[0m14:01:49.139920 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m14:01:49.140289 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m14:01:49.141255 [info ] [Thread-1 (]: 11 of 74 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m14:01:49.142189 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m14:01:49.142515 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m14:01:49.143140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.143400 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m14:01:49.146560 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.153252 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m14:01:49.161656 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.163821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.165376 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.170445 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.172622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.179279 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m14:01:49.180856 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.183790 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.185393 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-04-10 14:01:49.111393 => 2024-04-10 14:01:49.185209
[0m14:01:49.186006 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m14:01:49.191400 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m14:01:49.192467 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )
  )...
[0m14:01:49.198055 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.199855 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.204673 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.211241 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m14:01:49.212172 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.217353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m14:01:49.218528 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-04-10 14:01:49.147209 => 2024-04-10 14:01:49.218376
[0m14:01:49.219051 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m14:01:49.223373 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m14:01:49.224421 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.225497 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m14:01:49.226557 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )
  )...
[0m14:01:49.229760 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.233057 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m14:01:49.235637 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.236220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.238998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m14:01:49.240856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m14:01:49.244844 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.245793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.246904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m14:01:49.251114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m14:01:49.255679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.256363 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.261600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m14:01:49.263497 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-04-10 14:01:49.186206 => 2024-04-10 14:01:49.263435
[0m14:01:49.265083 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80c2350>]}
[0m14:01:49.265698 [info ] [Thread-2 (]: 10 of 74 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.16s]
[0m14:01:49.267028 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.267462 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m14:01:49.268937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m14:01:49.269580 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m14:01:49.271580 [info ] [Thread-2 (]: 12 of 74 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m14:01:49.272849 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m14:01:49.273304 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m14:01:49.274309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.275038 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m14:01:49.279420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m14:01:49.283771 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m14:01:49.288757 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.290266 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-04-10 14:01:49.219260 => 2024-04-10 14:01:49.290174
[0m14:01:49.291409 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80f2050>]}
[0m14:01:49.292912 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.292183 [info ] [Thread-1 (]: 11 of 74 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.15s]
[0m14:01:49.297242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.298130 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m14:01:49.300283 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m14:01:49.300992 [info ] [Thread-1 (]: 13 of 74 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m14:01:49.302706 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m14:01:49.303069 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m14:01:49.303254 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m14:01:49.307016 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m14:01:49.307744 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.310986 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.319571 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.321045 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.322223 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.327073 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.329113 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.337985 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m14:01:49.339220 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.339866 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-04-10 14:01:49.279975 => 2024-04-10 14:01:49.339759
[0m14:01:49.342242 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.342942 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m14:01:49.350684 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m14:01:49.351159 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )
  )...
[0m14:01:49.352300 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.354659 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.361624 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.362773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.370015 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m14:01:49.373021 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m14:01:49.374554 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-04-10 14:01:49.303355 => 2024-04-10 14:01:49.374395
[0m14:01:49.374972 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m14:01:49.379351 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m14:01:49.380305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.382356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m14:01:49.383692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )
  )...
[0m14:01:49.386564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.389403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m14:01:49.393289 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.394713 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m14:01:49.395519 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.399931 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m14:01:49.403993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.404542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.405942 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m14:01:49.410762 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m14:01:49.416164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.417912 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-04-10 14:01:49.344153 => 2024-04-10 14:01:49.417832
[0m14:01:49.418904 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f82445e0>]}
[0m14:01:49.419484 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.420143 [info ] [Thread-2 (]: 12 of 74 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.15s]
[0m14:01:49.424262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m14:01:49.424959 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m14:01:49.426068 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:01:49.426607 [info ] [Thread-2 (]: 14 of 74 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m14:01:49.428885 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m14:01:49.429756 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.430184 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m14:01:49.431586 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m14:01:49.432252 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:01:49.439099 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m14:01:49.439927 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.445400 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m14:01:49.450193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.451791 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-04-10 14:01:49.375094 => 2024-04-10 14:01:49.451698
[0m14:01:49.452946 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f277da20>]}
[0m14:01:49.453935 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.454513 [info ] [Thread-1 (]: 13 of 74 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.15s]
[0m14:01:49.459197 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m14:01:49.458558 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.459714 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m14:01:49.461616 [info ] [Thread-1 (]: 15 of 74 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m14:01:49.462483 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m14:01:49.462954 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m14:01:49.463245 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m14:01:49.468192 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m14:01:49.470106 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.472401 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.477543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.484111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.485164 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.486938 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.493006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.495533 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.496507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.507391 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m14:01:49.508845 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-10 14:01:49.435115 => 2024-04-10 14:01:49.508640
[0m14:01:49.509232 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:01:49.514682 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m14:01:49.516104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.518119 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.519701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m14:01:49.523914 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.539543 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m14:01:49.540618 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.544729 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:01:49.545133 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-04-10 14:01:49.463427 => 2024-04-10 14:01:49.545002
[0m14:01:49.546906 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m14:01:49.551007 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m14:01:49.552946 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
JSONExtractString(_airbyte_data, 'created') AS created, 
JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'objective') AS objective, 
JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
JSONExtractString(_airbyte_data, 'status') AS status, 
JSONExtractString(_airbyte_data, 'updated') AS updated, 
JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )
  )...
[0m14:01:49.554280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.555806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:01:49.559556 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.562723 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m14:01:49.566769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.567874 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m14:01:49.568644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.573201 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m14:01:49.574008 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.578877 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m14:01:49.579782 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.582512 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m14:01:49.585672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.586432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.587913 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-10 14:01:49.509330 => 2024-04-10 14:01:49.587827
[0m14:01:49.591219 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m14:01:49.592329 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8adb670>]}
[0m14:01:49.593849 [info ] [Thread-2 (]: 14 of 74 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.16s]
[0m14:01:49.594460 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:01:49.594944 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m14:01:49.596792 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.598227 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m14:01:49.595846 [info ] [Thread-2 (]: 16 of 74 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m14:01:49.599982 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m14:01:49.600237 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m14:01:49.600399 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m14:01:49.604106 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m14:01:49.605422 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.610482 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m14:01:49.613184 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.618103 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.619533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.621109 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-04-10 14:01:49.547209 => 2024-04-10 14:01:49.621014
[0m14:01:49.622167 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80d4550>]}
[0m14:01:49.623227 [info ] [Thread-1 (]: 15 of 74 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.16s]
[0m14:01:49.623662 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m14:01:49.624091 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m14:01:49.624908 [info ] [Thread-1 (]: 17 of 74 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m14:01:49.626294 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m14:01:49.626947 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.627260 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m14:01:49.629762 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.630576 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m14:01:49.640801 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m14:01:49.642642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.644566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.652456 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.658988 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.669105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.673503 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m14:01:49.675364 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-10 14:01:49.600489 => 2024-04-10 14:01:49.675193
[0m14:01:49.675892 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m14:01:49.681883 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m14:01:49.683088 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.685658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.687310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'moat') AS moat, 
JSONExtractString(_airbyte_data, 'playable') AS playable, 
JSONExtractString(_airbyte_data, 'romi') AS romi, 
JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
JSONExtractString(_airbyte_data, 'tps') AS tps, 
JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )
  )...
[0m14:01:49.695107 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.697565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.699506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.702692 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m14:01:49.706248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.707417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m14:01:49.708083 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.721786 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m14:01:49.722653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.726354 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m14:01:49.727568 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-04-10 14:01:49.632896 => 2024-04-10 14:01:49.727409
[0m14:01:49.728190 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m14:01:49.799949 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m14:01:49.801033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m14:01:49.802352 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m14:01:49.803678 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Date') AS Date, 
JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )
  )...
[0m14:01:49.805864 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.810481 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m14:01:49.815046 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.816566 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-10 14:01:49.676272 => 2024-04-10 14:01:49.816498
[0m14:01:49.817330 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f26a6d10>]}
[0m14:01:49.818225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.819156 [info ] [Thread-2 (]: 16 of 74 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.22s]
[0m14:01:49.823068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m14:01:49.823767 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m14:01:49.825636 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m14:01:49.826246 [info ] [Thread-2 (]: 18 of 74 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m14:01:49.828750 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m14:01:49.829309 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m14:01:49.830049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.830474 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m14:01:49.831862 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m14:01:49.836026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m14:01:49.840452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.844908 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m14:01:49.849311 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.851060 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m14:01:49.853131 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.858146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.859276 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.868985 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m14:01:49.871860 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.872981 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:49.875768 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )  LIMIT 1
  ...
[0m14:01:49.877667 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-04-10 14:01:49.728489 => 2024-04-10 14:01:49.877593
[0m14:01:49.880440 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8ade350>]}
[0m14:01:49.882739 [info ] [Thread-1 (]: 17 of 74 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.25s]
[0m14:01:49.883351 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m14:01:49.884057 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m14:01:49.885132 [info ] [Thread-1 (]: 19 of 74 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m14:01:49.886379 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m14:01:49.886672 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m14:01:49.886985 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m14:01:49.899609 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:49.902408 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m14:01:49.905429 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:01:49.907994 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-04-10 14:01:49.887132 => 2024-04-10 14:01:49.907807
[0m14:01:49.908445 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m14:01:49.919103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.981477 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m14:01:49.983614 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.986140 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-04-10 14:01:49.832518 => 2024-04-10 14:01:49.985900
[0m14:01:49.986708 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m14:01:49.992326 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m14:01:49.993373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:49.997487 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:49.999115 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )
  )...
[0m14:01:50.003574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.013186 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.022712 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.024224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.028195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m14:01:50.031891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.043664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.050679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m14:01:50.060704 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m14:01:50.064820 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.070618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m14:01:50.076481 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.077829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m14:01:50.081512 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.085856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m14:01:50.086739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:50.093002 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.094518 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.096277 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-04-10 14:01:49.986976 => 2024-04-10 14:01:50.096161
[0m14:01:50.097080 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f26a5e70>]}
[0m14:01:50.097616 [info ] [Thread-2 (]: 18 of 74 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.27s]
[0m14:01:50.098155 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m14:01:50.098842 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m14:01:50.099868 [info ] [Thread-2 (]: 20 of 74 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m14:01:50.100748 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m14:01:50.100926 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m14:01:50.101126 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m14:01:50.105584 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m14:01:50.107377 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.107879 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-04-10 14:01:50.101580 => 2024-04-10 14:01:50.107784
[0m14:01:50.110160 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m14:01:50.110870 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m14:01:50.121148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.122596 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
      ...
[0m14:01:50.128051 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.135071 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.137638 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.138874 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:50.142479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.144959 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.149728 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.154654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.157545 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m14:01:50.173932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.177283 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.184444 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.186107 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m14:01:50.186653 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
      ...
[0m14:01:50.200925 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.202337 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:50.208842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m14:01:50.212801 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.218420 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.220340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:50.227966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.232293 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.236806 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.240687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m14:01:50.243902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.246224 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-04-10 14:01:49.908567 => 2024-04-10 14:01:50.246138
[0m14:01:50.247113 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8117760>]}
[0m14:01:50.247664 [info ] [Thread-1 (]: 19 of 74 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.36s]
[0m14:01:50.248263 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m14:01:50.248692 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m14:01:50.249343 [info ] [Thread-1 (]: 21 of 74 START sql view model test.incremental_adjust_events_default_events .... [RUN]
[0m14:01:50.250376 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m14:01:50.250671 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m14:01:50.250870 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m14:01:50.255960 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m14:01:50.256779 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m14:01:50.260131 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.261759 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-04-10 14:01:50.250985 => 2024-04-10 14:01:50.261343
[0m14:01:50.262817 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m14:01:50.269886 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m14:01:50.271133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.273326 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:50.275038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */


  create view test.incremental_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_adjust_events_default_events

  )...
[0m14:01:50.284363 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.288848 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.290304 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.294556 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m14:01:50.295678 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.301904 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m14:01:50.303243 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.306590 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events to test.incremental_adjust_events_default_events__dbt_backup 
  
  ...
[0m14:01:50.308953 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.312305 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-04-10 14:01:50.111720 => 2024-04-10 14:01:50.312188
[0m14:01:50.313646 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b60820>]}
[0m14:01:50.314836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.319283 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    drop table if exists test.incremental_adjust_events_default_events 
  
  ...
[0m14:01:50.315909 [info ] [Thread-2 (]: 20 of 74 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.21s]
[0m14:01:50.320731 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m14:01:50.321162 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m14:01:50.321895 [info ] [Thread-2 (]: 22 of 74 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m14:01:50.323585 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m14:01:50.324285 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m14:01:50.325010 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.325368 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m14:01:50.326672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    rename table test.incremental_adjust_events_default_events__dbt_tmp to test.incremental_adjust_events_default_events 
  
  ...
[0m14:01:50.332710 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m14:01:50.335162 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-04-10 14:01:50.326943 => 2024-04-10 14:01:50.334909
[0m14:01:50.335801 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m14:01:50.344233 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.344970 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.352355 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m14:01:50.353221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.358468 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.362250 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.364521 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-04-10 14:01:50.263578 => 2024-04-10 14:01:50.364429
[0m14:01:50.365898 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.367034 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90c579390>]}
[0m14:01:50.370641 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.371790 [info ] [Thread-1 (]: 21 of 74 OK created sql view model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.12s]
[0m14:01:50.375363 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.376070 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m14:01:50.377289 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m14:01:50.377887 [info ] [Thread-1 (]: 23 of 74 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m14:01:50.379219 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m14:01:50.380194 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m14:01:50.380540 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m14:01:50.388614 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m14:01:50.389464 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.392824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m14:01:50.394192 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-04-10 14:01:50.380674 => 2024-04-10 14:01:50.394012
[0m14:01:50.394822 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m14:01:50.406420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.413910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.415606 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.419389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.423770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.430527 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.434350 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.438826 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.440696 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.442666 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m14:01:50.443617 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.445697 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m14:01:50.447871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
      ...
[0m14:01:50.462638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.464358 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:50.466174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.469882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.475328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.477410 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m14:01:50.479188 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
      ...
[0m14:01:50.496972 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.499228 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:50.508487 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:50.512544 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.519725 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.521841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:50.532408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.536355 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.540404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.544048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m14:01:50.544961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m14:01:50.549237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.553024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.555125 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-04-10 14:01:50.336320 => 2024-04-10 14:01:50.555060
[0m14:01:50.556024 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.556664 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f815fe50>]}
[0m14:01:50.558469 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:50.559381 [info ] [Thread-2 (]: 22 of 74 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.23s]
[0m14:01:50.561310 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m14:01:50.561825 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m14:01:50.563073 [info ] [Thread-2 (]: 24 of 74 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m14:01:50.564328 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m14:01:50.564733 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m14:01:50.564968 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m14:01:50.571211 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m14:01:50.572093 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.576640 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.577871 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-04-10 14:01:50.565091 => 2024-04-10 14:01:50.577707
[0m14:01:50.578341 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m14:01:50.586142 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.587100 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.592898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m14:01:50.594565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.599509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.600957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.604289 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-04-10 14:01:50.395131 => 2024-04-10 14:01:50.604198
[0m14:01:50.605254 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2669b40>]}
[0m14:01:50.606855 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.605964 [info ] [Thread-1 (]: 23 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.23s]
[0m14:01:50.610266 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.610907 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m14:01:50.615296 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.616196 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m14:01:50.618670 [info ] [Thread-1 (]: 25 of 74 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m14:01:50.619973 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m14:01:50.621679 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.622425 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m14:01:50.626427 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m14:01:50.626912 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m14:01:50.632480 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m14:01:50.633777 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-04-10 14:01:50.627638 => 2024-04-10 14:01:50.633642
[0m14:01:50.634136 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m14:01:50.643406 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.651040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.655647 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.657487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.661137 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.669263 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.670352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.672443 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m14:01:50.675387 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_install:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.682057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.683953 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
      ...
[0m14:01:50.687691 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.689977 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m14:01:50.707702 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.708493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.711863 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.714367 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:50.722583 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.724466 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m14:01:50.725017 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
      ...
[0m14:01:50.741847 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.743344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

      delete from test.incremental_appmetrica_events_default_install where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:50.757666 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:50.761478 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.767926 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.769997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:50.780068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.785022 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.789340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.793291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m14:01:50.794072 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m14:01:50.799634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.801624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.804557 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-04-10 14:01:50.578481 => 2024-04-10 14:01:50.804459
[0m14:01:50.805936 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27646d0>]}
[0m14:01:50.806919 [info ] [Thread-2 (]: 24 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.24s]
[0m14:01:50.808019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.808593 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m14:01:50.810660 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        insert into test.incremental_appmetrica_events_default_install select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:50.811506 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m14:01:50.814689 [info ] [Thread-2 (]: 26 of 74 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m14:01:50.816226 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m14:01:50.817215 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m14:01:50.818134 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m14:01:50.824927 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m14:01:50.826104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.832467 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-04-10 14:01:50.818800 => 2024-04-10 14:01:50.832265
[0m14:01:50.834925 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.835662 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m14:01:50.844295 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.845777 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.851711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_distributed_new_data 
  ...
[0m14:01:50.854307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.857679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.858472 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.863141 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-04-10 14:01:50.634241 => 2024-04-10 14:01:50.862973
[0m14:01:50.864213 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90c579390>]}
[0m14:01:50.869733 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:50.872604 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:50.875306 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:50.879725 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.883803 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m14:01:50.906314 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:50.909612 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:50.914938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:50.916655 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m14:01:50.917056 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
      ...
[0m14:01:50.953327 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:50.954499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:51.000604 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m14:01:51.003640 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.008704 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.010502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:51.019531 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.022276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:51.027093 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.032038 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m14:01:51.035679 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.038530 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-04-10 14:01:50.837384 => 2024-04-10 14:01:51.038430
[0m14:01:51.039393 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2637190>]}
[0m14:01:51.628094 [info ] [Thread-1 (]: 25 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.24s]
[0m14:01:51.630260 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m14:01:51.629570 [info ] [Thread-2 (]: 26 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.22s]
[0m14:01:51.631903 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m14:01:51.632848 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m14:01:51.633357 [info ] [Thread-1 (]: 27 of 74 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m14:01:51.634073 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m14:01:51.635317 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m14:01:51.636260 [info ] [Thread-2 (]: 28 of 74 START sql view model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m14:01:51.636909 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m14:01:51.637911 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m14:01:51.638425 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m14:01:51.638691 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m14:01:51.643028 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m14:01:51.643775 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m14:01:51.650445 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-04-10 14:01:51.638878 => 2024-04-10 14:01:51.650200
[0m14:01:51.653397 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m14:01:51.654398 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m14:01:51.665991 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-04-10 14:01:51.645173 => 2024-04-10 14:01:51.665760
[0m14:01:51.666498 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.667211 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m14:01:51.677860 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m14:01:51.679052 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.684783 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.686716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */


  create view test.incremental_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  )...
[0m14:01:51.693053 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.695838 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:51.697348 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.701599 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:51.705870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m14:01:51.711198 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.712272 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.714635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles to test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m14:01:51.723250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m14:01:51.728802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.810292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m14:01:51.813063 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    drop table if exists test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m14:01:51.816598 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.821988 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.823619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    rename table test.incremental_appmetrica_registry_default_profiles__dbt_tmp to test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m14:01:51.824292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.826738 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m14:01:51.827508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
      ...
[0m14:01:51.829800 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.834392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m14:01:51.838153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.839683 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-04-10 14:01:51.669307 => 2024-04-10 14:01:51.839604
[0m14:01:51.840393 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2543f40>]}
[0m14:01:51.841409 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.840920 [info ] [Thread-2 (]: 28 of 74 OK created sql view model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.20s]
[0m14:01:51.843518 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:51.843970 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m14:01:51.845360 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m14:01:51.846959 [info ] [Thread-2 (]: 29 of 74 START sql view model test.incremental_mt_datestat_default_banners ..... [RUN]
[0m14:01:51.848833 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m14:01:51.849099 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m14:01:51.849259 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m14:01:51.852734 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m14:01:51.853690 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-04-10 14:01:51.849347 => 2024-04-10 14:01:51.853547
[0m14:01:51.854142 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m14:01:51.858657 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m14:01:51.859807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */


  create view test.incremental_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_banners

  )...
[0m14:01:51.869163 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.872209 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m14:01:51.875856 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.877312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners to test.incremental_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m14:01:51.882938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.888108 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    drop table if exists test.incremental_mt_datestat_default_banners 
  
  ...
[0m14:01:51.891795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:51.893050 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    rename table test.incremental_mt_datestat_default_banners__dbt_tmp to test.incremental_mt_datestat_default_banners 
  
  ...
[0m14:01:51.894325 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m14:01:51.897651 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.902053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.906394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m14:01:51.907384 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.910618 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:51.912880 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.914827 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-04-10 14:01:51.854356 => 2024-04-10 14:01:51.914744
[0m14:01:51.915609 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f81753c0>]}
[0m14:01:51.916177 [info ] [Thread-2 (]: 29 of 74 OK created sql view model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.07s]
[0m14:01:51.916653 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m14:01:51.917040 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m14:01:51.917523 [info ] [Thread-2 (]: 30 of 74 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m14:01:51.919079 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m14:01:51.919360 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m14:01:51.919953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.920425 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m14:01:51.923286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:51.927700 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m14:01:51.930210 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-04-10 14:01:51.923801 => 2024-04-10 14:01:51.929964
[0m14:01:51.930874 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m14:01:51.938105 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.939245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.944923 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m14:01:51.947067 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.951039 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:51.952887 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.955305 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-04-10 14:01:51.655116 => 2024-04-10 14:01:51.955235
[0m14:01:51.956554 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b23b50>]}
[0m14:01:51.957400 [info ] [Thread-1 (]: 27 of 74 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.32s]
[0m14:01:51.958100 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m14:01:51.958886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.959340 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m14:01:51.962513 [debug] [Thread-2 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:51.964011 [info ] [Thread-1 (]: 31 of 74 START sql view model test.incremental_mt_datestat_default_campaigns ... [RUN]
[0m14:01:51.968427 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:51.969445 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m14:01:51.970562 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m14:01:51.971141 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m14:01:51.975304 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m14:01:51.976266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:51.978495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m14:01:51.979959 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-04-10 14:01:51.971353 => 2024-04-10 14:01:51.979627
[0m14:01:51.981043 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m14:01:51.986910 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m14:01:51.987399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */


  create view test.incremental_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  )...
[0m14:01:51.994783 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.001715 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m14:01:52.002776 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:52.006854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.011477 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.012727 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.014523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns to test.incremental_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m14:01:52.016447 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m14:01:52.018197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
      ...
[0m14:01:52.021321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.024523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    drop table if exists test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m14:01:52.028392 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.030829 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    rename table test.incremental_mt_datestat_default_campaigns__dbt_tmp to test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m14:01:52.031754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.034257 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:52.036312 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.040690 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m14:01:52.045574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.047677 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-04-10 14:01:51.981794 => 2024-04-10 14:01:52.047555
[0m14:01:52.048546 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2728640>]}
[0m14:01:52.049181 [info ] [Thread-1 (]: 31 of 74 OK created sql view model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.08s]
[0m14:01:52.049673 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m14:01:52.050077 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:01:52.050929 [info ] [Thread-1 (]: 32 of 74 START sql view model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m14:01:52.051921 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m14:01:52.052237 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m14:01:52.052419 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:01:52.056511 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m14:01:52.057540 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-10 14:01:52.052519 => 2024-04-10 14:01:52.057306
[0m14:01:52.057968 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:01:52.062927 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m14:01:52.064446 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */


  create view test.incremental_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  )...
[0m14:01:52.073092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.078916 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:01:52.081443 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m14:01:52.085249 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.086265 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.089201 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult to test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:01:52.092030 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.092698 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.094200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:52.098007 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m14:01:52.103499 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.104675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult__dbt_tmp to test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m14:01:52.106007 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.108977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.109779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.116399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m14:01:52.117206 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.121614 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m14:01:52.125469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.126739 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-10 14:01:52.058118 => 2024-04-10 14:01:52.126683
[0m14:01:52.127356 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2729b70>]}
[0m14:01:52.127932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.130849 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-04-10 14:01:51.931108 => 2024-04-10 14:01:52.130762
[0m14:01:52.128423 [info ] [Thread-1 (]: 32 of 74 OK created sql view model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.08s]
[0m14:01:52.132335 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27f4190>]}
[0m14:01:52.133058 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:01:52.133909 [info ] [Thread-2 (]: 30 of 74 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.21s]
[0m14:01:52.134779 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m14:01:52.135639 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m14:01:52.136446 [info ] [Thread-1 (]: 33 of 74 START sql view model test.incremental_vkads_datestat_default_ad_plans . [RUN]
[0m14:01:52.137661 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m14:01:52.138680 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m14:01:52.139407 [info ] [Thread-2 (]: 34 of 74 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m14:01:52.139930 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m14:01:52.140939 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m14:01:52.142104 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m14:01:52.142633 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m14:01:52.147922 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m14:01:52.148511 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m14:01:52.153430 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m14:01:52.154119 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-10 14:01:52.149091 => 2024-04-10 14:01:52.154003
[0m14:01:52.154582 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-04-10 14:01:52.142958 => 2024-04-10 14:01:52.154448
[0m14:01:52.155094 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m14:01:52.155458 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m14:01:52.167482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.173707 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m14:01:52.177169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */


  create view test.incremental_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  )...
[0m14:01:52.183378 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.188065 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.194413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:52.201823 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.206289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m14:01:52.210554 [debug] [Thread-2 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:52.216163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.219452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.220889 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans to test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m14:01:52.222071 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.225717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m14:01:52.227027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.233006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m14:01:52.237651 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.239543 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    rename table test.incremental_vkads_datestat_default_ad_plans__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m14:01:52.246305 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.254827 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m14:01:52.257342 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:52.263020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.264255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.267873 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-04-10 14:01:52.168045 => 2024-04-10 14:01:52.267795
[0m14:01:52.269215 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f81483a0>]}
[0m14:01:52.269872 [info ] [Thread-1 (]: 33 of 74 OK created sql view model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.13s]
[0m14:01:52.270383 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m14:01:52.270795 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m14:01:52.271188 [info ] [Thread-1 (]: 35 of 74 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m14:01:52.273378 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m14:01:52.274542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.275202 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m14:01:52.278993 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m14:01:52.280231 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m14:01:52.286642 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m14:01:52.287562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
      ...
[0m14:01:52.290205 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-04-10 14:01:52.281753 => 2024-04-10 14:01:52.289739
[0m14:01:52.291676 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m14:01:52.303567 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.304813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:52.307344 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:52.310889 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.318504 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.326536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.329849 [debug] [Thread-1 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:52.333864 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.337864 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.340334 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m14:01:52.352338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:52.355789 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.357251 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:52.360486 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.362100 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.364297 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:52.367102 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.369468 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m14:01:52.371010 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
      ...
[0m14:01:52.371792 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.377455 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.382186 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.383885 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.385423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:52.389459 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m14:01:52.394960 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.397268 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-10 14:01:52.155703 => 2024-04-10 14:01:52.397178
[0m14:01:52.397991 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80e9180>]}
[0m14:01:52.398410 [info ] [Thread-2 (]: 34 of 74 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.26s]
[0m14:01:52.398755 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m14:01:52.399037 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m14:01:52.399365 [info ] [Thread-2 (]: 36 of 74 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m14:01:52.400634 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m14:01:52.400995 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m14:01:52.401181 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m14:01:52.404888 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m14:01:52.406111 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-04-10 14:01:52.401289 => 2024-04-10 14:01:52.405909
[0m14:01:52.406699 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m14:01:52.412509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.418209 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.421722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.426987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:52.428079 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.434720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.439708 [debug] [Thread-2 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m14:01:52.444048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.445427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.447457 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:52.450805 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.453034 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m14:01:52.457975 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.461455 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.465822 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.469807 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m14:01:52.473467 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:52.474035 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.476686 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.480070 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-04-10 14:01:52.292746 => 2024-04-10 14:01:52.479985
[0m14:01:52.482994 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b38790>]}
[0m14:01:52.483914 [info ] [Thread-1 (]: 35 of 74 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.21s]
[0m14:01:52.484242 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m14:01:52.484511 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m14:01:52.484794 [info ] [Thread-1 (]: 37 of 74 START sql view model test.join_appmetrica_registry_app_profile_matching  [RUN]
[0m14:01:52.485950 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching'
[0m14:01:52.486295 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching)
[0m14:01:52.486975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.487366 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m14:01:52.488988 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m14:01:52.505250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m14:01:52.506777 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
      ...
[0m14:01:52.514023 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.522074 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m14:01:52.522956 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:52.525201 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6);
    ...
[0m14:01:52.530792 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.533237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m14:01:52.561166 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:52.564566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.571623 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.573569 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6
    ...
[0m14:01:52.583428 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.587449 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_a5ae1888_9257_4a70_8a77_2c262e2d98f6 
  ...
[0m14:01:52.593132 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.596706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m14:01:52.599240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m14:01:52.604443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m14:01:52.605241 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.608506 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-04-10 14:01:52.406811 => 2024-04-10 14:01:52.608432
[0m14:01:52.609813 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27f4190>]}
[0m14:01:52.610474 [info ] [Thread-2 (]: 36 of 74 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.21s]
[0m14:01:52.610922 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m14:01:52.611330 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m14:01:52.611751 [info ] [Thread-2 (]: 38 of 74 START sql view model test.join_appmetrica_events ...................... [RUN]
[0m14:01:52.612867 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m14:01:52.613394 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m14:01:52.614041 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m14:01:52.618623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m14:01:52.619888 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.623250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.629719 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.630473 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.633508 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"
[0m14:01:52.635799 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m14:01:52.638665 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching (compile): 2024-04-10 14:01:52.489319 => 2024-04-10 14:01:52.638475
[0m14:01:52.639229 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m14:01:52.645112 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"
[0m14:01:52.646071 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.647986 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m14:01:52.649616 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */


  create view test.join_appmetrica_registry_app_profile_matching__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )





  )...
[0m14:01:52.661415 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.665587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    drop table if exists test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  
  ...
[0m14:01:52.669796 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.671035 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    rename table test.join_appmetrica_registry_app_profile_matching to test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  
  ...
[0m14:01:52.675594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.678238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    drop table if exists test.join_appmetrica_registry_app_profile_matching 
  
  ...
[0m14:01:52.682943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.684399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */

    rename table test.join_appmetrica_registry_app_profile_matching__dbt_tmp to test.join_appmetrica_registry_app_profile_matching 
  
  ...
[0m14:01:52.687584 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.691684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching"} */
drop table if exists test.join_appmetrica_registry_app_profile_matching__dbt_backup 
  ...
[0m14:01:52.695939 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.698626 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching (execute): 2024-04-10 14:01:52.639394 => 2024-04-10 14:01:52.698551
[0m14:01:52.699370 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80d83a0>]}
[0m14:01:52.699841 [info ] [Thread-1 (]: 37 of 74 OK created sql view model test.join_appmetrica_registry_app_profile_matching  [[32mOK[0m in 0.21s]
[0m14:01:52.700250 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_app_profile_matching
[0m14:01:52.700590 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m14:01:52.701642 [info ] [Thread-1 (]: 39 of 74 START sql view model test.join_mt_datestat ............................ [RUN]
[0m14:01:52.702922 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m14:01:52.703443 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m14:01:52.703747 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m14:01:52.708765 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m14:01:52.716234 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.717578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m14:01:52.718798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m14:01:52.731259 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m14:01:52.732129 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.736360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m14:01:52.747415 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.752752 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.757739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.761145 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m14:01:52.763211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:52.771420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m14:01:52.772878 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.776580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.778421 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.782337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.783641 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.787651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m14:01:52.788409 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.792922 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m14:01:52.800045 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.803690 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.804609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.809542 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.811313 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.815106 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m14:01:52.815784 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.820381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m14:01:52.823966 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.830107 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.831502 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.835349 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.836994 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.840075 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m14:01:52.844026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.848939 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m14:01:52.849770 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.854240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:52.854895 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-04-10 14:01:52.703991 => 2024-04-10 14:01:52.854753
[0m14:01:52.857167 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m14:01:52.862310 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m14:01:52.863555 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:52.867340 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m14:01:52.868211 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


  create view test.join_mt_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    '' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    '' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    '' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    '' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id







  )...
[0m14:01:52.868742 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-04-10 14:01:52.614248 => 2024-04-10 14:01:52.868613
[0m14:01:52.870243 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m14:01:52.875169 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m14:01:52.875741 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


  create view test.join_appmetrica_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    '' AS visitId,
    '' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS visitId,
    '' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts







  )...
[0m14:01:52.935529 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m14:01:52.939342 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m14:01:52.943411 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:52.944499 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat to test.join_mt_datestat__dbt_backup 
  
  ...
[0m14:01:52.948883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.050754 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat 
  
  ...
[0m14:01:53.051644 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.18 seconds
[0m14:01:53.055372 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m14:01:53.059580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.060727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m14:01:53.061303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.063768 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat 
  
  ...
[0m14:01:53.065303 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.069204 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events 
  
  ...
[0m14:01:53.070389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.074839 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m14:01:53.075802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.078623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events 
  
  ...
[0m14:01:53.080691 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.082419 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-04-10 14:01:52.857802 => 2024-04-10 14:01:53.082291
[0m14:01:53.083361 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8e4fdc0>]}
[0m14:01:53.083951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.084888 [info ] [Thread-1 (]: 39 of 74 OK created sql view model test.join_mt_datestat ....................... [[32mOK[0m in 0.38s]
[0m14:01:53.089607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m14:01:53.090214 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m14:01:53.091501 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m14:01:53.092622 [info ] [Thread-1 (]: 40 of 74 START sql view model test.join_vkads_datestat ......................... [RUN]
[0m14:01:53.093619 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m14:01:53.094372 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.094735 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m14:01:53.096419 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-04-10 14:01:52.870475 => 2024-04-10 14:01:53.096346
[0m14:01:53.096978 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m14:01:53.097929 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f275fc10>]}
[0m14:01:53.103063 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m14:01:53.104237 [info ] [Thread-2 (]: 38 of 74 OK created sql view model test.join_appmetrica_events ................. [[32mOK[0m in 0.49s]
[0m14:01:53.105794 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m14:01:53.106508 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m14:01:53.107293 [info ] [Thread-2 (]: 41 of 74 START sql view model test.join_yd_datestat ............................ [RUN]
[0m14:01:53.108282 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m14:01:53.108665 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m14:01:53.109040 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m14:01:53.114960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m14:01:53.115937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.120698 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m14:01:53.125274 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.126974 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m14:01:53.131272 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.133800 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m14:01:53.136626 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.139541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m14:01:53.166018 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:53.173288 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m14:01:53.175501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:53.184561 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m14:01:53.194552 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.197540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:53.202778 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.208101 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.215340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.216498 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.220364 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m14:01:53.224048 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m14:01:53.226248 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-04-10 14:01:53.109288 => 2024-04-10 14:01:53.226096
[0m14:01:53.226713 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m14:01:53.233569 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m14:01:53.234609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.238081 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.239968 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


  create view test.join_yd_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    '' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps






  )...
[0m14:01:53.244116 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.247793 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m14:01:53.248325 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-04-10 14:01:53.098407 => 2024-04-10 14:01:53.248221
[0m14:01:53.248574 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m14:01:53.254598 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m14:01:53.255055 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


  create view test.join_vkads_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    '' AS productName,
    ad_plans.name AS adCampaignName,
    '' AS adGroupName,
    ad_plans.id AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS utmHash,
    '' AS adTitle1,
    '' AS adTitle2,
    '' AS adText,
    '' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id







  )...
[0m14:01:53.257591 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:53.261305 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m14:01:53.267876 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.269506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat to test.join_yd_datestat__dbt_backup 
  
  ...
[0m14:01:53.273774 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.278398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat 
  
  ...
[0m14:01:53.284815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:53.291838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.294074 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m14:01:53.296580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat 
  
  ...
[0m14:01:53.305888 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.306745 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.307897 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m14:01:53.312825 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m14:01:53.317911 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.318886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.322131 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat 
  
  ...
[0m14:01:53.323680 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-04-10 14:01:53.226948 => 2024-04-10 14:01:53.323618
[0m14:01:53.325931 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f275d0c0>]}
[0m14:01:53.326582 [info ] [Thread-2 (]: 41 of 74 OK created sql view model test.join_yd_datestat ....................... [[32mOK[0m in 0.22s]
[0m14:01:53.327158 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m14:01:53.327653 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m14:01:53.329116 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.330130 [info ] [Thread-2 (]: 42 of 74 START sql view model test.join_ym_events .............................. [RUN]
[0m14:01:53.332370 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat 
  
  ...
[0m14:01:53.333585 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m14:01:53.334961 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m14:01:53.335624 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m14:01:53.342171 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m14:01:53.342952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.351029 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m14:01:53.353911 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.355934 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m14:01:53.357259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.359183 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-04-10 14:01:53.248676 => 2024-04-10 14:01:53.359108
[0m14:01:53.359871 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f26c8ee0>]}
[0m14:01:53.361406 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.360499 [info ] [Thread-1 (]: 40 of 74 OK created sql view model test.join_vkads_datestat .................... [[32mOK[0m in 0.27s]
[0m14:01:53.364330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m14:01:53.365093 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m14:01:53.367218 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m14:01:53.369032 [info ] [Thread-1 (]: 43 of 74 START sql view model test.hash_registry_app_profile_matching .......... [RUN]
[0m14:01:53.370065 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_app_profile_matching'
[0m14:01:53.370304 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_app_profile_matching)
[0m14:01:53.370478 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m14:01:53.392574 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:53.407813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m14:01:53.413144 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_app_profile_matching')        
...
[0m14:01:53.422990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.426800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.428183 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.449458 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_app_profile_matching'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.450978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:53.456639 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m14:01:53.457923 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-04-10 14:01:53.335919 => 2024-04-10 14:01:53.457777
[0m14:01:53.458292 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m14:01:53.464653 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m14:01:53.465848 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.482362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


  create view test.join_ym_events__dbt_tmp 
  
  as (
    -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    NULL AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events






  )...
[0m14:01:53.485009 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_app_profile_matching"
[0m14:01:53.487254 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_app_profile_matching (compile): 2024-04-10 14:01:53.370580 => 2024-04-10 14:01:53.487063
[0m14:01:53.487748 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m14:01:53.493127 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_app_profile_matching"
[0m14:01:53.495702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */


  create view test.hash_registry_app_profile_matching__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_registry_app_profile_matching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id,

  assumeNotNull(CASE 







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    


FROM (

        (
            select

                toLowCardinality('join_appmetrica_registry_app_profile_matching')  as _dbt_source_relation,
                
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_app_profile_matching
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m14:01:53.515220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:53.518634 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m14:01:53.519812 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:53.523419 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    drop table if exists test.hash_registry_app_profile_matching__dbt_backup 
  
  ...
[0m14:01:53.525100 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.526361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events to test.join_ym_events__dbt_backup 
  
  ...
[0m14:01:53.531236 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.532077 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.533256 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    rename table test.hash_registry_app_profile_matching to test.hash_registry_app_profile_matching__dbt_backup 
  
  ...
[0m14:01:53.537240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events 
  
  ...
[0m14:01:53.543197 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.543950 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.545472 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events 
  
  ...
[0m14:01:53.550281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    drop table if exists test.hash_registry_app_profile_matching 
  
  ...
[0m14:01:53.554511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.555071 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.559230 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m14:01:53.560538 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */

    rename table test.hash_registry_app_profile_matching__dbt_tmp to test.hash_registry_app_profile_matching 
  
  ...
[0m14:01:53.566355 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.567123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.571017 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_app_profile_matching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_app_profile_matching"} */
drop table if exists test.hash_registry_app_profile_matching__dbt_backup 
  ...
[0m14:01:53.573209 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-04-10 14:01:53.458412 => 2024-04-10 14:01:53.573141
[0m14:01:53.575881 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b8c970>]}
[0m14:01:53.576862 [info ] [Thread-2 (]: 42 of 74 OK created sql view model test.join_ym_events ......................... [[32mOK[0m in 0.24s]
[0m14:01:53.577283 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m14:01:53.577669 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m14:01:53.578935 [info ] [Thread-2 (]: 44 of 74 START sql view model test.combine_datestat ............................ [RUN]
[0m14:01:53.580357 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.581242 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m14:01:53.582948 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_app_profile_matching (execute): 2024-04-10 14:01:53.487965 => 2024-04-10 14:01:53.582871
[0m14:01:53.583390 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m14:01:53.584182 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b8fb50>]}
[0m14:01:53.584719 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m14:01:53.585399 [info ] [Thread-1 (]: 43 of 74 OK created sql view model test.hash_registry_app_profile_matching ..... [[32mOK[0m in 0.21s]
[0m14:01:53.597102 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_app_profile_matching
[0m14:01:53.596378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m14:01:53.598281 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m14:01:53.600267 [info ] [Thread-1 (]: 45 of 74 START sql view model test.combine_events .............................. [RUN]
[0m14:01:53.601053 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m14:01:53.601314 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m14:01:53.601505 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m14:01:53.606732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m14:01:53.607618 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.614658 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.621459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.622756 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.627300 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.634507 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.641546 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.646395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.647987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.654568 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.659263 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.663423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.665436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.670173 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m14:01:53.671732 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-04-10 14:01:53.585778 => 2024-04-10 14:01:53.671564
[0m14:01:53.672192 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m14:01:53.678346 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m14:01:53.679357 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:53.684843 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_install'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.686461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


  create view test.combine_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                toLowCardinality('join_mt_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_mt_datestat
        )

        union all
        

        (
            select

                toLowCardinality('join_vkads_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select

                toLowCardinality('join_yd_datestat')  as None,
                
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.join_yd_datestat
        )

        )
  )...
[0m14:01:53.691746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.698167 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.704413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.708230 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.709762 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:53.714488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m14:01:53.715189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.719902 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.720847 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.723383 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat to test.combine_datestat__dbt_backup 
  
  ...
[0m14:01:53.727092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.733288 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.739556 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m14:01:53.743641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat 
  
  ...
[0m14:01:53.745216 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-04-10 14:01:53.601704 => 2024-04-10 14:01:53.745004
[0m14:01:53.745693 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m14:01:53.751938 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m14:01:53.753478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.755042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat 
  
  ...
[0m14:01:53.755445 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


  create view test.combine_events__dbt_tmp 
  
  as (
    -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select

                toLowCardinality('join_appmetrica_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_deeplinks')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString('') as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_deeplinks
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString('') as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_events
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_install')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString('') as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_install
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_screen_view')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString('') as utmHash ,
                            toUInt8(0) as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_screen_view
        )

        union all
        

        (
            select

                toLowCardinality('join_appmetrica_events_sessions_starts')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString('') as adSourceDirty ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as transactionId ,
                            toString('') as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events_sessions_starts
        )

        union all
        

        (
            select

                toLowCardinality('join_ym_events')  as None,
                
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        )
  )...
[0m14:01:53.759055 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.763999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m14:01:53.768356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.769853 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-04-10 14:01:53.672305 => 2024-04-10 14:01:53.769775
[0m14:01:53.770674 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f275f910>]}
[0m14:01:53.771499 [info ] [Thread-2 (]: 44 of 74 OK created sql view model test.combine_datestat ....................... [[32mOK[0m in 0.19s]
[0m14:01:53.772034 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m14:01:53.773441 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m14:01:53.773985 [info ] [Thread-2 (]: 46 of 74 START sql view model test.hash_datestat ............................... [RUN]
[0m14:01:53.774884 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m14:01:53.775192 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m14:01:53.775368 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m14:01:53.781400 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m14:01:53.792739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.796791 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.805044 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.809221 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m14:01:53.809698 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-04-10 14:01:53.775458 => 2024-04-10 14:01:53.809627
[0m14:01:53.809885 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m14:01:53.815813 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m14:01:53.816500 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


  create view test.hash_datestat__dbt_tmp 
  
  as (
    -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id,

  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    
    


FROM (

        (
            select

                toLowCardinality('combine_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m14:01:53.838915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m14:01:53.842225 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m14:01:53.846755 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.848775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events to test.combine_events__dbt_backup 
  
  ...
[0m14:01:53.850182 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:53.854137 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m14:01:53.855028 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.859126 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events 
  
  ...
[0m14:01:53.862155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.864015 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events 
  
  ...
[0m14:01:53.865032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.867493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat to test.hash_datestat__dbt_backup 
  
  ...
[0m14:01:53.868739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.872743 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m14:01:53.875338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.879038 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat 
  
  ...
[0m14:01:53.881104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.883037 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-04-10 14:01:53.745913 => 2024-04-10 14:01:53.882971
[0m14:01:53.884155 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f26c9840>]}
[0m14:01:53.885051 [info ] [Thread-1 (]: 45 of 74 OK created sql view model test.combine_events ......................... [[32mOK[0m in 0.28s]
[0m14:01:53.885762 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m14:01:53.886565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.888439 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat 
  
  ...
[0m14:01:53.888974 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m14:01:53.890369 [info ] [Thread-1 (]: 47 of 74 START sql view model test.hash_events ................................. [RUN]
[0m14:01:53.891972 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m14:01:53.892513 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m14:01:53.893271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.893929 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m14:01:53.901993 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m14:01:53.908738 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m14:01:53.913451 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:53.917576 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-04-10 14:01:53.809976 => 2024-04-10 14:01:53.917337
[0m14:01:53.918576 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f275ea10>]}
[0m14:01:53.919406 [info ] [Thread-2 (]: 46 of 74 OK created sql view model test.hash_datestat .......................... [[32mOK[0m in 0.14s]
[0m14:01:53.920120 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m14:01:53.921635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.925237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:53.926817 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m14:01:53.927164 [info ] [Thread-2 (]: 48 of 74 START sql table model test.full_datestat .............................. [RUN]
[0m14:01:53.927719 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m14:01:53.927852 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m14:01:53.927986 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m14:01:53.932234 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m14:01:53.933275 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:53.942910 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m14:01:53.943442 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-04-10 14:01:53.928072 => 2024-04-10 14:01:53.943296
[0m14:01:53.944028 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m14:01:53.963110 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-04-10 14:01:53.902501 => 2024-04-10 14:01:53.962818
[0m14:01:53.962451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
    )
        ...
[0m14:01:53.964395 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m14:01:53.973532 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m14:01:53.974530 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


  create view test.hash_events__dbt_tmp 
  
  as (
    -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id,

  assumeNotNull(CASE 


WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime
FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    


FROM (

        (
            select

                toLowCardinality('combine_events')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )


-- SETTINGS short_circuit_function_evaluation=force_enable


  )...
[0m14:01:53.989965 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:53.993902 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:54.000726 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:54.002825 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m14:01:54.004454 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

  
    
    
        
        insert into test.full_datestat__dbt_backup ("None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime")
  


SELECT 
*EXCEPT(_dbt_source_relation)
FROM  test.hash_datestat
  ...
[0m14:01:54.033392 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m14:01:54.036585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m14:01:54.039659 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.040882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events to test.hash_events__dbt_backup 
  
  ...
[0m14:01:54.044198 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.047802 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events 
  
  ...
[0m14:01:54.051444 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.052974 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events 
  
  ...
[0m14:01:54.057420 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.061871 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m14:01:54.066276 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.068218 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-04-10 14:01:53.965776 => 2024-04-10 14:01:54.068083
[0m14:01:54.069184 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8e4e620>]}
[0m14:01:54.069851 [info ] [Thread-1 (]: 47 of 74 OK created sql view model test.hash_events ............................ [[32mOK[0m in 0.18s]
[0m14:01:54.070675 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m14:01:54.072120 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m14:01:54.072714 [info ] [Thread-1 (]: 49 of 74 START sql table model test.full_events ................................ [RUN]
[0m14:01:54.073400 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m14:01:54.073615 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m14:01:54.073770 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m14:01:54.078238 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m14:01:54.079287 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-04-10 14:01:54.073862 => 2024-04-10 14:01:54.079020
[0m14:01:54.079943 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m14:01:54.085242 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


SELECT 
* 
FROM  test.hash_events
    )
        ...
[0m14:01:54.112101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:54.116436 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:54.122560 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:54.124639 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m14:01:54.125149 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  


SELECT 
* 
FROM  test.hash_events
  ...
[0m14:01:54.207479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.20 seconds
[0m14:01:54.211582 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m14:01:54.216806 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.220864 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m14:01:54.225104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:54.226569 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-04-10 14:01:53.944349 => 2024-04-10 14:01:54.226488
[0m14:01:54.227350 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f26e7f70>]}
[0m14:01:54.227881 [info ] [Thread-2 (]: 48 of 74 OK created sql table model test.full_datestat ......................... [[32mOK[0m in 0.30s]
[0m14:01:54.228349 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m14:01:54.228656 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m14:01:54.229008 [info ] [Thread-2 (]: 50 of 74 START sql table model test.graph_tuples ............................... [RUN]
[0m14:01:54.229706 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m14:01:54.230314 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m14:01:54.230685 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m14:01:54.252766 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m14:01:54.254640 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-04-10 14:01:54.230923 => 2024-04-10 14:01:54.254427
[0m14:01:54.255221 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m14:01:54.374218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m14:01:54.401204 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:54.404072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:54.409658 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:54.411393 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m14:01:54.412875 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.hash_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_app_profile_matching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m14:01:55.124733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 1.00 seconds
[0m14:01:55.125982 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m14:01:55.133182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:55.137111 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m14:01:55.140622 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:55.142120 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-04-10 14:01:54.080262 => 2024-04-10 14:01:55.142058
[0m14:01:55.142817 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27a7a00>]}
[0m14:01:55.143207 [info ] [Thread-1 (]: 49 of 74 OK created sql table model test.full_events ........................... [[32mOK[0m in 1.07s]
[0m14:01:55.143535 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m14:01:56.554964 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 2.14 seconds
[0m14:01:56.556559 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m14:01:56.563347 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.567538 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m14:01:56.570768 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.572465 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-04-10 14:01:54.255390 => 2024-04-10 14:01:56.572408
[0m14:01:56.573125 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2688340>]}
[0m14:01:56.573565 [info ] [Thread-2 (]: 50 of 74 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 2.34s]
[0m14:01:56.573941 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m14:01:56.575305 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m14:01:56.575717 [info ] [Thread-1 (]: 51 of 74 START sql table model test.graph_lookup ............................... [RUN]
[0m14:01:56.576238 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m14:01:56.576358 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m14:01:56.576487 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m14:01:56.581205 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m14:01:56.581879 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-04-10 14:01:56.576572 => 2024-04-10 14:01:56.581754
[0m14:01:56.582180 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m14:01:56.587374 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m14:01:56.609142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:56.611736 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:56.618813 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.620461 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m14:01:56.621038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m14:01:56.642909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:56.644033 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m14:01:56.650768 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.655009 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m14:01:56.659601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.660918 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-04-10 14:01:56.582282 => 2024-04-10 14:01:56.660866
[0m14:01:56.661411 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2542890>]}
[0m14:01:56.661726 [info ] [Thread-1 (]: 51 of 74 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.09s]
[0m14:01:56.662191 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m14:01:56.663514 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m14:01:56.664335 [info ] [Thread-2 (]: 52 of 74 START sql table model test.graph_unique ............................... [RUN]
[0m14:01:56.665896 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m14:01:56.666234 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m14:01:56.666536 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m14:01:56.670944 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m14:01:56.671380 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-04-10 14:01:56.666709 => 2024-04-10 14:01:56.671319
[0m14:01:56.671546 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m14:01:56.675447 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m14:01:56.693521 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:56.697523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:56.702864 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.705591 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m14:01:56.706470 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m14:01:56.715855 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.717217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m14:01:56.722999 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.727669 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m14:01:56.731724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.733229 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-04-10 14:01:56.671702 => 2024-04-10 14:01:56.733165
[0m14:01:56.733881 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2606f80>]}
[0m14:01:56.734368 [info ] [Thread-2 (]: 52 of 74 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.07s]
[0m14:01:56.734772 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m14:01:56.736445 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m14:01:56.737185 [info ] [Thread-1 (]: 53 of 74 START sql table model test.graph_edge ................................. [RUN]
[0m14:01:56.737881 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m14:01:56.738179 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m14:01:56.738359 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m14:01:56.743856 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m14:01:56.744529 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-04-10 14:01:56.738455 => 2024-04-10 14:01:56.744420
[0m14:01:56.744826 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m14:01:56.749686 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m14:01:56.769971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:56.772781 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:56.777834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.779971 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m14:01:56.780863 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m14:01:56.800382 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:56.801712 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m14:01:56.806039 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.808950 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m14:01:56.815152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.818865 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m14:01:56.821918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:56.823633 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-04-10 14:01:56.744936 => 2024-04-10 14:01:56.823563
[0m14:01:56.824199 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2607280>]}
[0m14:01:56.824540 [info ] [Thread-1 (]: 53 of 74 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.09s]
[0m14:01:56.824877 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m14:01:56.826239 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m14:01:56.826683 [info ] [Thread-2 (]: 54 of 74 START sql table model test.graph_glue ................................. [RUN]
[0m14:01:56.827319 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m14:01:56.827609 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m14:01:56.827780 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m14:01:56.832875 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m14:01:56.833341 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-04-10 14:01:56.827889 => 2024-04-10 14:01:56.833272
[0m14:01:56.833524 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m14:01:56.845019 [debug] [Thread-2 (]: Running iteration 0
[0m14:01:56.845884 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m14:01:56.888909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:56.890083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m14:01:56.921574 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:56.922841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m14:01:56.937127 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:56.938443 [debug] [Thread-2 (]: VALUE: 1
[0m14:01:56.938713 [debug] [Thread-2 (]: Running iteration 1
[0m14:01:56.939083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m14:01:56.971409 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:56.972539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m14:01:57.012270 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:57.013633 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m14:01:57.023168 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:57.024634 [debug] [Thread-2 (]: VALUE: 0
[0m14:01:57.025051 [debug] [Thread-2 (]: Running iteration 2
[0m14:01:57.025192 [debug] [Thread-2 (]: Running iteration 3
[0m14:01:57.025295 [debug] [Thread-2 (]: Running iteration 4
[0m14:01:57.025413 [debug] [Thread-2 (]: Running iteration 5
[0m14:01:57.025514 [debug] [Thread-2 (]: Running iteration 6
[0m14:01:57.025608 [debug] [Thread-2 (]: Running iteration 7
[0m14:01:57.025707 [debug] [Thread-2 (]: Running iteration 8
[0m14:01:57.025801 [debug] [Thread-2 (]: Running iteration 9
[0m14:01:57.025893 [debug] [Thread-2 (]: Running iteration 10
[0m14:01:57.025985 [debug] [Thread-2 (]: Running iteration 11
[0m14:01:57.026093 [debug] [Thread-2 (]: Running iteration 12
[0m14:01:57.026255 [debug] [Thread-2 (]: Running iteration 13
[0m14:01:57.027553 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m14:01:57.042831 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:57.045650 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:57.052514 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:57.053945 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m14:01:57.054393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m14:01:57.072742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:57.073905 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m14:01:57.077584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:57.081882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m14:01:57.085197 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:57.086557 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-04-10 14:01:56.833631 => 2024-04-10 14:01:57.086485
[0m14:01:57.087393 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b39960>]}
[0m14:01:57.087941 [info ] [Thread-2 (]: 54 of 74 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.26s]
[0m14:01:57.088302 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m14:01:57.089599 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m14:01:57.090120 [info ] [Thread-1 (]: 55 of 74 START sql table model test.graph_qid .................................. [RUN]
[0m14:01:57.090682 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m14:01:57.090881 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m14:01:57.091071 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m14:01:57.096297 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m14:01:57.096766 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-04-10 14:01:57.091177 => 2024-04-10 14:01:57.096698
[0m14:01:57.096943 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m14:01:57.100796 [debug] [Thread-1 (]: Running iteration 0
[0m14:01:57.101260 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m14:01:57.139020 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:57.140553 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m14:01:57.174610 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:57.176105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m14:01:57.187154 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:57.189056 [debug] [Thread-1 (]: VALUE: 0
[0m14:01:57.189439 [debug] [Thread-1 (]: Running iteration 1
[0m14:01:57.189606 [debug] [Thread-1 (]: Running iteration 2
[0m14:01:57.189718 [debug] [Thread-1 (]: Running iteration 3
[0m14:01:57.189838 [debug] [Thread-1 (]: Running iteration 4
[0m14:01:57.189942 [debug] [Thread-1 (]: Running iteration 5
[0m14:01:57.190045 [debug] [Thread-1 (]: Running iteration 6
[0m14:01:57.190154 [debug] [Thread-1 (]: Running iteration 7
[0m14:01:57.190260 [debug] [Thread-1 (]: Running iteration 8
[0m14:01:57.190367 [debug] [Thread-1 (]: Running iteration 9
[0m14:01:57.190469 [debug] [Thread-1 (]: Running iteration 10
[0m14:01:57.190571 [debug] [Thread-1 (]: Running iteration 11
[0m14:01:57.190672 [debug] [Thread-1 (]: Running iteration 12
[0m14:01:57.190774 [debug] [Thread-1 (]: Running iteration 13
[0m14:01:57.192705 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m14:01:57.216045 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:57.220922 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:57.226256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:57.228547 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m14:01:57.229249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m14:01:57.241232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:57.242628 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m14:01:57.248887 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:57.253359 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m14:01:57.258191 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:57.259494 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-04-10 14:01:57.097042 => 2024-04-10 14:01:57.259432
[0m14:01:57.260042 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f277f3d0>]}
[0m14:01:58.080299 [info ] [Thread-1 (]: 55 of 74 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.17s]
[0m14:01:58.081278 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m14:01:58.083488 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m14:01:58.084117 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m14:01:58.084828 [info ] [Thread-2 (]: 56 of 74 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m14:01:58.085318 [info ] [Thread-1 (]: 57 of 74 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m14:01:58.087078 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m14:01:58.088143 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m14:01:58.088561 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m14:01:58.088972 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m14:01:58.089350 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m14:01:58.089776 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m14:01:58.098756 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m14:01:58.103241 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m14:01:58.105197 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-04-10 14:01:58.090292 => 2024-04-10 14:01:58.104997
[0m14:01:58.105979 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m14:01:58.110026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m14:01:58.110461 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-04-10 14:01:58.099224 => 2024-04-10 14:01:58.110330
[0m14:01:58.111880 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m14:01:58.121373 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





    )
        ...
[0m14:01:58.154622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:58.157247 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:58.161017 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:58.165428 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:58.167430 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:58.169854 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m14:01:58.171443 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:58.173541 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m14:01:58.174319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m14:01:58.174730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
-- depends_on: test.graph_qid




select
    y.qid, x.*
from test.hash_events as x
left join test.graph_qid as y
    using (__datetime,__link, __id)





  ...
[0m14:01:59.097797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.92 seconds
[0m14:01:59.098542 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.92 seconds
[0m14:01:59.100344 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m14:01:59.101754 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m14:01:59.108505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.109226 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.113941 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m14:01:59.117989 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m14:01:59.123102 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.123720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.125004 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-04-10 14:01:58.112137 => 2024-04-10 14:01:59.124897
[0m14:01:59.126594 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-04-10 14:01:58.106180 => 2024-04-10 14:01:59.126524
[0m14:01:59.127725 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f25426b0>]}
[0m14:01:59.128381 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8179270>]}
[0m14:01:59.129193 [info ] [Thread-1 (]: 57 of 74 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 1.04s]
[0m14:01:59.129864 [info ] [Thread-2 (]: 56 of 74 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 1.04s]
[0m14:01:59.130451 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m14:01:59.130922 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m14:01:59.133006 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m14:01:59.133460 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m14:01:59.133911 [info ] [Thread-1 (]: 58 of 74 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m14:01:59.135640 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m14:01:59.134789 [info ] [Thread-2 (]: 59 of 74 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m14:01:59.136300 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m14:01:59.137304 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m14:01:59.137895 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m14:01:59.138340 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m14:01:59.152807 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m14:01:59.153278 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m14:01:59.159015 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m14:01:59.159549 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-04-10 14:01:59.138806 => 2024-04-10 14:01:59.159413
[0m14:01:59.160097 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m14:01:59.165232 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m14:01:59.165797 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-04-10 14:01:59.154130 => 2024-04-10 14:01:59.165680
[0m14:01:59.167832 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m14:01:59.173143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m14:01:59.187972 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.191847 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.194627 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.198557 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.200377 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.201941 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m14:01:59.202366 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m14:01:59.203869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.205408 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m14:01:59.205997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m14:01:59.216496 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.217820 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m14:01:59.219263 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.220415 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m14:01:59.223025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.227607 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m14:01:59.229078 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.233428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m14:01:59.235014 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.236887 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-04-10 14:01:59.160332 => 2024-04-10 14:01:59.236809
[0m14:01:59.237933 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27f9240>]}
[0m14:01:59.238654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.241981 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-04-10 14:01:59.168149 => 2024-04-10 14:01:59.241890
[0m14:01:59.239643 [info ] [Thread-1 (]: 58 of 74 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.10s]
[0m14:01:59.243084 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27f8520>]}
[0m14:01:59.243567 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m14:01:59.244184 [info ] [Thread-2 (]: 59 of 74 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.11s]
[0m14:01:59.245123 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m14:01:59.246960 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:01:59.248131 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:01:59.247759 [info ] [Thread-1 (]: 60 of 74 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m14:01:59.248876 [info ] [Thread-2 (]: 61 of 74 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m14:01:59.249736 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m14:01:59.250479 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m14:01:59.250873 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m14:01:59.251214 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m14:01:59.251501 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:01:59.251898 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:01:59.257097 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m14:01:59.260565 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m14:01:59.262215 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-04-10 14:01:59.257566 => 2024-04-10 14:01:59.262017
[0m14:01:59.262753 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-04-10 14:01:59.252146 => 2024-04-10 14:01:59.262674
[0m14:01:59.263076 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:01:59.263647 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:01:59.270645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m14:01:59.275591 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m14:01:59.297337 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.301408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.302731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.306076 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.306885 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.309882 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m14:01:59.310514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m14:01:59.313533 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.315440 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m14:01:59.316012 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m14:01:59.321258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.322634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m14:01:59.327110 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.327543 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.331567 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m14:01:59.333845 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m14:01:59.338440 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.339799 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-04-10 14:01:59.271159 => 2024-04-10 14:01:59.339733
[0m14:01:59.340479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.341431 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f81795a0>]}
[0m14:01:59.346405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m14:01:59.347059 [info ] [Thread-1 (]: 60 of 74 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.09s]
[0m14:01:59.348654 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m14:01:59.350194 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:01:59.351006 [info ] [Thread-1 (]: 62 of 74 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m14:01:59.351780 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m14:01:59.351947 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m14:01:59.352487 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.352930 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:01:59.354245 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-04-10 14:01:59.264122 => 2024-04-10 14:01:59.354186
[0m14:01:59.365229 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m14:01:59.367184 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f80f1690>]}
[0m14:01:59.368363 [info ] [Thread-2 (]: 61 of 74 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.12s]
[0m14:01:59.369494 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m14:01:59.370488 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-04-10 14:01:59.354549 => 2024-04-10 14:01:59.370290
[0m14:01:59.371595 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:01:59.376418 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m14:01:59.377166 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:01:59.378789 [info ] [Thread-2 (]: 63 of 74 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m14:01:59.380533 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m14:01:59.381402 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m14:01:59.382038 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:01:59.388819 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m14:01:59.389303 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-04-10 14:01:59.382380 => 2024-04-10 14:01:59.389231
[0m14:01:59.389623 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:01:59.394716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m14:01:59.410787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.415048 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.420383 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.423435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.424899 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.426401 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m14:01:59.427266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m14:01:59.432678 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.434473 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m14:01:59.434948 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m14:01:59.442018 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.444010 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m14:01:59.449603 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.453425 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m14:01:59.454236 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.456549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m14:01:59.459355 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.460923 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-04-10 14:01:59.371829 => 2024-04-10 14:01:59.460853
[0m14:01:59.461543 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f27cc400>]}
[0m14:01:59.462303 [info ] [Thread-1 (]: 62 of 74 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.11s]
[0m14:01:59.462857 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m14:01:59.463541 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.467807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m14:01:59.470031 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:01:59.470752 [info ] [Thread-1 (]: 64 of 74 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m14:01:59.471580 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m14:01:59.471888 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m14:01:59.472072 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:01:59.478003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.479271 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m14:01:59.481536 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-04-10 14:01:59.389733 => 2024-04-10 14:01:59.481365
[0m14:01:59.482696 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2533070>]}
[0m14:01:59.483191 [info ] [Thread-2 (]: 63 of 74 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.10s]
[0m14:01:59.483890 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-04-10 14:01:59.472302 => 2024-04-10 14:01:59.483798
[0m14:01:59.484458 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m14:01:59.485234 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:01:59.492728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m14:01:59.493332 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:01:59.494617 [info ] [Thread-2 (]: 65 of 74 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m14:01:59.495925 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m14:01:59.496283 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m14:01:59.496490 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:01:59.500470 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m14:01:59.501105 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-04-10 14:01:59.496598 => 2024-04-10 14:01:59.501002
[0m14:01:59.501502 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:01:59.506044 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m14:01:59.513833 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.517503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.523807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.524471 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.526043 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m14:01:59.529817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.532238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m14:01:59.536187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.538193 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m14:01:59.538722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m14:01:59.542863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.544225 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m14:01:59.548832 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.550257 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m14:01:59.551861 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.556581 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m14:01:59.562144 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.566807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m14:01:59.567750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.570081 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-04-10 14:01:59.486541 => 2024-04-10 14:01:59.570014
[0m14:01:59.570794 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8adecb0>]}
[0m14:01:59.571432 [info ] [Thread-1 (]: 64 of 74 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.10s]
[0m14:01:59.572082 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m14:01:59.573482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.574873 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-04-10 14:01:59.501619 => 2024-04-10 14:01:59.574820
[0m14:01:59.576016 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8b765f0>]}
[0m14:01:59.576494 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:01:59.577256 [info ] [Thread-2 (]: 65 of 74 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.08s]
[0m14:01:59.578221 [info ] [Thread-1 (]: 66 of 74 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m14:01:59.579478 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m14:01:59.580917 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m14:01:59.582734 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m14:01:59.583532 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:01:59.583968 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:01:59.589125 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m14:01:59.589944 [info ] [Thread-2 (]: 67 of 74 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m14:01:59.591878 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m14:01:59.592611 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m14:01:59.593082 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:01:59.593449 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-04-10 14:01:59.584221 => 2024-04-10 14:01:59.593354
[0m14:01:59.596906 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m14:01:59.598133 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:01:59.604207 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m14:01:59.605404 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-04-10 14:01:59.593729 => 2024-04-10 14:01:59.605279
[0m14:01:59.605799 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:01:59.611186 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m14:01:59.641453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:59.645966 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.647173 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:01:59.652405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.654520 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.656322 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m14:01:59.657481 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m14:01:59.658793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.660638 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m14:01:59.661393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m14:01:59.685627 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.686943 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m14:01:59.687751 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.690604 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m14:01:59.693056 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.697682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m14:01:59.698634 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.704081 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m14:01:59.705573 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.707413 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-04-10 14:01:59.606226 => 2024-04-10 14:01:59.707336
[0m14:01:59.708183 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2515450>]}
[0m14:01:59.708931 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.709759 [info ] [Thread-2 (]: 67 of 74 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.12s]
[0m14:01:59.711334 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-04-10 14:01:59.599253 => 2024-04-10 14:01:59.711271
[0m14:01:59.711857 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m14:01:59.712812 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f256abc0>]}
[0m14:01:59.713746 [info ] [Thread-1 (]: 66 of 74 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.13s]
[0m14:01:59.714806 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.715252 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m14:01:59.715654 [info ] [Thread-2 (]: 68 of 74 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m14:01:59.716549 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m14:01:59.717137 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m14:01:59.718072 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.718925 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.734436 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m14:01:59.735187 [info ] [Thread-1 (]: 69 of 74 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m14:01:59.736541 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m14:01:59.737268 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m14:01:59.737678 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 14:01:59.719182 => 2024-04-10 14:01:59.737569
[0m14:01:59.738016 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.738657 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.819888 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m14:01:59.825000 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m14:01:59.826733 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-10 14:01:59.739130 => 2024-04-10 14:01:59.826556
[0m14:01:59.827220 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.831837 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m14:01:59.847902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.851295 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.856129 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.858614 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m14:01:59.859385 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.863764 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.864213 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m14:01:59.870321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.872431 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m14:01:59.873103 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "_dbt_source_relation", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m14:01:59.887158 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:01:59.888449 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m14:01:59.894585 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.898863 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m14:01:59.900318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.901623 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m14:01:59.904307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.905714 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 14:01:59.820369 => 2024-04-10 14:01:59.905640
[0m14:01:59.906493 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f25278e0>]}
[0m14:01:59.906978 [info ] [Thread-2 (]: 68 of 74 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.19s]
[0m14:01:59.907425 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.908454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:01:59.913378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m14:01:59.916502 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:01:59.917696 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-10 14:01:59.827350 => 2024-04-10 14:01:59.917638
[0m14:01:59.918249 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb90d182680>]}
[0m14:01:59.918567 [info ] [Thread-1 (]: 69 of 74 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.18s]
[0m14:01:59.918905 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m14:01:59.920898 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:01:59.921691 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:01:59.922143 [info ] [Thread-2 (]: 70 of 74 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m14:01:59.923895 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m14:01:59.922961 [info ] [Thread-1 (]: 71 of 74 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m14:01:59.924548 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m14:01:59.925575 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m14:01:59.926024 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:01:59.926374 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m14:01:59.937525 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:01:59.941779 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m14:01:59.949588 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m14:01:59.950713 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-04-10 14:01:59.942167 => 2024-04-10 14:01:59.950583
[0m14:01:59.951071 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:01:59.955470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m14:01:59.955883 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-04-10 14:01:59.926679 => 2024-04-10 14:01:59.955782
[0m14:01:59.957184 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:01:59.961797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m14:01:59.990718 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.993510 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:01:59.994438 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:01:59.999304 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:02:00.001636 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.003290 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m14:02:00.003941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m14:02:00.009854 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.012156 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m14:02:00.013465 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m14:02:00.030487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:02:00.031686 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m14:02:00.037027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:02:00.038557 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m14:02:00.039189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.044447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m14:02:00.045838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.050346 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m14:02:00.051803 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.053240 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-10 14:01:59.951228 => 2024-04-10 14:02:00.053177
[0m14:02:00.054100 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8224fa0>]}
[0m14:02:00.054986 [info ] [Thread-1 (]: 71 of 74 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.13s]
[0m14:02:00.055723 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m14:02:00.057024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.057439 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:02:00.059069 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-10 14:01:59.957357 => 2024-04-10 14:02:00.059013
[0m14:02:00.059593 [info ] [Thread-1 (]: 72 of 74 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m14:02:00.060693 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8227370>]}
[0m14:02:00.061852 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m14:02:00.062904 [info ] [Thread-2 (]: 70 of 74 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.14s]
[0m14:02:00.063644 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m14:02:00.064159 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m14:02:00.064669 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:02:00.071450 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m14:02:00.072128 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:02:00.072867 [info ] [Thread-2 (]: 73 of 74 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m14:02:00.073577 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-10 14:02:00.065299 => 2024-04-10 14:02:00.073465
[0m14:02:00.074164 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m14:02:00.074744 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:02:00.075216 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m14:02:00.079726 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m14:02:00.080429 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:02:00.086271 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m14:02:00.087355 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-10 14:02:00.082295 => 2024-04-10 14:02:00.087182
[0m14:02:00.087751 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:02:00.093338 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m14:02:00.113727 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:02:00.118015 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:02:00.126454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.128947 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m14:02:00.129904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m14:02:00.136971 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m14:02:00.139727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:02:00.145550 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.148874 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m14:02:00.149527 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "None", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__id", "__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m14:02:00.163954 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:02:00.165208 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m14:02:00.171901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.175856 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m14:02:00.181261 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.182066 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m14:02:00.183668 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-10 14:02:00.075546 => 2024-04-10 14:02:00.183609
[0m14:02:00.185307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m14:02:00.186299 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8164c40>]}
[0m14:02:00.188100 [info ] [Thread-1 (]: 72 of 74 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.12s]
[0m14:02:00.188930 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m14:02:00.193005 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.196861 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m14:02:00.199996 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:02:00.201184 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-10 14:02:00.087879 => 2024-04-10 14:02:00.201128
[0m14:02:00.201715 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f271a470>]}
[0m14:02:00.202051 [info ] [Thread-2 (]: 73 of 74 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.13s]
[0m14:02:00.202375 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m14:02:00.203944 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m14:02:00.204970 [info ] [Thread-1 (]: 74 of 74 START sql table model test.dataset_event_table ........................ [RUN]
[0m14:02:00.206362 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m14:02:00.206791 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m14:02:00.207035 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m14:02:00.220967 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m14:02:00.227482 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.231912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m14:02:00.239613 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.247208 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m14:02:00.248829 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-10 14:02:00.207159 => 2024-04-10 14:02:00.248705
[0m14:02:00.249186 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m14:02:00.253766 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
    )
        ...
[0m14:02:00.327397 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m14:02:00.330174 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m14:02:00.335520 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.337883 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m14:02:00.339359 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("_dbt_source_relation", "None", "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "productName", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adTitle2", "adText", "adPhraseName", "adCost", "impressions", "clicks", "__emitted_at", "__link", "AdCostStatHash", "__id", "__datetime", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "visitId", "clientId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  


  
  
  
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
    UNION ALL
  
    SELECT * FROM (

        (
            select

                toLowCardinality('full_datestat')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("productName") as productName ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("adPhraseId") as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adTitle2") as adTitle2 ,
                            toString("adText") as adText ,
                            toString("adPhraseName") as adPhraseName ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("AdCostStatHash") as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64(0) as __period_number ,
                            toBool(0) as __if_missed ,
                            toUInt16(0) as __priority ,
                            toNullable('') as __step ,
                            toUInt64(0) as qid ,
                            toDateTime(0) as event_datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as promoCode ,
                            toString('') as osName ,
                            toString('') as cityName ,
                            toString('') as transactionId ,
                            toUInt8(0) as sessions ,
                            toUInt8(0) as addToCartSessions ,
                            toUInt8(0) as cartViewSessions ,
                            toUInt8(0) as checkoutSessions ,
                            toUInt8(0) as webSalesSessions ,
                            toUInt8(0) as sales ,
                            toNullable(0) as amountSales ,
                            toUInt8(0) as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8(0) as linkingCardToPhoneNumberSessions ,
                            toUInt8(0) as registrationLendingPromotionsSessions ,
                            toUInt8(0) as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8(0) as couponActivationSessions ,
                            toUInt8(0) as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews ,
                            toString('') as AppInstallStatHash ,
                            toString('') as AppEventStatHash ,
                            toString('') as AppSessionStatHash ,
                            toString('') as AppDeeplinkStatHash ,
                            toString('') as VisitStatHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash ,
                            toString('') as YmClientHash ,
                            toUInt8(0) as __last_click_rank ,
                            toUInt8(0) as __first_click_rank ,
                            toString('') as __myfirstfunnel_last_click_utmSource ,
                            toString('') as __myfirstfunnel_last_click_utmMedium ,
                            toString('') as __myfirstfunnel_last_click_utmCampaign ,
                            toString('') as __myfirstfunnel_last_click_utmTerm ,
                            toString('') as __myfirstfunnel_last_click_utmContent ,
                            toString('') as __myfirstfunnel_last_click_adSourceDirty ,
                            toString('') as __myfirstfunnel_first_click_utmSource ,
                            toString('') as __myfirstfunnel_first_click_utmMedium ,
                            toString('') as __myfirstfunnel_first_click_utmCampaign ,
                            toString('') as __myfirstfunnel_first_click_utmTerm ,
                            toString('') as __myfirstfunnel_first_click_utmContent ,
                            toString('') as __myfirstfunnel_first_click_adSourceDirty 

            from test.full_datestat
        )

        union all
        

        (
            select

                toLowCardinality('attr_myfirstfunnel_final_table')  as _dbt_source_relation,
                
                            toString("None") as None ,
                            toDate("__date") as __date ,
                            toString('') as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString('') as productName ,
                            toString('') as adCampaignName ,
                            toString('') as adGroupName ,
                            toString('') as adId ,
                            toString('') as adPhraseId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adTitle2 ,
                            toString('') as adText ,
                            toString('') as adPhraseName ,
                            toFloat64(0) as adCost ,
                            toInt32(0) as impressions ,
                            toInt32(0) as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as AdCostStatHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toInt64("__period_number") as __period_number ,
                            toBool("__if_missed") as __if_missed ,
                            toUInt16("__priority") as __priority ,
                            toNullable("__step") as __step ,
                            toUInt64("qid") as qid ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("transactionId") as transactionId ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toNullable("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews ,
                            toString("AppInstallStatHash") as AppInstallStatHash ,
                            toString("AppEventStatHash") as AppEventStatHash ,
                            toString("AppSessionStatHash") as AppSessionStatHash ,
                            toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
                            toString("VisitStatHash") as VisitStatHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash ,
                            toString("YmClientHash") as YmClientHash ,
                            toUInt8("__last_click_rank") as __last_click_rank ,
                            toUInt8("__first_click_rank") as __first_click_rank ,
                            toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
                            toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
                            toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
                            toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
                            toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
                            toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
                            toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
                            toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
                            toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
                            toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
                            toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
                            toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 

            from test.attr_myfirstfunnel_final_table
        )

        ) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[4] = 'testaccount'
    and 
    splitByChar('_', __table_name)[4] = 'default'
  
  ...
[0m14:02:00.452252 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m14:02:00.453417 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m14:02:00.458936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:02:00.462890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m14:02:00.466601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:02:00.467791 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-10 14:02:00.249323 => 2024-04-10 14:02:00.467734
[0m14:02:00.468353 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5ae1888-9257-4a70-8a77-2c262e2d98f6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f810dd50>]}
[0m14:02:00.468695 [info ] [Thread-1 (]: 74 of 74 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.26s]
[0m14:02:00.469031 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m14:02:00.471820 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:02:00.472298 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:02:00.472443 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m14:02:00.472644 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m14:02:00.472776 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table' was left open.
[0m14:02:00.472898 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: Close
[0m14:02:00.473355 [info ] [MainThread]: 
[0m14:02:00.473815 [info ] [MainThread]: Finished running 35 view models, 12 incremental models, 27 table models in 0 hours 0 minutes and 12.69 seconds (12.69s).
[0m14:02:00.476467 [debug] [MainThread]: Command end result
[0m14:02:00.496497 [info ] [MainThread]: 
[0m14:02:00.497180 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:02:00.497584 [info ] [MainThread]: 
[0m14:02:00.497853 [info ] [MainThread]: Done. PASS=74 WARN=0 ERROR=0 SKIP=0 TOTAL=74
[0m14:02:00.498561 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f8247400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f2527b80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb8f275d930>]}
[0m14:02:00.499221 [debug] [MainThread]: Flushing usage events


============================== 2024-04-10 14:05:16.790588 | 740dfaba-0e55-4199-b3c2-80c105cf3bb4 ==============================
[0m14:05:16.790588 [info ] [MainThread]: Running with dbt=1.4.7
[0m14:05:16.791872 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'config_dir': False, 'which': 'debug', 'indirect_selection': 'eager'}
[0m14:05:16.792003 [debug] [MainThread]: Tracking: tracking
[0m14:05:16.794407 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f61f875fd60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f61f875d9c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f61f875fdf0>]}
[0m14:05:16.881233 [debug] [MainThread]: Executing "git --help"
[0m14:05:16.904439 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m14:05:16.904886 [debug] [MainThread]: STDERR: "b''"
[0m14:05:16.909947 [debug] [MainThread]: Acquiring new clickhouse connection 'debug'
[0m14:05:16.910303 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:05:17.186579 [debug] [MainThread]: dbt_clickhouse adapter: On debug: select 1 as id...
[0m14:05:17.191137 [debug] [MainThread]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:05:17.192077 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f61f8efae30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f61f8f7e5f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f61f8dc1cf0>]}
[0m14:05:17.192382 [debug] [MainThread]: Flushing usage events
[0m14:05:18.182726 [debug] [MainThread]: Connection 'debug' was left open.
[0m14:05:18.183421 [debug] [MainThread]: On debug: Close


============================== 2024-04-10 14:06:10.170030 | edf345e1-a996-4be5-97bc-2d199327f748 ==============================
[0m14:06:10.170030 [info ] [MainThread]: Running with dbt=1.4.7
[0m14:06:10.171967 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/utmcraft/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m14:06:10.172154 [debug] [MainThread]: Tracking: tracking
[0m14:06:10.174854 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa3829f1c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa382a7b8e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa382a7bee0>]}
[0m14:06:10.212681 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m14:06:10.412137 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 1 files added, 0 files changed.
[0m14:06:10.412820 [debug] [MainThread]: Partial parsing: added file: etlcraft://macros/join_utmcraft_registry.sql
[0m14:06:10.436519 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'edf345e1-a996-4be5-97bc-2d199327f748', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa381e61b70>]}
[0m14:06:10.455344 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'edf345e1-a996-4be5-97bc-2d199327f748', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa381ff7d60>]}
[0m14:06:10.455892 [info ] [MainThread]: Found 74 models, 8 tests, 0 snapshots, 0 analyses, 528 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m14:06:10.456125 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'edf345e1-a996-4be5-97bc-2d199327f748', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa381ff7ee0>]}
[0m14:06:10.459822 [info ] [MainThread]: 
[0m14:06:10.461475 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:06:10.465603 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m14:06:10.475655 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:06:10.896359 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m14:06:10.900283 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:10.906794 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m14:06:10.907480 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m14:06:10.912612 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m14:06:10.928954 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m14:06:10.938989 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'edf345e1-a996-4be5-97bc-2d199327f748', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa381ff7880>]}
[0m14:06:10.939795 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m14:06:10.940241 [info ] [MainThread]: 
[0m14:06:10.947733 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:06:10.948302 [info ] [Thread-1 (]: 1 of 2 START sql view model test.normalize_utmcraft_registry_default_utmresult . [RUN]
[0m14:06:10.949175 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m14:06:10.949496 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m14:06:10.949765 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:06:10.985872 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m14:06:10.999973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:06:11.027584 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m14:06:11.033406 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:06:11.043949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m14:06:11.053454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:06:11.054989 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:06:11.061989 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:06:11.080069 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m14:06:11.080561 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-10 14:06:10.950202 => 2024-04-10 14:06:11.080488
[0m14:06:11.080767 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:06:11.110782 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m14:06:11.111296 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m14:06:11.122958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:06:11.129198 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:06:11.132170 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.133301 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:06:11.138370 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.141348 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m14:06:11.144823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.145851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m14:06:11.148946 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.170592 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m14:06:11.174464 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.175857 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-10 14:06:11.080875 => 2024-04-10 14:06:11.175778
[0m14:06:11.176473 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edf345e1-a996-4be5-97bc-2d199327f748', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa36e3f96c0>]}
[0m14:06:11.176838 [info ] [Thread-1 (]: 1 of 2 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.23s]
[0m14:06:11.178225 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:06:11.179545 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:06:11.180138 [info ] [Thread-2 (]: 2 of 2 START sql view model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m14:06:11.181857 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m14:06:11.182492 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:06:11.191228 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m14:06:11.191749 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-10 14:06:11.182698 => 2024-04-10 14:06:11.191676
[0m14:06:11.191937 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:06:11.197013 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m14:06:11.197529 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m14:06:11.270533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */


  create view test.incremental_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  )...
[0m14:06:11.281216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:06:11.284212 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:06:11.286941 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.288019 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult to test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:06:11.291743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.294609 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m14:06:11.298675 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.299830 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult__dbt_tmp to test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m14:06:11.303524 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.307581 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m14:06:11.310922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:06:11.312181 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-10 14:06:11.192028 => 2024-04-10 14:06:11.312122
[0m14:06:11.312887 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edf345e1-a996-4be5-97bc-2d199327f748', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa36e3f9090>]}
[0m14:06:11.313307 [info ] [Thread-2 (]: 2 of 2 OK created sql view model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.13s]
[0m14:06:11.313639 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:06:11.316126 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:06:11.316662 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:06:11.316805 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult' was left open.
[0m14:06:11.316934 [debug] [MainThread]: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: Close
[0m14:06:11.317031 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult' was left open.
[0m14:06:11.317134 [debug] [MainThread]: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: Close
[0m14:06:11.317374 [info ] [MainThread]: 
[0m14:06:11.317642 [info ] [MainThread]: Finished running 2 view models in 0 hours 0 minutes and 0.86 seconds (0.86s).
[0m14:06:11.317969 [debug] [MainThread]: Command end result
[0m14:06:11.333824 [info ] [MainThread]: 
[0m14:06:11.334253 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:06:11.334409 [info ] [MainThread]: 
[0m14:06:11.334632 [info ] [MainThread]: Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
[0m14:06:11.335016 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa3829f1c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa36c2989d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fa36c298c40>]}
[0m14:06:11.335333 [debug] [MainThread]: Flushing usage events


============================== 2024-04-10 14:07:25.103125 | 3876ecae-6af9-4668-ad97-07036c91d45a ==============================
[0m14:07:25.103125 [info ] [MainThread]: Running with dbt=1.4.7
[0m14:07:25.104676 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/utmcraft/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m14:07:25.104834 [debug] [MainThread]: Tracking: tracking
[0m14:07:25.106428 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee83dce80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee7e82620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee7e825c0>]}
[0m14:07:25.130934 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m14:07:25.175937 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 1 files added, 0 files changed.
[0m14:07:25.176581 [debug] [MainThread]: Partial parsing: added file: etlcraft_integration_tests://models/2_staging/1_join/join_utmcraft_registry.sql
[0m14:07:25.189109 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_utmcraft_registry.sql
[0m14:07:25.205904 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_utmcraft_registry.sql
[0m14:07:25.224862 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee7294a60>]}
[0m14:07:25.243717 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee73f7d60>]}
[0m14:07:25.244274 [info ] [MainThread]: Found 75 models, 8 tests, 0 snapshots, 0 analyses, 528 macros, 0 operations, 22 seed files, 0 sources, 0 exposures, 0 metrics
[0m14:07:25.244579 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee73f7ee0>]}
[0m14:07:25.248227 [info ] [MainThread]: 
[0m14:07:25.249848 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:07:25.251436 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m14:07:25.262500 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:07:25.550840 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m14:07:25.555044 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.561051 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m14:07:25.561856 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m14:07:25.567293 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m14:07:25.574239 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.583501 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee72095d0>]}
[0m14:07:25.584279 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m14:07:25.584657 [info ] [MainThread]: 
[0m14:07:25.588614 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:07:25.589077 [info ] [Thread-1 (]: 1 of 3 START sql view model test.normalize_utmcraft_registry_default_utmresult . [RUN]
[0m14:07:25.589689 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m14:07:25.589939 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m14:07:25.590106 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:07:25.622097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m14:07:25.628303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.654753 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m14:07:25.660189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.670734 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m14:07:25.677071 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.678548 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m14:07:25.683141 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.701193 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m14:07:25.701659 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-10 14:07:25.590203 => 2024-04-10 14:07:25.701586
[0m14:07:25.701846 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:07:25.732139 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m14:07:25.732601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m14:07:25.741935 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.749044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:07:25.752282 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.753726 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:07:25.757183 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.760068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m14:07:25.763297 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.764324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m14:07:25.767586 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.790728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m14:07:25.793710 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.794913 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-10 14:07:25.701945 => 2024-04-10 14:07:25.794857
[0m14:07:25.795433 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ed396f6a0>]}
[0m14:07:25.795751 [info ] [Thread-1 (]: 1 of 3 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.21s]
[0m14:07:25.797140 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m14:07:25.798610 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:07:25.799192 [info ] [Thread-2 (]: 2 of 3 START sql view model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m14:07:25.799825 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m14:07:25.800090 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:07:25.808705 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m14:07:25.809156 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-10 14:07:25.800211 => 2024-04-10 14:07:25.809093
[0m14:07:25.809325 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:07:25.813417 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m14:07:25.813882 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m14:07:25.878022 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */


  create view test.incremental_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  )...
[0m14:07:25.886786 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.890916 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:07:25.894597 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.895720 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult to test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m14:07:25.898902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.901810 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    drop table if exists test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m14:07:25.905520 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.906575 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    rename table test.incremental_utmcraft_registry_default_utmresult__dbt_tmp to test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m14:07:25.910386 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.914072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m14:07:25.917142 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m14:07:25.918866 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-10 14:07:25.809412 => 2024-04-10 14:07:25.918811
[0m14:07:25.919472 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ed396f160>]}
[0m14:07:25.920005 [info ] [Thread-2 (]: 2 of 3 OK created sql view model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.12s]
[0m14:07:25.920393 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m14:07:25.921830 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry
[0m14:07:25.922317 [info ] [Thread-1 (]: 3 of 3 START sql view model test.join_utmcraft_registry ........................ [RUN]
[0m14:07:25.923016 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry'
[0m14:07:25.923247 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry)
[0m14:07:25.923409 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry
[0m14:07:25.934862 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_utmcraft__%'
    GROUP BY table

...
[0m14:07:25.945968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.951858 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_utmcraft__%' AND 
        name='__date'

  ...
[0m14:07:25.958714 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m14:07:25.960084 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

)
WHERE min_date > '1972-01-01'
...
[0m14:07:25.973574 [debug] [Thread-1 (]: dbt_clickhouse adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

)
WHERE min_date > '1972-01-01'

[0m14:07:25.975526 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry (compile): 2024-04-10 14:07:25.923503 => 2024-04-10 14:07:25.975372
[0m14:07:25.992695 [debug] [Thread-1 (]: Database Error in model join_utmcraft_registry (models/2_staging/1_join/join_utmcraft_registry.sql)
  :HTTPDriver for http://localhost:8123 returned response code 400)
   Code: 62. DB::Exception: Syntax error: failed at position 259 (')') (line 7, col 1): )
  WHERE min_date > '1972-01-01'
  
   FORMAT Native. Expected one of: SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, EXPLAIN. (SYNTAX_ERROR) (version 24.1.4.20 (official build))
[0m14:07:25.993161 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3876ecae-6af9-4668-ad97-07036c91d45a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ed158d900>]}
[0m14:07:25.993523 [error] [Thread-1 (]: 3 of 3 ERROR creating sql view model test.join_utmcraft_registry ............... [[31mERROR[0m in 0.07s]
[0m14:07:25.993835 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry
[0m14:07:25.996189 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m14:07:25.997156 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:07:25.997478 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.join_utmcraft_registry' was left open.
[0m14:07:25.997708 [debug] [MainThread]: On model.etlcraft_integration_tests.join_utmcraft_registry: Close
[0m14:07:25.997802 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult' was left open.
[0m14:07:25.997911 [debug] [MainThread]: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: Close
[0m14:07:25.998099 [info ] [MainThread]: 
[0m14:07:25.998351 [info ] [MainThread]: Finished running 3 view models in 0 hours 0 minutes and 0.75 seconds (0.75s).
[0m14:07:25.998674 [debug] [MainThread]: Command end result
[0m14:07:26.016701 [info ] [MainThread]: 
[0m14:07:26.017152 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m14:07:26.017364 [info ] [MainThread]: 
[0m14:07:26.017537 [error] [MainThread]: [33mDatabase Error in model join_utmcraft_registry (models/2_staging/1_join/join_utmcraft_registry.sql)[0m
[0m14:07:26.017781 [error] [MainThread]:   :HTTPDriver for http://localhost:8123 returned response code 400)
[0m14:07:26.017992 [error] [MainThread]:    Code: 62. DB::Exception: Syntax error: failed at position 259 (')') (line 7, col 1): )
[0m14:07:26.018141 [error] [MainThread]:   WHERE min_date > '1972-01-01'
[0m14:07:26.018371 [error] [MainThread]:   
[0m14:07:26.018570 [error] [MainThread]:    FORMAT Native. Expected one of: SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, EXPLAIN. (SYNTAX_ERROR) (version 24.1.4.20 (official build))
[0m14:07:26.018855 [info ] [MainThread]: 
[0m14:07:26.019218 [info ] [MainThread]: Done. PASS=2 WARN=0 ERROR=1 SKIP=0 TOTAL=3
[0m14:07:26.019912 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ee83dce80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ed392eb60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ed392eb30>]}
[0m14:07:26.020298 [debug] [MainThread]: Flushing usage events

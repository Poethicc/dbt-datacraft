[0m07:30:05.279619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.283883 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-06-11 07:30:05.222964 => 2024-06-11 07:30:05.283811
[0m07:30:05.284593 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57427313c0>]}
[0m07:30:05.285047 [info ] [Thread-2 (]: 66 of 90 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.07s]
[0m07:30:05.285450 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m07:30:05.286887 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m07:30:05.287928 [info ] [Thread-1 (]: 67 of 90 START sql table model test.graph_edge ................................. [RUN]
[0m07:30:05.288896 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m07:30:05.289154 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m07:30:05.289319 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m07:30:05.295253 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m07:30:05.295753 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-06-11 07:30:05.289408 => 2024-06-11 07:30:05.295675
[0m07:30:05.295947 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m07:30:05.300369 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m07:30:05.316418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:05.322647 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:05.328029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.329567 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m07:30:05.330978 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m07:30:05.341032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.342800 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m07:30:05.346848 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.350522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m07:30:05.356670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.360466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m07:30:05.364136 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.365942 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-06-11 07:30:05.296047 => 2024-06-11 07:30:05.365867
[0m07:30:05.366569 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f574809ee90>]}
[0m07:30:05.366970 [info ] [Thread-1 (]: 67 of 90 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.08s]
[0m07:30:05.367328 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m07:30:05.368734 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m07:30:05.369369 [info ] [Thread-2 (]: 68 of 90 START sql table model test.graph_glue ................................. [RUN]
[0m07:30:05.370056 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m07:30:05.370375 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m07:30:05.370572 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m07:30:05.376149 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m07:30:05.376759 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-06-11 07:30:05.370692 => 2024-06-11 07:30:05.376643
[0m07:30:05.377041 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m07:30:05.388773 [debug] [Thread-2 (]: Running iteration 0
[0m07:30:05.389630 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m07:30:05.416326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:05.417957 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m07:30:05.449400 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:05.450443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m07:30:05.457279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.458630 [debug] [Thread-2 (]: VALUE: 1
[0m07:30:05.458898 [debug] [Thread-2 (]: Running iteration 1
[0m07:30:05.459316 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m07:30:05.491910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:05.493417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m07:30:05.521370 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:05.522534 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m07:30:05.529987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.531520 [debug] [Thread-2 (]: VALUE: 0
[0m07:30:05.531722 [debug] [Thread-2 (]: Running iteration 2
[0m07:30:05.531932 [debug] [Thread-2 (]: Running iteration 3
[0m07:30:05.532044 [debug] [Thread-2 (]: Running iteration 4
[0m07:30:05.532139 [debug] [Thread-2 (]: Running iteration 5
[0m07:30:05.532232 [debug] [Thread-2 (]: Running iteration 6
[0m07:30:05.532324 [debug] [Thread-2 (]: Running iteration 7
[0m07:30:05.532416 [debug] [Thread-2 (]: Running iteration 8
[0m07:30:05.532507 [debug] [Thread-2 (]: Running iteration 9
[0m07:30:05.532598 [debug] [Thread-2 (]: Running iteration 10
[0m07:30:05.532689 [debug] [Thread-2 (]: Running iteration 11
[0m07:30:05.532815 [debug] [Thread-2 (]: Running iteration 12
[0m07:30:05.532922 [debug] [Thread-2 (]: Running iteration 13
[0m07:30:05.534418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m07:30:05.548912 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.552035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:05.556975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.558603 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m07:30:05.559782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m07:30:05.569668 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.570960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m07:30:05.575040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.581607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m07:30:05.584928 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.586250 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-06-11 07:30:05.377136 => 2024-06-11 07:30:05.586191
[0m07:30:05.586821 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f574279c070>]}
[0m07:30:05.587163 [info ] [Thread-2 (]: 68 of 90 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.22s]
[0m07:30:05.587501 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m07:30:05.589088 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m07:30:05.589607 [info ] [Thread-1 (]: 69 of 90 START sql table model test.graph_qid .................................. [RUN]
[0m07:30:05.590326 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m07:30:05.590674 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m07:30:05.590914 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m07:30:05.597306 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m07:30:05.598050 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-06-11 07:30:05.591012 => 2024-06-11 07:30:05.597912
[0m07:30:05.598603 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m07:30:05.603266 [debug] [Thread-1 (]: Running iteration 0
[0m07:30:05.603904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m07:30:05.639421 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m07:30:05.640982 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m07:30:05.671082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:05.672508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m07:30:05.679619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.680867 [debug] [Thread-1 (]: VALUE: 0
[0m07:30:05.681123 [debug] [Thread-1 (]: Running iteration 1
[0m07:30:05.681242 [debug] [Thread-1 (]: Running iteration 2
[0m07:30:05.681344 [debug] [Thread-1 (]: Running iteration 3
[0m07:30:05.681511 [debug] [Thread-1 (]: Running iteration 4
[0m07:30:05.681613 [debug] [Thread-1 (]: Running iteration 5
[0m07:30:05.681709 [debug] [Thread-1 (]: Running iteration 6
[0m07:30:05.681961 [debug] [Thread-1 (]: Running iteration 7
[0m07:30:05.682093 [debug] [Thread-1 (]: Running iteration 8
[0m07:30:05.682197 [debug] [Thread-1 (]: Running iteration 9
[0m07:30:05.682303 [debug] [Thread-1 (]: Running iteration 10
[0m07:30:05.682403 [debug] [Thread-1 (]: Running iteration 11
[0m07:30:05.682498 [debug] [Thread-1 (]: Running iteration 12
[0m07:30:05.682590 [debug] [Thread-1 (]: Running iteration 13
[0m07:30:05.683932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m07:30:05.699642 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:05.702912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:05.707722 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.709117 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m07:30:05.710311 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m07:30:05.723027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.724206 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m07:30:05.728980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.732813 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m07:30:05.737032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.738881 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-06-11 07:30:05.598724 => 2024-06-11 07:30:05.738809
[0m07:30:05.739543 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f574266e770>]}
[0m07:30:05.740075 [info ] [Thread-1 (]: 69 of 90 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.15s]
[0m07:30:05.740427 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m07:30:05.742090 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m07:30:05.742654 [info ] [Thread-2 (]: 70 of 90 START sql table model test.full_events ................................ [RUN]
[0m07:30:05.743264 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m07:30:05.743417 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m07:30:05.743622 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m07:30:05.751219 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m07:30:05.756365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.757710 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m07:30:05.762551 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.764130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m07:30:05.769578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:05.771584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m07:30:05.776273 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.777645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m07:30:05.782580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.784051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m07:30:05.789133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.790859 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m07:30:05.796326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.798504 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m07:30:05.803542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.805086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m07:30:05.810345 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.812618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m07:30:05.817429 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.820033 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m07:30:05.820567 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-06-11 07:30:05.743729 => 2024-06-11 07:30:05.820489
[0m07:30:05.820746 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m07:30:05.825424 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2
    )
        ...
[0m07:30:05.887203 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m07:30:05.890685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:05.895560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.898090 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m07:30:05.898693 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "qid", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2
  ...
[0m07:30:05.956763 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m07:30:05.958043 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m07:30:05.961943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.966170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m07:30:05.970761 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:05.972468 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-06-11 07:30:05.820833 => 2024-06-11 07:30:05.972394
[0m07:30:05.973140 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f575f050dc0>]}
[0m07:30:05.973626 [info ] [Thread-2 (]: 70 of 90 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.23s]
[0m07:30:05.973978 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m07:30:05.975464 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m07:30:05.976622 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m07:30:05.977399 [info ] [Thread-1 (]: 71 of 90 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m07:30:05.978051 [info ] [Thread-2 (]: 72 of 90 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m07:30:05.979337 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m07:30:05.980882 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m07:30:05.981497 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m07:30:05.981966 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m07:30:05.982644 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m07:30:05.983583 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m07:30:05.992680 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m07:30:05.997658 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m07:30:05.999107 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-06-11 07:30:05.993009 => 2024-06-11 07:30:05.998848
[0m07:30:05.999969 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-06-11 07:30:05.984237 => 2024-06-11 07:30:05.999798
[0m07:30:06.000786 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m07:30:06.001399 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m07:30:06.008032 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m07:30:06.013200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m07:30:06.036229 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.039956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.042813 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:06.046066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.046911 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.051440 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m07:30:06.053678 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m07:30:06.058113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.060688 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m07:30:06.061393 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m07:30:06.071242 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.072743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m07:30:06.077337 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.083827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m07:30:06.085387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.087211 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m07:30:06.088739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.090366 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-06-11 07:30:06.001829 => 2024-06-11 07:30:06.090293
[0m07:30:06.091434 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f574266c4c0>]}
[0m07:30:06.092387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.097777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m07:30:06.093535 [info ] [Thread-2 (]: 72 of 90 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.11s]
[0m07:30:06.099425 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m07:30:06.100932 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m07:30:06.101662 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.102260 [info ] [Thread-2 (]: 73 of 90 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m07:30:06.104300 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-06-11 07:30:06.008462 => 2024-06-11 07:30:06.104180
[0m07:30:06.105486 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m07:30:06.108010 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f574266cf70>]}
[0m07:30:06.108997 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m07:30:06.110819 [info ] [Thread-1 (]: 71 of 90 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.13s]
[0m07:30:06.116510 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m07:30:06.117746 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m07:30:06.140196 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m07:30:06.141737 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m07:30:06.142746 [info ] [Thread-1 (]: 74 of 90 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m07:30:06.143877 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m07:30:06.144190 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m07:30:06.144711 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m07:30:06.145276 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-06-11 07:30:06.118443 => 2024-06-11 07:30:06.145141
[0m07:30:06.156603 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m07:30:06.157776 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m07:30:06.164072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m07:30:06.164956 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-06-11 07:30:06.145690 => 2024-06-11 07:30:06.164805
[0m07:30:06.166166 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m07:30:06.174202 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m07:30:06.182566 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.185850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.189804 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.193210 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.194311 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.197187 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m07:30:06.198561 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m07:30:06.200948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.202992 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m07:30:06.203724 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m07:30:06.210746 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.212451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m07:30:06.214481 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.215797 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m07:30:06.217218 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.222144 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m07:30:06.225471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.229206 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m07:30:06.230145 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.232945 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-06-11 07:30:06.158351 => 2024-06-11 07:30:06.232876
[0m07:30:06.233591 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5748a01180>]}
[0m07:30:06.234209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.234968 [info ] [Thread-2 (]: 73 of 90 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.13s]
[0m07:30:06.236788 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-06-11 07:30:06.166661 => 2024-06-11 07:30:06.236724
[0m07:30:06.237361 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m07:30:06.238410 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f575d17f040>]}
[0m07:30:06.239312 [info ] [Thread-1 (]: 74 of 90 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.09s]
[0m07:30:06.240338 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m07:30:06.240717 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m07:30:06.241533 [info ] [Thread-2 (]: 75 of 90 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m07:30:06.242754 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m07:30:06.243591 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m07:30:06.244188 [info ] [Thread-1 (]: 76 of 90 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m07:30:06.244869 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m07:30:06.245614 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m07:30:06.245996 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m07:30:06.246300 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m07:30:06.253622 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m07:30:06.254491 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m07:30:06.260555 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m07:30:06.261506 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-06-11 07:30:06.255340 => 2024-06-11 07:30:06.261343
[0m07:30:06.262339 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-06-11 07:30:06.246606 => 2024-06-11 07:30:06.262192
[0m07:30:06.263137 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m07:30:06.263820 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m07:30:06.268405 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m07:30:06.275278 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m07:30:06.291890 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.292974 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.300983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.305024 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.312632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.313564 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.315602 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m07:30:06.317647 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m07:30:06.319859 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m07:30:06.321038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m07:30:06.328970 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.329788 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.331680 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m07:30:06.333576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m07:30:06.339718 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.340548 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.345732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m07:30:06.350394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m07:30:06.356949 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.359832 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-06-11 07:30:06.264240 => 2024-06-11 07:30:06.359683
[0m07:30:06.361565 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5748a1db40>]}
[0m07:30:06.363142 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.362402 [info ] [Thread-1 (]: 76 of 90 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.12s]
[0m07:30:06.365461 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-06-11 07:30:06.268948 => 2024-06-11 07:30:06.365377
[0m07:30:06.366060 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m07:30:06.367085 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5748c5f1f0>]}
[0m07:30:06.368836 [info ] [Thread-2 (]: 75 of 90 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.12s]
[0m07:30:06.370283 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m07:30:06.371091 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m07:30:06.371718 [info ] [Thread-1 (]: 77 of 90 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m07:30:06.373982 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m07:30:06.376012 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m07:30:06.376958 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m07:30:06.378148 [info ] [Thread-2 (]: 78 of 90 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m07:30:06.379379 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m07:30:06.381332 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m07:30:06.399012 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m07:30:06.399758 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m07:30:06.400762 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m07:30:06.510773 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m07:30:06.511438 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-06-11 07:30:06.381997 => 2024-06-11 07:30:06.511225
[0m07:30:06.512471 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m07:30:06.519275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m07:30:06.519883 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-06-11 07:30:06.401029 => 2024-06-11 07:30:06.519727
[0m07:30:06.521518 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m07:30:06.528696 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m07:30:06.539937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.545521 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.547476 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.551041 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.558584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.560474 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m07:30:06.561248 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.563444 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m07:30:06.564435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m07:30:06.565723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m07:30:06.578014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.579291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m07:30:06.582540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.583331 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.584609 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m07:30:06.589009 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m07:30:06.594024 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.597728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m07:30:06.598637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.601880 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-06-11 07:30:06.522548 => 2024-06-11 07:30:06.601797
[0m07:30:06.602669 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.603997 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5742642410>]}
[0m07:30:06.605861 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-06-11 07:30:06.513005 => 2024-06-11 07:30:06.605800
[0m07:30:06.606723 [info ] [Thread-2 (]: 78 of 90 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.22s]
[0m07:30:06.608027 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5742642440>]}
[0m07:30:06.608558 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m07:30:06.609220 [info ] [Thread-1 (]: 77 of 90 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.23s]
[0m07:30:06.609930 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m07:30:06.611218 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m07:30:06.612374 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m07:30:06.612029 [info ] [Thread-2 (]: 79 of 90 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m07:30:06.613021 [info ] [Thread-1 (]: 80 of 90 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m07:30:06.614533 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m07:30:06.615668 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m07:30:06.616202 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m07:30:06.616587 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m07:30:06.616896 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m07:30:06.617140 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m07:30:06.623215 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m07:30:06.626803 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m07:30:06.627675 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-06-11 07:30:06.623906 => 2024-06-11 07:30:06.627538
[0m07:30:06.628237 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-06-11 07:30:06.617326 => 2024-06-11 07:30:06.628139
[0m07:30:06.628578 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m07:30:06.628841 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m07:30:06.634673 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m07:30:06.639931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m07:30:06.655818 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.656798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.660216 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.664066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.670610 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.672592 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m07:30:06.673621 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.675678 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m07:30:06.676258 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m07:30:06.677426 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m07:30:06.684404 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.685898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m07:30:06.687672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.688967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m07:30:06.692591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.693559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.697156 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m07:30:06.701857 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m07:30:06.706281 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.707637 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-06-11 07:30:06.629024 => 2024-06-11 07:30:06.707579
[0m07:30:06.708547 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.709569 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f575c4b46d0>]}
[0m07:30:06.710925 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-06-11 07:30:06.635094 => 2024-06-11 07:30:06.710865
[0m07:30:06.712049 [info ] [Thread-1 (]: 80 of 90 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m07:30:06.713272 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57480d2980>]}
[0m07:30:06.713763 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m07:30:06.714282 [info ] [Thread-2 (]: 79 of 90 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.10s]
[0m07:30:06.716111 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m07:30:06.716671 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m07:30:06.717486 [info ] [Thread-1 (]: 81 of 90 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m07:30:06.718112 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m07:30:06.718295 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m07:30:06.718539 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m07:30:06.724513 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m07:30:06.728561 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m07:30:06.729164 [info ] [Thread-2 (]: 82 of 90 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m07:30:06.731334 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m07:30:06.732052 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m07:30:06.732375 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m07:30:06.735276 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m07:30:06.735772 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-06-11 07:30:06.732542 => 2024-06-11 07:30:06.735696
[0m07:30:06.736223 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-06-11 07:30:06.719020 => 2024-06-11 07:30:06.735983
[0m07:30:06.736855 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m07:30:06.737291 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m07:30:06.743534 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m07:30:06.748143 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m07:30:06.770237 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.771369 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.775767 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.780590 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.787032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.789137 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m07:30:06.789913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.792074 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m07:30:06.792712 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m07:30:06.793956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m07:30:06.808018 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.808951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.810328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m07:30:06.812191 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m07:30:06.816857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.821323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m07:30:06.822205 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.827810 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m07:30:06.828687 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.831588 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-06-11 07:30:06.737770 => 2024-06-11 07:30:06.831496
[0m07:30:06.832455 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f575c4edd80>]}
[0m07:30:06.833216 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.833903 [info ] [Thread-2 (]: 82 of 90 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.10s]
[0m07:30:06.835896 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-06-11 07:30:06.743996 => 2024-06-11 07:30:06.835811
[0m07:30:06.836643 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m07:30:06.837762 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57425ad810>]}
[0m07:30:06.839675 [info ] [Thread-1 (]: 81 of 90 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.12s]
[0m07:30:06.841027 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.841885 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m07:30:06.842674 [info ] [Thread-2 (]: 83 of 90 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m07:30:06.844786 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m07:30:06.845655 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.846089 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m07:30:06.846744 [info ] [Thread-1 (]: 84 of 90 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m07:30:06.847632 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.849055 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m07:30:06.865935 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m07:30:06.866316 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m07:30:06.867016 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.867499 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-06-11 07:30:06.849572 => 2024-06-11 07:30:06.867392
[0m07:30:06.876185 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m07:30:06.876829 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.882720 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m07:30:06.883272 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-06-11 07:30:06.867796 => 2024-06-11 07:30:06.883117
[0m07:30:06.884379 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.889923 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m07:30:06.911749 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:06.915116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.920321 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.922806 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m07:30:06.923502 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:06.926691 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:06.928163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m07:30:06.931913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.934289 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m07:30:06.934874 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m07:30:06.952901 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.954084 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m07:30:06.958978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.959713 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:06.963945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m07:30:06.965495 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m07:30:06.969990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.971390 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-06-11 07:30:06.877671 => 2024-06-11 07:30:06.971322
[0m07:30:06.972403 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:06.973503 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57480d7be0>]}
[0m07:30:06.977403 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m07:30:06.978668 [info ] [Thread-2 (]: 83 of 90 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.13s]
[0m07:30:06.980505 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.982643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:06.984444 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-06-11 07:30:06.884843 => 2024-06-11 07:30:06.984383
[0m07:30:06.984982 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57480776a0>]}
[0m07:30:06.985317 [info ] [Thread-1 (]: 84 of 90 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.14s]
[0m07:30:06.985667 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m07:30:06.987568 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m07:30:06.988232 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m07:30:06.988868 [info ] [Thread-2 (]: 85 of 90 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m07:30:06.989802 [info ] [Thread-1 (]: 86 of 90 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m07:30:06.991227 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m07:30:06.992216 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m07:30:06.992623 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m07:30:06.992861 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m07:30:06.993310 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m07:30:06.993728 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m07:30:07.008723 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m07:30:07.016394 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m07:30:07.017657 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-06-11 07:30:07.009280 => 2024-06-11 07:30:07.017465
[0m07:30:07.018301 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m07:30:07.019100 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-06-11 07:30:06.994195 => 2024-06-11 07:30:07.018885
[0m07:30:07.024453 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m07:30:07.025179 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m07:30:07.031900 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m07:30:07.049145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:07.053199 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:07.059125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:07.060932 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m07:30:07.062112 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:07.064926 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:07.067587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m07:30:07.074201 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:07.076012 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m07:30:07.076607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m07:30:07.089538 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m07:30:07.091550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m07:30:07.095603 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:07.100340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m07:30:07.104477 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:07.105868 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-06-11 07:30:07.019617 => 2024-06-11 07:30:07.105807
[0m07:30:07.106643 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:07.107482 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f574808a920>]}
[0m07:30:07.108866 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m07:30:07.115321 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:07.119452 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m07:30:07.122935 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:07.124299 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-06-11 07:30:07.027097 => 2024-06-11 07:30:07.124226
[0m07:30:07.124976 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57426244f0>]}
[0m07:30:07.931698 [info ] [Thread-1 (]: 86 of 90 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.12s]
[0m07:30:07.933292 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m07:30:07.932864 [info ] [Thread-2 (]: 85 of 90 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.13s]
[0m07:30:07.935269 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m07:30:07.936094 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m07:30:07.937062 [info ] [Thread-1 (]: 87 of 90 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m07:30:07.937924 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m07:30:07.938979 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m07:30:07.939907 [info ] [Thread-2 (]: 88 of 90 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m07:30:07.940701 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m07:30:07.941721 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m07:30:07.942515 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m07:30:07.943076 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m07:30:07.949748 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m07:30:07.950333 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m07:30:07.954002 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m07:30:07.954992 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-06-11 07:30:07.943413 => 2024-06-11 07:30:07.954762
[0m07:30:07.955836 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m07:30:07.960394 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m07:30:07.961819 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-06-11 07:30:07.950824 => 2024-06-11 07:30:07.961555
[0m07:30:07.962398 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m07:30:07.967470 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m07:30:07.992941 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:07.995844 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:07.997195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:07.999740 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.004627 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.005301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.007818 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m07:30:08.011372 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m07:30:08.013162 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m07:30:08.014190 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m07:30:08.041072 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m07:30:08.042420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m07:30:08.046050 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:08.050529 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m07:30:08.051674 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m07:30:08.054196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m07:30:08.057785 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.059793 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-06-11 07:30:07.956161 => 2024-06-11 07:30:08.059716
[0m07:30:08.060503 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.061369 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5742625510>]}
[0m07:30:08.065576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m07:30:08.066380 [info ] [Thread-1 (]: 87 of 90 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.12s]
[0m07:30:08.068320 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m07:30:08.070244 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:08.072256 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-06-11 07:30:07.962523 => 2024-06-11 07:30:08.072173
[0m07:30:08.073040 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5742626650>]}
[0m07:30:08.073701 [info ] [Thread-2 (]: 88 of 90 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.13s]
[0m07:30:08.074127 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m07:30:08.075496 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m07:30:08.075979 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m07:30:08.076738 [info ] [Thread-1 (]: 89 of 90 START sql table model test.dataset_event_table ........................ [RUN]
[0m07:30:08.078331 [info ] [Thread-2 (]: 90 of 90 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m07:30:08.080108 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m07:30:08.081522 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m07:30:08.082171 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m07:30:08.082872 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m07:30:08.083675 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m07:30:08.084374 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m07:30:08.113269 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.116809 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.125299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.126462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.131823 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.140005 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.148283 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.149240 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.163483 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m07:30:08.172583 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m07:30:08.174093 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-06-11 07:30:08.084921 => 2024-06-11 07:30:08.173861
[0m07:30:08.174705 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m07:30:08.175187 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-06-11 07:30:08.106542 => 2024-06-11 07:30:08.175017
[0m07:30:08.184824 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table



   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
    )
        ...
[0m07:30:08.186230 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m07:30:08.201980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
    )
        ...
[0m07:30:08.281329 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m07:30:08.285042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.287522 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m07:30:08.290865 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m07:30:08.291584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.296398 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m07:30:08.297242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.300335 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m07:30:08.301278 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table



   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
  ...
[0m07:30:08.302867 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
  ...
[0m07:30:08.422253 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m07:30:08.423663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m07:30:08.428023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:08.433340 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m07:30:08.434552 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m07:30:08.435936 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m07:30:08.438831 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m07:30:08.440279 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-06-11 07:30:08.189846 => 2024-06-11 07:30:08.440212
[0m07:30:08.441034 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:08.442364 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5742775690>]}
[0m07:30:08.446671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m07:30:08.447506 [info ] [Thread-2 (]: 90 of 90 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.36s]
[0m07:30:08.449040 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m07:30:08.451451 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m07:30:08.452818 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-06-11 07:30:08.175645 => 2024-06-11 07:30:08.452755
[0m07:30:08.453416 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dd7593c2-7eed-4bca-8ada-96fb3d770178', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f575d17fac0>]}
[0m07:30:08.453795 [info ] [Thread-1 (]: 89 of 90 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.37s]
[0m07:30:08.454172 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m07:30:08.456960 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m07:30:08.457558 [debug] [MainThread]: Connection 'master' was properly closed.
[0m07:30:08.457732 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m07:30:08.457885 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m07:30:08.457995 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m07:30:08.458109 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m07:30:08.458802 [info ] [MainThread]: 
[0m07:30:08.459227 [info ] [MainThread]: Finished running 19 view models, 22 incremental models, 49 table models in 0 hours 0 minutes and 10.82 seconds (10.82s).
[0m07:30:08.462308 [debug] [MainThread]: Command end result
[0m07:30:08.510269 [info ] [MainThread]: 
[0m07:30:08.510813 [info ] [MainThread]: [32mCompleted successfully[0m
[0m07:30:08.511192 [info ] [MainThread]: 
[0m07:30:08.511474 [info ] [MainThread]: Done. PASS=90 WARN=0 ERROR=0 SKIP=0 TOTAL=90
[0m07:30:08.512011 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57489cf220>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57489cdb10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5748bdd570>]}
[0m07:30:08.512330 [debug] [MainThread]: Flushing usage events


============================== 2024-06-11 10:29:40.769560 | dccfe6af-b87d-43e7-9d3c-33606a602a36 ==============================
[0m10:29:40.769560 [info ] [MainThread]: Running with dbt=1.4.7
[0m10:29:40.772836 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m10:29:40.773271 [debug] [MainThread]: Tracking: tracking
[0m10:29:40.779396 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f79920c4e80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7991b82620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7991b825c0>]}
[0m10:29:40.824864 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m10:29:41.271191 [debug] [MainThread]: Partial parsing enabled: 1 files deleted, 2 files added, 3 files changed.
[0m10:29:41.272550 [debug] [MainThread]: Partial parsing: added file: etlcraft_integration_tests://models/1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m10:29:41.273083 [debug] [MainThread]: Partial parsing: added file: etlcraft_integration_tests://models/1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m10:29:41.273297 [debug] [MainThread]: Partial parsing: deleted file: etlcraft://macros/other/make_date.sql
[0m10:29:41.278000 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/incremental/incremental.sql
[0m10:29:41.279848 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/normalize/normalize.sql
[0m10:29:41.280549 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/other/etlcraft_defaults.sql
[0m10:29:41.337814 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m10:29:41.376152 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m10:29:41.377690 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m10:29:41.403071 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m10:29:41.404628 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m10:29:41.410382 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m10:29:41.411810 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_event_metrics.sql
[0m10:29:41.419072 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_event_metrics.sql
[0m10:29:41.420823 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_network.sql
[0m10:29:41.426829 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_network.sql
[0m10:29:41.428386 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_registry_default_events.sql
[0m10:29:41.433705 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_registry_default_events.sql
[0m10:29:41.435029 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m10:29:41.457827 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m10:29:41.459086 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m10:29:41.464466 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m10:29:41.465687 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m10:29:41.474269 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m10:29:41.475392 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m10:29:41.490452 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m10:29:41.491535 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m10:29:41.495411 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m10:29:41.496997 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m10:29:41.503785 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m10:29:41.504952 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m10:29:41.516849 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m10:29:41.517988 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m10:29:41.523391 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m10:29:41.524437 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m10:29:41.529987 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m10:29:41.531158 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m10:29:41.541601 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m10:29:41.542694 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m10:29:41.548213 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m10:29:41.549395 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m10:29:41.560247 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m10:29:41.561884 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m10:29:41.570881 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m10:29:41.572963 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m10:29:41.581262 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m10:29:41.582675 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m10:29:41.587489 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m10:29:41.588699 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m10:29:41.594767 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m10:29:41.596360 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m10:29:41.609689 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m10:29:41.612442 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m10:29:41.619160 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m10:29:41.621840 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m10:29:41.640439 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m10:29:41.644467 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m10:29:41.658817 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m10:29:41.660641 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m10:29:41.806162 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m10:29:41.811796 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m10:29:41.847649 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m10:29:41.849687 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m10:29:41.860105 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m10:29:41.861501 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m10:29:41.872242 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m10:29:41.873960 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m10:29:41.881138 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m10:29:41.882830 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m10:29:41.891502 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m10:29:41.893068 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m10:29:41.908530 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m10:29:41.910168 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m10:29:41.926652 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m10:29:41.928648 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m10:29:41.988361 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m10:29:41.989537 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_events.sql
[0m10:29:42.000247 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_events.sql
[0m10:29:42.001540 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_events.sql
[0m10:29:42.024524 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_events.sql
[0m10:29:42.025826 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_deeplinks.sql
[0m10:29:42.030578 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_deeplinks.sql
[0m10:29:42.031631 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m10:29:42.035959 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m10:29:42.037006 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_installations.sql
[0m10:29:42.041830 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_installations.sql
[0m10:29:42.042871 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m10:29:42.047508 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m10:29:42.048626 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m10:29:42.053131 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m10:29:42.054585 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m10:29:42.062654 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m10:29:42.063705 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m10:29:42.070890 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m10:29:42.072011 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m10:29:42.076190 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m10:29:42.077355 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m10:29:42.086498 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m10:29:42.087761 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m10:29:42.092048 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m10:29:42.093110 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m10:29:42.100781 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m10:29:42.102060 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m10:29:42.106378 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m10:29:42.107494 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m10:29:42.112260 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m10:29:42.113331 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m10:29:42.122193 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m10:29:42.123313 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_datestat.sql
[0m10:29:42.127836 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_datestat.sql
[0m10:29:42.128963 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_mt_datestat.sql
[0m10:29:42.148117 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_mt_datestat.sql
[0m10:29:42.150049 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m10:29:42.155884 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m10:29:42.157141 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_banners.sql
[0m10:29:42.161772 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_banners.sql
[0m10:29:42.163361 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_campaigns.sql
[0m10:29:42.168282 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_campaigns.sql
[0m10:29:42.169445 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m10:29:42.173757 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m10:29:42.174986 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m10:29:42.183536 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m10:29:42.184676 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_periodstat.sql
[0m10:29:42.188988 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_periodstat.sql
[0m10:29:42.190110 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_sheets_periodstat.sql
[0m10:29:42.198128 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_sheets_periodstat.sql
[0m10:29:42.199357 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m10:29:42.203690 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m10:29:42.204871 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m10:29:42.209055 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m10:29:42.210210 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m10:29:42.218726 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m10:29:42.219873 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_utmhashregistry.sql
[0m10:29:42.224401 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_utmhashregistry.sql
[0m10:29:42.225604 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_utmcraft_registry_utmhashregistry.sql
[0m10:29:42.233905 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_utmcraft_registry_utmhashregistry.sql
[0m10:29:42.235082 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m10:29:42.239583 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m10:29:42.240715 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_vkads_datestat.sql
[0m10:29:42.255582 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_vkads_datestat.sql
[0m10:29:42.256729 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans_statistics.sql
[0m10:29:42.262844 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans_statistics.sql
[0m10:29:42.264055 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_registry_default_ad_plans.sql
[0m10:29:42.268529 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_registry_default_ad_plans.sql
[0m10:29:42.269792 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_yd_datestat.sql
[0m10:29:42.283041 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_yd_datestat.sql
[0m10:29:42.284684 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m10:29:42.291365 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m10:29:42.293008 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_ym_events.sql
[0m10:29:42.310732 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_ym_events.sql
[0m10:29:42.312203 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m10:29:42.318932 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m10:29:42.320469 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m10:29:42.327948 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m10:29:42.329572 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m10:29:42.335387 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m10:29:42.337006 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m10:29:42.343047 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m10:29:42.344692 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql
[0m10:29:42.350619 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql
[0m10:29:42.352149 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m10:29:42.358354 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m10:29:42.359971 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql
[0m10:29:42.366797 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql
[0m10:29:42.368507 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql
[0m10:29:42.376217 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql
[0m10:29:42.377763 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql
[0m10:29:42.384338 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql
[0m10:29:42.386005 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m10:29:42.392648 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m10:29:42.394124 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m10:29:42.400005 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m10:29:42.401550 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m10:29:42.407774 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m10:29:42.409419 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql
[0m10:29:42.416633 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql
[0m10:29:42.417818 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql
[0m10:29:42.422063 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql
[0m10:29:42.423148 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m10:29:42.427318 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m10:29:42.428508 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m10:29:42.433104 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m10:29:42.434368 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m10:29:42.439433 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m10:29:42.440544 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql
[0m10:29:42.446106 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql
[0m10:29:42.447263 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m10:29:42.453087 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m10:29:42.454254 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m10:29:42.459277 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m10:29:42.574915 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7990dd5e70>]}
[0m10:29:42.610166 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f799137b850>]}
[0m10:29:42.610599 [info ] [MainThread]: Found 92 models, 6 tests, 0 snapshots, 0 analyses, 535 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m10:29:42.610906 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7992905480>]}
[0m10:29:42.617619 [info ] [MainThread]: 
[0m10:29:42.619646 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:29:42.624664 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m10:29:42.630406 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m10:29:43.333798 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m10:29:43.337542 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:29:43.344726 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m10:29:43.345360 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m10:29:43.353153 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m10:29:43.368587 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:29:43.439481 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7990ca9ae0>]}
[0m10:29:43.440522 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m10:29:43.441077 [info ] [MainThread]: 
[0m10:29:43.448929 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:29:43.449525 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:29:43.450152 [info ] [Thread-1 (]: 1 of 92 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m10:29:43.451216 [info ] [Thread-2 (]: 2 of 92 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m10:29:43.453845 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m10:29:43.455380 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m10:29:43.456291 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m10:29:43.457094 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:29:43.457871 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:29:43.471917 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m10:29:43.480110 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m10:29:43.510533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:29:43.513392 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-06-11 10:29:43.472372 => 2024-06-11 10:29:43.513161
[0m10:29:43.530527 [debug] [Thread-1 (]: Compilation Error in model normalize_adjust_events_default_cohorts (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_adjust_events_default_cohorts (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql)
[0m10:29:43.531626 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d48f730>]}
[0m10:29:43.532581 [error] [Thread-1 (]: 1 of 92 ERROR creating sql view model test.normalize_adjust_events_default_cohorts  [[31mERROR[0m in 0.08s]
[0m10:29:43.535472 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:29:43.537416 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:29:43.539014 [info ] [Thread-1 (]: 3 of 92 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m10:29:43.540913 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m10:29:43.541343 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m10:29:43.541599 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:29:43.547601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m10:29:43.557254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.558837 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-06-11 10:29:43.541709 => 2024-06-11 10:29:43.558686
[0m10:29:43.559764 [debug] [Thread-1 (]: Compilation Error in model normalize_adjust_events_default_network (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_adjust_events_default_network (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql)
[0m10:29:43.560169 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d4ce6e0>]}
[0m10:29:43.560645 [error] [Thread-1 (]: 3 of 92 ERROR creating sql view model test.normalize_adjust_events_default_network  [[31mERROR[0m in 0.02s]
[0m10:29:43.561068 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:29:43.561349 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:29:43.562662 [info ] [Thread-1 (]: 4 of 92 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m10:29:43.564351 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m10:29:43.565111 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m10:29:43.565418 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:29:43.569641 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m10:29:43.578396 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.580438 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-06-11 10:29:43.565520 => 2024-06-11 10:29:43.580212
[0m10:29:43.582579 [debug] [Thread-1 (]: Compilation Error in model normalize_adjust_registry_default_events (models/1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_adjust_registry_default_events (models/1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql)
[0m10:29:43.583101 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c393370>]}
[0m10:29:43.583570 [error] [Thread-1 (]: 4 of 92 ERROR creating sql view model test.normalize_adjust_registry_default_events  [[31mERROR[0m in 0.02s]
[0m10:29:43.584128 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:29:43.584525 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:29:43.586158 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m10:29:43.586725 [info ] [Thread-1 (]: 5 of 92 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m10:29:43.589190 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m10:29:43.589448 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m10:29:43.589607 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:29:43.594203 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m10:29:43.601329 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.602749 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-06-11 10:29:43.589721 => 2024-06-11 10:29:43.602641
[0m10:29:43.603582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:29:43.606472 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-06-11 10:29:43.458280 => 2024-06-11 10:29:43.606314
[0m10:29:43.607374 [debug] [Thread-1 (]: Compilation Error in model normalize_appmetrica_events_default_deeplinks (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_appmetrica_events_default_deeplinks (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql)
[0m10:29:43.609098 [debug] [Thread-2 (]: Compilation Error in model normalize_adjust_events_default_event_metrics (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_adjust_events_default_event_metrics (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql)
[0m10:29:43.609605 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d48e920>]}
[0m10:29:43.609983 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d41e020>]}
[0m10:29:43.611168 [error] [Thread-1 (]: 5 of 92 ERROR creating sql view model test.normalize_appmetrica_events_default_deeplinks  [[31mERROR[0m in 0.02s]
[0m10:29:43.612406 [error] [Thread-2 (]: 2 of 92 ERROR creating sql view model test.normalize_adjust_events_default_event_metrics  [[31mERROR[0m in 0.16s]
[0m10:29:43.613819 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:29:43.614544 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:29:43.615138 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:29:43.615542 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:29:43.616500 [info ] [Thread-1 (]: 6 of 92 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m10:29:43.617321 [info ] [Thread-2 (]: 7 of 92 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m10:29:43.618669 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m10:29:43.619519 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m10:29:43.620002 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m10:29:43.620289 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m10:29:43.620865 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:29:43.621550 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:29:43.626813 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m10:29:43.632308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m10:29:43.641278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.642168 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.643514 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-06-11 10:29:43.627400 => 2024-06-11 10:29:43.643430
[0m10:29:43.645261 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-06-11 10:29:43.622041 => 2024-06-11 10:29:43.645189
[0m10:29:43.647090 [debug] [Thread-2 (]: Compilation Error in model normalize_appmetrica_events_default_installations (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_appmetrica_events_default_installations (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql)
[0m10:29:43.647924 [debug] [Thread-1 (]: Compilation Error in model normalize_appmetrica_events_default_events (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_appmetrica_events_default_events (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql)
[0m10:29:43.648414 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3d7d30>]}
[0m10:29:43.648929 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3d7670>]}
[0m10:29:43.649378 [error] [Thread-2 (]: 7 of 92 ERROR creating sql view model test.normalize_appmetrica_events_default_installations  [[31mERROR[0m in 0.03s]
[0m10:29:43.650260 [error] [Thread-1 (]: 6 of 92 ERROR creating sql view model test.normalize_appmetrica_events_default_events  [[31mERROR[0m in 0.03s]
[0m10:29:43.651089 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:29:43.651892 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:29:43.652687 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:29:43.654270 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:29:43.655742 [info ] [Thread-2 (]: 8 of 92 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m10:29:43.656646 [info ] [Thread-1 (]: 9 of 92 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m10:29:43.658302 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m10:29:43.659152 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m10:29:43.659527 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m10:29:43.659888 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m10:29:43.660136 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:29:43.660361 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:29:43.665488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m10:29:43.670588 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m10:29:43.678731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.679988 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-06-11 10:29:43.660706 => 2024-06-11 10:29:43.679907
[0m10:29:43.680717 [debug] [Thread-2 (]: Compilation Error in model normalize_appmetrica_events_default_screen_view (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_appmetrica_events_default_screen_view (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql)
[0m10:29:43.681454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.682122 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3d51b0>]}
[0m10:29:43.683395 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-06-11 10:29:43.666002 => 2024-06-11 10:29:43.683320
[0m10:29:43.684352 [error] [Thread-2 (]: 8 of 92 ERROR creating sql view model test.normalize_appmetrica_events_default_screen_view  [[31mERROR[0m in 0.02s]
[0m10:29:43.686311 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:29:43.686786 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:29:43.687877 [debug] [Thread-1 (]: Compilation Error in model normalize_appmetrica_events_default_sessions_starts (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_appmetrica_events_default_sessions_starts (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql)
[0m10:29:43.688963 [info ] [Thread-2 (]: 10 of 92 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m10:29:43.690053 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3d4130>]}
[0m10:29:43.690651 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m10:29:43.691129 [error] [Thread-1 (]: 9 of 92 ERROR creating sql view model test.normalize_appmetrica_events_default_sessions_starts  [[31mERROR[0m in 0.03s]
[0m10:29:43.691676 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m10:29:43.692143 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:29:43.692542 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:29:43.693083 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:29:43.697549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m10:29:43.698848 [info ] [Thread-1 (]: 11 of 92 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m10:29:43.701744 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m10:29:43.702123 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m10:29:43.702289 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:29:43.708668 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m10:29:43.710362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.713042 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-06-11 10:29:43.693532 => 2024-06-11 10:29:43.712947
[0m10:29:43.715058 [debug] [Thread-2 (]: Compilation Error in model normalize_appmetrica_registry_default_profiles (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_appmetrica_registry_default_profiles (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql)
[0m10:29:43.715789 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.716392 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3bdcc0>]}
[0m10:29:43.728488 [error] [Thread-2 (]: 10 of 92 ERROR creating sql view model test.normalize_appmetrica_registry_default_profiles  [[31mERROR[0m in 0.03s]
[0m10:29:43.745253 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:29:43.744871 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m10:29:43.746113 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:29:43.748162 [info ] [Thread-2 (]: 12 of 92 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m10:29:43.749376 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m10:29:43.749822 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m10:29:43.750178 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:29:43.754927 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m10:29:43.756658 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.763402 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.770927 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-06-11 10:29:43.750345 => 2024-06-11 10:29:43.770762
[0m10:29:43.804203 [debug] [Thread-2 (]: Compilation Error in model normalize_mt_datestat_default_banners_statistics (models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_mt_datestat_default_banners_statistics (models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql)
[0m10:29:43.810213 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3d4760>]}
[0m10:29:43.810805 [error] [Thread-2 (]: 12 of 92 ERROR creating sql view model test.normalize_mt_datestat_default_banners_statistics  [[31mERROR[0m in 0.06s]
[0m10:29:43.811213 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:29:43.812003 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:29:43.819537 [info ] [Thread-2 (]: 13 of 92 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m10:29:43.834046 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m10:29:43.835203 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m10:29:43.835990 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m10:29:43.836370 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:29:43.841031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m10:29:43.843535 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-06-11 10:29:43.702379 => 2024-06-11 10:29:43.843267
[0m10:29:43.844081 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:29:43.859663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:29:43.872355 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-06-11 10:29:43.836460 => 2024-06-11 10:29:43.872238
[0m10:29:43.880677 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m10:29:43.881972 [debug] [Thread-2 (]: Compilation Error in model normalize_mt_registry_default_banners (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_mt_registry_default_banners (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql)
[0m10:29:43.882836 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3cfb50>]}
[0m10:29:43.883545 [error] [Thread-2 (]: 13 of 92 ERROR creating sql view model test.normalize_mt_registry_default_banners  [[31mERROR[0m in 0.05s]
[0m10:29:43.883935 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:29:43.884297 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:29:43.885979 [info ] [Thread-2 (]: 14 of 92 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m10:29:43.886782 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m10:29:43.887203 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m10:29:43.887477 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:29:43.891760 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m10:29:43.893230 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM test.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m10:29:43.899002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.900358 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-06-11 10:29:43.887613 => 2024-06-11 10:29:43.900257
[0m10:29:43.901285 [debug] [Thread-2 (]: Compilation Error in model normalize_mt_registry_default_campaigns (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_mt_registry_default_campaigns (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql)
[0m10:29:43.901968 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c28d8a0>]}
[0m10:29:43.902542 [error] [Thread-2 (]: 14 of 92 ERROR creating sql view model test.normalize_mt_registry_default_campaigns  [[31mERROR[0m in 0.02s]
[0m10:29:43.902949 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:29:43.903274 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:29:43.904267 [info ] [Thread-2 (]: 15 of 92 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m10:29:43.905829 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m10:29:43.906256 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m10:29:43.906497 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:29:43.911140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m10:29:43.919118 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.921288 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-06-11 10:29:43.906602 => 2024-06-11 10:29:43.921006
[0m10:29:43.922468 [debug] [Thread-2 (]: Compilation Error in model normalize_sheets_periodstat_default_planCosts (models/1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_sheets_periodstat_default_planCosts (models/1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql)
[0m10:29:43.923150 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c391d50>]}
[0m10:29:43.923977 [error] [Thread-2 (]: 15 of 92 ERROR creating sql view model test.normalize_sheets_periodstat_default_planCosts  [[31mERROR[0m in 0.02s]
[0m10:29:43.924426 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:29:43.924792 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:29:43.925879 [info ] [Thread-2 (]: 16 of 92 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m10:29:43.927291 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m10:29:43.927574 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m10:29:43.927734 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:29:43.932450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m10:29:43.940565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.942293 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-06-11 10:29:43.927869 => 2024-06-11 10:29:43.942169
[0m10:29:43.943716 [debug] [Thread-2 (]: Compilation Error in model normalize_utmcraft_registry_default_utmresult (models/1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_utmcraft_registry_default_utmresult (models/1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql)
[0m10:29:43.944083 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c2933a0>]}
[0m10:29:43.944488 [error] [Thread-2 (]: 16 of 92 ERROR creating sql view model test.normalize_utmcraft_registry_default_utmresult  [[31mERROR[0m in 0.02s]
[0m10:29:43.944894 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:29:43.945196 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:29:43.945638 [info ] [Thread-2 (]: 17 of 92 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:29:43.947955 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m10:29:43.948222 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m10:29:43.948438 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:29:43.954275 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:29:43.955157 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m10:29:43.963384 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:29:43.969730 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:29:43.971061 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:29:43.971921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.974494 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-11 10:29:43.948588 => 2024-06-11 10:29:43.974364
[0m10:29:43.976334 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:29:43.979181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m10:29:43.979788 [debug] [Thread-2 (]: Compilation Error in model normalize_vkads_datestat_default_ad_plans_statistics (models/1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_vkads_datestat_default_ad_plans_statistics (models/1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql)
[0m10:29:43.981186 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c2b6b90>]}
[0m10:29:43.981651 [error] [Thread-2 (]: 17 of 92 ERROR creating sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[31mERROR[0m in 0.03s]
[0m10:29:43.982016 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:29:43.982289 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:29:43.983196 [info ] [Thread-2 (]: 18 of 92 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m10:29:43.984636 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m10:29:43.985454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:43.985745 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m10:29:43.987028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m10:29:43.987695 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:29:43.994478 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m10:29:43.995906 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:44.019654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:29:44.024678 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m10:29:44.026132 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-06-11 10:29:43.989484 => 2024-06-11 10:29:44.026041
[0m10:29:44.028089 [debug] [Thread-2 (]: Compilation Error in model normalize_vkads_registry_default_ad_plans (models/1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_vkads_registry_default_ad_plans (models/1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql)
[0m10:29:44.028485 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c26a500>]}
[0m10:29:44.029039 [error] [Thread-2 (]: 18 of 92 ERROR creating sql view model test.normalize_vkads_registry_default_ad_plans  [[31mERROR[0m in 0.04s]
[0m10:29:44.029856 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:29:44.030318 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:29:44.030823 [info ] [Thread-2 (]: 19 of 92 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m10:29:44.032071 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:44.032828 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m10:29:44.034600 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-06-11 10:29:43.844247 => 2024-06-11 10:29:44.034538
[0m10:29:44.034898 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m10:29:44.035660 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c3be410>]}
[0m10:29:44.036139 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:29:44.036869 [info ] [Thread-1 (]: 11 of 92 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.33s]
[0m10:29:44.043647 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m10:29:44.044093 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:29:44.045961 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:29:44.047046 [info ] [Thread-1 (]: 20 of 92 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:29:44.048367 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m10:29:44.048545 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m10:29:44.048694 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:29:44.054698 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'airbyte_internal')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m10:29:44.055871 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:44.058305 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-06-11 10:29:44.037748 => 2024-06-11 10:29:44.058212
[0m10:29:44.059859 [debug] [Thread-2 (]: Compilation Error in model normalize_yd_datestat_default_custom_report (models/1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_yd_datestat_default_custom_report (models/1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql)
[0m10:29:44.060393 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c137820>]}
[0m10:29:44.061251 [error] [Thread-2 (]: 19 of 92 ERROR creating sql view model test.normalize_yd_datestat_default_custom_report  [[31mERROR[0m in 0.03s]
[0m10:29:44.061955 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:29:44.062496 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:29:44.063255 [info ] [Thread-2 (]: 21 of 92 SKIP relation test.incremental_adjust_events_default_cohorts .......... [[33mSKIP[0m]
[0m10:29:44.064819 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:29:44.065241 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:29:44.065913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:44.066179 [info ] [Thread-2 (]: 22 of 92 SKIP relation test.incremental_adjust_events_default_network .......... [[33mSKIP[0m]
[0m10:29:44.069146 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-06-11 10:29:44.048779 => 2024-06-11 10:29:44.069041
[0m10:29:44.069716 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:29:44.070924 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m10:29:44.071582 [info ] [Thread-2 (]: 23 of 92 SKIP relation test.incremental_adjust_registry_default_events ......... [[33mSKIP[0m]
[0m10:29:44.072274 [debug] [Thread-1 (]: Compilation Error in model normalize_ym_events_default_yandex_metrika_stream (models/1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql)
  No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$". Please ensure that your source data follows the expected structure.
  
  > in macro normalize (macros/normalize/normalize.sql)
  > called by model normalize_ym_events_default_yandex_metrika_stream (models/1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql)
[0m10:29:44.073191 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m10:29:44.074127 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c110e20>]}
[0m10:29:44.074772 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:29:44.075548 [error] [Thread-1 (]: 20 of 92 ERROR creating sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[31mERROR[0m in 0.03s]
[0m10:29:44.076540 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:29:44.076014 [info ] [Thread-2 (]: 24 of 92 SKIP relation test.incremental_adjust_events_default_event_metrics .... [[33mSKIP[0m]
[0m10:29:44.077371 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:29:44.078712 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:29:44.079361 [info ] [Thread-1 (]: 25 of 92 SKIP relation test.incremental_appmetrica_events_default_deeplinks .... [[33mSKIP[0m]
[0m10:29:44.080018 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m10:29:44.081065 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:29:44.081688 [info ] [Thread-2 (]: 26 of 92 SKIP relation test.incremental_appmetrica_events_default_installations  [[33mSKIP[0m]
[0m10:29:44.082252 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:29:44.082795 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m10:29:44.083216 [info ] [Thread-1 (]: 27 of 92 SKIP relation test.incremental_appmetrica_events_default_events ....... [[33mSKIP[0m]
[0m10:29:44.083724 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:29:44.084285 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:29:44.084575 [info ] [Thread-2 (]: 28 of 92 SKIP relation test.incremental_appmetrica_events_default_screen_view .. [[33mSKIP[0m]
[0m10:29:44.085124 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:29:44.085768 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:29:44.086082 [info ] [Thread-1 (]: 29 of 92 SKIP relation test.incremental_appmetrica_events_default_sessions_starts  [[33mSKIP[0m]
[0m10:29:44.086727 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:29:44.087356 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:29:44.088353 [info ] [Thread-2 (]: 30 of 92 SKIP relation test.incremental_appmetrica_registry_default_profiles ... [[33mSKIP[0m]
[0m10:29:44.089322 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:29:44.090185 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:29:44.090631 [info ] [Thread-1 (]: 31 of 92 SKIP relation test.incremental_mt_datestat_default_banners_statistics . [[33mSKIP[0m]
[0m10:29:44.091464 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m10:29:44.092895 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:29:44.093405 [info ] [Thread-2 (]: 32 of 92 SKIP relation test.incremental_mt_registry_default_banners ............ [[33mSKIP[0m]
[0m10:29:44.094222 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m10:29:44.094950 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m10:29:44.095425 [info ] [Thread-1 (]: 33 of 92 SKIP relation test.incremental_mt_registry_default_campaigns .......... [[33mSKIP[0m]
[0m10:29:44.095919 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:29:44.096555 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m10:29:44.097074 [info ] [Thread-2 (]: 34 of 92 SKIP relation test.incremental_sheets_periodstat_default_planCosts .... [[33mSKIP[0m]
[0m10:29:44.097710 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:29:44.098439 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:29:44.099217 [info ] [Thread-1 (]: 35 of 92 SKIP relation test.incremental_utmcraft_registry_default_utmresult .... [[33mSKIP[0m]
[0m10:29:44.099904 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:29:44.100740 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:29:44.101101 [info ] [Thread-2 (]: 36 of 92 SKIP relation test.incremental_vkads_datestat_default_ad_plans_statistics  [[33mSKIP[0m]
[0m10:29:44.101941 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m10:29:44.102747 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:29:44.103941 [info ] [Thread-1 (]: 37 of 92 SKIP relation test.incremental_vkads_registry_default_ad_plans ........ [[33mSKIP[0m]
[0m10:29:44.104789 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:29:44.105833 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m10:29:44.106462 [info ] [Thread-2 (]: 38 of 92 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m10:29:44.107514 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:29:44.109171 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m10:29:44.110672 [info ] [Thread-1 (]: 39 of 92 SKIP relation test.incremental_yd_datestat_default_custom_report ...... [[33mSKIP[0m]
[0m10:29:44.111231 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m10:29:44.111742 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:29:44.112525 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:29:44.113218 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:29:44.117808 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m10:29:44.118519 [info ] [Thread-1 (]: 40 of 92 SKIP relation test.incremental_ym_events_default_yandex_metrika_stream  [[33mSKIP[0m]
[0m10:29:44.119433 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:29:44.119973 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:29:44.120817 [info ] [Thread-1 (]: 41 of 92 SKIP relation test.join_appmetrica_events ............................. [[33mSKIP[0m]
[0m10:29:44.121776 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:29:44.122461 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:29:44.124320 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-06-11 10:29:44.113860 => 2024-06-11 10:29:44.124157
[0m10:29:44.123786 [info ] [Thread-1 (]: 42 of 92 SKIP relation test.join_appmetrica_registry_appprofilematching ........ [[33mSKIP[0m]
[0m10:29:44.125130 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:29:44.125737 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:29:44.136993 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:29:44.143369 [info ] [Thread-1 (]: 43 of 92 SKIP relation test.join_mt_datestat ................................... [[33mSKIP[0m]
[0m10:29:44.171459 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:29:44.177613 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:29:44.189470 [info ] [Thread-1 (]: 44 of 92 SKIP relation test.join_sheets_periodstat ............................. [[33mSKIP[0m]
[0m10:29:44.195459 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:29:44.200242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


    
SELECT * REPLACE(toDate(replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1'), 'UTC') AS __date) 

FROM normalize_calltouch_events_default_calls


    )
        ...
[0m10:29:44.201170 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:29:44.204593 [info ] [Thread-1 (]: 45 of 92 SKIP relation test.join_utmcraft_registry_utmhashregistry ............. [[33mSKIP[0m]
[0m10:29:44.205233 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:29:44.205732 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:29:44.206511 [info ] [Thread-1 (]: 46 of 92 SKIP relation test.join_vkads_datestat ................................ [[33mSKIP[0m]
[0m10:29:44.207483 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:29:44.207933 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:29:44.208569 [info ] [Thread-1 (]: 47 of 92 SKIP relation test.join_yd_datestat ................................... [[33mSKIP[0m]
[0m10:29:44.209070 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:29:44.209394 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m10:29:44.210245 [info ] [Thread-1 (]: 48 of 92 SKIP relation test.join_ym_events ..................................... [[33mSKIP[0m]
[0m10:29:44.210643 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m10:29:44.210959 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:29:44.211628 [info ] [Thread-1 (]: 49 of 92 SKIP relation test.combine_registry_appprofilematching ................ [[33mSKIP[0m]
[0m10:29:44.212077 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:29:44.212803 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m10:29:44.213767 [info ] [Thread-1 (]: 50 of 92 SKIP relation test.combine_periodstat ................................. [[33mSKIP[0m]
[0m10:29:44.214426 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m10:29:44.215030 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:29:44.215866 [info ] [Thread-1 (]: 51 of 92 SKIP relation test.combine_registry_utmhashregistry ................... [[33mSKIP[0m]
[0m10:29:44.217220 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:29:44.217802 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m10:29:44.218959 [info ] [Thread-1 (]: 52 of 92 SKIP relation test.combine_datestat ................................... [[33mSKIP[0m]
[0m10:29:44.219937 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m10:29:44.220522 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m10:29:44.221088 [info ] [Thread-1 (]: 53 of 92 SKIP relation test.combine_events ..................................... [[33mSKIP[0m]
[0m10:29:44.222621 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m10:29:44.223235 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:29:44.224476 [info ] [Thread-1 (]: 54 of 92 SKIP relation test.hash_registry_appprofilematching ................... [[33mSKIP[0m]
[0m10:29:44.225751 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:29:44.226394 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m10:29:44.227088 [info ] [Thread-1 (]: 55 of 92 SKIP relation test.hash_periodstat .................................... [[33mSKIP[0m]
[0m10:29:44.227848 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m10:29:44.228399 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:29:44.229097 [info ] [Thread-1 (]: 56 of 92 SKIP relation test.hash_registry_utmhashregistry ...................... [[33mSKIP[0m]
[0m10:29:44.230118 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:29:44.230514 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m10:29:44.231690 [info ] [Thread-1 (]: 57 of 92 SKIP relation test.hash_datestat ...................................... [[33mSKIP[0m]
[0m10:29:44.232389 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m10:29:44.232875 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m10:29:44.233895 [info ] [Thread-1 (]: 58 of 92 SKIP relation test.hash_events ........................................ [[33mSKIP[0m]
[0m10:29:44.234819 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m10:29:44.235529 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:29:44.236216 [info ] [Thread-1 (]: 59 of 92 SKIP relation test.link_registry_appprofilematching ................... [[33mSKIP[0m]
[0m10:29:44.237080 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:29:44.237928 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m10:29:44.238859 [info ] [Thread-1 (]: 60 of 92 SKIP relation test.link_periodstat .................................... [[33mSKIP[0m]
[0m10:29:44.239339 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m10:29:44.240290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:29:44.240882 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:29:44.246334 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:29:44.247322 [info ] [Thread-1 (]: 61 of 92 SKIP relation test.link_registry_utmhashregistry ...................... [[33mSKIP[0m]
[0m10:29:44.248937 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:29:44.249500 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m10:29:44.250532 [info ] [Thread-1 (]: 62 of 92 SKIP relation test.link_datestat ...................................... [[33mSKIP[0m]
[0m10:29:44.251181 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m10:29:44.251888 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_events
[0m10:29:44.252421 [info ] [Thread-1 (]: 63 of 92 SKIP relation test.link_events ........................................ [[33mSKIP[0m]
[0m10:29:44.253870 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:44.254434 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m10:29:44.257472 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m10:29:44.258273 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m10:29:44.260071 [info ] [Thread-1 (]: 64 of 92 SKIP relation test.full_periodstat .................................... [[33mSKIP[0m]
[0m10:29:44.260917 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m10:29:44.261423 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m10:29:44.262177 [info ] [Thread-1 (]: 65 of 92 SKIP relation test.full_datestat ...................................... [[33mSKIP[0m]
[0m10:29:44.262967 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m10:29:44.263412 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m10:29:44.264076 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_tmp ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


    
SELECT * REPLACE(toDate(replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1'), 'UTC') AS __date) 

FROM normalize_calltouch_events_default_calls


  
    ...
[0m10:29:44.264481 [info ] [Thread-1 (]: 66 of 92 SKIP relation test.graph_tuples ....................................... [[33mSKIP[0m]
[0m10:29:44.265701 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m10:29:44.266946 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m10:29:44.267358 [info ] [Thread-1 (]: 67 of 92 SKIP relation test.graph_lookup ....................................... [[33mSKIP[0m]
[0m10:29:44.267635 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m10:29:44.268757 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m10:29:44.269465 [info ] [Thread-1 (]: 68 of 92 SKIP relation test.graph_unique ....................................... [[33mSKIP[0m]
[0m10:29:44.269933 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m10:29:44.271181 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m10:29:44.271779 [info ] [Thread-1 (]: 69 of 92 SKIP relation test.graph_edge ......................................... [[33mSKIP[0m]
[0m10:29:44.272273 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m10:29:44.273285 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m10:29:44.273817 [info ] [Thread-1 (]: 70 of 92 SKIP relation test.graph_glue ......................................... [[33mSKIP[0m]
[0m10:29:44.274383 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m10:29:44.275307 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m10:29:44.275929 [info ] [Thread-1 (]: 71 of 92 SKIP relation test.graph_qid .......................................... [[33mSKIP[0m]
[0m10:29:44.276498 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m10:29:44.277397 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m10:29:44.277740 [info ] [Thread-1 (]: 72 of 92 SKIP relation test.full_events ........................................ [[33mSKIP[0m]
[0m10:29:44.278185 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m10:29:44.279108 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:29:44.279474 [info ] [Thread-1 (]: 73 of 92 SKIP relation test.attr_myfirstfunnel_prepare_with_qid ................ [[33mSKIP[0m]
[0m10:29:44.279870 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:29:44.280169 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:29:44.281073 [info ] [Thread-1 (]: 74 of 92 SKIP relation test.attr_mysecondfunnel_prepare_with_qid ............... [[33mSKIP[0m]
[0m10:29:44.281550 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:29:44.281881 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:29:44.282144 [info ] [Thread-1 (]: 75 of 92 SKIP relation test.attr_myfirstfunnel_create_events ................... [[33mSKIP[0m]
[0m10:29:44.283372 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:29:44.283769 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:29:44.284648 [info ] [Thread-1 (]: 76 of 92 SKIP relation test.attr_mysecondfunnel_create_events .................. [[33mSKIP[0m]
[0m10:29:44.285534 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:29:44.286104 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:29:44.287044 [info ] [Thread-1 (]: 77 of 92 SKIP relation test.attr_myfirstfunnel_add_row_number .................. [[33mSKIP[0m]
[0m10:29:44.287672 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:29:44.288116 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:29:44.289246 [info ] [Thread-1 (]: 78 of 92 SKIP relation test.attr_mysecondfunnel_add_row_number ................. [[33mSKIP[0m]
[0m10:29:44.290263 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:29:44.290828 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:29:44.291809 [info ] [Thread-1 (]: 79 of 92 SKIP relation test.attr_myfirstfunnel_find_new_period ................. [[33mSKIP[0m]
[0m10:29:44.292400 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:29:44.292670 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:29:44.292876 [info ] [Thread-1 (]: 80 of 92 SKIP relation test.attr_mysecondfunnel_find_new_period ................ [[33mSKIP[0m]
[0m10:29:44.294349 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:29:44.294874 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:29:44.295177 [info ] [Thread-1 (]: 81 of 92 SKIP relation test.attr_myfirstfunnel_calculate_period_number ......... [[33mSKIP[0m]
[0m10:29:44.295569 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:29:44.297060 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:29:44.297554 [info ] [Thread-1 (]: 82 of 92 SKIP relation test.attr_mysecondfunnel_calculate_period_number ........ [[33mSKIP[0m]
[0m10:29:44.297867 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:29:44.298159 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:29:44.298844 [info ] [Thread-1 (]: 83 of 92 SKIP relation test.attr_myfirstfunnel_create_missed_steps ............. [[33mSKIP[0m]
[0m10:29:44.299459 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:29:44.299854 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:29:44.300781 [info ] [Thread-1 (]: 84 of 92 SKIP relation test.attr_mysecondfunnel_create_missed_steps ............ [[33mSKIP[0m]
[0m10:29:44.301237 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:29:44.301541 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:29:44.302186 [info ] [Thread-1 (]: 85 of 92 SKIP relation test.attr_myfirstfunnel_join_to_attr_prepare_with_qid ... [[33mSKIP[0m]
[0m10:29:44.303212 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:29:44.303783 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:29:44.304920 [info ] [Thread-1 (]: 86 of 92 SKIP relation test.attr_mysecondfunnel_join_to_attr_prepare_with_qid .. [[33mSKIP[0m]
[0m10:29:44.305500 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:29:44.305971 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:29:44.306664 [info ] [Thread-1 (]: 87 of 92 SKIP relation test.attr_myfirstfunnel_model ........................... [[33mSKIP[0m]
[0m10:29:44.307868 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:29:44.308380 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:29:44.309739 [info ] [Thread-1 (]: 88 of 92 SKIP relation test.attr_mysecondfunnel_model .......................... [[33mSKIP[0m]
[0m10:29:44.310456 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:29:44.310849 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:29:44.311184 [info ] [Thread-1 (]: 89 of 92 SKIP relation test.attr_myfirstfunnel_final_table ..................... [[33mSKIP[0m]
[0m10:29:44.312803 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:29:44.313640 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:29:44.314525 [info ] [Thread-1 (]: 90 of 92 SKIP relation test.attr_mysecondfunnel_final_table .................... [[33mSKIP[0m]
[0m10:29:44.315039 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:29:44.315873 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m10:29:44.316651 [info ] [Thread-1 (]: 91 of 92 SKIP relation test.dataset_event_table ................................ [[33mSKIP[0m]
[0m10:29:44.317297 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m10:29:44.317617 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m10:29:44.318637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:29:44.319326 [info ] [Thread-1 (]: 92 of 92 SKIP relation test.dataset_event_table2 ............................... [[33mSKIP[0m]
[0m10:29:44.324492 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    drop table if exists test.incremental_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:29:44.325503 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m10:29:44.329115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:29:44.330200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    rename table test.incremental_calltouch_events_default_calls__dbt_tmp to test.incremental_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:29:44.333812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:29:44.338490 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
EXCHANGE TABLES test.incremental_calltouch_events_default_calls__dbt_backup AND test.incremental_calltouch_events_default_calls 
  
  ...
[0m10:29:44.343944 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:29:44.350798 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_backup 
  ...
[0m10:29:44.355447 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:29:44.357197 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-06-11 10:29:44.126124 => 2024-06-11 10:29:44.357035
[0m10:29:44.357878 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dccfe6af-b87d-43e7-9d3c-33606a602a36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797c1a5c90>]}
[0m10:29:44.358361 [info ] [Thread-2 (]: 38 of 92 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.25s]
[0m10:29:44.358826 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:29:44.361038 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:29:44.361565 [debug] [MainThread]: Connection 'master' was properly closed.
[0m10:29:44.361702 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream' was left open.
[0m10:29:44.361828 [debug] [MainThread]: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: Close
[0m10:29:44.361919 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls' was left open.
[0m10:29:44.362016 [debug] [MainThread]: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: Close
[0m10:29:44.362566 [info ] [MainThread]: 
[0m10:29:44.362832 [info ] [MainThread]: Finished running 20 view models, 23 incremental models, 49 table models in 0 hours 0 minutes and 1.74 seconds (1.74s).
[0m10:29:44.364466 [debug] [MainThread]: Command end result
[0m10:29:44.406567 [info ] [MainThread]: 
[0m10:29:44.407153 [info ] [MainThread]: [31mCompleted with 19 errors and 0 warnings:[0m
[0m10:29:44.407368 [info ] [MainThread]: 
[0m10:29:44.407569 [error] [MainThread]: [33mCompilation Error in model normalize_adjust_events_default_cohorts (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql)[0m
[0m10:29:44.407785 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$". Please ensure that your source data follows the expected structure.
[0m10:29:44.407977 [error] [MainThread]:   
[0m10:29:44.408163 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.408289 [error] [MainThread]:   > called by model normalize_adjust_events_default_cohorts (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql)
[0m10:29:44.408541 [info ] [MainThread]: 
[0m10:29:44.408781 [error] [MainThread]: [33mCompilation Error in model normalize_adjust_events_default_network (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql)[0m
[0m10:29:44.409048 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$". Please ensure that your source data follows the expected structure.
[0m10:29:44.409331 [error] [MainThread]:   
[0m10:29:44.409625 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.409846 [error] [MainThread]:   > called by model normalize_adjust_events_default_network (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql)
[0m10:29:44.410039 [info ] [MainThread]: 
[0m10:29:44.410194 [error] [MainThread]: [33mCompilation Error in model normalize_adjust_registry_default_events (models/1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql)[0m
[0m10:29:44.410401 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$". Please ensure that your source data follows the expected structure.
[0m10:29:44.410593 [error] [MainThread]:   
[0m10:29:44.410788 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.410976 [error] [MainThread]:   > called by model normalize_adjust_registry_default_events (models/1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql)
[0m10:29:44.411170 [info ] [MainThread]: 
[0m10:29:44.411390 [error] [MainThread]: [33mCompilation Error in model normalize_appmetrica_events_default_deeplinks (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql)[0m
[0m10:29:44.411626 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$". Please ensure that your source data follows the expected structure.
[0m10:29:44.411857 [error] [MainThread]:   
[0m10:29:44.412091 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.412272 [error] [MainThread]:   > called by model normalize_appmetrica_events_default_deeplinks (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql)
[0m10:29:44.412527 [info ] [MainThread]: 
[0m10:29:44.412872 [error] [MainThread]: [33mCompilation Error in model normalize_adjust_events_default_event_metrics (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql)[0m
[0m10:29:44.413479 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$". Please ensure that your source data follows the expected structure.
[0m10:29:44.413774 [error] [MainThread]:   
[0m10:29:44.413964 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.414208 [error] [MainThread]:   > called by model normalize_adjust_events_default_event_metrics (models/1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql)
[0m10:29:44.414499 [info ] [MainThread]: 
[0m10:29:44.414756 [error] [MainThread]: [33mCompilation Error in model normalize_appmetrica_events_default_installations (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql)[0m
[0m10:29:44.415011 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$". Please ensure that your source data follows the expected structure.
[0m10:29:44.415269 [error] [MainThread]:   
[0m10:29:44.415503 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.415719 [error] [MainThread]:   > called by model normalize_appmetrica_events_default_installations (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql)
[0m10:29:44.415941 [info ] [MainThread]: 
[0m10:29:44.416181 [error] [MainThread]: [33mCompilation Error in model normalize_appmetrica_events_default_events (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql)[0m
[0m10:29:44.416431 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$". Please ensure that your source data follows the expected structure.
[0m10:29:44.416684 [error] [MainThread]:   
[0m10:29:44.416914 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.417441 [error] [MainThread]:   > called by model normalize_appmetrica_events_default_events (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql)
[0m10:29:44.418325 [info ] [MainThread]: 
[0m10:29:44.419101 [error] [MainThread]: [33mCompilation Error in model normalize_appmetrica_events_default_screen_view (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql)[0m
[0m10:29:44.419591 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$". Please ensure that your source data follows the expected structure.
[0m10:29:44.419976 [error] [MainThread]:   
[0m10:29:44.420182 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.420352 [error] [MainThread]:   > called by model normalize_appmetrica_events_default_screen_view (models/1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql)
[0m10:29:44.420623 [info ] [MainThread]: 
[0m10:29:44.421065 [error] [MainThread]: [33mCompilation Error in model normalize_appmetrica_events_default_sessions_starts (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql)[0m
[0m10:29:44.421594 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$". Please ensure that your source data follows the expected structure.
[0m10:29:44.422246 [error] [MainThread]:   
[0m10:29:44.422547 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.422774 [error] [MainThread]:   > called by model normalize_appmetrica_events_default_sessions_starts (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql)
[0m10:29:44.423047 [info ] [MainThread]: 
[0m10:29:44.423444 [error] [MainThread]: [33mCompilation Error in model normalize_appmetrica_registry_default_profiles (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql)[0m
[0m10:29:44.423871 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$". Please ensure that your source data follows the expected structure.
[0m10:29:44.424175 [error] [MainThread]:   
[0m10:29:44.424413 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.424665 [error] [MainThread]:   > called by model normalize_appmetrica_registry_default_profiles (models/1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql)
[0m10:29:44.424991 [info ] [MainThread]: 
[0m10:29:44.425260 [error] [MainThread]: [33mCompilation Error in model normalize_mt_datestat_default_banners_statistics (models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql)[0m
[0m10:29:44.425502 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$". Please ensure that your source data follows the expected structure.
[0m10:29:44.425749 [error] [MainThread]:   
[0m10:29:44.426021 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.426279 [error] [MainThread]:   > called by model normalize_mt_datestat_default_banners_statistics (models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql)
[0m10:29:44.426597 [info ] [MainThread]: 
[0m10:29:44.426891 [error] [MainThread]: [33mCompilation Error in model normalize_mt_registry_default_banners (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql)[0m
[0m10:29:44.427237 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$". Please ensure that your source data follows the expected structure.
[0m10:29:44.427531 [error] [MainThread]:   
[0m10:29:44.427831 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.428106 [error] [MainThread]:   > called by model normalize_mt_registry_default_banners (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql)
[0m10:29:44.428516 [info ] [MainThread]: 
[0m10:29:44.428994 [error] [MainThread]: [33mCompilation Error in model normalize_mt_registry_default_campaigns (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql)[0m
[0m10:29:44.429460 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$". Please ensure that your source data follows the expected structure.
[0m10:29:44.429916 [error] [MainThread]:   
[0m10:29:44.430293 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.430625 [error] [MainThread]:   > called by model normalize_mt_registry_default_campaigns (models/1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql)
[0m10:29:44.430923 [info ] [MainThread]: 
[0m10:29:44.431234 [error] [MainThread]: [33mCompilation Error in model normalize_sheets_periodstat_default_planCosts (models/1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql)[0m
[0m10:29:44.431508 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$". Please ensure that your source data follows the expected structure.
[0m10:29:44.431792 [error] [MainThread]:   
[0m10:29:44.432004 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.432218 [error] [MainThread]:   > called by model normalize_sheets_periodstat_default_planCosts (models/1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql)
[0m10:29:44.432436 [info ] [MainThread]: 
[0m10:29:44.432657 [error] [MainThread]: [33mCompilation Error in model normalize_utmcraft_registry_default_utmresult (models/1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql)[0m
[0m10:29:44.432921 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$". Please ensure that your source data follows the expected structure.
[0m10:29:44.433138 [error] [MainThread]:   
[0m10:29:44.433385 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.433646 [error] [MainThread]:   > called by model normalize_utmcraft_registry_default_utmresult (models/1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql)
[0m10:29:44.433969 [info ] [MainThread]: 
[0m10:29:44.434677 [error] [MainThread]: [33mCompilation Error in model normalize_vkads_datestat_default_ad_plans_statistics (models/1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql)[0m
[0m10:29:44.435346 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$". Please ensure that your source data follows the expected structure.
[0m10:29:44.435723 [error] [MainThread]:   
[0m10:29:44.436039 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.436342 [error] [MainThread]:   > called by model normalize_vkads_datestat_default_ad_plans_statistics (models/1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql)
[0m10:29:44.436750 [info ] [MainThread]: 
[0m10:29:44.437429 [error] [MainThread]: [33mCompilation Error in model normalize_vkads_registry_default_ad_plans (models/1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql)[0m
[0m10:29:44.437732 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$". Please ensure that your source data follows the expected structure.
[0m10:29:44.437973 [error] [MainThread]:   
[0m10:29:44.438265 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.438552 [error] [MainThread]:   > called by model normalize_vkads_registry_default_ad_plans (models/1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql)
[0m10:29:44.438831 [info ] [MainThread]: 
[0m10:29:44.439139 [error] [MainThread]: [33mCompilation Error in model normalize_yd_datestat_default_custom_report (models/1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql)[0m
[0m10:29:44.439432 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$". Please ensure that your source data follows the expected structure.
[0m10:29:44.439711 [error] [MainThread]:   
[0m10:29:44.440127 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.440799 [error] [MainThread]:   > called by model normalize_yd_datestat_default_custom_report (models/1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql)
[0m10:29:44.441214 [info ] [MainThread]: 
[0m10:29:44.441614 [error] [MainThread]: [33mCompilation Error in model normalize_ym_events_default_yandex_metrika_stream (models/1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql)[0m
[0m10:29:44.442041 [error] [MainThread]:   No relations were found matching the pattern "[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$". Please ensure that your source data follows the expected structure.
[0m10:29:44.442319 [error] [MainThread]:   
[0m10:29:44.442565 [error] [MainThread]:   > in macro normalize (macros/normalize/normalize.sql)
[0m10:29:44.442839 [error] [MainThread]:   > called by model normalize_ym_events_default_yandex_metrika_stream (models/1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql)
[0m10:29:44.443301 [info ] [MainThread]: 
[0m10:29:44.443925 [info ] [MainThread]: Done. PASS=2 WARN=0 ERROR=19 SKIP=71 TOTAL=92
[0m10:29:44.444664 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d48ed70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d48ed10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f797d73ae90>]}
[0m10:29:44.445033 [debug] [MainThread]: Flushing usage events


============================== 2024-06-11 10:30:47.074745 | ff2a21b5-41a2-4be4-9406-7a354ab2a449 ==============================
[0m10:30:47.074745 [info ] [MainThread]: Running with dbt=1.4.7
[0m10:30:47.076766 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m10:30:47.076973 [debug] [MainThread]: Tracking: tracking
[0m10:30:47.079540 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee59fdcf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee5a638b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee5a62650>]}
[0m10:30:47.106363 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m10:30:47.167672 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m10:30:47.171819 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/normalize/normalize.sql
[0m10:30:47.196551 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m10:30:47.239527 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m10:30:47.241496 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m10:30:47.269086 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m10:30:47.270911 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_event_metrics.sql
[0m10:30:47.278261 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_event_metrics.sql
[0m10:30:47.280040 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m10:30:47.287062 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m10:30:47.288826 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_network.sql
[0m10:30:47.297934 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_network.sql
[0m10:30:47.299085 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m10:30:47.303172 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m10:30:47.304238 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_registry_default_events.sql
[0m10:30:47.308692 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_registry_default_events.sql
[0m10:30:47.310514 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql
[0m10:30:47.314873 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql
[0m10:30:47.316078 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m10:30:47.338438 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m10:30:47.339736 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m10:30:47.345673 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m10:30:47.346754 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m10:30:47.354272 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m10:30:47.355472 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m10:30:47.370896 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m10:30:47.372174 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m10:30:47.376156 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m10:30:47.377366 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m10:30:47.384205 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m10:30:47.385379 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m10:30:47.397886 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m10:30:47.399050 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m10:30:47.405151 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m10:30:47.406385 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m10:30:47.412643 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m10:30:47.413868 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m10:30:47.424315 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m10:30:47.425532 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m10:30:47.431248 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m10:30:47.432495 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m10:30:47.444372 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m10:30:47.445658 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m10:30:47.452364 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m10:30:47.453534 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m10:30:47.459687 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m10:30:47.460774 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m10:30:47.464744 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m10:30:47.465821 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m10:30:47.470205 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m10:30:47.471280 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m10:30:47.477097 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m10:30:47.478342 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m10:30:47.482573 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m10:30:47.483747 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m10:30:47.533351 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m10:30:47.534749 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m10:30:47.539329 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m10:30:47.540524 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m10:30:47.571606 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m10:30:47.572783 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m10:30:47.586095 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m10:30:47.587559 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m10:30:47.593815 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m10:30:47.595013 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m10:30:47.602101 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m10:30:47.603359 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m10:30:47.608433 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m10:30:47.609579 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m10:30:47.614733 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m10:30:47.615869 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m10:30:47.628593 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m10:30:47.629975 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m10:30:47.643032 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m10:30:47.644053 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m10:30:47.695275 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m10:30:47.696482 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_events.sql
[0m10:30:47.707897 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_events.sql
[0m10:30:47.709117 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_events.sql
[0m10:30:47.731689 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_events.sql
[0m10:30:47.732849 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_deeplinks.sql
[0m10:30:47.737483 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_deeplinks.sql
[0m10:30:47.738682 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m10:30:47.744524 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m10:30:47.745681 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m10:30:47.750124 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m10:30:47.751261 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql
[0m10:30:47.757245 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql
[0m10:30:47.758683 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_installations.sql
[0m10:30:47.763076 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_installations.sql
[0m10:30:47.764128 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql
[0m10:30:47.768557 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql
[0m10:30:47.769628 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m10:30:47.774745 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m10:30:47.776205 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql
[0m10:30:47.780540 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql
[0m10:30:47.781584 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m10:30:47.787187 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m10:30:47.788373 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m10:30:47.792403 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m10:30:47.793454 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m10:30:47.800722 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m10:30:47.801790 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m10:30:47.812697 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m10:30:47.814296 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m10:30:47.820341 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m10:30:47.821518 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m10:30:47.830087 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m10:30:47.831126 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m10:30:47.835880 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m10:30:47.836998 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m10:30:47.844898 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m10:30:47.845945 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m10:30:47.851412 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m10:30:47.852468 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m10:30:47.856377 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m10:30:47.857452 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m10:30:47.861856 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m10:30:47.863012 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m10:30:47.869025 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m10:30:47.870201 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m10:30:47.874473 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m10:30:47.875559 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m10:30:47.885151 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m10:30:47.886210 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_datestat.sql
[0m10:30:47.890551 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_datestat.sql
[0m10:30:47.891605 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_mt_datestat.sql
[0m10:30:47.909980 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_mt_datestat.sql
[0m10:30:47.911106 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m10:30:47.916580 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m10:30:47.917807 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m10:30:47.922751 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m10:30:47.923879 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_banners.sql
[0m10:30:47.928589 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_banners.sql
[0m10:30:47.929948 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql
[0m10:30:47.933976 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql
[0m10:30:47.935063 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_campaigns.sql
[0m10:30:47.939557 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_campaigns.sql
[0m10:30:47.940611 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql
[0m10:30:47.944924 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql
[0m10:30:47.945953 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m10:30:47.950382 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m10:30:47.951397 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m10:30:47.960560 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m10:30:47.961651 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_periodstat.sql
[0m10:30:47.965645 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_periodstat.sql
[0m10:30:47.966683 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_sheets_periodstat.sql
[0m10:30:47.974136 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_sheets_periodstat.sql
[0m10:30:47.975288 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m10:30:47.979260 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m10:30:47.980295 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m10:30:47.985184 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m10:30:47.986210 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m10:30:47.990134 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m10:30:47.991266 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m10:30:47.998407 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m10:30:47.999440 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_utmhashregistry.sql
[0m10:30:48.003786 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_utmhashregistry.sql
[0m10:30:48.005018 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_utmcraft_registry_utmhashregistry.sql
[0m10:30:48.013371 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_utmcraft_registry_utmhashregistry.sql
[0m10:30:48.014520 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m10:30:48.018552 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m10:30:48.019653 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m10:30:48.024264 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m10:30:48.025553 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_vkads_datestat.sql
[0m10:30:48.042203 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_vkads_datestat.sql
[0m10:30:48.043332 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans_statistics.sql
[0m10:30:48.047960 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans_statistics.sql
[0m10:30:48.049045 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m10:30:48.054158 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m10:30:48.055258 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_registry_default_ad_plans.sql
[0m10:30:48.060627 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_registry_default_ad_plans.sql
[0m10:30:48.061704 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql
[0m10:30:48.066124 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql
[0m10:30:48.067529 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_yd_datestat.sql
[0m10:30:48.078081 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_yd_datestat.sql
[0m10:30:48.079193 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m10:30:48.083873 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m10:30:48.084978 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m10:30:48.089886 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m10:30:48.091008 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_ym_events.sql
[0m10:30:48.104191 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_ym_events.sql
[0m10:30:48.105354 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m10:30:48.109940 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m10:30:48.111016 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m10:30:48.115930 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m10:30:48.165943 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee4d3a920>]}
[0m10:30:48.238329 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee4a5cb50>]}
[0m10:30:48.238909 [info ] [MainThread]: Found 92 models, 6 tests, 0 snapshots, 0 analyses, 535 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m10:30:48.239158 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee4bd14b0>]}
[0m10:30:48.245320 [info ] [MainThread]: 
[0m10:30:48.246975 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:30:48.251423 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m10:30:48.257171 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m10:30:48.812593 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m10:30:48.817025 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:48.824917 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m10:30:48.825355 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m10:30:48.830545 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m10:30:48.839006 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:48.849547 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ee4bb9480>]}
[0m10:30:48.850321 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m10:30:48.850646 [info ] [MainThread]: 
[0m10:30:48.855833 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:30:48.856226 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:30:48.856549 [info ] [Thread-1 (]: 1 of 92 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m10:30:48.856988 [info ] [Thread-2 (]: 2 of 92 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m10:30:48.858397 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m10:30:48.859840 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m10:30:48.860188 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m10:30:48.860639 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:30:48.861053 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:30:48.945371 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m10:30:48.946861 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m10:30:48.967800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:48.995770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.005426 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.026450 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:30:49.028023 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-06-11 10:30:48.936967 => 2024-06-11 10:30:49.027802
[0m10:30:49.028419 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:30:49.060532 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:30:49.062109 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_cohorts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
)

)
  )...
[0m10:30:49.074220 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.081137 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:49.087259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.088538 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:49.092663 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.095584 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:30:49.096540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m10:30:49.101716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.102924 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:30:49.105827 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.109813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.111878 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.124098 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.144803 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:30:49.153007 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:30:49.154376 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-06-11 10:30:48.861359 => 2024-06-11 10:30:49.154206
[0m10:30:49.155028 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:30:49.159401 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:30:49.160294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.162513 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-06-11 10:30:49.028518 => 2024-06-11 10:30:49.162457
[0m10:30:49.163171 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed12a6860>]}
[0m10:30:49.163576 [info ] [Thread-1 (]: 1 of 92 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.31s]
[0m10:30:49.164937 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:30:49.165640 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:49.167448 [info ] [Thread-1 (]: 3 of 92 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m10:30:49.168266 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m10:30:49.168587 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m10:30:49.168827 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:49.172755 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m10:30:49.173179 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
)

)
  )...
[0m10:30:49.181083 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.185988 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.192416 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.203890 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:49.203193 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:30:49.207369 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:49.209763 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-06-11 10:30:49.168964 => 2024-06-11 10:30:49.209275
[0m10:30:49.210096 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:49.214951 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:30:49.216081 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.218437 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:49.219998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_network') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_network
)

)
  )...
[0m10:30:49.222479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.225523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:30:49.230219 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.231372 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:30:49.232550 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.236345 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:49.238027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.242403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:30:49.243625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.246266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:49.248188 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.249878 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-06-11 10:30:49.155184 => 2024-06-11 10:30:49.249768
[0m10:30:49.250691 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed12a6b00>]}
[0m10:30:49.251342 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.252105 [info ] [Thread-2 (]: 2 of 92 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.39s]
[0m10:30:49.255789 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m10:30:49.256404 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:30:49.257755 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:30:49.258603 [info ] [Thread-2 (]: 4 of 92 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m10:30:49.260354 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m10:30:49.260925 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m10:30:49.261281 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:30:49.265121 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m10:30:49.267049 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.268665 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m10:30:49.272574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.277878 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m10:30:49.278553 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.284000 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.284886 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.288201 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-06-11 10:30:49.210231 => 2024-06-11 10:30:49.288126
[0m10:30:49.289475 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed12a5f90>]}
[0m10:30:49.290313 [info ] [Thread-1 (]: 3 of 92 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.12s]
[0m10:30:49.291182 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:49.291527 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:49.293007 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.292422 [info ] [Thread-1 (]: 5 of 92 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m10:30:49.313163 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m10:30:49.313862 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m10:30:49.314483 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m10:30:49.314705 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:49.319359 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m10:30:49.321456 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-06-11 10:30:49.261466 => 2024-06-11 10:30:49.321241
[0m10:30:49.321989 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:30:49.327726 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m10:30:49.329102 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.332910 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.334359 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


  create view test.normalize_adjust_registry_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_events
)

)
  )...
[0m10:30:49.339085 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.351529 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:49.356716 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:30:49.360249 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m10:30:49.362907 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-06-11 10:30:49.314831 => 2024-06-11 10:30:49.362717
[0m10:30:49.363521 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:49.364493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.371287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events to test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m10:30:49.372940 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:30:49.374514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
)

)
  )...
[0m10:30:49.376337 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.380429 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events 
  
  ...
[0m10:30:49.384562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.385747 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events__dbt_tmp to test.normalize_adjust_registry_default_events 
  
  ...
[0m10:30:49.387530 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.390501 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:49.391353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.397106 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */
drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  ...
[0m10:30:49.400299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.401021 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.402063 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:49.403296 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-06-11 10:30:49.322212 => 2024-06-11 10:30:49.403192
[0m10:30:49.405578 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed12a6350>]}
[0m10:30:49.406455 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.407221 [info ] [Thread-2 (]: 4 of 92 OK created sql view model test.normalize_adjust_registry_default_events  [[32mOK[0m in 0.15s]
[0m10:30:49.410947 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:30:49.411557 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m10:30:49.412955 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:49.413437 [info ] [Thread-2 (]: 6 of 92 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m10:30:49.414447 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m10:30:49.415004 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m10:30:49.416266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.416856 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:49.418077 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:30:49.422643 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m10:30:49.426629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.431659 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:30:49.433115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.439744 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.440602 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.443407 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-06-11 10:30:49.364739 => 2024-06-11 10:30:49.443329
[0m10:30:49.444081 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01f0e50>]}
[0m10:30:49.444609 [info ] [Thread-1 (]: 5 of 92 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.13s]
[0m10:30:49.445163 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:49.445584 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:30:49.446079 [info ] [Thread-1 (]: 7 of 92 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m10:30:49.446869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.447555 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m10:30:49.465103 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m10:30:49.465891 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:30:49.466425 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:30:49.475195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m10:30:49.476970 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-06-11 10:30:49.418409 => 2024-06-11 10:30:49.476738
[0m10:30:49.477463 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:49.481557 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:30:49.482891 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m10:30:49.484404 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.489385 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.494673 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.510011 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m10:30:49.511228 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:49.515851 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:49.516993 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-06-11 10:30:49.467141 => 2024-06-11 10:30:49.516793
[0m10:30:49.517643 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:30:49.522576 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m10:30:49.523692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.525750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:49.527638 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m10:30:49.530310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.533318 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:30:49.537418 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.539269 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:30:49.539935 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.543816 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m10:30:49.547616 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.548248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.549309 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m10:30:49.552927 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:30:49.557794 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.558434 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.562767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m10:30:49.565366 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-06-11 10:30:49.477574 => 2024-06-11 10:30:49.565250
[0m10:30:49.567679 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed016f9d0>]}
[0m10:30:49.568395 [info ] [Thread-2 (]: 6 of 92 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.15s]
[0m10:30:49.568802 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:49.569154 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:49.569707 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.570187 [info ] [Thread-2 (]: 8 of 92 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m10:30:49.571752 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m10:30:49.572603 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m10:30:49.573510 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m10:30:49.573769 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:49.578369 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m10:30:49.580914 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.585023 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m10:30:49.586659 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.591686 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.592580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.594757 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-06-11 10:30:49.517928 => 2024-06-11 10:30:49.594699
[0m10:30:49.595607 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0011900>]}
[0m10:30:49.595969 [info ] [Thread-1 (]: 7 of 92 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.15s]
[0m10:30:49.596289 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m10:30:49.596531 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:49.596840 [info ] [Thread-1 (]: 9 of 92 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m10:30:49.598171 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m10:30:49.598690 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m10:30:49.599366 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.599993 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:49.616216 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m10:30:49.625481 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:30:49.628223 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-06-11 10:30:49.573929 => 2024-06-11 10:30:49.627922
[0m10:30:49.628773 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:49.635046 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:30:49.636578 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.645333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.646877 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m10:30:49.656565 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.669610 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:30:49.670171 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-06-11 10:30:49.611271 => 2024-06-11 10:30:49.670053
[0m10:30:49.670413 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:49.674581 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:30:49.675942 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m10:30:49.677138 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:49.681406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:49.685802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.686977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:49.688328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.691442 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:49.694128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.694823 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.695816 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:49.698532 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:30:49.703310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.704089 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.706200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:30:49.711086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:30:49.715469 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.716062 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.719787 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:30:49.721246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:30:49.725837 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.727608 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-06-11 10:30:49.628997 => 2024-06-11 10:30:49.727533
[0m10:30:49.728510 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf0a830>]}
[0m10:30:49.729334 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.730051 [info ] [Thread-2 (]: 8 of 92 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.16s]
[0m10:30:49.734775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:30:49.735441 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:49.737586 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:49.738939 [info ] [Thread-2 (]: 10 of 92 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m10:30:49.740372 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m10:30:49.740686 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m10:30:49.740970 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:49.741656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.746050 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m10:30:49.748226 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-06-11 10:30:49.670512 => 2024-06-11 10:30:49.748128
[0m10:30:49.750451 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf61960>]}
[0m10:30:49.751570 [info ] [Thread-1 (]: 9 of 92 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.15s]
[0m10:30:49.752709 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:49.754041 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:30:49.755745 [info ] [Thread-1 (]: 11 of 92 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m10:30:49.756606 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m10:30:49.756846 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m10:30:49.757009 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:30:49.762493 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m10:30:49.764877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:49.770263 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.771137 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.777082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.782487 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.788639 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.795967 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:30:49.901744 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-06-11 10:30:49.741967 => 2024-06-11 10:30:49.901597
[0m10:30:49.909180 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m10:30:49.909715 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:49.913898 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:30:49.914394 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-06-11 10:30:49.757098 => 2024-06-11 10:30:49.914266
[0m10:30:49.914921 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:30:49.920712 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m10:30:49.920407 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m10:30:49.922523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM test.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m10:30:49.933549 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.937107 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:30:49.940479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.941696 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:30:49.945431 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.948398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:30:49.951828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.953002 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:30:49.956368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.960906 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:30:49.961502 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:49.965517 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:30:49.968543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:49.969215 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.970707 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:30:49.972042 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-06-11 10:30:49.910199 => 2024-06-11 10:30:49.971985
[0m10:30:49.973725 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae2f850>]}
[0m10:30:49.974390 [info ] [Thread-2 (]: 10 of 92 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.23s]
[0m10:30:49.974952 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:49.975381 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:49.976161 [info ] [Thread-2 (]: 12 of 92 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m10:30:49.977477 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.978081 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m10:30:49.981723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m10:30:49.982183 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m10:30:49.983282 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:49.987549 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m10:30:49.990843 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.992155 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m10:30:49.994759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:49.998592 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:49.999618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.007129 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m10:30:50.008176 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.015572 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:30:50.017910 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-06-11 10:30:49.983892 => 2024-06-11 10:30:50.017630
[0m10:30:50.018466 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:50.023610 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:30:50.024745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.025985 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-06-11 10:30:49.915368 => 2024-06-11 10:30:50.025929
[0m10:30:50.026790 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01d20e0>]}
[0m10:30:50.027800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m10:30:50.027427 [info ] [Thread-1 (]: 11 of 92 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.27s]
[0m10:30:50.029407 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m10:30:50.029981 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:30:50.030283 [info ] [Thread-1 (]: 13 of 92 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m10:30:50.030845 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m10:30:50.031007 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m10:30:50.031180 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:30:50.035490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m10:30:50.039613 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.042938 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:50.045303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.048371 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.049377 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.052725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:50.056212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.062527 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.064388 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m10:30:50.068178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:30:50.071010 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-06-11 10:30:50.031311 => 2024-06-11 10:30:50.070805
[0m10:30:50.072093 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:30:50.077172 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m10:30:50.077910 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m10:30:50.078790 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.081304 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:30:50.085259 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.090445 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:30:50.091221 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.095546 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m10:30:50.096862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.098839 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-06-11 10:30:50.018590 => 2024-06-11 10:30:50.098773
[0m10:30:50.100109 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed129e830>]}
[0m10:30:50.101220 [info ] [Thread-2 (]: 12 of 92 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.12s]
[0m10:30:50.102391 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.102790 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:50.103907 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m10:30:50.104568 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:30:50.107188 [info ] [Thread-2 (]: 14 of 92 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m10:30:50.108505 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m10:30:50.108837 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m10:30:50.109113 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:30:50.114623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m10:30:50.115452 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.121868 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m10:30:50.125726 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.126896 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m10:30:50.127652 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.131725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.132384 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.140795 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m10:30:50.141778 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.147778 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m10:30:50.148568 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-06-11 10:30:50.109336 => 2024-06-11 10:30:50.148419
[0m10:30:50.149011 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:30:50.155619 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m10:30:50.156575 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.159030 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-06-11 10:30:50.072326 => 2024-06-11 10:30:50.158970
[0m10:30:50.159640 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf46680>]}
[0m10:30:50.160036 [info ] [Thread-1 (]: 13 of 92 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.13s]
[0m10:30:50.160358 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m10:30:50.160639 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:50.161192 [info ] [Thread-1 (]: 15 of 92 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m10:30:50.162917 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m10:30:50.163339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m10:30:50.163649 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m10:30:50.164685 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:50.169253 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m10:30:50.178955 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.183081 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.183909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.188800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m10:30:50.191499 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.196441 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m10:30:50.197655 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.198782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m10:30:50.200125 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-06-11 10:30:50.164927 => 2024-06-11 10:30:50.199909
[0m10:30:50.200532 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:50.207027 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m10:30:50.208081 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.211456 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m10:30:50.212915 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m10:30:50.215473 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.217130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m10:30:50.221114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.225172 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m10:30:50.225917 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.229774 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m10:30:50.230639 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.233403 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-06-11 10:30:50.149357 => 2024-06-11 10:30:50.233338
[0m10:30:50.234045 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf09ae0>]}
[0m10:30:50.234849 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.235624 [info ] [Thread-2 (]: 14 of 92 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.13s]
[0m10:30:50.236959 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m10:30:50.237681 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m10:30:50.239169 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:50.240207 [info ] [Thread-2 (]: 16 of 92 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m10:30:50.241332 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m10:30:50.242536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.242993 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m10:30:50.246595 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m10:30:50.247242 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:50.253382 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m10:30:50.254211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.256928 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m10:30:50.260984 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.266164 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m10:30:50.267619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.272169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.275351 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.276798 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-06-11 10:30:50.200672 => 2024-06-11 10:30:50.276733
[0m10:30:50.277447 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf0ac20>]}
[0m10:30:50.277965 [info ] [Thread-1 (]: 15 of 92 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.11s]
[0m10:30:50.278438 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:50.278805 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:50.279147 [info ] [Thread-1 (]: 17 of 92 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:30:50.280017 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.281231 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m10:30:50.287525 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m10:30:50.292021 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:30:50.292596 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:50.297210 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m10:30:50.299137 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-06-11 10:30:50.248594 => 2024-06-11 10:30:50.299003
[0m10:30:50.299487 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:50.305797 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:30:50.306543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.310082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.311282 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m10:30:50.317550 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.330052 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.334666 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:30:50.338156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:30:50.340941 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-11 10:30:50.293088 => 2024-06-11 10:30:50.340790
[0m10:30:50.341301 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:50.346364 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:30:50.347272 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.348516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:30:50.350624 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m10:30:50.353675 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.356631 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:30:50.359982 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.361139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:30:50.364236 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.368339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:30:50.369188 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.373407 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:50.375033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.376719 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-06-11 10:30:50.299611 => 2024-06-11 10:30:50.376656
[0m10:30:50.377463 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed015d690>]}
[0m10:30:50.379152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.378244 [info ] [Thread-2 (]: 16 of 92 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.14s]
[0m10:30:50.381482 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:50.382163 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:50.383739 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:30:50.385033 [info ] [Thread-2 (]: 18 of 92 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m10:30:50.385835 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m10:30:50.386823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.387231 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m10:30:50.390309 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:30:50.390986 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:30:50.398445 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m10:30:50.401180 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.403653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:30:50.408536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.409436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.414665 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:30:50.419417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.423616 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.425512 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-06-11 10:30:50.341429 => 2024-06-11 10:30:50.425430
[0m10:30:50.426265 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0145000>]}
[0m10:30:50.427273 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.428120 [info ] [Thread-1 (]: 17 of 92 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.15s]
[0m10:30:50.447155 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m10:30:50.447816 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:50.449032 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:50.449601 [info ] [Thread-1 (]: 19 of 92 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m10:30:50.452184 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m10:30:50.452811 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-06-11 10:30:50.392296 => 2024-06-11 10:30:50.452601
[0m10:30:50.453385 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m10:30:50.454051 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:30:50.454622 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:50.460395 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m10:30:50.464831 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m10:30:50.467035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m10:30:50.475366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.479722 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.482033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.488273 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m10:30:50.489518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.502778 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.505137 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:30:50.506755 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m10:30:50.508831 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-06-11 10:30:50.460858 => 2024-06-11 10:30:50.508634
[0m10:30:50.509313 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:50.514205 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:30:50.515033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.519074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m10:30:50.520685 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m10:30:50.523155 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.524392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m10:30:50.528504 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.532636 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m10:30:50.534401 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.538051 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:50.538741 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.541151 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-06-11 10:30:50.454938 => 2024-06-11 10:30:50.541074
[0m10:30:50.542008 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafe4910>]}
[0m10:30:50.542750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.543284 [info ] [Thread-2 (]: 18 of 92 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.16s]
[0m10:30:50.544660 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:50.545401 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m10:30:50.547272 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:50.547887 [info ] [Thread-2 (]: 20 of 92 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:30:50.549462 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.550555 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m10:30:50.555498 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:30:50.556067 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m10:30:50.557773 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:50.562609 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m10:30:50.563712 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.566181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:30:50.570751 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.575100 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:30:50.575937 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.580511 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.585036 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.586456 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-06-11 10:30:50.509455 => 2024-06-11 10:30:50.586386
[0m10:30:50.587162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.588214 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed12a5810>]}
[0m10:30:50.599676 [info ] [Thread-1 (]: 19 of 92 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.14s]
[0m10:30:50.605683 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:50.611627 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:50.613764 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:30:50.615394 [info ] [Thread-1 (]: 21 of 92 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m10:30:50.616657 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m10:30:50.617129 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m10:30:50.617672 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:50.622249 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:30:50.622863 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-06-11 10:30:50.558119 => 2024-06-11 10:30:50.622698
[0m10:30:50.623514 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:50.627982 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:30:50.628662 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-06-11 10:30:50.617882 => 2024-06-11 10:30:50.628555
[0m10:30:50.628965 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:50.727800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m10:30:50.763759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:50.775628 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_adjust_events_default_cohorts


    )
        ...
[0m10:30:50.779100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:50.784261 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.786149 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:50.790853 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.794407 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:30:50.798488 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.800178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:30:50.803108 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.803954 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.809380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.816818 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:30:50.821574 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.823274 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-06-11 10:30:50.623667 => 2024-06-11 10:30:50.823200
[0m10:30:50.824163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.825076 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01bea10>]}
[0m10:30:50.827572 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:30:50.828828 [info ] [Thread-2 (]: 20 of 92 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.27s]
[0m10:30:50.830079 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:50.830752 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:50.832053 [info ] [Thread-2 (]: 22 of 92 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m10:30:50.833036 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m10:30:50.833687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_adjust_events_default_cohorts


  
    ...
[0m10:30:50.834103 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m10:30:50.835403 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:50.840440 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:30:50.840978 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-06-11 10:30:50.835932 => 2024-06-11 10:30:50.840904
[0m10:30:50.841165 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:50.846337 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_adjust_events_default_event_metrics


    )
        ...
[0m10:30:50.848233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.855358 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:50.859020 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.860494 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    rename table test.incremental_adjust_events_default_cohorts__dbt_tmp to test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:50.865807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.871632 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
EXCHANGE TABLES test.incremental_adjust_events_default_cohorts__dbt_backup AND test.incremental_adjust_events_default_cohorts 
  
  ...
[0m10:30:50.872725 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:50.877178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.878715 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.893612 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:30:50.896051 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.897676 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:30:50.898799 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.900923 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-06-11 10:30:50.629103 => 2024-06-11 10:30:50.900807
[0m10:30:50.902063 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed00e5e10>]}
[0m10:30:50.902951 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_adjust_events_default_event_metrics


  
    ...
[0m10:30:50.903810 [info ] [Thread-1 (]: 21 of 92 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.29s]
[0m10:30:50.905307 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:50.906085 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:50.907015 [info ] [Thread-1 (]: 23 of 92 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m10:30:50.908341 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m10:30:50.908592 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m10:30:50.908750 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:50.913984 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:30:50.914668 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-06-11 10:30:50.908840 => 2024-06-11 10:30:50.914532
[0m10:30:50.915442 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.915848 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:50.920591 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:50.927684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_adjust_events_default_network


    )
        ...
[0m10:30:50.931614 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:50.933061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    rename table test.incremental_adjust_events_default_event_metrics__dbt_tmp to test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:50.939774 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.941889 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
EXCHANGE TABLES test.incremental_adjust_events_default_event_metrics__dbt_backup AND test.incremental_adjust_events_default_event_metrics 
  
  ...
[0m10:30:50.948187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.953893 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:30:50.954747 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:50.959738 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:50.963965 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.965552 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-06-11 10:30:50.841255 => 2024-06-11 10:30:50.965483
[0m10:30:50.966255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:50.967500 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0198cd0>]}
[0m10:30:50.969964 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:30:50.970851 [info ] [Thread-2 (]: 22 of 92 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.13s]
[0m10:30:50.972407 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:50.973069 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_tmp ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_adjust_events_default_network


  
    ...
[0m10:30:50.973549 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m10:30:50.975252 [info ] [Thread-2 (]: 24 of 92 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m10:30:50.976122 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m10:30:50.976415 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m10:30:50.976570 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m10:30:50.982319 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m10:30:50.982910 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-06-11 10:30:50.976663 => 2024-06-11 10:30:50.982810
[0m10:30:50.983591 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m10:30:50.989708 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:50.999742 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:51.005078 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM normalize_adjust_registry_default_events


    )
        ...
[0m10:30:51.008400 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.009647 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    rename table test.incremental_adjust_events_default_network__dbt_tmp to test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:51.013779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.015525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
EXCHANGE TABLES test.incremental_adjust_events_default_network__dbt_backup AND test.incremental_adjust_events_default_network 
  
  ...
[0m10:30:51.020961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.025732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  ...
[0m10:30:51.026482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:51.030979 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:51.031797 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.034950 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-06-11 10:30:50.921140 => 2024-06-11 10:30:51.034842
[0m10:30:51.035897 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae2f460>]}
[0m10:30:51.036701 [info ] [Thread-1 (]: 23 of 92 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.13s]
[0m10:30:51.037265 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:51.038166 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.038983 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:51.041081 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m10:30:51.041899 [info ] [Thread-1 (]: 25 of 92 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m10:30:51.043244 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m10:30:51.044006 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m10:30:51.044774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM normalize_adjust_registry_default_events


  ...
[0m10:30:51.045251 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:51.055469 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:30:51.057140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.058989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m10:30:51.060205 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-06-11 10:30:51.046617 => 2024-06-11 10:30:51.059989
[0m10:30:51.060783 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:51.067068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_deeplinks


    )
        ...
[0m10:30:51.068467 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.075495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m10:30:51.079982 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.081542 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-06-11 10:30:50.983949 => 2024-06-11 10:30:51.081453
[0m10:30:51.082401 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed12a49d0>]}
[0m10:30:51.083141 [info ] [Thread-2 (]: 24 of 92 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.11s]
[0m10:30:51.083681 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m10:30:51.083980 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:51.085108 [info ] [Thread-2 (]: 26 of 92 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m10:30:51.086372 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m10:30:51.086786 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m10:30:51.087028 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:51.091597 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:30:51.092375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:51.095772 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:51.097481 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-06-11 10:30:51.087249 => 2024-06-11 10:30:51.097238
[0m10:30:51.098070 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:51.105261 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_events


    )
        ...
[0m10:30:51.106402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.109215 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:30:51.110609 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_deeplinks


  
    ...
[0m10:30:51.124221 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.129790 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:51.130884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:51.135658 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:51.136800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.139701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    rename table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp to test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:51.142946 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.145325 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:30:51.146426 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:51.147891 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_deeplinks__dbt_backup AND test.incremental_appmetrica_events_default_deeplinks 
  
  ...
[0m10:30:51.149264 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_tmp ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_events


  
    ...
[0m10:30:51.152501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.157341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:30:51.160587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.162350 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-06-11 10:30:51.061007 => 2024-06-11 10:30:51.162261
[0m10:30:51.163154 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae2ecb0>]}
[0m10:30:51.175350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:51.178475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:51.181799 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.182933 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    rename table test.incremental_appmetrica_events_default_events__dbt_tmp to test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:51.186739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.188072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_events__dbt_backup AND test.incremental_appmetrica_events_default_events 
  
  ...
[0m10:30:51.193026 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.197479 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:30:51.201274 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:51.202659 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-06-11 10:30:51.098558 => 2024-06-11 10:30:51.202578
[0m10:30:51.203331 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0198cd0>]}
[0m10:30:52.592789 [info ] [Thread-1 (]: 25 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.12s]
[0m10:30:52.594145 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:52.593466 [info ] [Thread-2 (]: 26 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.12s]
[0m10:30:52.601028 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m10:30:52.602346 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:52.603174 [info ] [Thread-1 (]: 27 of 92 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m10:30:52.604084 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:52.605386 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m10:30:52.606137 [info ] [Thread-2 (]: 28 of 92 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m10:30:52.606848 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m10:30:52.608030 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m10:30:52.608699 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m10:30:52.609020 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m10:30:52.615248 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m10:30:52.615886 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:52.621321 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:30:52.621851 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-06-11 10:30:52.609278 => 2024-06-11 10:30:52.621721
[0m10:30:52.622377 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m10:30:52.626926 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_installations


    )
        ...
[0m10:30:52.628263 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-06-11 10:30:52.617171 => 2024-06-11 10:30:52.628047
[0m10:30:52.628692 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:52.634664 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_screen_view


    )
        ...
[0m10:30:52.654474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:52.657985 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:52.658810 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:52.664936 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:52.667101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.670046 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m10:30:52.671309 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_installations


  
    ...
[0m10:30:52.675719 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.677442 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:30:52.678043 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_tmp ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_screen_view


  
    ...
[0m10:30:52.683059 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.688297 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    drop table if exists test.incremental_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m10:30:52.692254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.693381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    rename table test.incremental_appmetrica_events_default_installations__dbt_tmp to test.incremental_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m10:30:52.697098 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.698998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_installations__dbt_backup AND test.incremental_appmetrica_events_default_installations 
  
  ...
[0m10:30:52.702709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.706570 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_backup 
  ...
[0m10:30:52.710237 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.711830 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-06-11 10:30:52.622534 => 2024-06-11 10:30:52.711753
[0m10:30:52.712615 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf61990>]}
[0m10:30:52.713188 [info ] [Thread-1 (]: 27 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.11s]
[0m10:30:52.713731 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m10:30:52.714161 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:52.715095 [info ] [Thread-1 (]: 29 of 92 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m10:30:52.715949 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m10:30:52.716238 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m10:30:52.716444 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:52.720842 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:30:52.721407 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-06-11 10:30:52.716540 => 2024-06-11 10:30:52.721314
[0m10:30:52.721662 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:52.727986 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_sessions_starts


    )
        ...
[0m10:30:52.737455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:30:52.741410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:52.744374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:52.745133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.747839 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:52.749182 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    rename table test.incremental_appmetrica_events_default_screen_view__dbt_tmp to test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:52.757457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.759088 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_screen_view__dbt_backup AND test.incremental_appmetrica_events_default_screen_view 
  
  ...
[0m10:30:52.760006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.762733 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:30:52.763794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_appmetrica_events_default_sessions_starts


  
    ...
[0m10:30:52.765062 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.770863 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:30:52.774938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.775765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.777068 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-06-11 10:30:52.628841 => 2024-06-11 10:30:52.777006
[0m10:30:52.780342 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:52.781576 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae24d30>]}
[0m10:30:52.783393 [info ] [Thread-2 (]: 28 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.17s]
[0m10:30:52.784239 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:52.785551 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:52.787002 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.786110 [info ] [Thread-2 (]: 30 of 92 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m10:30:52.788898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    rename table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp to test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:52.789646 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m10:30:52.790840 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m10:30:52.791134 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:52.795147 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:30:52.795943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.797222 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_sessions_starts__dbt_backup AND test.incremental_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:30:52.798377 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-06-11 10:30:52.791465 => 2024-06-11 10:30:52.798258
[0m10:30:52.798851 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:52.803813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM normalize_appmetrica_registry_default_profiles


    )
        ...
[0m10:30:52.804928 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.810246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:30:52.813962 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.815643 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-06-11 10:30:52.721819 => 2024-06-11 10:30:52.815557
[0m10:30:52.816470 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed00e6e00>]}
[0m10:30:52.817099 [info ] [Thread-1 (]: 29 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.10s]
[0m10:30:52.817592 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:52.817903 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:30:52.818284 [info ] [Thread-1 (]: 31 of 92 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m10:30:52.820510 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m10:30:52.821072 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m10:30:52.821373 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:30:52.826941 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m10:30:52.827943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:52.831281 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:52.833065 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-06-11 10:30:52.821510 => 2024-06-11 10:30:52.832830
[0m10:30:52.833971 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:30:52.840727 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


    
SELECT * REPLACE(toDate(replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1'), 'UTC') AS __date) 

FROM normalize_calltouch_events_default_calls


    )
        ...
[0m10:30:52.842120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.844459 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:30:52.845211 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM normalize_appmetrica_registry_default_profiles


  ...
[0m10:30:52.853533 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.854973 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m10:30:52.859303 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.864317 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:30:52.869326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.870963 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-06-11 10:30:52.799056 => 2024-06-11 10:30:52.870892
[0m10:30:52.871688 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:52.872816 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed002c730>]}
[0m10:30:52.875565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:52.876828 [info ] [Thread-2 (]: 30 of 92 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.08s]
[0m10:30:52.878488 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:52.879070 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:52.880410 [info ] [Thread-2 (]: 32 of 92 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m10:30:52.881599 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m10:30:52.881984 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m10:30:52.882189 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:52.886876 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:30:52.888058 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.891820 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m10:30:52.892624 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-06-11 10:30:52.882288 => 2024-06-11 10:30:52.892457
[0m10:30:52.893069 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_tmp ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


    
SELECT * REPLACE(toDate(replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1'), 'UTC') AS __date) 

FROM normalize_calltouch_events_default_calls


  
    ...
[0m10:30:52.893539 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:52.901597 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_mt_datestat_default_banners_statistics


    )
        ...
[0m10:30:52.919798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:52.923717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:52.929741 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.931365 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:30:52.932685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_tmp ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_mt_datestat_default_banners_statistics


  
    ...
[0m10:30:52.934142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:52.937842 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    drop table if exists test.incremental_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:30:52.941921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.942812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.944432 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    rename table test.incremental_calltouch_events_default_calls__dbt_tmp to test.incremental_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m10:30:52.947985 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:52.953048 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.954130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    rename table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp to test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:52.955180 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.956565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
EXCHANGE TABLES test.incremental_calltouch_events_default_calls__dbt_backup AND test.incremental_calltouch_events_default_calls 
  
  ...
[0m10:30:52.959317 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.960721 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners_statistics__dbt_backup AND test.incremental_mt_datestat_default_banners_statistics 
  
  ...
[0m10:30:52.961427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.965932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_backup 
  ...
[0m10:30:52.969485 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:52.970099 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:52.974761 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:30:52.976583 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-06-11 10:30:52.834244 => 2024-06-11 10:30:52.976524
[0m10:30:52.978975 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed00e92a0>]}
[0m10:30:52.979530 [info ] [Thread-1 (]: 31 of 92 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.16s]
[0m10:30:52.979947 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m10:30:52.980299 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m10:30:52.981181 [info ] [Thread-1 (]: 33 of 92 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m10:30:52.981978 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m10:30:52.982319 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m10:30:52.982558 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m10:30:53.061784 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m10:30:53.065409 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m10:30:53.066917 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-06-11 10:30:52.894381 => 2024-06-11 10:30:53.066840
[0m10:30:53.068314 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf57790>]}
[0m10:30:53.069249 [info ] [Thread-2 (]: 32 of 92 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.19s]
[0m10:30:53.070055 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:53.070537 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m10:30:53.071470 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-06-11 10:30:52.982685 => 2024-06-11 10:30:53.071362
[0m10:30:53.072056 [info ] [Thread-2 (]: 34 of 92 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m10:30:53.072810 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m10:30:53.073824 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m10:30:53.078553 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m10:30:53.078092 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM normalize_mt_registry_default_banners


    )
        ...
[0m10:30:53.078948 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m10:30:53.083636 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m10:30:53.084156 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-06-11 10:30:53.080179 => 2024-06-11 10:30:53.084071
[0m10:30:53.084414 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m10:30:53.089420 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM normalize_mt_registry_default_campaigns


    )
        ...
[0m10:30:53.102697 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.106222 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.107016 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.111730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.116454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.118290 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m10:30:53.119172 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.121250 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m10:30:53.122080 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM normalize_mt_registry_default_banners


  ...
[0m10:30:53.123899 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM normalize_mt_registry_default_campaigns


  ...
[0m10:30:53.130966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.132127 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m10:30:53.133259 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.134645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m10:30:53.136601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.140817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m10:30:53.141507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.146359 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m10:30:53.149939 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.150781 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.152183 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-06-11 10:30:53.074191 => 2024-06-11 10:30:53.152130
[0m10:30:53.154596 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-06-11 10:30:53.084510 => 2024-06-11 10:30:53.154540
[0m10:30:53.155754 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed00bbf40>]}
[0m10:30:53.156392 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf55030>]}
[0m10:30:53.156869 [info ] [Thread-1 (]: 33 of 92 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.17s]
[0m10:30:53.158095 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m10:30:53.157781 [info ] [Thread-2 (]: 34 of 92 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.08s]
[0m10:30:53.158942 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:53.159779 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m10:30:53.161009 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:53.160397 [info ] [Thread-1 (]: 35 of 92 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m10:30:53.161633 [info ] [Thread-2 (]: 36 of 92 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m10:30:53.163896 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m10:30:53.164762 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m10:30:53.165072 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m10:30:53.165285 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m10:30:53.165749 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:53.166158 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:53.170088 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m10:30:53.174240 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:30:53.175953 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-06-11 10:30:53.170656 => 2024-06-11 10:30:53.175838
[0m10:30:53.176226 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:53.180263 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM normalize_utmcraft_registry_default_utmresult


    )
        ...
[0m10:30:53.181412 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-06-11 10:30:53.166465 => 2024-06-11 10:30:53.181267
[0m10:30:53.181969 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:53.190083 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM normalize_sheets_periodstat_default_planCosts


    )
        ...
[0m10:30:53.200968 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.204420 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.208226 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.211030 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.212066 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.215019 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:30:53.217562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM normalize_utmcraft_registry_default_utmresult


  ...
[0m10:30:53.219354 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.221475 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m10:30:53.223213 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM normalize_sheets_periodstat_default_planCosts


  ...
[0m10:30:53.229163 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.230451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m10:30:53.231526 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.233583 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m10:30:53.235187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.239423 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:30:53.240446 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.245794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m10:30:53.246692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.249339 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-06-11 10:30:53.176328 => 2024-06-11 10:30:53.249271
[0m10:30:53.250144 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf56bf0>]}
[0m10:30:53.250760 [info ] [Thread-2 (]: 36 of 92 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.09s]
[0m10:30:53.251440 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:53.251952 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:53.252638 [info ] [Thread-2 (]: 37 of 92 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:30:53.253352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.254404 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m10:30:53.256132 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-06-11 10:30:53.182388 => 2024-06-11 10:30:53.256062
[0m10:30:53.256655 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m10:30:53.257907 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed00734c0>]}
[0m10:30:53.258361 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:53.258998 [info ] [Thread-1 (]: 35 of 92 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.09s]
[0m10:30:53.265808 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:30:53.266446 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:53.267635 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m10:30:53.268647 [info ] [Thread-1 (]: 38 of 92 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m10:30:53.269611 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-11 10:30:53.259507 => 2024-06-11 10:30:53.269421
[0m10:30:53.270578 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m10:30:53.271093 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:53.271419 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m10:30:53.276637 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_vkads_datestat_default_ad_plans_statistics


    )
        ...
[0m10:30:53.277390 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m10:30:53.282416 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m10:30:53.282973 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-06-11 10:30:53.278548 => 2024-06-11 10:30:53.282870
[0m10:30:53.283217 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m10:30:53.288792 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM normalize_vkads_registry_default_ad_plans


    )
        ...
[0m10:30:53.296523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.299413 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.304200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.307113 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.308367 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.310734 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:30:53.312460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.314018 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m10:30:53.314636 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_vkads_datestat_default_ad_plans_statistics


  
    ...
[0m10:30:53.316571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM normalize_vkads_registry_default_ad_plans


  ...
[0m10:30:53.326640 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.330715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:53.332264 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.334450 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m10:30:53.335584 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.337905 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:53.338764 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.343232 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m10:30:53.346550 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.347144 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.348755 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:30:53.350939 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-06-11 10:30:53.283323 => 2024-06-11 10:30:53.350859
[0m10:30:53.352462 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0076d10>]}
[0m10:30:53.353020 [info ] [Thread-1 (]: 38 of 92 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.08s]
[0m10:30:53.353681 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m10:30:53.354120 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:53.354629 [info ] [Thread-1 (]: 39 of 92 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m10:30:53.355255 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m10:30:53.355610 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m10:30:53.355822 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:53.359553 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:30:53.360420 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.364345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:30:53.366438 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-06-11 10:30:53.355912 => 2024-06-11 10:30:53.366116
[0m10:30:53.367143 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:53.373381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_yd_datestat_default_custom_report


    )
        ...
[0m10:30:53.374740 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.376265 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-06-11 10:30:53.271677 => 2024-06-11 10:30:53.376202
[0m10:30:53.377504 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed015c490>]}
[0m10:30:53.378130 [info ] [Thread-2 (]: 37 of 92 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.12s]
[0m10:30:53.378468 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:53.378752 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:53.379181 [info ] [Thread-2 (]: 40 of 92 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:30:53.380275 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m10:30:53.381283 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m10:30:53.382324 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:53.391212 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:30:53.392658 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.396275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.398219 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-06-11 10:30:53.382782 => 2024-06-11 10:30:53.398075
[0m10:30:53.398766 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:53.404890 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_ym_events_default_yandex_metrika_stream


    )
        ...
[0m10:30:53.405952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.409447 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:30:53.410728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_tmp ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_yd_datestat_default_custom_report


  
    ...
[0m10:30:53.425751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.426533 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.430489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.435178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:53.441325 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.442221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.443498 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    rename table test.incremental_yd_datestat_default_custom_report__dbt_tmp to test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:53.445998 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:30:53.449399 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream



SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM normalize_ym_events_default_yandex_metrika_stream


  
    ...
[0m10:30:53.451317 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.452997 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
EXCHANGE TABLES test.incremental_yd_datestat_default_custom_report__dbt_backup AND test.incremental_yd_datestat_default_custom_report 
  
  ...
[0m10:30:53.457678 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.462300 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:30:53.467001 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.469076 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-06-11 10:30:53.367756 => 2024-06-11 10:30:53.468994
[0m10:30:53.470094 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0075840>]}
[0m10:30:53.471012 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.472018 [info ] [Thread-1 (]: 39 of 92 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.12s]
[0m10:30:53.478676 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:53.479993 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:53.480720 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:53.482602 [info ] [Thread-1 (]: 41 of 92 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m10:30:53.483328 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m10:30:53.483675 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m10:30:53.483942 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:53.490552 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.491966 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m10:30:53.493386 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    rename table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp to test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:53.499343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.501041 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
EXCHANGE TABLES test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup AND test.incremental_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:30:53.502630 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.515214 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.525346 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:30:53.532747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.538523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.539560 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.541164 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-06-11 10:30:53.398915 => 2024-06-11 10:30:53.541101
[0m10:30:53.548500 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m10:30:53.549353 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf56a70>]}
[0m10:30:53.551562 [info ] [Thread-2 (]: 40 of 92 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.17s]
[0m10:30:53.552488 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:53.552793 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:53.553126 [info ] [Thread-2 (]: 42 of 92 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m10:30:53.554395 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m10:30:53.554572 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m10:30:53.554713 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:53.558510 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m10:30:53.560295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.565917 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.567965 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.571361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.572086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.576901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m10:30:53.579466 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.582370 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m10:30:53.584232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.588593 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.590334 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-06-11 10:30:53.554797 => 2024-06-11 10:30:53.590119
[0m10:30:53.591194 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:53.595782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )


    )
        ...
[0m10:30:53.597177 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.601885 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m10:30:53.611178 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.614354 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.617338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.620785 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.623273 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.627899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m10:30:53.629880 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.631904 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m10:30:53.633854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )


  ...
[0m10:30:53.636152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.640021 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.643089 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.644348 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m10:30:53.645883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.652412 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.653992 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:30:53.658641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:53.661658 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-06-11 10:30:53.484163 => 2024-06-11 10:30:53.661395
[0m10:30:53.662159 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:53.668702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts


    )
        ...
[0m10:30:53.669595 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.672324 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-06-11 10:30:53.591630 => 2024-06-11 10:30:53.672257
[0m10:30:53.672921 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf54310>]}
[0m10:30:53.673273 [info ] [Thread-2 (]: 42 of 92 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.12s]
[0m10:30:53.673628 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:53.673932 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:53.674601 [info ] [Thread-2 (]: 43 of 92 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m10:30:53.675570 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m10:30:53.675776 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m10:30:53.675917 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:53.680892 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m10:30:53.686956 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.690699 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.697023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.700730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m10:30:53.708085 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.713165 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.719122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.722821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m10:30:53.728955 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.732646 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.738907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.748133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m10:30:53.755268 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.760903 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:53.781542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:53.783067 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:30:53.783596 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-06-11 10:30:53.676002 => 2024-06-11 10:30:53.783518
[0m10:30:53.783932 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:53.790074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id


    )
        ...
[0m10:30:53.842635 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:30:53.845772 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.851358 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.853423 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:30:53.853931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id


  
    ...
[0m10:30:53.893098 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:53.896063 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:30:53.899149 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.900242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:30:53.903918 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.905069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
EXCHANGE TABLES test.join_mt_datestat__dbt_backup AND test.join_mt_datestat 
  
  ...
[0m10:30:53.908673 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.914225 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m10:30:53.918233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:53.919642 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-06-11 10:30:53.784062 => 2024-06-11 10:30:53.919585
[0m10:30:53.920135 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed002c4c0>]}
[0m10:30:53.920453 [info ] [Thread-2 (]: 43 of 92 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.24s]
[0m10:30:53.920773 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:53.921055 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:53.921775 [info ] [Thread-2 (]: 44 of 92 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m10:30:53.922917 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m10:30:53.923158 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m10:30:53.923315 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:53.927505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m10:30:53.934112 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.937291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:53.943782 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:53.946679 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m10:30:53.948751 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-06-11 10:30:53.923451 => 2024-06-11 10:30:53.948587
[0m10:30:53.949102 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:53.958283 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )


    )
        ...
[0m10:30:53.986142 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:53.994607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.002405 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.004144 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m10:30:54.004804 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )


  ...
[0m10:30:54.023173 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.024396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m10:30:54.029614 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.034220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:54.037366 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.038744 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-06-11 10:30:53.949214 => 2024-06-11 10:30:54.038676
[0m10:30:54.039399 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf27850>]}
[0m10:30:54.039836 [info ] [Thread-2 (]: 44 of 92 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.12s]
[0m10:30:54.040199 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:54.040505 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:54.041623 [info ] [Thread-2 (]: 45 of 92 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m10:30:54.042596 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m10:30:54.042833 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m10:30:54.043000 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:54.141426 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m10:30:54.142369 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.47 seconds
[0m10:30:54.146742 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.153015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.153652 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.157201 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.159717 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:30:54.161848 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts


  
    ...
[0m10:30:54.166585 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.168915 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m10:30:54.170133 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-06-11 10:30:54.043107 => 2024-06-11 10:30:54.169951
[0m10:30:54.170614 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:54.175817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )


    )
        ...
[0m10:30:54.193998 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.197577 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.202743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.204220 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m10:30:54.204714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )


  ...
[0m10:30:54.227868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.228960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m10:30:54.234235 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.238694 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m10:30:54.243003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.244565 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-06-11 10:30:54.171000 => 2024-06-11 10:30:54.244511
[0m10:30:54.245067 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaeb4d90>]}
[0m10:30:54.245366 [info ] [Thread-2 (]: 45 of 92 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.20s]
[0m10:30:54.245724 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:54.245998 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:54.246314 [info ] [Thread-2 (]: 46 of 92 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m10:30:54.247908 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m10:30:54.248471 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m10:30:54.248795 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:54.254629 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m10:30:54.262991 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.266952 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.272407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.275752 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m10:30:54.283323 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.288500 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.295217 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.298418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m10:30:54.304248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.305668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:54.324724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.325941 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:30:54.326547 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-06-11 10:30:54.248899 => 2024-06-11 10:30:54.326458
[0m10:30:54.326831 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:54.331595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id


    )
        ...
[0m10:30:54.381426 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:30:54.384142 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.390901 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.392437 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:30:54.393164 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id


  
    ...
[0m10:30:54.413875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.419087 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:30:54.422500 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.423611 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:30:54.427592 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.429291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
EXCHANGE TABLES test.join_vkads_datestat__dbt_backup AND test.join_vkads_datestat 
  
  ...
[0m10:30:54.434120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.438065 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m10:30:54.441693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.443207 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-06-11 10:30:54.326928 => 2024-06-11 10:30:54.443133
[0m10:30:54.443789 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.28 seconds
[0m10:30:54.444837 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01dc2e0>]}
[0m10:30:54.448379 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:30:54.449639 [info ] [Thread-2 (]: 46 of 92 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.20s]
[0m10:30:54.451865 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:54.452351 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:54.453042 [info ] [Thread-2 (]: 47 of 92 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m10:30:54.453851 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m10:30:54.454183 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m10:30:54.454409 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:54.457920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m10:30:54.458729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.461653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:30:54.466732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.468512 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
EXCHANGE TABLES test.join_appmetrica_events__dbt_backup AND test.join_appmetrica_events 
  
  ...
[0m10:30:54.471134 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.474560 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.475453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.481431 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m10:30:54.486601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.488388 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-06-11 10:30:53.662415 => 2024-06-11 10:30:54.488313
[0m10:30:54.489234 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.490532 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01b06a0>]}
[0m10:30:54.493284 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m10:30:54.494266 [info ] [Thread-1 (]: 41 of 92 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 1.01s]
[0m10:30:54.496045 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:54.496399 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m10:30:54.497551 [info ] [Thread-1 (]: 48 of 92 START sql incremental model test.join_ym_events ....................... [RUN]
[0m10:30:54.498283 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m10:30:54.498555 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m10:30:54.498724 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m10:30:54.504582 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m10:30:54.506004 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.508111 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:54.513553 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.517890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.524225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.525357 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:30:54.526417 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.530395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m10:30:54.531676 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-06-11 10:30:54.454535 => 2024-06-11 10:30:54.531544
[0m10:30:54.532143 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:54.540036 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps


    )
        ...
[0m10:30:54.540910 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.544152 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:54.564666 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.568196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.570069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:54.571742 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:30:54.572433 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-06-11 10:30:54.498828 => 2024-06-11 10:30:54.572303
[0m10:30:54.572886 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m10:30:54.578794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events


    )
        ...
[0m10:30:54.579743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.582699 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:30:54.583515 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps


  
    ...
[0m10:30:54.599179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.603870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:30:54.607225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.608430 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:30:54.609306 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:54.613747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.614523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.617641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
EXCHANGE TABLES test.join_yd_datestat__dbt_backup AND test.join_yd_datestat 
  
  ...
[0m10:30:54.621011 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.623980 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:30:54.624682 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.630097 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m10:30:54.631407 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_tmp ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events


  
    ...
[0m10:30:54.633973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.635386 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-06-11 10:30:54.532397 => 2024-06-11 10:30:54.635292
[0m10:30:54.636282 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0146f50>]}
[0m10:30:54.636725 [info ] [Thread-2 (]: 47 of 92 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.18s]
[0m10:30:54.637126 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:54.637789 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:54.639019 [info ] [Thread-2 (]: 49 of 92 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m10:30:54.640092 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m10:30:54.640413 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m10:30:54.640592 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:54.644645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m10:30:54.651460 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.655624 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.662199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.664571 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m10:30:54.666125 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-06-11 10:30:54.640687 => 2024-06-11 10:30:54.665818
[0m10:30:54.666635 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:54.672955 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 


    )
        ...
[0m10:30:54.673709 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:54.680806 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m10:30:54.684249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.686622 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events__dbt_backup 
  
  ...
[0m10:30:54.691853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.693471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
EXCHANGE TABLES test.join_ym_events__dbt_backup AND test.join_ym_events 
  
  ...
[0m10:30:54.694823 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.698785 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.699574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.706458 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m10:30:54.711029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.711603 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.712977 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m10:30:54.714286 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-06-11 10:30:54.573078 => 2024-06-11 10:30:54.714225
[0m10:30:54.715900 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed007f5e0>]}
[0m10:30:54.716928 [info ] [Thread-1 (]: 48 of 92 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.22s]
[0m10:30:54.717784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 


  ...
[0m10:30:54.718226 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m10:30:54.720196 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:54.720926 [info ] [Thread-1 (]: 50 of 92 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m10:30:54.722579 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m10:30:54.722814 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m10:30:54.722979 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:54.727170 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m10:30:54.728649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.729932 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m10:30:54.735739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.739997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:54.741633 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.745197 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.746020 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.750651 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-06-11 10:30:54.666850 => 2024-06-11 10:30:54.750572
[0m10:30:54.751535 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae8f400>]}
[0m10:30:54.752706 [info ] [Thread-2 (]: 49 of 92 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.11s]
[0m10:30:54.753249 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:54.753673 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:54.754732 [info ] [Thread-2 (]: 51 of 92 START sql table model test.combine_periodstat ......................... [RUN]
[0m10:30:54.755938 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m10:30:54.756276 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m10:30:54.756471 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:54.760552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m10:30:54.761570 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.765519 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m10:30:54.766567 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-06-11 10:30:54.723068 => 2024-06-11 10:30:54.766405
[0m10:30:54.767248 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:54.772911 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 


    )
        ...
[0m10:30:54.773978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.779148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.785682 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.788454 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m10:30:54.789032 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-06-11 10:30:54.756567 => 2024-06-11 10:30:54.788929
[0m10:30:54.789338 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:54.794830 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 


    )
        ...
[0m10:30:54.795586 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.799731 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.805605 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.807522 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m10:30:54.808162 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 


  ...
[0m10:30:54.821324 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:54.825414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.829592 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:54.830842 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m10:30:54.832264 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.833992 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m10:30:54.834889 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 


  ...
[0m10:30:54.837007 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.840952 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:54.844713 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.845404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.847213 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-06-11 10:30:54.767706 => 2024-06-11 10:30:54.847154
[0m10:30:54.849451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m10:30:54.850351 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01e7eb0>]}
[0m10:30:54.851433 [info ] [Thread-1 (]: 50 of 92 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.13s]
[0m10:30:54.852214 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:54.852673 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m10:30:54.853572 [info ] [Thread-1 (]: 52 of 92 START sql incremental model test.combine_datestat ..................... [RUN]
[0m10:30:54.854367 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m10:30:54.854660 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m10:30:54.854953 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m10:30:54.859219 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m10:30:54.860868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.865344 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m10:30:54.867527 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.871280 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.872834 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.874394 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-06-11 10:30:54.789524 => 2024-06-11 10:30:54.874322
[0m10:30:54.875054 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0082a10>]}
[0m10:30:54.875600 [info ] [Thread-2 (]: 51 of 92 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.12s]
[0m10:30:54.876057 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:54.876851 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.877362 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m10:30:54.881105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.882561 [info ] [Thread-2 (]: 53 of 92 START sql incremental model test.combine_events ....................... [RUN]
[0m10:30:54.885094 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m10:30:54.885453 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m10:30:54.885889 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m10:30:54.890924 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m10:30:54.892230 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.895806 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.902101 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.906308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.907510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.911972 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:30:54.912839 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.917087 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.918520 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-06-11 10:30:54.855094 => 2024-06-11 10:30:54.918303
[0m10:30:54.919106 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m10:30:54.925488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 


    )
        ...
[0m10:30:54.926205 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:54.931541 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m10:30:54.932127 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-06-11 10:30:54.886106 => 2024-06-11 10:30:54.932032
[0m10:30:54.932447 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m10:30:54.940707 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 


    )
        ...
[0m10:30:54.960964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:54.963905 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.969045 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.970708 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:30:54.971153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString('') as utmSource ,
        toString('') as utmMedium ,
        toString('') as utmCampaign ,
        toString('') as utmTerm ,
        toString('') as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 


  
    ...
[0m10:30:54.975117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:54.978155 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:54.983408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:54.985300 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m10:30:54.986914 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 


  
    ...
[0m10:30:55.006953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:55.010456 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m10:30:55.013790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.014983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat__dbt_backup 
  
  ...
[0m10:30:55.018625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.020076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
EXCHANGE TABLES test.combine_datestat__dbt_backup AND test.combine_datestat 
  
  ...
[0m10:30:55.021376 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:55.024476 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m10:30:55.025200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.030267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m10:30:55.031123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.033484 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events__dbt_backup 
  
  ...
[0m10:30:55.035158 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.036594 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-06-11 10:30:54.919354 => 2024-06-11 10:30:55.036508
[0m10:30:55.037337 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed005cc70>]}
[0m10:30:55.038352 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.037887 [info ] [Thread-1 (]: 52 of 92 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.18s]
[0m10:30:55.040086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
EXCHANGE TABLES test.combine_events__dbt_backup AND test.combine_events 
  
  ...
[0m10:30:55.040878 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m10:30:55.041970 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:55.042658 [info ] [Thread-1 (]: 54 of 92 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m10:30:55.044009 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m10:30:55.045341 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m10:30:55.045955 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:55.047150 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.054710 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_registry_appprofilematching')        
...
[0m10:30:55.059847 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m10:30:55.065398 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.067267 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-06-11 10:30:54.932565 => 2024-06-11 10:30:55.067184
[0m10:30:55.068370 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.069126 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafb1900>]}
[0m10:30:55.072266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:55.073144 [info ] [Thread-2 (]: 53 of 92 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.18s]
[0m10:30:55.074938 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m10:30:55.076221 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:55.077284 [info ] [Thread-2 (]: 55 of 92 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m10:30:55.078432 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m10:30:55.079235 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.079481 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m10:30:55.084013 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m10:30:55.084661 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:55.089764 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_registry_utmhashregistry')        
...
[0m10:30:55.091192 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-06-11 10:30:55.047703 => 2024-06-11 10:30:55.091032
[0m10:30:55.091801 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:55.097190 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.combine_registry_appprofilematching
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:55.097826 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.104902 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:55.110501 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.115455 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m10:30:55.115985 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-06-11 10:30:55.085459 => 2024-06-11 10:30:55.115884
[0m10:30:55.116232 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:55.121039 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.combine_registry_utmhashregistry
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:55.122790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:55.126388 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:55.132238 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.133954 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m10:30:55.136291 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.combine_registry_appprofilematching
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m10:30:55.143335 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:55.146139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:55.152306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.153774 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m10:30:55.154735 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:55.156455 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m10:30:55.157572 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.combine_registry_utmhashregistry
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m10:30:55.161206 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.165971 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:55.170624 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.171942 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-06-11 10:30:55.092097 => 2024-06-11 10:30:55.171884
[0m10:30:55.172502 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed00adff0>]}
[0m10:30:55.172846 [info ] [Thread-1 (]: 54 of 92 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.13s]
[0m10:30:55.173178 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:55.173459 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:55.174094 [info ] [Thread-1 (]: 56 of 92 START sql table model test.hash_periodstat ............................ [RUN]
[0m10:30:55.175048 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m10:30:55.175484 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m10:30:55.175672 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:55.179207 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_periodstat')        
...
[0m10:30:55.185534 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:55.186807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m10:30:55.188402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.192548 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:55.193527 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.198413 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:55.199231 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.206440 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.209297 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m10:30:55.211581 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-06-11 10:30:55.116340 => 2024-06-11 10:30:55.211523
[0m10:30:55.212682 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaeb4d90>]}
[0m10:30:55.215176 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-06-11 10:30:55.175762 => 2024-06-11 10:30:55.214940
[0m10:30:55.215713 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:55.291037 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.combine_periodstat
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:55.314921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:55.317809 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:55.322080 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.323460 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m10:30:55.323857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.combine_periodstat
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m10:30:55.337733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:55.338812 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m10:30:55.343494 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.347508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m10:30:55.352307 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:55.353427 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-06-11 10:30:55.215901 => 2024-06-11 10:30:55.353373
[0m10:30:55.353923 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae87b50>]}
[0m10:30:56.197952 [info ] [Thread-2 (]: 55 of 92 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.13s]
[0m10:30:56.198595 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:56.199969 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m10:30:56.199158 [info ] [Thread-1 (]: 56 of 92 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.18s]
[0m10:30:56.202294 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:56.203532 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m10:30:56.201008 [info ] [Thread-2 (]: 57 of 92 START sql incremental model test.hash_datestat ........................ [RUN]
[0m10:30:56.204534 [info ] [Thread-1 (]: 58 of 92 START sql incremental model test.hash_events .......................... [RUN]
[0m10:30:56.205712 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m10:30:56.206550 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m10:30:56.206984 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m10:30:56.207437 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m10:30:56.207795 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m10:30:56.208240 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m10:30:56.211960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m10:30:56.216707 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m10:30:56.224691 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.225367 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.228699 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.234261 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.241396 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.246732 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:30:56.247647 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.259520 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m10:30:56.260155 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-06-11 10:30:56.208554 => 2024-06-11 10:30:56.260022
[0m10:30:56.260634 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m10:30:56.265431 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.combine_datestat
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:56.266978 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-06-11 10:30:56.212450 => 2024-06-11 10:30:56.266669
[0m10:30:56.267656 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m10:30:56.274410 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.combine_events
)

) 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:56.300187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:56.303262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.308666 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.310572 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:30:56.311366 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.combine_datestat
)

) 
WHERE 

    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m10:30:56.359263 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:30:56.362439 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m10:30:56.365461 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.366593 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat__dbt_backup 
  
  ...
[0m10:30:56.370203 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.371464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
EXCHANGE TABLES test.hash_datestat__dbt_backup AND test.hash_datestat 
  
  ...
[0m10:30:56.376265 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.380869 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m10:30:56.384495 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.385977 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-06-11 10:30:56.260770 => 2024-06-11 10:30:56.385899
[0m10:30:56.386744 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaea3c40>]}
[0m10:30:56.387414 [info ] [Thread-2 (]: 57 of 92 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.18s]
[0m10:30:56.387999 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m10:30:56.388514 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:56.389946 [info ] [Thread-2 (]: 59 of 92 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m10:30:56.391028 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m10:30:56.391223 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m10:30:56.391378 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:56.396127 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.401092 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.402869 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m10:30:56.405964 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-06-11 10:30:56.391466 => 2024-06-11 10:30:56.405751
[0m10:30:56.406429 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:56.413594 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


    )
        ...
[0m10:30:56.428066 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m10:30:56.430733 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.432175 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.436959 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.437871 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.441168 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m10:30:56.443294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.444872 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m10:30:56.445702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.combine_events
)

) 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m10:30:56.446868 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


  ...
[0m10:30:56.468958 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.470206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m10:30:56.474559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.479087 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:56.482819 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.484494 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-06-11 10:30:56.406538 => 2024-06-11 10:30:56.484427
[0m10:30:56.485247 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaea3130>]}
[0m10:30:56.485809 [info ] [Thread-2 (]: 59 of 92 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.09s]
[0m10:30:56.486322 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:56.486758 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:56.487766 [info ] [Thread-2 (]: 60 of 92 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m10:30:56.488676 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m10:30:56.488959 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m10:30:56.489263 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:56.495101 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.500906 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.503283 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m10:30:56.503862 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-06-11 10:30:56.489512 => 2024-06-11 10:30:56.503769
[0m10:30:56.504255 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:56.511274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime


    )
        ...
[0m10:30:56.528384 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.531220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.536543 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.538698 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m10:30:56.539620 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime


  ...
[0m10:30:56.557986 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.559307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m10:30:56.563963 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.568589 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:56.572175 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.573508 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-06-11 10:30:56.504404 => 2024-06-11 10:30:56.573443
[0m10:30:56.574233 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaea0cd0>]}
[0m10:30:56.574716 [info ] [Thread-2 (]: 60 of 92 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.09s]
[0m10:30:56.575332 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:56.575798 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m10:30:56.576538 [info ] [Thread-2 (]: 61 of 92 START sql table model test.link_periodstat ............................ [RUN]
[0m10:30:56.577239 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m10:30:56.577619 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m10:30:56.577797 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m10:30:56.583333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.584154 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m10:30:56.588424 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m10:30:56.589533 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.594159 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m10:30:56.595651 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.598037 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events__dbt_backup 
  
  ...
[0m10:30:56.600050 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-06-11 10:30:56.577891 => 2024-06-11 10:30:56.599351
[0m10:30:56.600497 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m10:30:56.608717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.610857 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime


    )
        ...
[0m10:30:56.612490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
EXCHANGE TABLES test.hash_events__dbt_backup AND test.hash_events 
  
  ...
[0m10:30:56.618031 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.624706 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m10:30:56.628323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.629853 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-06-11 10:30:56.267887 => 2024-06-11 10:30:56.629761
[0m10:30:56.630683 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaea3790>]}
[0m10:30:56.631345 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.635875 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.632290 [info ] [Thread-1 (]: 58 of 92 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.42s]
[0m10:30:56.638385 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m10:30:56.639209 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m10:30:56.639975 [info ] [Thread-1 (]: 62 of 92 START sql table model test.link_datestat .............................. [RUN]
[0m10:30:56.641255 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m10:30:56.641650 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m10:30:56.642697 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.643094 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m10:30:56.645097 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m10:30:56.654324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.656134 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime


  ...
[0m10:30:56.661967 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.664043 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m10:30:56.664476 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-06-11 10:30:56.645627 => 2024-06-11 10:30:56.664401
[0m10:30:56.664662 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m10:30:56.671864 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime


    )
        ...
[0m10:30:56.676948 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.678711 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m10:30:56.688756 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.692997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m10:30:56.693843 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.698643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.699797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.707984 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.709534 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-06-11 10:30:56.600646 => 2024-06-11 10:30:56.709457
[0m10:30:56.711432 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m10:30:56.712447 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf45d50>]}
[0m10:30:56.713597 [info ] [Thread-2 (]: 61 of 92 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.14s]
[0m10:30:56.714110 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m10:30:56.714958 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m10:30:56.716558 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime


  ...
[0m10:30:56.715941 [info ] [Thread-2 (]: 63 of 92 START sql table model test.link_events ................................ [RUN]
[0m10:30:56.719716 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m10:30:56.719986 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m10:30:56.720142 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m10:30:56.726224 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.732586 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.736971 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m10:30:56.739394 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-06-11 10:30:56.720232 => 2024-06-11 10:30:56.738930
[0m10:30:56.740699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.741238 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m10:30:56.742845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m10:30:56.750029 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,UtmHashHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, UtmHashHash, YmClientHash, __id, __datetime


    )
        ...
[0m10:30:56.756925 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.764238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m10:30:56.768422 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.770464 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-06-11 10:30:56.664753 => 2024-06-11 10:30:56.770379
[0m10:30:56.771470 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaea01f0>]}
[0m10:30:56.772093 [info ] [Thread-1 (]: 62 of 92 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.13s]
[0m10:30:56.772664 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m10:30:56.773050 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m10:30:56.773483 [info ] [Thread-1 (]: 64 of 92 START sql table model test.full_periodstat ............................ [RUN]
[0m10:30:56.774966 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m10:30:56.775484 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m10:30:56.776146 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m10:30:56.785713 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m10:30:56.787653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:56.794698 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.796505 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.799238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m10:30:56.802659 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.806372 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m10:30:56.808213 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.810635 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m10:30:56.812508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,UtmHashHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, UtmHashHash, YmClientHash, __id, __datetime


  ...
[0m10:30:56.816992 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.819302 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m10:30:56.826953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.828915 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m10:30:56.835643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.837955 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m10:30:56.843923 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.846003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m10:30:56.852696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.854647 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m10:30:56.860321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.862312 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m10:30:56.866305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:30:56.868211 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m10:30:56.869314 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.872740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m10:30:56.874999 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.879611 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m10:30:56.880583 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.887064 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.888182 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.890759 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-06-11 10:30:56.743294 => 2024-06-11 10:30:56.890665
[0m10:30:56.891571 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0147f40>]}
[0m10:30:56.892135 [info ] [Thread-2 (]: 63 of 92 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.17s]
[0m10:30:56.892561 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m10:30:56.892915 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m10:30:56.894246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.894931 [info ] [Thread-2 (]: 65 of 92 START sql incremental model test.full_datestat ........................ [RUN]
[0m10:30:56.897506 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m10:30:56.898248 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m10:30:56.898791 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m10:30:56.899194 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m10:30:56.906686 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m10:30:56.908873 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-06-11 10:30:56.776570 => 2024-06-11 10:30:56.908656
[0m10:30:56.909714 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m10:30:56.914887 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2
    )
        ...
[0m10:30:56.915806 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.920202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m10:30:56.926513 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.928668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m10:30:56.935341 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.938201 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m10:30:56.941501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:56.944249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:56.945803 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.947651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m10:30:56.951432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.953679 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m10:30:56.954463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.956094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m10:30:56.957757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

  
    
    
        
        insert into test.full_periodstat__dbt_backup ("period_date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2
  ...
[0m10:30:56.962180 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.963999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m10:30:56.970056 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.971271 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m10:30:56.976028 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:56.977980 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m10:30:56.978836 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.981597 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m10:30:56.986060 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:56.987512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m10:30:56.988304 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:56.994711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m10:30:56.998650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.000152 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-06-11 10:30:56.910393 => 2024-06-11 10:30:56.999997
[0m10:30:57.000946 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae845b0>]}
[0m10:30:57.001963 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.002904 [info ] [Thread-1 (]: 64 of 92 OK created sql table model test.full_periodstat ....................... [[32mOK[0m in 0.23s]
[0m10:30:57.004790 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m10:30:57.005448 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m10:30:57.006036 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m10:30:57.006776 [info ] [Thread-1 (]: 66 of 92 START sql table model test.graph_tuples ............................... [RUN]
[0m10:30:57.007191 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-06-11 10:30:56.899562 => 2024-06-11 10:30:57.007104
[0m10:30:57.007878 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m10:30:57.008410 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m10:30:57.008676 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m10:30:57.014964 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2
    )
        ...
[0m10:30:57.015533 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m10:30:57.025129 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:30:57.028104 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-06-11 10:30:57.017230 => 2024-06-11 10:30:57.027922
[0m10:30:57.028598 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m10:30:57.033731 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m10:30:57.047869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:57.051614 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.057463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.058483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.060472 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m10:30:57.064106 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.066509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2
  
    ...
[0m10:30:57.071325 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.073523 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:30:57.075444 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m10:30:57.089271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.092237 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    drop table if exists test.full_datestat__dbt_backup 
  
  ...
[0m10:30:57.095040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.096218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    rename table test.full_datestat__dbt_tmp to test.full_datestat__dbt_backup 
  
  ...
[0m10:30:57.097026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.099270 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m10:30:57.103039 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.103662 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.105087 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m10:30:57.109701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m10:30:57.114918 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.115790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.120962 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m10:30:57.123124 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-06-11 10:30:57.028788 => 2024-06-11 10:30:57.123061
[0m10:30:57.125405 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01e0fd0>]}
[0m10:30:57.126695 [info ] [Thread-1 (]: 66 of 92 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.12s]
[0m10:30:57.127271 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m10:30:57.128382 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.129921 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-06-11 10:30:57.008846 => 2024-06-11 10:30:57.129862
[0m10:30:57.130596 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0144130>]}
[0m10:30:57.131150 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m10:30:57.131484 [info ] [Thread-1 (]: 67 of 92 START sql table model test.graph_lookup ............................... [RUN]
[0m10:30:57.132144 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m10:30:57.132488 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m10:30:57.132734 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m10:30:57.133370 [info ] [Thread-2 (]: 65 of 92 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.23s]
[0m10:30:57.141572 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m10:30:57.142129 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m10:30:57.143744 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-06-11 10:30:57.133848 => 2024-06-11 10:30:57.143622
[0m10:30:57.144057 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m10:30:57.148075 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m10:30:57.165353 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.168999 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.175959 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.177445 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m10:30:57.178880 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m10:30:57.195937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.197215 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m10:30:57.201317 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.205634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m10:30:57.209389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.210704 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-06-11 10:30:57.144156 => 2024-06-11 10:30:57.210647
[0m10:30:57.211273 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae870d0>]}
[0m10:30:57.211611 [info ] [Thread-1 (]: 67 of 92 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.08s]
[0m10:30:57.211952 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m10:30:57.213256 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m10:30:57.215001 [info ] [Thread-2 (]: 68 of 92 START sql table model test.graph_unique ............................... [RUN]
[0m10:30:57.216005 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m10:30:57.216260 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m10:30:57.216427 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m10:30:57.219629 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m10:30:57.221358 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-06-11 10:30:57.216517 => 2024-06-11 10:30:57.221202
[0m10:30:57.221678 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m10:30:57.225601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m10:30:57.241660 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.245223 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.251072 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.252925 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m10:30:57.254267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m10:30:57.260211 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.261389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m10:30:57.265591 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.270247 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m10:30:57.274380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.275537 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-06-11 10:30:57.221773 => 2024-06-11 10:30:57.275485
[0m10:30:57.276018 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf08b20>]}
[0m10:30:57.276318 [info ] [Thread-2 (]: 68 of 92 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m10:30:57.276691 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m10:30:57.278801 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m10:30:57.279329 [info ] [Thread-1 (]: 69 of 92 START sql table model test.graph_edge ................................. [RUN]
[0m10:30:57.279908 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m10:30:57.280034 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m10:30:57.280166 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m10:30:57.283408 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m10:30:57.284910 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-06-11 10:30:57.280250 => 2024-06-11 10:30:57.284736
[0m10:30:57.285387 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m10:30:57.290012 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m10:30:57.307595 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.310670 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.315921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.317806 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m10:30:57.319293 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m10:30:57.328047 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.329431 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m10:30:57.334065 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.338781 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m10:30:57.344262 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.347747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m10:30:57.350976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.352727 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-06-11 10:30:57.285535 => 2024-06-11 10:30:57.352673
[0m10:30:57.353220 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed001a920>]}
[0m10:30:57.353697 [info ] [Thread-1 (]: 69 of 92 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m10:30:57.354110 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m10:30:57.355761 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m10:30:57.356240 [info ] [Thread-2 (]: 70 of 92 START sql table model test.graph_glue ................................. [RUN]
[0m10:30:57.356998 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m10:30:57.357262 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m10:30:57.357536 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m10:30:57.361730 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m10:30:57.364152 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-06-11 10:30:57.357634 => 2024-06-11 10:30:57.363987
[0m10:30:57.364566 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m10:30:57.368905 [debug] [Thread-2 (]: Running iteration 0
[0m10:30:57.369871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:30:57.409135 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:57.410248 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:30:57.448044 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:57.449068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:30:57.455841 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.457470 [debug] [Thread-2 (]: VALUE: 1
[0m10:30:57.457712 [debug] [Thread-2 (]: Running iteration 1
[0m10:30:57.458099 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:30:57.491323 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:57.492411 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:30:57.525308 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:57.526528 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:30:57.536743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.538043 [debug] [Thread-2 (]: VALUE: 0
[0m10:30:57.538391 [debug] [Thread-2 (]: Running iteration 2
[0m10:30:57.538539 [debug] [Thread-2 (]: Running iteration 3
[0m10:30:57.538734 [debug] [Thread-2 (]: Running iteration 4
[0m10:30:57.538857 [debug] [Thread-2 (]: Running iteration 5
[0m10:30:57.538955 [debug] [Thread-2 (]: Running iteration 6
[0m10:30:57.539050 [debug] [Thread-2 (]: Running iteration 7
[0m10:30:57.539142 [debug] [Thread-2 (]: Running iteration 8
[0m10:30:57.539234 [debug] [Thread-2 (]: Running iteration 9
[0m10:30:57.539328 [debug] [Thread-2 (]: Running iteration 10
[0m10:30:57.539421 [debug] [Thread-2 (]: Running iteration 11
[0m10:30:57.539513 [debug] [Thread-2 (]: Running iteration 12
[0m10:30:57.539638 [debug] [Thread-2 (]: Running iteration 13
[0m10:30:57.541451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m10:30:57.560646 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.563662 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.572446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.573945 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m10:30:57.575795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m10:30:57.594122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.595391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m10:30:57.599387 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.603218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m10:30:57.606432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.607645 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-06-11 10:30:57.364693 => 2024-06-11 10:30:57.607583
[0m10:30:57.608194 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed001bdc0>]}
[0m10:30:57.608493 [info ] [Thread-2 (]: 70 of 92 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.25s]
[0m10:30:57.608800 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m10:30:57.610443 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m10:30:57.611199 [info ] [Thread-1 (]: 71 of 92 START sql table model test.graph_qid .................................. [RUN]
[0m10:30:57.611872 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m10:30:57.612071 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m10:30:57.612229 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m10:30:57.615912 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m10:30:57.617201 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-06-11 10:30:57.612324 => 2024-06-11 10:30:57.617040
[0m10:30:57.617698 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m10:30:57.625047 [debug] [Thread-1 (]: Running iteration 0
[0m10:30:57.625734 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:30:57.658462 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:57.659531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:30:57.691939 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:57.693068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:30:57.702438 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.703526 [debug] [Thread-1 (]: VALUE: 0
[0m10:30:57.703795 [debug] [Thread-1 (]: Running iteration 1
[0m10:30:57.703950 [debug] [Thread-1 (]: Running iteration 2
[0m10:30:57.704050 [debug] [Thread-1 (]: Running iteration 3
[0m10:30:57.704146 [debug] [Thread-1 (]: Running iteration 4
[0m10:30:57.704238 [debug] [Thread-1 (]: Running iteration 5
[0m10:30:57.704330 [debug] [Thread-1 (]: Running iteration 6
[0m10:30:57.704420 [debug] [Thread-1 (]: Running iteration 7
[0m10:30:57.704510 [debug] [Thread-1 (]: Running iteration 8
[0m10:30:57.704600 [debug] [Thread-1 (]: Running iteration 9
[0m10:30:57.704690 [debug] [Thread-1 (]: Running iteration 10
[0m10:30:57.704782 [debug] [Thread-1 (]: Running iteration 11
[0m10:30:57.704873 [debug] [Thread-1 (]: Running iteration 12
[0m10:30:57.704962 [debug] [Thread-1 (]: Running iteration 13
[0m10:30:57.706181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m10:30:57.725846 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:57.728794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.734117 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.736107 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m10:30:57.737613 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m10:30:57.745281 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.746754 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m10:30:57.751599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.756380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m10:30:57.761155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.762624 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-06-11 10:30:57.617816 => 2024-06-11 10:30:57.762564
[0m10:30:57.763274 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae99ab0>]}
[0m10:30:57.763670 [info ] [Thread-1 (]: 71 of 92 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.15s]
[0m10:30:57.764016 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m10:30:57.765817 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m10:30:57.766665 [info ] [Thread-2 (]: 72 of 92 START sql table model test.full_events ................................ [RUN]
[0m10:30:57.767410 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m10:30:57.767646 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m10:30:57.767820 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m10:30:57.774453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m10:30:57.779362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.780887 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m10:30:57.786213 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.788318 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m10:30:57.794274 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.795792 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m10:30:57.803540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.805988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m10:30:57.810558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.812160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m10:30:57.817124 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.819601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m10:30:57.825670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.828597 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m10:30:57.834223 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.835644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m10:30:57.839949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.841750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m10:30:57.846395 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:57.848216 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m10:30:57.848678 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-06-11 10:30:57.767970 => 2024-06-11 10:30:57.848606
[0m10:30:57.848869 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m10:30:57.854908 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2
    )
        ...
[0m10:30:57.920347 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m10:30:57.924761 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:57.936951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:57.939265 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m10:30:57.939813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "qid", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2
  ...
[0m10:30:58.032096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:30:58.033398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m10:30:58.038288 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.042446 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m10:30:58.046309 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.047825 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-06-11 10:30:57.848960 => 2024-06-11 10:30:58.047749
[0m10:30:58.048500 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecae98280>]}
[0m10:30:58.048885 [info ] [Thread-2 (]: 72 of 92 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.28s]
[0m10:30:58.049292 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m10:30:58.051605 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:58.052218 [info ] [Thread-1 (]: 73 of 92 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m10:30:58.052822 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m10:30:58.052969 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m10:30:58.053109 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:58.056697 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m10:30:58.057193 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:58.057609 [info ] [Thread-2 (]: 74 of 92 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m10:30:58.058892 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m10:30:58.059537 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m10:30:58.060264 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:58.064635 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m10:30:58.065168 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-06-11 10:30:58.053208 => 2024-06-11 10:30:58.065039
[0m10:30:58.066108 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:58.072675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m10:30:58.074275 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-06-11 10:30:58.060658 => 2024-06-11 10:30:58.074147
[0m10:30:58.074639 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:58.179937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m10:30:58.200842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m10:30:58.204191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.210338 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.213252 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m10:30:58.215297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:58.218339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.220623 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m10:30:58.224608 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.227106 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m10:30:58.227771 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m10:30:58.248831 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.250225 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m10:30:58.255276 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.259884 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m10:30:58.264075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:58.264690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.266112 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m10:30:58.268071 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-06-11 10:30:58.074779 => 2024-06-11 10:30:58.268009
[0m10:30:58.269873 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafdf0d0>]}
[0m10:30:58.270837 [info ] [Thread-2 (]: 74 of 92 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.21s]
[0m10:30:58.271272 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:58.272010 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:58.273064 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.272537 [info ] [Thread-2 (]: 75 of 92 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m10:30:58.277891 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m10:30:58.278814 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m10:30:58.280000 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m10:30:58.280398 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:58.287722 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.288487 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m10:30:58.290194 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-06-11 10:30:58.066455 => 2024-06-11 10:30:58.290016
[0m10:30:58.291787 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0198f70>]}
[0m10:30:58.292792 [info ] [Thread-1 (]: 73 of 92 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.24s]
[0m10:30:58.293966 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-06-11 10:30:58.280508 => 2024-06-11 10:30:58.293716
[0m10:30:58.294676 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:58.295156 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:58.302108 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:58.301327 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m10:30:58.303270 [info ] [Thread-1 (]: 76 of 92 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m10:30:58.306522 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m10:30:58.307491 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m10:30:58.307790 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:58.312956 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m10:30:58.313526 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-06-11 10:30:58.307926 => 2024-06-11 10:30:58.313445
[0m10:30:58.313711 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:58.319231 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m10:30:58.325278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.328499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.334501 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.336802 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m10:30:58.338072 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.341207 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.343107 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m10:30:58.350307 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.352377 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m10:30:58.353169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m10:30:58.355196 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.357020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m10:30:58.361634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.366327 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m10:30:58.369706 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.371145 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m10:30:58.371829 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.374043 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-06-11 10:30:58.296251 => 2024-06-11 10:30:58.373959
[0m10:30:58.374938 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafcd810>]}
[0m10:30:58.375674 [info ] [Thread-2 (]: 75 of 92 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.10s]
[0m10:30:58.376733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.377621 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:58.381760 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m10:30:58.384631 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:58.385409 [info ] [Thread-2 (]: 77 of 92 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m10:30:58.386456 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m10:30:58.387772 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.388191 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m10:30:58.389878 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-06-11 10:30:58.313804 => 2024-06-11 10:30:58.389818
[0m10:30:58.390469 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:58.391727 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaff1c60>]}
[0m10:30:58.396450 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m10:30:58.397218 [info ] [Thread-1 (]: 76 of 92 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.09s]
[0m10:30:58.398128 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:58.399827 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-06-11 10:30:58.392342 => 2024-06-11 10:30:58.399551
[0m10:30:58.400499 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:58.401066 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:58.410042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m10:30:58.410859 [info ] [Thread-1 (]: 78 of 92 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m10:30:58.414246 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m10:30:58.414917 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m10:30:58.415172 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:58.419924 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m10:30:58.420524 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-06-11 10:30:58.415276 => 2024-06-11 10:30:58.420411
[0m10:30:58.420764 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:58.427411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m10:30:58.431164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.434040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.441177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.442699 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m10:30:58.444256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.447407 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.449570 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m10:30:58.455149 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.457605 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m10:30:58.458172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m10:30:58.460467 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.461950 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m10:30:58.466720 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.468262 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m10:30:58.468962 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.476237 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m10:30:58.477060 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.482481 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m10:30:58.484152 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.485683 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-06-11 10:30:58.401333 => 2024-06-11 10:30:58.485618
[0m10:30:58.486597 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed002b1f0>]}
[0m10:30:58.487175 [info ] [Thread-2 (]: 77 of 92 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.10s]
[0m10:30:58.487817 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:58.489650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.490303 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:58.491904 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-06-11 10:30:58.420871 => 2024-06-11 10:30:58.491843
[0m10:30:58.492617 [info ] [Thread-2 (]: 79 of 92 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m10:30:58.494068 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed1234490>]}
[0m10:30:58.495214 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m10:30:58.495995 [info ] [Thread-1 (]: 78 of 92 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.08s]
[0m10:30:58.496555 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m10:30:58.497098 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:58.497495 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:58.503667 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m10:30:58.504906 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:58.505896 [info ] [Thread-1 (]: 80 of 92 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m10:30:58.507398 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m10:30:58.507908 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m10:30:58.508293 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:58.508564 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-06-11 10:30:58.497977 => 2024-06-11 10:30:58.508479
[0m10:30:58.515921 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m10:30:58.516767 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:58.524639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m10:30:58.526099 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-06-11 10:30:58.508818 => 2024-06-11 10:30:58.525923
[0m10:30:58.526609 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:58.532115 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m10:30:58.550049 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.554095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.555233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.560031 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.561648 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.563119 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m10:30:58.564995 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.565389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m10:30:58.566891 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m10:30:58.569241 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m10:30:58.578283 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.579737 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m10:30:58.581182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.582334 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m10:30:58.584299 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.588258 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m10:30:58.589101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.595608 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m10:30:58.598542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.600135 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-06-11 10:30:58.517528 => 2024-06-11 10:30:58.600068
[0m10:30:58.600991 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.601636 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaea9450>]}
[0m10:30:58.602902 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-06-11 10:30:58.526795 => 2024-06-11 10:30:58.602847
[0m10:30:58.603846 [info ] [Thread-2 (]: 79 of 92 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.11s]
[0m10:30:58.605121 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed129c5b0>]}
[0m10:30:58.605891 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:58.606445 [info ] [Thread-1 (]: 80 of 92 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.10s]
[0m10:30:58.607764 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:58.608295 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:58.609407 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:58.609859 [info ] [Thread-2 (]: 81 of 92 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m10:30:58.610427 [info ] [Thread-1 (]: 82 of 92 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m10:30:58.611691 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m10:30:58.612546 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m10:30:58.612919 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m10:30:58.613238 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m10:30:58.613784 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:58.614136 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:58.618115 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m10:30:58.622000 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m10:30:58.624084 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-06-11 10:30:58.614412 => 2024-06-11 10:30:58.623936
[0m10:30:58.624466 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:58.628477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m10:30:58.629110 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-06-11 10:30:58.618561 => 2024-06-11 10:30:58.628851
[0m10:30:58.630712 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:58.636496 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m10:30:58.647486 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.653575 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.654377 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.658660 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.659576 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.662107 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m10:30:58.663307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m10:30:58.665104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.666576 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m10:30:58.667194 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m10:30:58.671188 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.672703 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m10:30:58.675017 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.676358 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m10:30:58.677511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.681569 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m10:30:58.682298 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.686800 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m10:30:58.689964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.691450 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-06-11 10:30:58.631109 => 2024-06-11 10:30:58.691375
[0m10:30:58.692348 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.693089 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafe7610>]}
[0m10:30:58.695815 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-06-11 10:30:58.624622 => 2024-06-11 10:30:58.695701
[0m10:30:58.698288 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf767d0>]}
[0m10:30:58.696948 [info ] [Thread-1 (]: 82 of 92 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.08s]
[0m10:30:58.699240 [info ] [Thread-2 (]: 81 of 92 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m10:30:58.700749 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:58.701459 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:58.703254 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:58.703687 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:58.704382 [info ] [Thread-1 (]: 83 of 92 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m10:30:58.705697 [info ] [Thread-2 (]: 84 of 92 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m10:30:58.706981 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m10:30:58.707830 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m10:30:58.708258 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m10:30:58.708645 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m10:30:58.709043 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:58.709465 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:58.712994 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m10:30:58.717275 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m10:30:58.719183 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-06-11 10:30:58.713516 => 2024-06-11 10:30:58.719014
[0m10:30:58.720236 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:58.726742 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-06-11 10:30:58.709768 => 2024-06-11 10:30:58.726527
[0m10:30:58.728005 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m10:30:58.728591 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:58.733807 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m10:30:58.756981 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:58.759856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.761429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:58.764744 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.767273 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.769292 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m10:30:58.770352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.771908 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m10:30:58.772747 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m10:30:58.773191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m10:30:58.790359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.791805 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m10:30:58.794067 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.795222 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m10:30:58.796432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.801286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m10:30:58.802855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.806768 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m10:30:58.810029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.810712 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.811960 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-06-11 10:30:58.720780 => 2024-06-11 10:30:58.811901
[0m10:30:58.813167 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-06-11 10:30:58.729524 => 2024-06-11 10:30:58.813103
[0m10:30:58.814450 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafc40a0>]}
[0m10:30:58.815300 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0098a30>]}
[0m10:30:58.816163 [info ] [Thread-2 (]: 84 of 92 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.11s]
[0m10:30:58.817164 [info ] [Thread-1 (]: 83 of 92 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.11s]
[0m10:30:58.817917 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:58.818454 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:58.819727 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:58.820363 [info ] [Thread-2 (]: 85 of 92 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m10:30:58.821230 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:58.821830 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m10:30:58.822301 [info ] [Thread-1 (]: 86 of 92 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m10:30:58.822814 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m10:30:58.823731 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m10:30:58.824431 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:58.824907 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m10:30:58.833863 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m10:30:58.834541 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:58.842478 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m10:30:58.843233 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-06-11 10:30:58.825182 => 2024-06-11 10:30:58.843089
[0m10:30:58.843693 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-06-11 10:30:58.835310 => 2024-06-11 10:30:58.843574
[0m10:30:58.844081 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:58.844626 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:58.849513 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m10:30:58.856848 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m10:30:58.882297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.885257 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.890532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.892822 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m10:30:58.895346 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m10:30:58.896750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:58.899756 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:58.904870 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.907197 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m10:30:58.907821 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m10:30:58.914589 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.915711 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m10:30:58.919692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.923214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m10:30:58.925739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:58.927062 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m10:30:58.928195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.929586 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-06-11 10:30:58.845246 => 2024-06-11 10:30:58.929523
[0m10:30:58.930845 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed0098a30>]}
[0m10:30:58.932906 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:58.936745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m10:30:58.940788 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:58.941963 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-06-11 10:30:58.850070 => 2024-06-11 10:30:58.941907
[0m10:30:58.942468 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed01f5330>]}
[0m10:31:00.016409 [info ] [Thread-2 (]: 85 of 92 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.11s]
[0m10:31:00.017659 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:31:00.018410 [info ] [Thread-1 (]: 86 of 92 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.12s]
[0m10:31:00.019846 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:31:00.021289 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:31:00.022384 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:31:00.022832 [info ] [Thread-2 (]: 87 of 92 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m10:31:00.023305 [info ] [Thread-1 (]: 88 of 92 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m10:31:00.024609 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m10:31:00.025808 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m10:31:00.026366 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m10:31:00.026889 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m10:31:00.027576 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:31:00.028159 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:31:00.038474 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m10:31:00.044989 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m10:31:00.045908 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-06-11 10:31:00.028477 => 2024-06-11 10:31:00.045762
[0m10:31:00.046232 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:31:00.050579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m10:31:00.051270 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-06-11 10:31:00.039036 => 2024-06-11 10:31:00.051116
[0m10:31:00.053487 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:31:00.060973 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m10:31:00.089866 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:31:00.093020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.094209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:31:00.097508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.098310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.101836 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m10:31:00.103239 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m10:31:00.104990 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.106746 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m10:31:00.107202 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m10:31:00.126807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:31:00.128117 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m10:31:00.132717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.137096 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m10:31:00.138591 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:31:00.139831 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m10:31:00.140998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.142317 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-06-11 10:31:00.054431 => 2024-06-11 10:31:00.142256
[0m10:31:00.143134 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf54be0>]}
[0m10:31:00.143742 [info ] [Thread-1 (]: 88 of 92 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.12s]
[0m10:31:00.144300 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:31:00.145333 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.150446 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m10:31:00.151105 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:31:00.152368 [info ] [Thread-1 (]: 89 of 92 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m10:31:00.153249 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m10:31:00.153820 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m10:31:00.154164 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:31:00.157914 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m10:31:00.159496 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.162349 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-06-11 10:31:00.046370 => 2024-06-11 10:31:00.162252
[0m10:31:00.163267 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecaf4d7b0>]}
[0m10:31:00.164198 [info ] [Thread-2 (]: 87 of 92 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.14s]
[0m10:31:00.164794 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:31:00.165707 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-06-11 10:31:00.154379 => 2024-06-11 10:31:00.165571
[0m10:31:00.166423 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:31:00.166955 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:31:00.167705 [info ] [Thread-2 (]: 90 of 92 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m10:31:00.176194 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m10:31:00.177272 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m10:31:00.178603 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m10:31:00.179311 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:31:00.182719 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m10:31:00.183417 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-06-11 10:31:00.179567 => 2024-06-11 10:31:00.183253
[0m10:31:00.183721 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:31:00.189239 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m10:31:00.207824 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:31:00.210834 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.215724 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.218535 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m10:31:00.219976 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m10:31:00.223570 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:31:00.227132 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.233001 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.236183 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m10:31:00.236946 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m10:31:00.248575 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:31:00.249805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m10:31:00.253436 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.259068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m10:31:00.262729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.264040 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-06-11 10:31:00.168434 => 2024-06-11 10:31:00.263978
[0m10:31:00.264640 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafc2d40>]}
[0m10:31:00.264995 [info ] [Thread-1 (]: 89 of 92 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.11s]
[0m10:31:00.265307 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:31:00.269279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:31:00.270601 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m10:31:00.275039 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.349657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m10:31:00.353107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.354327 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-06-11 10:31:00.183831 => 2024-06-11 10:31:00.354268
[0m10:31:00.354877 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafbbe20>]}
[0m10:31:00.355275 [info ] [Thread-2 (]: 90 of 92 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.18s]
[0m10:31:00.355572 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:31:00.357542 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m10:31:00.358244 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m10:31:00.358918 [info ] [Thread-1 (]: 91 of 92 START sql table model test.dataset_event_table ........................ [RUN]
[0m10:31:00.359792 [info ] [Thread-2 (]: 92 of 92 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m10:31:00.360641 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m10:31:00.361509 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m10:31:00.362058 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m10:31:00.362705 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m10:31:00.363273 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m10:31:00.363598 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m10:31:00.371456 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.377806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.384491 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.389518 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.391565 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.397343 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.398988 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.412288 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m10:31:00.413549 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:31:00.425043 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m10:31:00.426268 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-06-11 10:31:00.371997 => 2024-06-11 10:31:00.426056
[0m10:31:00.426941 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m10:31:00.434079 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
    )
        ...
[0m10:31:00.435366 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-06-11 10:31:00.363785 => 2024-06-11 10:31:00.435196
[0m10:31:00.436043 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m10:31:00.441462 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table



   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
    )
        ...
[0m10:31:00.526392 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:31:00.529720 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.531089 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:31:00.533723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:31:00.538413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.539032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:31:00.541280 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m10:31:00.544944 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m10:31:00.546970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table



   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
  ...
[0m10:31:00.547476 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "YmClientHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as VisitStatHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as YmClientHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("YmClientHash") as YmClientHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  
  ...
[0m10:31:00.655939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m10:31:00.657150 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m10:31:00.661671 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.666924 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m10:31:00.670852 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.672742 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-06-11 10:31:00.427439 => 2024-06-11 10:31:00.672683
[0m10:31:00.673310 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafb8fd0>]}
[0m10:31:00.673664 [info ] [Thread-2 (]: 92 of 92 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.31s]
[0m10:31:00.674099 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m10:31:00.687118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m10:31:00.688290 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m10:31:00.692194 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.696662 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m10:31:00.700174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:31:00.701529 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-06-11 10:31:00.436352 => 2024-06-11 10:31:00.701456
[0m10:31:00.702275 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ff2a21b5-41a2-4be4-9406-7a354ab2a449', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ecafbb8e0>]}
[0m10:31:00.702857 [info ] [Thread-1 (]: 91 of 92 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.34s]
[0m10:31:00.703254 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m10:31:00.706341 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:31:00.706977 [debug] [MainThread]: Connection 'master' was properly closed.
[0m10:31:00.707135 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m10:31:00.707264 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m10:31:00.707475 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m10:31:00.707592 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m10:31:00.708063 [info ] [MainThread]: 
[0m10:31:00.708292 [info ] [MainThread]: Finished running 20 view models, 23 incremental models, 49 table models in 0 hours 0 minutes and 12.46 seconds (12.46s).
[0m10:31:00.710813 [debug] [MainThread]: Command end result
[0m10:31:00.732488 [info ] [MainThread]: 
[0m10:31:00.732923 [info ] [MainThread]: [32mCompleted successfully[0m
[0m10:31:00.733309 [info ] [MainThread]: 
[0m10:31:00.733584 [info ] [MainThread]: Done. PASS=92 WARN=0 ERROR=0 SKIP=0 TOTAL=92
[0m10:31:00.734187 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed126bdf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed126bf70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8ed126bc70>]}
[0m10:31:00.734563 [debug] [MainThread]: Flushing usage events

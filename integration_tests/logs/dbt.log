[0m16:11:24.429276 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:24.430040 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m16:11:24.439980 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:24.449032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.462304 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.467711 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m16:11:24.472898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m16:11:24.476579 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-06-24 16:11:24.396901 => 2024-06-24 16:11:24.476301
[0m16:11:24.476971 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m16:11:24.481740 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m16:11:24.482759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.483940 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m16:11:24.486489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m16:11:24.487974 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.491156 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m16:11:24.495256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.496471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m16:11:24.501016 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.505655 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m16:11:24.511105 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.512781 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-06-24 16:11:24.421979 => 2024-06-24 16:11:24.512682
[0m16:11:24.513594 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778688bfa0>]}
[0m16:11:24.514055 [info ] [Thread-1 (]: 7 of 92 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.16s]
[0m16:11:24.514514 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m16:11:24.514919 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:11:24.515492 [info ] [Thread-1 (]: 9 of 92 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m16:11:24.516929 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m16:11:24.517857 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m16:11:24.518460 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:11:24.523779 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m16:11:24.536368 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.540674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:24.550243 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.564636 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m16:11:24.565518 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:24.569534 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m16:11:24.571024 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-06-24 16:11:24.518821 => 2024-06-24 16:11:24.570831
[0m16:11:24.571623 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:11:24.576745 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m16:11:24.577583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.579069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m16:11:24.580272 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m16:11:24.583141 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.587619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m16:11:24.592475 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.593842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m16:11:24.594554 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.598916 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m16:11:24.600690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.605042 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m16:11:24.606026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.608570 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m16:11:24.610608 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.612138 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-06-24 16:11:24.477093 => 2024-06-24 16:11:24.612056
[0m16:11:24.613033 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77847f6140>]}
[0m16:11:24.614001 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.614920 [info ] [Thread-2 (]: 8 of 92 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.22s]
[0m16:11:24.619713 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m16:11:24.620382 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m16:11:24.622265 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:11:24.623248 [info ] [Thread-2 (]: 10 of 92 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m16:11:24.624099 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m16:11:24.624912 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m16:11:24.626126 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.626720 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:11:24.628559 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m16:11:24.634919 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m16:11:24.640540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.644779 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m16:11:24.649337 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.651405 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-06-24 16:11:24.571811 => 2024-06-24 16:11:24.651271
[0m16:11:24.652569 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778688bf70>]}
[0m16:11:24.653369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.653996 [info ] [Thread-1 (]: 9 of 92 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.14s]
[0m16:11:24.658608 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:24.659284 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:11:24.660641 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:11:24.661509 [info ] [Thread-1 (]: 11 of 92 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m16:11:24.662889 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m16:11:24.663776 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m16:11:24.664177 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:11:24.670942 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m16:11:24.673684 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.682590 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m16:11:24.683568 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-06-24 16:11:24.629083 => 2024-06-24 16:11:24.683374
[0m16:11:24.683995 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:11:24.690685 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m16:11:24.691744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.699288 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:24.700030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m16:11:24.707711 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.722244 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.731963 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m16:11:24.749814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.751214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m16:11:24.780162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.789337 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m16:11:24.789716 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m16:11:24.791971 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-06-24 16:11:24.664349 => 2024-06-24 16:11:24.791780
[0m16:11:24.792502 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:11:24.797178 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m16:11:24.798219 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.799414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m16:11:24.800867 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM test.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m16:11:24.806159 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.812169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m16:11:24.817506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.819148 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-06-24 16:11:24.684170 => 2024-06-24 16:11:24.819068
[0m16:11:24.819962 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77868cd330>]}
[0m16:11:24.820515 [info ] [Thread-2 (]: 10 of 92 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.20s]
[0m16:11:24.821136 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:11:24.821607 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:11:24.822589 [info ] [Thread-2 (]: 12 of 92 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m16:11:24.824092 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m16:11:24.824473 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m16:11:24.824710 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:11:24.829618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m16:11:24.830498 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:24.835365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m16:11:24.839459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.841738 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m16:11:24.842665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.849277 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:24.851245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.856859 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m16:11:24.858854 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.866556 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.870808 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m16:11:24.872865 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m16:11:24.876333 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-06-24 16:11:24.824843 => 2024-06-24 16:11:24.876145
[0m16:11:24.876779 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:11:24.889582 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.891861 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m16:11:24.898438 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m16:11:24.900564 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m16:11:24.904233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.906531 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-06-24 16:11:24.792629 => 2024-06-24 16:11:24.906439
[0m16:11:24.907469 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77846ef670>]}
[0m16:11:24.908119 [info ] [Thread-1 (]: 11 of 92 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.24s]
[0m16:11:24.908893 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:11:24.909419 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:11:24.910424 [info ] [Thread-1 (]: 13 of 92 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m16:11:24.911839 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m16:11:24.912146 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m16:11:24.912398 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:11:24.918097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m16:11:24.920021 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.924763 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m16:11:24.929165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.930588 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m16:11:24.935092 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.939438 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m16:11:24.940329 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.947299 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:24.949630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.951877 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m16:11:24.957754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:24.963438 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m16:11:24.965368 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:24.976219 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m16:11:24.977387 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:24.979419 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-06-24 16:11:24.876900 => 2024-06-24 16:11:24.979333
[0m16:11:24.980501 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77868cc0d0>]}
[0m16:11:24.981346 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-06-24 16:11:24.912527 => 2024-06-24 16:11:24.981173
[0m16:11:24.982130 [info ] [Thread-2 (]: 12 of 92 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.16s]
[0m16:11:24.983131 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:11:24.983945 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:11:24.994732 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m16:11:24.996462 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:11:24.998485 [info ] [Thread-2 (]: 14 of 92 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m16:11:24.999770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m16:11:25.001438 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m16:11:25.003984 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m16:11:25.004528 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:11:25.010361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m16:11:25.022436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.028671 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:25.027971 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.033939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m16:11:25.043698 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.045658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m16:11:25.047499 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.056011 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m16:11:25.057501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.063039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m16:11:25.064703 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-06-24 16:11:25.004757 => 2024-06-24 16:11:25.064520
[0m16:11:25.065205 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:11:25.073524 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m16:11:25.074835 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.077234 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m16:11:25.079267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m16:11:25.084107 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.090808 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m16:11:25.102841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.105307 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-06-24 16:11:24.984430 => 2024-06-24 16:11:25.105204
[0m16:11:25.106212 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77846cbcd0>]}
[0m16:11:25.107157 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:25.108052 [info ] [Thread-1 (]: 13 of 92 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.19s]
[0m16:11:25.113394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m16:11:25.114044 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:11:25.115815 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:11:25.116829 [info ] [Thread-1 (]: 15 of 92 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m16:11:25.117909 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m16:11:25.121775 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m16:11:25.119751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.122429 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:11:25.124291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m16:11:25.130877 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m16:11:25.138266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.145080 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m16:11:25.145832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.152107 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.152961 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.165518 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m16:11:25.184807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.190994 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m16:11:25.191792 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:25.201871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m16:11:25.202936 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-06-24 16:11:25.124931 => 2024-06-24 16:11:25.202758
[0m16:11:25.203612 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:11:25.209102 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m16:11:25.209833 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.212029 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-06-24 16:11:25.065366 => 2024-06-24 16:11:25.211956
[0m16:11:25.212883 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77845df850>]}
[0m16:11:25.214058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m16:11:25.213616 [info ] [Thread-2 (]: 14 of 92 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.21s]
[0m16:11:25.215954 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:11:25.216842 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:11:25.217813 [info ] [Thread-2 (]: 16 of 92 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m16:11:25.219323 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m16:11:25.219627 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m16:11:25.219824 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:11:25.225517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m16:11:25.231633 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.235333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m16:11:25.239463 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.240832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m16:11:25.242480 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.246417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.247203 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.252172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m16:11:25.256729 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.257689 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.276271 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m16:11:25.277703 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m16:11:25.279735 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-06-24 16:11:25.219953 => 2024-06-24 16:11:25.279611
[0m16:11:25.280087 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:11:25.285864 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m16:11:25.286967 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.292305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m16:11:25.292734 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m16:11:25.296852 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.298515 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-06-24 16:11:25.204173 => 2024-06-24 16:11:25.298433
[0m16:11:25.299279 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784626050>]}
[0m16:11:25.299934 [info ] [Thread-1 (]: 15 of 92 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.18s]
[0m16:11:25.300539 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:11:25.300991 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:11:25.302097 [info ] [Thread-1 (]: 17 of 92 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m16:11:25.303276 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m16:11:25.303570 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m16:11:25.303756 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:11:25.310713 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m16:11:25.312461 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.319433 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m16:11:25.322427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.329422 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.331010 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.332996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m16:11:25.341653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.342790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.347497 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m16:11:25.446987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:25.447772 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m16:11:25.449475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m16:11:25.451188 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-24 16:11:25.303865 => 2024-06-24 16:11:25.451039
[0m16:11:25.451640 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:11:25.458281 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m16:11:25.459619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.464767 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m16:11:25.466704 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m16:11:25.470538 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.472457 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-06-24 16:11:25.280196 => 2024-06-24 16:11:25.472349
[0m16:11:25.473455 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778461a3b0>]}
[0m16:11:25.474275 [info ] [Thread-2 (]: 16 of 92 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.25s]
[0m16:11:25.474903 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:11:25.475492 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:11:25.476705 [info ] [Thread-2 (]: 18 of 92 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m16:11:25.478428 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m16:11:25.478816 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m16:11:25.479260 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:11:25.485067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m16:11:25.487036 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.491912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m16:11:25.496618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.499041 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m16:11:25.505143 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.510051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.511512 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.520554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m16:11:25.521776 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.529902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.536845 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m16:11:25.550120 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m16:11:25.551956 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-06-24 16:11:25.479435 => 2024-06-24 16:11:25.551790
[0m16:11:25.552466 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:11:25.558444 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m16:11:25.559436 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.564555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m16:11:25.565796 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m16:11:25.569343 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.571451 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-06-24 16:11:25.451785 => 2024-06-24 16:11:25.571361
[0m16:11:25.572395 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77844927d0>]}
[0m16:11:25.572965 [info ] [Thread-1 (]: 17 of 92 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.27s]
[0m16:11:25.573527 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:11:25.573940 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:11:25.575008 [info ] [Thread-1 (]: 19 of 92 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m16:11:25.576105 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m16:11:25.577023 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m16:11:25.577408 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:11:25.582875 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m16:11:25.584607 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.589141 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m16:11:25.593887 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.595816 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m16:11:25.601350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.607361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m16:11:25.608898 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:25.613177 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.614041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.617250 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m16:11:25.620567 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.627210 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.635690 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m16:11:25.641562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m16:11:25.643929 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-06-24 16:11:25.577563 => 2024-06-24 16:11:25.643743
[0m16:11:25.644395 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:11:25.650532 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m16:11:25.651727 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.654057 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-06-24 16:11:25.552847 => 2024-06-24 16:11:25.653956
[0m16:11:25.655458 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77845ac2e0>]}
[0m16:11:25.656978 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m16:11:25.656468 [info ] [Thread-2 (]: 18 of 92 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.18s]
[0m16:11:25.661559 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:11:25.662811 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:11:25.664869 [info ] [Thread-2 (]: 20 of 92 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m16:11:25.667180 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m16:11:25.667837 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m16:11:25.668304 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:11:25.675730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m16:11:25.678124 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.685276 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m16:11:25.687593 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.699122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.702220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.704270 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m16:11:25.711445 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.716349 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m16:11:25.718910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.725767 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.738925 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m16:11:25.760467 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m16:11:25.761586 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.767382 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m16:11:25.769403 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-06-24 16:11:25.668553 => 2024-06-24 16:11:25.769208
[0m16:11:25.770439 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:11:25.781364 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m16:11:25.783007 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.786759 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-06-24 16:11:25.644545 => 2024-06-24 16:11:25.786626
[0m16:11:25.788506 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784635a50>]}
[0m16:11:25.789353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m16:11:25.790604 [info ] [Thread-1 (]: 19 of 92 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.21s]
[0m16:11:25.793003 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:11:25.794072 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:11:25.795343 [info ] [Thread-1 (]: 21 of 92 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m16:11:25.796635 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m16:11:25.797079 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m16:11:25.797457 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:11:25.823228 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m16:11:25.824365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:25.830490 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m16:11:25.832127 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-06-24 16:11:25.797646 => 2024-06-24 16:11:25.831914
[0m16:11:25.832756 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:11:25.842579 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.855175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m16:11:25.874791 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:25.895943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.899492 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m16:11:25.904748 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:25.906194 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m16:11:25.908967 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.912927 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:25.914000 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.922360 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m16:11:25.924109 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.937115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.938485 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:25.940001 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-06-24 16:11:25.771103 => 2024-06-24 16:11:25.939932
[0m16:11:25.952921 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778461a170>]}
[0m16:11:25.955841 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:25.956700 [info ] [Thread-2 (]: 20 of 92 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.29s]
[0m16:11:25.958882 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:11:25.960543 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:11:25.961788 [info ] [Thread-2 (]: 22 of 92 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m16:11:25.962977 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m16:11:25.963939 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:25.964545 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m16:11:25.981043 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:11:25.998338 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m16:11:26.002396 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
    )
        ...
[0m16:11:26.005069 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-06-24 16:11:25.986537 => 2024-06-24 16:11:26.004864
[0m16:11:26.005909 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:11:26.016512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.027482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.031404 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.037773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.040573 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:26.044140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.044971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:26.051264 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.052681 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.055189 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
    )
        ...
[0m16:11:26.056807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.058489 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m16:11:26.059795 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
  
      ...
[0m16:11:26.082637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:26.086031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.093646 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.095236 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m16:11:26.096073 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
  
      ...
[0m16:11:26.102594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:26.104439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:26.130400 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:26.132147 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:26.265163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.16 seconds
[0m16:11:26.268049 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.271085 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m16:11:26.275136 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.276573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.278545 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:26.285767 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.287303 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:26.296797 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:26.299671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.303287 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:26.306467 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.307305 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.312347 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m16:11:26.313143 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.316865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m16:11:26.319591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.322126 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-06-24 16:11:25.833006 => 2024-06-24 16:11:26.322045
[0m16:11:26.322938 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77846dd420>]}
[0m16:11:26.323497 [info ] [Thread-1 (]: 21 of 92 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.53s]
[0m16:11:26.324353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.324796 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:11:26.327603 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-06-24 16:11:26.006304 => 2024-06-24 16:11:26.327540
[0m16:11:26.328368 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:11:26.329666 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778461a200>]}
[0m16:11:26.330254 [info ] [Thread-1 (]: 23 of 92 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m16:11:26.331199 [info ] [Thread-2 (]: 22 of 92 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.37s]
[0m16:11:26.332420 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m16:11:26.333467 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:11:26.334213 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m16:11:26.334915 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:11:26.335513 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:11:26.336370 [info ] [Thread-2 (]: 24 of 92 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m16:11:26.341499 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m16:11:26.342653 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m16:11:26.343452 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m16:11:26.343849 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:11:26.348920 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m16:11:26.349628 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-06-24 16:11:26.337005 => 2024-06-24 16:11:26.349443
[0m16:11:26.350106 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:11:26.357793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.358318 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-06-24 16:11:26.343996 => 2024-06-24 16:11:26.358106
[0m16:11:26.360003 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:11:26.378001 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
    )
        ...
[0m16:11:26.380074 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:26.384692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.391985 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.394702 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:26.398361 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.403078 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:26.405673 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
    )
        ...
[0m16:11:26.411483 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:26.416204 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.422795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.424380 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m16:11:26.425025 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
  ...
[0m16:11:26.436899 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:26.439926 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.442438 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:26.447362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m16:11:26.449242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.451662 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m16:11:26.452193 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
  
      ...
[0m16:11:26.455103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.460201 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m16:11:26.465217 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:26.466974 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-06-24 16:11:26.360246 => 2024-06-24 16:11:26.466893
[0m16:11:26.467827 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77846170d0>]}
[0m16:11:26.468455 [info ] [Thread-2 (]: 24 of 92 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.13s]
[0m16:11:26.469016 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:11:26.469417 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:11:26.470313 [info ] [Thread-2 (]: 25 of 92 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m16:11:26.471645 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m16:11:26.472121 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m16:11:26.472442 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:11:26.477280 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m16:11:26.477964 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-06-24 16:11:26.472594 => 2024-06-24 16:11:26.477848
[0m16:11:26.478259 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:11:26.486198 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.493662 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:26.495318 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:26.496208 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.502008 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.511173 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.513709 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:26.516524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.520589 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:26.523714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
    )
        ...
[0m16:11:26.559989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:26.563318 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.569261 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.571075 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m16:11:26.571858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
  
      ...
[0m16:11:26.588637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:26.590100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:26.599127 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:26.603785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.611225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.613176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:26.640241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:26.643960 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.651978 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.656677 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m16:11:26.661539 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:26.663545 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-06-24 16:11:26.350278 => 2024-06-24 16:11:26.663475
[0m16:11:26.664188 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77846d3e80>]}
[0m16:11:26.664568 [info ] [Thread-1 (]: 23 of 92 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.33s]
[0m16:11:26.664912 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:11:26.665192 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:11:26.665506 [info ] [Thread-1 (]: 26 of 92 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m16:11:26.666864 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m16:11:26.667223 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m16:11:26.667448 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:11:26.673788 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m16:11:26.674625 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-06-24 16:11:26.667577 => 2024-06-24 16:11:26.674430
[0m16:11:26.675231 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:11:26.682200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.692103 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.696585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.697350 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m16:11:26.701809 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.708596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.712273 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:26.715505 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.717236 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.719962 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:26.724171 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.728160 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
    )
        ...
[0m16:11:26.743884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:26.835758 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m16:11:26.837483 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:26.841271 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.846057 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:26.849759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m16:11:26.851528 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.853688 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m16:11:26.854326 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
  
      ...
[0m16:11:26.855643 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.857917 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-06-24 16:11:26.478373 => 2024-06-24 16:11:26.857845
[0m16:11:26.858745 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77844f2f50>]}
[0m16:11:26.885879 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:26.887236 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:26.975817 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:11:26.979106 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:26.984737 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:26.986503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:27.006035 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:27.009692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:27.013918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:27.018341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m16:11:27.022156 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:27.024265 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-06-24 16:11:26.675546 => 2024-06-24 16:11:27.024204
[0m16:11:27.024800 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784486c80>]}
[0m16:11:27.965634 [info ] [Thread-2 (]: 25 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.39s]
[0m16:11:27.966749 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:11:27.968376 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:11:27.967514 [info ] [Thread-1 (]: 26 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.36s]
[0m16:11:27.969719 [info ] [Thread-2 (]: 27 of 92 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m16:11:27.970393 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:11:27.971803 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m16:11:27.972607 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:11:27.973309 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m16:11:27.973907 [info ] [Thread-1 (]: 28 of 92 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m16:11:27.974732 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:11:27.975537 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m16:11:27.984561 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m16:11:27.985046 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m16:11:27.986043 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:11:27.992301 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m16:11:27.993080 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-06-24 16:11:27.976176 => 2024-06-24 16:11:27.992904
[0m16:11:27.994109 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:11:28.003751 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.005519 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-06-24 16:11:27.986328 => 2024-06-24 16:11:28.005325
[0m16:11:28.006544 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:11:28.017071 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.019427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.028677 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.030556 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.036047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.038730 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.043259 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_installations:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:28.044454 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.047973 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.051375 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:28.057527 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.058430 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.063179 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
    )
        ...
[0m16:11:28.065980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.069419 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
    )
        ...
[0m16:11:28.093636 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.097441 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.098294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.105006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.112736 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.115541 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m16:11:28.116619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.118514 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m16:11:28.119295 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
  
      ...
[0m16:11:28.120666 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
  
      ...
[0m16:11:28.150349 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.151834 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

      delete from test.incremental_appmetrica_events_default_installations where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:28.154263 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.155617 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:28.217064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:11:28.220098 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.226063 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.228013 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        insert into test.incremental_appmetrica_events_default_installations select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:28.241187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.245129 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.251672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.252563 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:28.257311 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_distributed_new_data 
  ...
[0m16:11:28.260288 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.266239 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.271556 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-06-24 16:11:27.994513 => 2024-06-24 16:11:28.271488
[0m16:11:28.272231 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.273730 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7786902c20>]}
[0m16:11:28.275723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:28.276816 [info ] [Thread-2 (]: 27 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.30s]
[0m16:11:28.279307 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:11:28.279687 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:11:28.280041 [info ] [Thread-2 (]: 29 of 92 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m16:11:28.281598 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m16:11:28.281880 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m16:11:28.282067 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:11:28.286652 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m16:11:28.287183 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-06-24 16:11:28.282196 => 2024-06-24 16:11:28.287099
[0m16:11:28.287402 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:11:28.295842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.296936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.302591 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.304699 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.309136 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.311196 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.315021 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m16:11:28.320618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.323330 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-06-24 16:11:28.008291 => 2024-06-24 16:11:28.323245
[0m16:11:28.324141 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77846b0250>]}
[0m16:11:28.324873 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.325867 [info ] [Thread-1 (]: 28 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.35s]
[0m16:11:28.330260 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:28.330946 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:11:28.335175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.336019 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:11:28.338682 [info ] [Thread-1 (]: 30 of 92 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m16:11:28.339809 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m16:11:28.340183 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m16:11:28.340402 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:11:28.346502 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m16:11:28.347235 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.349519 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
    )
        ...
[0m16:11:28.350935 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-06-24 16:11:28.340525 => 2024-06-24 16:11:28.350735
[0m16:11:28.351555 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:11:28.358349 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
    )
        ...
[0m16:11:28.380076 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.383286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.385278 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.389555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.391418 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.393352 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m16:11:28.393881 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
  
      ...
[0m16:11:28.402095 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.403914 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m16:11:28.404473 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
  ...
[0m16:11:28.421364 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.422521 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:28.425492 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.427236 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m16:11:28.438110 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.443090 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m16:11:28.447650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:28.449298 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-06-24 16:11:28.351871 => 2024-06-24 16:11:28.449216
[0m16:11:28.450109 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77868a7790>]}
[0m16:11:28.450748 [info ] [Thread-1 (]: 30 of 92 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.11s]
[0m16:11:28.451194 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:11:28.451538 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:11:28.452001 [info ] [Thread-1 (]: 31 of 92 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m16:11:28.453607 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m16:11:28.454219 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m16:11:28.454544 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:11:28.459675 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m16:11:28.460183 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-06-24 16:11:28.454672 => 2024-06-24 16:11:28.460112
[0m16:11:28.460359 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:11:28.469857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.484218 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.490504 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.498852 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.511905 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:11:28.516219 [debug] [Thread-1 (]: 
    In test.incremental_calltouch_events_default_calls:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:28.521554 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.525356 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.530740 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:28.533284 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
    )
        ...
[0m16:11:28.534933 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.536653 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:28.550590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.556683 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.560812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:28.564622 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m16:11:28.569454 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:28.572525 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-06-24 16:11:28.287505 => 2024-06-24 16:11:28.572425
[0m16:11:28.573668 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77845c9450>]}
[0m16:11:28.574418 [info ] [Thread-2 (]: 29 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.29s]
[0m16:11:28.574995 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:11:28.575547 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:11:28.577243 [info ] [Thread-2 (]: 32 of 92 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m16:11:28.578326 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m16:11:28.578596 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m16:11:28.578789 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:11:28.584002 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m16:11:28.585331 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:28.589344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.591404 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-06-24 16:11:28.578910 => 2024-06-24 16:11:28.591158
[0m16:11:28.592072 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:11:28.599593 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.601646 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.605979 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m16:11:28.607209 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
  
      ...
[0m16:11:28.610100 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.614875 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.621727 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.627640 [debug] [Thread-2 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:28.630691 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.635969 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:28.638674 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
    )
        ...
[0m16:11:28.661318 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.664599 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.672505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.674761 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m16:11:28.675899 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
  
      ...
[0m16:11:28.691483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:28.692873 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

      delete from test.incremental_calltouch_events_default_calls where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:28.698115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.699660 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:28.771620 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:11:28.774731 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.780443 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.782267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:28.800713 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.805010 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.810870 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.814396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m16:11:28.820013 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.822822 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-06-24 16:11:28.592325 => 2024-06-24 16:11:28.822723
[0m16:11:28.823756 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77844f2f50>]}
[0m16:11:28.824273 [info ] [Thread-2 (]: 32 of 92 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.25s]
[0m16:11:28.824706 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:11:28.825086 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:11:28.825946 [info ] [Thread-2 (]: 33 of 92 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m16:11:28.827003 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m16:11:28.827317 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m16:11:28.827524 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:11:28.833274 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m16:11:28.834043 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-06-24 16:11:28.827634 => 2024-06-24 16:11:28.833916
[0m16:11:28.834385 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:11:28.840040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
    )
        ...
[0m16:11:28.849646 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.16 seconds
[0m16:11:28.853702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.866341 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.870188 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:28.870860 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.875572 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        insert into test.incremental_calltouch_events_default_calls select "__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:28.879683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.881435 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m16:11:28.882913 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
  ...
[0m16:11:28.898448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:28.899779 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m16:11:28.912204 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.917074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m16:11:28.923620 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.925570 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-06-24 16:11:28.834549 => 2024-06-24 16:11:28.925477
[0m16:11:28.926554 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784684490>]}
[0m16:11:28.927982 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:28.928773 [info ] [Thread-2 (]: 33 of 92 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.10s]
[0m16:11:28.932846 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:28.933682 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:11:28.935529 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:11:28.936724 [info ] [Thread-2 (]: 34 of 92 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m16:11:28.938015 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m16:11:28.938618 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m16:11:28.938993 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:11:28.945946 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m16:11:28.946862 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.952238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_distributed_new_data 
  ...
[0m16:11:28.954268 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-06-24 16:11:28.939234 => 2024-06-24 16:11:28.953997
[0m16:11:28.954874 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:11:28.961493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
    )
        ...
[0m16:11:28.963075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:28.965962 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-06-24 16:11:28.460499 => 2024-06-24 16:11:28.965874
[0m16:11:28.968068 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784566da0>]}
[0m16:11:28.969015 [info ] [Thread-1 (]: 31 of 92 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.51s]
[0m16:11:28.969655 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:11:28.970101 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:11:28.971255 [info ] [Thread-1 (]: 35 of 92 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m16:11:28.972484 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m16:11:28.972885 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m16:11:28.973121 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:11:28.978861 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m16:11:28.980830 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-06-24 16:11:28.973252 => 2024-06-24 16:11:28.980603
[0m16:11:28.981475 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:11:28.990191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
    )
        ...
[0m16:11:28.994153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:28.999029 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.010046 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.012471 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m16:11:29.013377 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
  ...
[0m16:11:29.017754 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.026361 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.032927 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:29.035594 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m16:11:29.036722 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.040531 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m16:11:29.041386 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
  ...
[0m16:11:29.047651 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.053982 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m16:11:29.057672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:29.059693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m16:11:29.060431 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.063097 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-06-24 16:11:28.955068 => 2024-06-24 16:11:29.063023
[0m16:11:29.064266 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778691bdf0>]}
[0m16:11:29.064922 [info ] [Thread-2 (]: 34 of 92 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.13s]
[0m16:11:29.065394 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:11:29.065763 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:11:29.066629 [info ] [Thread-2 (]: 36 of 92 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m16:11:29.068717 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m16:11:29.069953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.070300 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m16:11:29.076840 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m16:11:29.077704 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:11:29.083088 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m16:11:29.085714 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-06-24 16:11:29.078926 => 2024-06-24 16:11:29.085459
[0m16:11:29.086418 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:11:29.094153 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:29.093302 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
    )
        ...
[0m16:11:29.096417 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-06-24 16:11:28.981668 => 2024-06-24 16:11:29.096349
[0m16:11:29.099352 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784486ce0>]}
[0m16:11:29.100044 [info ] [Thread-1 (]: 35 of 92 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.13s]
[0m16:11:29.100709 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:11:29.101472 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:11:29.103027 [info ] [Thread-1 (]: 37 of 92 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m16:11:29.104217 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m16:11:29.104601 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m16:11:29.104857 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:11:29.111487 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m16:11:29.112650 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-24 16:11:29.105026 => 2024-06-24 16:11:29.112470
[0m16:11:29.113200 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:11:29.125248 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.126463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.131437 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.135959 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.141314 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.143259 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.145970 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m16:11:29.147791 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
  ...
[0m16:11:29.151292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.155933 [debug] [Thread-1 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:29.160177 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:29.165240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:29.168067 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    )
        ...
[0m16:11:29.173517 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.174934 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m16:11:29.186357 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.192313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m16:11:29.198386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.204935 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.206238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.209509 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-06-24 16:11:29.086724 => 2024-06-24 16:11:29.209419
[0m16:11:29.210392 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778691bdf0>]}
[0m16:11:29.210879 [info ] [Thread-2 (]: 36 of 92 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.14s]
[0m16:11:29.211344 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:11:29.212734 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:11:29.213702 [info ] [Thread-2 (]: 38 of 92 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m16:11:29.215191 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.216163 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m16:11:29.219014 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m16:11:29.219641 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m16:11:29.220873 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:11:29.225584 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m16:11:29.226260 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
  
      ...
[0m16:11:29.229017 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-06-24 16:11:29.221265 => 2024-06-24 16:11:29.228802
[0m16:11:29.229442 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:11:29.251982 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
    )
        ...
[0m16:11:29.257632 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.259227 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:29.277838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.281014 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.290183 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.292572 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m16:11:29.293253 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
  ...
[0m16:11:29.315120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:29.316428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m16:11:29.324978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.329900 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m16:11:29.335096 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:29.340688 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.341507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.343954 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-06-24 16:11:29.229564 => 2024-06-24 16:11:29.343871
[0m16:11:29.344703 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7786b5b7c0>]}
[0m16:11:29.345538 [info ] [Thread-2 (]: 38 of 92 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.13s]
[0m16:11:29.346017 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:11:29.346298 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:11:29.346663 [info ] [Thread-2 (]: 39 of 92 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m16:11:29.347935 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m16:11:29.348249 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m16:11:29.348495 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:11:29.439600 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m16:11:29.440649 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:29.443026 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:29.444351 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-06-24 16:11:29.348667 => 2024-06-24 16:11:29.444199
[0m16:11:29.444842 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:11:29.451509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.460477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.464108 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.469851 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.473923 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:29.474941 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.478771 [debug] [Thread-2 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:29.481976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:29.483756 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.490408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m16:11:29.492089 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.494989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
    )
        ...
[0m16:11:29.496463 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.499099 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-06-24 16:11:29.113453 => 2024-06-24 16:11:29.499022
[0m16:11:29.500756 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778458bb50>]}
[0m16:11:29.502199 [info ] [Thread-1 (]: 37 of 92 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.40s]
[0m16:11:29.503198 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:11:29.503979 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:11:29.504982 [info ] [Thread-1 (]: 40 of 92 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m16:11:29.507200 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m16:11:29.507901 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m16:11:29.508255 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:11:29.514604 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m16:11:29.515631 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-06-24 16:11:29.508397 => 2024-06-24 16:11:29.515408
[0m16:11:29.516102 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:11:29.527863 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.529944 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.533858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.536335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.545649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.547168 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.549867 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m16:11:29.552856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
  
      ...
[0m16:11:29.557980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.563953 [debug] [Thread-1 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:29.567954 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:29.572845 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:29.575493 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
    )
        ...
[0m16:11:29.579198 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.580516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:29.606932 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.611167 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.619630 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.622246 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m16:11:29.623344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
  
      ...
[0m16:11:29.657373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.658975 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:29.660029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:29.664870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.671731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.674315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:29.688907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.693851 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:29.698578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:29.703531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m16:11:29.707768 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:29.710478 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-06-24 16:11:29.445057 => 2024-06-24 16:11:29.710390
[0m16:11:29.711412 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77848120e0>]}
[0m16:11:29.712017 [info ] [Thread-2 (]: 39 of 92 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.36s]
[0m16:11:29.712546 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:11:29.712951 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:11:29.714108 [info ] [Thread-2 (]: 41 of 92 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m16:11:29.715175 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m16:11:29.715564 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m16:11:29.715916 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:11:29.716876 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:11:29.744665 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m16:11:29.744249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.755624 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.758470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:29.759477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.792329 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.794098 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:29.797513 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:29.804124 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.808076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m16:11:29.809496 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:29.821144 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m16:11:29.822301 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.825635 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-06-24 16:11:29.516239 => 2024-06-24 16:11:29.825544
[0m16:11:29.826727 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778462c610>]}
[0m16:11:29.827251 [info ] [Thread-1 (]: 40 of 92 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.32s]
[0m16:11:29.828230 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:11:29.828815 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:11:29.829574 [info ] [Thread-1 (]: 42 of 92 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m16:11:29.831198 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m16:11:29.832121 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-06-24 16:11:29.717447 => 2024-06-24 16:11:29.831939
[0m16:11:29.832539 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m16:11:29.832970 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:11:29.833376 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:11:29.843026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



    )
        ...
[0m16:11:29.872444 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m16:11:29.882306 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.888584 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.897045 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.901097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m16:11:29.902407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:29.908277 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.914672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.919699 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.920877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.925536 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m16:11:29.928139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



  ...
[0m16:11:29.959202 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:29.963740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m16:11:29.974965 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.979936 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:29.980885 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:29.983878 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m16:11:29.989897 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:29.997172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m16:11:29.998049 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.006809 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m16:11:30.009424 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.014470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.016105 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.018771 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-06-24 16:11:29.833786 => 2024-06-24 16:11:30.018580
[0m16:11:30.020166 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77845541c0>]}
[0m16:11:30.021661 [info ] [Thread-2 (]: 41 of 92 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.31s]
[0m16:11:30.022783 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:11:30.023545 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m16:11:30.024220 [info ] [Thread-2 (]: 43 of 92 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m16:11:30.026077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.027412 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m16:11:30.031550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m16:11:30.032071 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m16:11:30.034476 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m16:11:30.049239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.065127 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.066736 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m16:11:30.078474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.090421 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m16:11:30.092101 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.099138 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.101884 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-06-24 16:11:29.843695 => 2024-06-24 16:11:30.101459
[0m16:11:30.102853 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:11:30.122225 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.125672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.130653 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m16:11:30.145024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.150920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.152562 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.160827 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.165079 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.171635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m16:11:30.172853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.185895 [debug] [Thread-1 (]: 
    In test.join_appmetrica_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:30.191684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:30.193389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.205523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.213602 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.218227 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



    )
        ...
[0m16:11:30.220865 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.238701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m16:11:30.248498 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.258571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:11:30.296426 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:30.298738 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m16:11:30.299772 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-06-24 16:11:30.035022 => 2024-06-24 16:11:30.299561
[0m16:11:30.300526 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m16:11:30.310756 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.321954 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.326225 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.331960 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.336461 [debug] [Thread-2 (]: 
    In test.join_mt_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:30.340208 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:30.344352 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:30.347480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



    )
        ...
[0m16:11:30.455854 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m16:11:30.459580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.475266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.477201 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m16:11:30.478052 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



  
      ...
[0m16:11:30.563846 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:11:30.565944 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

      delete from test.join_mt_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:30.644205 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:30.647269 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.655257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.657854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        insert into test.join_mt_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:30.678441 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.682784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:30.692421 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.698372 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_distributed_new_data 
  ...
[0m16:11:30.706083 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.710050 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-06-24 16:11:30.301106 => 2024-06-24 16:11:30.709779
[0m16:11:30.711278 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784498460>]}
[0m16:11:30.711968 [info ] [Thread-2 (]: 43 of 92 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.68s]
[0m16:11:30.712720 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m16:11:30.713165 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:11:30.714219 [info ] [Thread-2 (]: 44 of 92 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m16:11:30.715328 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m16:11:30.715767 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m16:11:30.716085 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:11:30.730367 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m16:11:30.744204 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.750031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.761709 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.767232 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m16:11:30.768731 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-06-24 16:11:30.716268 => 2024-06-24 16:11:30.768366
[0m16:11:30.769613 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:11:30.784638 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



    )
        ...
[0m16:11:30.854511 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.63 seconds
[0m16:11:30.858267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.862385 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:30.866769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.869064 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.871709 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m16:11:30.874961 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



  
      ...
[0m16:11:30.876744 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.882531 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m16:11:30.884816 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



  ...
[0m16:11:30.904670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:30.906515 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m16:11:30.915359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.921394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m16:11:30.925547 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:30.927238 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-06-24 16:11:30.769970 => 2024-06-24 16:11:30.927164
[0m16:11:30.927985 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784731a50>]}
[0m16:11:30.928475 [info ] [Thread-2 (]: 44 of 92 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.21s]
[0m16:11:30.929198 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:11:30.929682 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:11:30.930648 [info ] [Thread-2 (]: 45 of 92 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m16:11:30.932190 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m16:11:30.932625 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m16:11:30.933182 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:11:30.945287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m16:11:30.957294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.963030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:30.970462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:30.974970 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m16:11:30.975944 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-06-24 16:11:30.933548 => 2024-06-24 16:11:30.975772
[0m16:11:30.976418 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:11:30.987333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



    )
        ...
[0m16:11:31.023570 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:31.027576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.035330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.038134 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m16:11:31.038965 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



  ...
[0m16:11:31.063466 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:31.065059 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m16:11:31.072026 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.077394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m16:11:31.083164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.085335 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-06-24 16:11:30.976593 => 2024-06-24 16:11:31.085224
[0m16:11:31.086417 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77845ce740>]}
[0m16:11:31.087331 [info ] [Thread-2 (]: 45 of 92 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.15s]
[0m16:11:31.088113 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:11:31.088708 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:11:31.089859 [info ] [Thread-2 (]: 46 of 92 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m16:11:31.091579 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m16:11:31.092306 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m16:11:31.092794 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:11:31.133485 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m16:11:31.144126 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.149563 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.159237 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.164506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m16:11:31.173994 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.180836 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.188169 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.191986 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m16:11:31.199842 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.202130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:11:31.229902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:31.231786 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m16:11:31.232557 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-06-24 16:11:31.092947 => 2024-06-24 16:11:31.232438
[0m16:11:31.232924 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:11:31.241368 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.252528 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.257520 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.269532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.274592 [debug] [Thread-2 (]: 
    In test.join_vkads_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:31.278930 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:31.291003 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.295315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



    )
        ...
[0m16:11:31.423805 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m16:11:31.428024 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.442744 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.446233 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m16:11:31.447632 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



  
      ...
[0m16:11:31.546088 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:31.547683 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

      delete from test.join_vkads_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:31.648053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:31.653408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.660131 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.662280 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        insert into test.join_vkads_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link" from test.join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:31.679016 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:31.683156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:31.689086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.693388 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_distributed_new_data 
  ...
[0m16:11:31.699091 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.701544 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-06-24 16:11:31.233097 => 2024-06-24 16:11:31.701461
[0m16:11:31.702327 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77847149d0>]}
[0m16:11:31.702793 [info ] [Thread-2 (]: 46 of 92 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.61s]
[0m16:11:31.703231 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:11:31.703579 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m16:11:31.704003 [info ] [Thread-2 (]: 47 of 92 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m16:11:31.705380 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m16:11:31.705647 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m16:11:31.705874 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m16:11:31.724392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m16:11:31.733476 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.739447 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.782324 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:31.788213 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m16:11:31.854523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:11:31.856554 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:11:31.877802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:31.879334 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m16:11:31.880177 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-06-24 16:11:31.706050 => 2024-06-24 16:11:31.880058
[0m16:11:31.880508 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m16:11:31.889957 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.898988 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.903517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.908833 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:31.912936 [debug] [Thread-2 (]: 
    In test.join_yd_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:31.916608 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:31.922210 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:31.925006 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



    )
        ...
[0m16:11:31.975522 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:31.979092 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:31.986642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:31.989050 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m16:11:31.989712 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



  
      ...
[0m16:11:31.992522 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 1.12 seconds
[0m16:11:31.994066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

      delete from test.join_appmetrica_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:32.020423 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:32.021727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

      delete from test.join_yd_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:32.062994 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:11:32.066726 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.074542 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.077363 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        insert into test.join_appmetrica_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link" from test.join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:32.078480 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:11:32.089675 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.094818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.194164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:32.196515 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:32.198904 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        insert into test.join_yd_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:32.204236 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:32.208636 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_distributed_new_data 
  ...
[0m16:11:32.214107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.218111 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:32.218965 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.224467 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-06-24 16:11:30.103673 => 2024-06-24 16:11:32.224342
[0m16:11:32.226001 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784700e80>]}
[0m16:11:32.226981 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.227779 [info ] [Thread-1 (]: 42 of 92 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 2.40s]
[0m16:11:32.232359 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_distributed_new_data 
  ...
[0m16:11:32.233185 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:11:32.235071 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m16:11:32.235956 [info ] [Thread-1 (]: 48 of 92 START sql incremental model test.join_ym_events ....................... [RUN]
[0m16:11:32.237424 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m16:11:32.237806 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m16:11:32.238040 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m16:11:32.249548 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.259344 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-06-24 16:11:31.880629 => 2024-06-24 16:11:32.259263
[0m16:11:32.260835 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m16:11:32.262003 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77844a4730>]}
[0m16:11:32.265038 [info ] [Thread-2 (]: 47 of 92 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.56s]
[0m16:11:32.266005 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m16:11:32.266518 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:11:32.268468 [info ] [Thread-2 (]: 49 of 92 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m16:11:32.270106 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m16:11:32.270696 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m16:11:32.271322 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:11:32.285757 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.301476 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m16:11:32.304110 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.312292 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.313815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.319017 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m16:11:32.325245 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.333155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.335678 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:11:32.336915 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.341106 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m16:11:32.342817 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-06-24 16:11:32.271691 => 2024-06-24 16:11:32.342633
[0m16:11:32.343347 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:11:32.350741 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

    )
        ...
[0m16:11:32.374840 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.379234 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.383871 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:32.386437 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m16:11:32.387649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.389594 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m16:11:32.390919 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-06-24 16:11:32.238177 => 2024-06-24 16:11:32.390679
[0m16:11:32.391791 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m16:11:32.402369 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.404143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

  ...
[0m16:11:32.412239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.418200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.425505 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.432066 [debug] [Thread-1 (]: 
    In test.join_ym_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:32.435783 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:32.437759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:32.439741 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m16:11:32.440812 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:32.444859 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



    )
        ...
[0m16:11:32.452001 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.456700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m16:11:32.461267 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:32.463191 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-06-24 16:11:32.343634 => 2024-06-24 16:11:32.463116
[0m16:11:32.463832 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77868e83a0>]}
[0m16:11:32.464204 [info ] [Thread-2 (]: 49 of 92 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.19s]
[0m16:11:32.464572 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:11:32.464899 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m16:11:32.465343 [info ] [Thread-2 (]: 50 of 92 START sql table model test.combine_periodstat ......................... [RUN]
[0m16:11:32.466217 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m16:11:32.467395 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m16:11:32.468444 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m16:11:32.473493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m16:11:32.489627 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.490723 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:32.494947 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.501938 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.509317 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.511936 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m16:11:32.513449 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.516351 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m16:11:32.517503 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-06-24 16:11:32.468849 => 2024-06-24 16:11:32.517307
[0m16:11:32.518343 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m16:11:32.524579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

    )
        ...
[0m16:11:32.526298 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



  
      ...
[0m16:11:32.548852 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.554651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.561795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.564145 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m16:11:32.565051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

  ...
[0m16:11:32.574515 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:32.576101 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

      delete from test.join_ym_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:32.577761 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.580927 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m16:11:32.589637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.596008 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m16:11:32.601849 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.603791 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-06-24 16:11:32.518665 => 2024-06-24 16:11:32.603699
[0m16:11:32.604665 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77847917b0>]}
[0m16:11:32.605330 [info ] [Thread-2 (]: 50 of 92 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.14s]
[0m16:11:32.605836 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m16:11:32.606191 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:11:32.607317 [info ] [Thread-2 (]: 51 of 92 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m16:11:32.608874 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m16:11:32.609217 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m16:11:32.609438 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:11:32.614327 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m16:11:32.625498 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.629932 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.637617 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:11:32.638876 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.647005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.649851 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m16:11:32.652730 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-06-24 16:11:32.609567 => 2024-06-24 16:11:32.652497
[0m16:11:32.653339 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:11:32.660517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

    )
        ...
[0m16:11:32.661627 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.665797 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        insert into test.join_ym_events select "__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link" from test.join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:32.712062 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:32.716481 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:32.718093 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:11:32.723190 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.726987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.731097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_distributed_new_data 
  ...
[0m16:11:32.732335 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.736384 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m16:11:32.737819 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

  ...
[0m16:11:32.739683 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.742769 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-06-24 16:11:32.392140 => 2024-06-24 16:11:32.742673
[0m16:11:32.743683 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784700250>]}
[0m16:11:32.744328 [info ] [Thread-1 (]: 48 of 92 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.51s]
[0m16:11:32.745012 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m16:11:32.745510 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m16:11:32.746489 [info ] [Thread-1 (]: 52 of 92 START sql incremental model test.combine_datestat ..................... [RUN]
[0m16:11:32.747861 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m16:11:32.748204 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m16:11:32.748427 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m16:11:32.754399 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.757983 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m16:11:32.759524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m16:11:32.770795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.778384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m16:11:32.780823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.787190 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.791575 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.794216 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-06-24 16:11:32.653545 => 2024-06-24 16:11:32.794094
[0m16:11:32.795497 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77868e65f0>]}
[0m16:11:32.796542 [info ] [Thread-2 (]: 51 of 92 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.19s]
[0m16:11:32.797262 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:11:32.797967 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:11:32.798774 [info ] [Thread-2 (]: 53 of 92 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m16:11:32.799786 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m16:11:32.800208 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m16:11:32.800570 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:11:32.810685 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m16:11:32.812060 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.819851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.821781 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-06-24 16:11:32.800781 => 2024-06-24 16:11:32.821477
[0m16:11:32.822362 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:11:32.836360 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE
    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 


FROM test.combine_registry_appprofilematching 
WHERE 

)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:11:32.839019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:32.846832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.855295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.866253 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m16:11:32.868265 [debug] [Thread-2 (]: dbt_clickhouse adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE
    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 


FROM test.combine_registry_appprofilematching 
WHERE 

)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        
[0m16:11:32.869697 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-06-24 16:11:32.822690 => 2024-06-24 16:11:32.869496
[0m16:11:32.871875 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-06-24 16:11:32.748706 => 2024-06-24 16:11:32.871644
[0m16:11:32.872769 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m16:11:32.883256 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.890896 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.895086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.901045 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.906051 [debug] [Thread-1 (]: 
    In test.combine_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:32.909643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:32.914212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:32.917690 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

    )
        ...
[0m16:11:32.928324 [debug] [Thread-2 (]: Database Error in model hash_registry_appprofilematching (models/2_staging/3_hash/hash_registry_appprofilematching.sql)
  :HTTPDriver for http://localhost:8123 returned response code 400)
   Code: 62. DB::Exception: Syntax error: failed at position 493 ('END') (line 20, col 5): END) as __id
    , assumeNotNull(CASE
      WHEN __link = 'UtmHashRegistry' 
      
      THEN toDateTime(
      0) 
      END) AS __datetime
  FROM (
  
  SELECT *, 
  
  
  FROM test. Expected one of: WHEN, ELSE, END, token, Dot, Comma, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS. (SYNTAX_ERROR) (version 24.1.4.20 (official build))
[0m16:11:32.929159 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77844b65c0>]}
[0m16:11:32.929718 [error] [Thread-2 (]: 53 of 92 ERROR creating sql table model test.hash_registry_appprofilematching .. [[31mERROR[0m in 0.13s]
[0m16:11:32.930164 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:11:32.930574 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m16:11:32.933152 [info ] [Thread-2 (]: 54 of 92 START sql table model test.hash_periodstat ............................ [RUN]
[0m16:11:32.934271 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m16:11:32.934714 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m16:11:32.935034 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m16:11:32.950849 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m16:11:32.952193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:32.957190 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:32.959063 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-06-24 16:11:32.935183 => 2024-06-24 16:11:32.958834
[0m16:11:32.961491 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m16:11:32.970094 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:32.971463 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:11:32.974065 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m16:11:32.976395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

  
      ...
[0m16:11:33.016494 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:33.022886 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.030326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.034582 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m16:11:33.035700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m16:11:33.042932 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:11:33.044877 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

      delete from test.combine_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:33.068047 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:33.069824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m16:11:33.075404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.083175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m16:11:33.090551 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.092868 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-06-24 16:11:32.961998 => 2024-06-24 16:11:33.092782
[0m16:11:33.093684 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7786890670>]}
[0m16:11:33.094190 [info ] [Thread-2 (]: 54 of 92 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.16s]
[0m16:11:33.094653 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m16:11:33.095062 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m16:11:33.096010 [info ] [Thread-2 (]: 55 of 92 START sql incremental model test.combine_events ....................... [RUN]
[0m16:11:33.097125 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m16:11:33.097973 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m16:11:33.098340 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m16:11:33.105073 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m16:11:33.115478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.121323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.124241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:11:33.129733 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.130849 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.138881 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.143216 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.145684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        insert into test.combine_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId" from test.combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:33.147848 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.155779 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m16:11:33.157822 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-06-24 16:11:33.098502 => 2024-06-24 16:11:33.157611
[0m16:11:33.158485 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m16:11:33.169770 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.170730 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:33.177008 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:33.182358 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:33.187337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_distributed_new_data 
  ...
[0m16:11:33.189234 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:33.194867 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.195847 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.199534 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-06-24 16:11:32.873219 => 2024-06-24 16:11:33.199441
[0m16:11:33.201330 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784700e50>]}
[0m16:11:33.202239 [info ] [Thread-1 (]: 52 of 92 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.45s]
[0m16:11:33.203576 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.204149 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m16:11:33.214154 [debug] [Thread-2 (]: 
    In test.combine_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:33.215008 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:11:33.221174 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:33.222166 [info ] [Thread-1 (]: 56 of 92 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m16:11:33.224788 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m16:11:33.225113 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m16:11:33.225335 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:11:33.238015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:33.246584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

    )
        ...
[0m16:11:33.243646 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m16:11:33.250307 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-06-24 16:11:33.225608 => 2024-06-24 16:11:33.250058
[0m16:11:33.250842 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:11:33.258571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:11:33.298388 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:33.303997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.305104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:33.310491 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.313024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.315751 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m16:11:33.317279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.319976 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m16:11:33.320531 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

  
      ...
[0m16:11:33.323095 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m16:11:33.378586 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:33.379938 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m16:11:33.406279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:33.419346 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m16:11:33.428483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.431299 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-06-24 16:11:33.251386 => 2024-06-24 16:11:33.431190
[0m16:11:33.432227 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7784804370>]}
[0m16:11:33.494859 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.17 seconds
[0m16:11:33.496047 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

      delete from test.combine_events where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:33.551054 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:33.556293 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:33.566095 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:33.571378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        insert into test.combine_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews" from test.combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:33.588104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:33.595562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:33.600185 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:33.605315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_distributed_new_data 
  ...
[0m16:11:33.609644 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:33.613288 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-06-24 16:11:33.158723 => 2024-06-24 16:11:33.613162
[0m16:11:33.614265 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778467c190>]}
[0m16:11:34.395058 [info ] [Thread-1 (]: 56 of 92 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.21s]
[0m16:11:34.396378 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:11:34.395613 [info ] [Thread-2 (]: 55 of 92 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.52s]
[0m16:11:34.397766 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m16:11:34.398811 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m16:11:34.400145 [info ] [Thread-1 (]: 57 of 92 SKIP relation test.link_registry_appprofilematching ................... [[33mSKIP[0m]
[0m16:11:34.401109 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m16:11:34.402592 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m16:11:34.403379 [info ] [Thread-2 (]: 58 of 92 START sql table model test.link_periodstat ............................ [RUN]
[0m16:11:34.404365 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m16:11:34.405966 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m16:11:34.406726 [info ] [Thread-1 (]: 59 of 92 START sql incremental model test.hash_datestat ........................ [RUN]
[0m16:11:34.407315 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m16:11:34.408251 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m16:11:34.408951 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m16:11:34.409775 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m16:11:34.417768 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.418438 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m16:11:34.428148 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m16:11:34.429932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.430945 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-06-24 16:11:34.419920 => 2024-06-24 16:11:34.430808
[0m16:11:34.432973 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m16:11:34.433681 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m16:11:34.442399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.443945 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-06-24 16:11:34.410639 => 2024-06-24 16:11:34.443761
[0m16:11:34.444887 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m16:11:34.449223 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

    )
        ...
[0m16:11:34.451077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.456132 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.462467 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.467058 [debug] [Thread-1 (]: 
    In test.hash_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:34.470746 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:34.472226 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:34.475081 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.478347 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.484960 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:11:34.486177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.489170 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m16:11:34.490823 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

  ...
[0m16:11:34.514709 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:34.516223 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m16:11:34.521672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:34.619229 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.620152 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:11:34.625871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m16:11:34.626855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.629735 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m16:11:34.630925 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:34.632393 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-06-24 16:11:34.445194 => 2024-06-24 16:11:34.632333
[0m16:11:34.633230 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77843c9a20>]}
[0m16:11:34.634001 [info ] [Thread-2 (]: 58 of 92 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.23s]
[0m16:11:34.634677 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m16:11:34.635028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m16:11:34.635594 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:11:34.637851 [info ] [Thread-2 (]: 60 of 92 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m16:11:34.639212 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m16:11:34.639589 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m16:11:34.639911 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:11:34.648917 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.658793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.661030 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m16:11:34.662900 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-06-24 16:11:34.640133 => 2024-06-24 16:11:34.662713
[0m16:11:34.663268 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:11:34.668939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

    )
        ...
[0m16:11:34.696299 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:34.703914 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.705582 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:11:34.709939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

      delete from test.hash_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:34.713480 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.717287 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m16:11:34.718496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

  ...
[0m16:11:34.739928 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:34.741741 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m16:11:34.748534 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.756051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m16:11:34.761815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.763792 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-06-24 16:11:34.663394 => 2024-06-24 16:11:34.763693
[0m16:11:34.764695 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77844904f0>]}
[0m16:11:34.766101 [info ] [Thread-2 (]: 60 of 92 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.13s]
[0m16:11:34.766851 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:11:34.767317 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m16:11:34.768778 [info ] [Thread-2 (]: 61 of 92 START sql incremental model test.hash_events .......................... [RUN]
[0m16:11:34.769938 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m16:11:34.770359 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m16:11:34.770570 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m16:11:34.778010 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m16:11:34.779188 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:11:34.782422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.784607 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-06-24 16:11:34.770689 => 2024-06-24 16:11:34.784375
[0m16:11:34.785697 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m16:11:34.796537 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.797353 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.800402 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        insert into test.hash_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime" from test.hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:34.814913 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.820150 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.822218 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:34.826570 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:34.827844 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.842963 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.844622 [debug] [Thread-2 (]: 
    In test.hash_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:11:34.848413 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_distributed_new_data 
  ...
[0m16:11:34.853403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 
  ...
[0m16:11:34.860263 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.863066 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-06-24 16:11:34.434629 => 2024-06-24 16:11:34.862994
[0m16:11:34.863869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.864865 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77843c27a0>]}
[0m16:11:34.867051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_events 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:11:34.868415 [info ] [Thread-1 (]: 59 of 92 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.46s]
[0m16:11:34.870715 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m16:11:34.871658 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m16:11:34.872523 [info ] [Thread-1 (]: 62 of 92 SKIP relation test.full_periodstat .................................... [[33mSKIP[0m]
[0m16:11:34.873414 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m16:11:34.874665 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m16:11:34.875525 [info ] [Thread-1 (]: 63 of 92 START sql table model test.link_datestat .............................. [RUN]
[0m16:11:34.877094 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m16:11:34.877489 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m16:11:34.877695 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m16:11:34.885334 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.891801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.894743 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m16:11:34.895414 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-06-24 16:11:34.877824 => 2024-06-24 16:11:34.895245
[0m16:11:34.895762 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m16:11:34.901834 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

    )
        ...
[0m16:11:34.911525 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:11:34.915051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.922306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.923469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:11:34.926553 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m16:11:34.930422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:34.933384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "YmClientHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_events 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m16:11:34.937656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.940423 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m16:11:34.941252 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

  ...
[0m16:11:34.973307 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:11:34.974941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m16:11:34.982170 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:34.987233 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m16:11:34.992122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:11:34.993809 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-06-24 16:11:34.895906 => 2024-06-24 16:11:34.993739
[0m16:11:34.994486 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:11:34.995605 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f778691dba0>]}
[0m16:11:34.997687 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

      delete from test.hash_events where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8);
    ...
[0m16:11:34.998514 [info ] [Thread-1 (]: 63 of 92 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.12s]
[0m16:11:35.000377 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m16:11:35.002330 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m16:11:35.002809 [info ] [Thread-1 (]: 64 of 92 SKIP relation test.full_datestat ...................................... [[33mSKIP[0m]
[0m16:11:35.003399 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m16:11:35.046750 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:11:35.049473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:11:35.056477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:11:35.059973 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    ...
[0m16:11:35.072261 [debug] [Thread-2 (]: dbt_clickhouse adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8
    
[0m16:11:35.072685 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-06-24 16:11:34.785929 => 2024-06-24 16:11:35.072594
[0m16:11:35.073659 [debug] [Thread-2 (]: Database Error in model hash_events (models/2_staging/3_hash/hash_events.sql)
  :HTTPDriver for http://localhost:8123 returned response code 404)
   Code: 47. DB::Exception: Missing columns: 'CrmUserHash' 'AppDeeplinkStatHash' 'AppEventStatHash' 'AppInstallStatHash' 'AppMetricaDeviceHash' 'AppSessionStatHash' while processing query: 'SELECT __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, pageViews, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime FROM test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8', required columns: 'addToCartSessions' 'utmHash' 'webSalesSessions' 'sales' 'adSourceDirty' '__datetime' 'accountName' 'cityName' 'transactionId' 'event_datetime' 'utmCampaign' 'AppSessionStatHash' 'crmUserId' 'appmetricaDeviceId' 'utmMedium' '__link' 'checkoutSessions' 'pageViews' 'amountSales' 'registrationButtonClick' 'couponActivationSessions' '__emitted_at' '__date' 'instantDiscountActivationSessions' 'AppMetricaDeviceHash' 'pagesViews' 'utmTerm' 'osName' 'screenView' 'linkingCardToPhoneNumberSessions' 'installApp' 'UtmHashHash' 'installs' 'promoCode' 'installationDeviceId' 'clientId' 'participationInLotterySessions' 'cartViewSessions' 'cityCode' 'utmContent' 'registrationCashbackSessions' 'registrationCardSessions' 'VisitStatHash' 'AppInstallStatHash' 'mobileAdsId' 'AppEventStatHash' 'utmSource' 'AppDeeplinkStatHash' 'registrationLendingPromotionsSessions' 'CrmUserHash' 'YmClientHash' '__table_name' 'visitId' 'sessions' '__id', maybe you meant: 'addToCartSessions', 'utmHash', 'webSalesSessions', 'sales', 'adSourceDirty', '__datetime', 'accountName', 'cityName', 'transactionId', 'event_datetime', 'utmCampaign', 'crmUserId', 'appmetricaDeviceId', 'utmMedium', '__link', 'checkoutSessions', 'pageViews', 'amountSales', 'registrationButtonClick', 'couponActivationSessions', '__emitted_at', '__date', 'instantDiscountActivationSessions', 'pagesViews', 'utmTerm', 'osName', 'screenView', 'linkingCardToPhoneNumberSessions', 'installApp', 'UtmHashHash', 'installs', 'promoCode', 'installationDeviceId', 'clientId', 'participationInLotterySessions', 'cartViewSessions', 'cityCode', 'utmContent', 'registrationCashbackSessions', 'registrationCardSessions', 'VisitStatHash', 'mobileAdsId', 'utmSource', 'registrationLendingPromotionsSessions', 'YmClientHash', '__table_name', 'visitId', 'sessions' or '__id'. (UNKNOWN_IDENTIFIER) (version 24.1.4.20 (official build))
  compiled Code at target/run/etlcraft_integration_tests/models/2_staging/3_hash/hash_events.sql
[0m16:11:35.074229 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f950241a-bf75-4a6c-9f4e-ca0523e4d3b8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f779a50a710>]}
[0m16:11:35.074677 [error] [Thread-2 (]: 61 of 92 ERROR creating sql incremental model test.hash_events ................. [[31mERROR[0m in 0.30s]
[0m16:11:35.075087 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m16:11:35.077564 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_events
[0m16:11:35.078180 [info ] [Thread-1 (]: 65 of 92 SKIP relation test.link_events ........................................ [[33mSKIP[0m]
[0m16:11:35.078605 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m16:11:35.080283 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m16:11:35.080756 [info ] [Thread-2 (]: 66 of 92 SKIP relation test.graph_tuples ....................................... [[33mSKIP[0m]
[0m16:11:35.081291 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m16:11:35.082658 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m16:11:35.083546 [info ] [Thread-1 (]: 67 of 92 SKIP relation test.graph_lookup ....................................... [[33mSKIP[0m]
[0m16:11:35.084889 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m16:11:35.086633 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m16:11:35.087764 [info ] [Thread-2 (]: 68 of 92 SKIP relation test.graph_unique ....................................... [[33mSKIP[0m]
[0m16:11:35.088404 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m16:11:35.090338 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m16:11:35.090913 [info ] [Thread-1 (]: 69 of 92 SKIP relation test.graph_edge ......................................... [[33mSKIP[0m]
[0m16:11:35.091614 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m16:11:35.093569 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m16:11:35.094334 [info ] [Thread-2 (]: 70 of 92 SKIP relation test.graph_glue ......................................... [[33mSKIP[0m]
[0m16:11:35.094948 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m16:11:35.096480 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m16:11:35.097031 [info ] [Thread-1 (]: 71 of 92 SKIP relation test.graph_qid .......................................... [[33mSKIP[0m]
[0m16:11:35.097399 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m16:11:35.099191 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m16:11:35.100047 [info ] [Thread-2 (]: 72 of 92 SKIP relation test.full_events ........................................ [[33mSKIP[0m]
[0m16:11:35.100651 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m16:11:35.102622 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m16:11:35.103218 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m16:11:35.103623 [info ] [Thread-1 (]: 73 of 92 SKIP relation test.attr_myfirstfunnel_prepare_with_qid ................ [[33mSKIP[0m]
[0m16:11:35.104549 [info ] [Thread-2 (]: 74 of 92 SKIP relation test.attr_mysecondfunnel_prepare_with_qid ............... [[33mSKIP[0m]
[0m16:11:35.105579 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m16:11:35.106383 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m16:11:35.108170 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m16:11:35.109547 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m16:11:35.110745 [info ] [Thread-1 (]: 75 of 92 SKIP relation test.attr_myfirstfunnel_create_events ................... [[33mSKIP[0m]
[0m16:11:35.111845 [info ] [Thread-2 (]: 76 of 92 SKIP relation test.attr_mysecondfunnel_create_events .................. [[33mSKIP[0m]
[0m16:11:35.112697 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m16:11:35.113306 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m16:11:35.115396 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m16:11:35.115990 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m16:11:35.116764 [info ] [Thread-1 (]: 77 of 92 SKIP relation test.attr_myfirstfunnel_add_row_number .................. [[33mSKIP[0m]
[0m16:11:35.117712 [info ] [Thread-2 (]: 78 of 92 SKIP relation test.attr_mysecondfunnel_add_row_number ................. [[33mSKIP[0m]
[0m16:11:35.119230 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m16:11:35.119801 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m16:11:35.121608 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m16:11:35.123986 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m16:11:35.123099 [info ] [Thread-1 (]: 79 of 92 SKIP relation test.attr_myfirstfunnel_find_new_period ................. [[33mSKIP[0m]
[0m16:11:35.125507 [info ] [Thread-2 (]: 80 of 92 SKIP relation test.attr_mysecondfunnel_find_new_period ................ [[33mSKIP[0m]
[0m16:11:35.126928 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m16:11:35.127762 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m16:11:35.129804 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m16:11:35.130871 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m16:11:35.131474 [info ] [Thread-1 (]: 81 of 92 SKIP relation test.attr_myfirstfunnel_calculate_period_number ......... [[33mSKIP[0m]
[0m16:11:35.132260 [info ] [Thread-2 (]: 82 of 92 SKIP relation test.attr_mysecondfunnel_calculate_period_number ........ [[33mSKIP[0m]
[0m16:11:35.133021 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m16:11:35.133948 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m16:11:35.135740 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m16:11:35.136891 [info ] [Thread-2 (]: 83 of 92 SKIP relation test.attr_myfirstfunnel_create_missed_steps ............. [[33mSKIP[0m]
[0m16:11:35.137639 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m16:11:35.138421 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m16:11:35.139446 [info ] [Thread-1 (]: 84 of 92 SKIP relation test.attr_mysecondfunnel_create_missed_steps ............ [[33mSKIP[0m]
[0m16:11:35.141516 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m16:11:35.142186 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m16:11:35.143651 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m16:11:35.144374 [info ] [Thread-2 (]: 85 of 92 SKIP relation test.attr_myfirstfunnel_join_to_attr_prepare_with_qid ... [[33mSKIP[0m]
[0m16:11:35.145120 [info ] [Thread-1 (]: 86 of 92 SKIP relation test.attr_mysecondfunnel_join_to_attr_prepare_with_qid .. [[33mSKIP[0m]
[0m16:11:35.146296 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m16:11:35.147054 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m16:11:35.148756 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m16:11:35.149713 [info ] [Thread-1 (]: 87 of 92 SKIP relation test.attr_myfirstfunnel_model ........................... [[33mSKIP[0m]
[0m16:11:35.150865 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m16:11:35.151874 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m16:11:35.153416 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m16:11:35.154009 [info ] [Thread-2 (]: 88 of 92 SKIP relation test.attr_mysecondfunnel_model .......................... [[33mSKIP[0m]
[0m16:11:35.155048 [info ] [Thread-1 (]: 89 of 92 SKIP relation test.attr_myfirstfunnel_final_table ..................... [[33mSKIP[0m]
[0m16:11:35.156369 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m16:11:35.157209 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m16:11:35.158795 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m16:11:35.160158 [info ] [Thread-2 (]: 90 of 92 SKIP relation test.attr_mysecondfunnel_final_table .................... [[33mSKIP[0m]
[0m16:11:35.161206 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m16:11:35.161717 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m16:11:35.162550 [info ] [Thread-1 (]: 91 of 92 SKIP relation test.dataset_event_table ................................ [[33mSKIP[0m]
[0m16:11:35.163870 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m16:11:35.165000 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m16:11:35.165550 [info ] [Thread-2 (]: 92 of 92 SKIP relation test.dataset_event_table2 ............................... [[33mSKIP[0m]
[0m16:11:35.167056 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m16:11:35.170895 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m16:11:35.172675 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:11:35.173626 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.link_datestat' was left open.
[0m16:11:35.174246 [debug] [MainThread]: On model.etlcraft_integration_tests.link_datestat: Close
[0m16:11:35.174457 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.hash_events' was left open.
[0m16:11:35.174623 [debug] [MainThread]: On model.etlcraft_integration_tests.hash_events: Close
[0m16:11:35.176058 [info ] [MainThread]: 
[0m16:11:35.176703 [info ] [MainThread]: Finished running 20 view models, 23 incremental models, 49 table models in 0 hours 0 minutes and 14.69 seconds (14.69s).
[0m16:11:35.181855 [debug] [MainThread]: Command end result
[0m16:11:35.218484 [info ] [MainThread]: 
[0m16:11:35.219512 [info ] [MainThread]: [31mCompleted with 2 errors and 0 warnings:[0m
[0m16:11:35.219861 [info ] [MainThread]: 
[0m16:11:35.220155 [error] [MainThread]: [33mDatabase Error in model hash_registry_appprofilematching (models/2_staging/3_hash/hash_registry_appprofilematching.sql)[0m
[0m16:11:35.220378 [error] [MainThread]:   :HTTPDriver for http://localhost:8123 returned response code 400)
[0m16:11:35.220665 [error] [MainThread]:    Code: 62. DB::Exception: Syntax error: failed at position 493 ('END') (line 20, col 5): END) as __id
[0m16:11:35.221037 [error] [MainThread]:     , assumeNotNull(CASE
[0m16:11:35.221395 [error] [MainThread]:       WHEN __link = 'UtmHashRegistry' 
[0m16:11:35.221716 [error] [MainThread]:       
[0m16:11:35.222066 [error] [MainThread]:       THEN toDateTime(
[0m16:11:35.222406 [error] [MainThread]:       0) 
[0m16:11:35.222733 [error] [MainThread]:       END) AS __datetime
[0m16:11:35.223153 [error] [MainThread]:   FROM (
[0m16:11:35.223767 [error] [MainThread]:   
[0m16:11:35.224107 [error] [MainThread]:   SELECT *, 
[0m16:11:35.224476 [error] [MainThread]:   
[0m16:11:35.224845 [error] [MainThread]:   
[0m16:11:35.225151 [error] [MainThread]:   FROM test. Expected one of: WHEN, ELSE, END, token, Dot, Comma, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS. (SYNTAX_ERROR) (version 24.1.4.20 (official build))
[0m16:11:35.225535 [info ] [MainThread]: 
[0m16:11:35.226107 [error] [MainThread]: [33mDatabase Error in model hash_events (models/2_staging/3_hash/hash_events.sql)[0m
[0m16:11:35.226650 [error] [MainThread]:   :HTTPDriver for http://localhost:8123 returned response code 404)
[0m16:11:35.227071 [error] [MainThread]:    Code: 47. DB::Exception: Missing columns: 'CrmUserHash' 'AppDeeplinkStatHash' 'AppEventStatHash' 'AppInstallStatHash' 'AppMetricaDeviceHash' 'AppSessionStatHash' while processing query: 'SELECT __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, pageViews, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime FROM test.hash_events__dbt_new_data_f950241a_bf75_4a6c_9f4e_ca0523e4d3b8', required columns: 'addToCartSessions' 'utmHash' 'webSalesSessions' 'sales' 'adSourceDirty' '__datetime' 'accountName' 'cityName' 'transactionId' 'event_datetime' 'utmCampaign' 'AppSessionStatHash' 'crmUserId' 'appmetricaDeviceId' 'utmMedium' '__link' 'checkoutSessions' 'pageViews' 'amountSales' 'registrationButtonClick' 'couponActivationSessions' '__emitted_at' '__date' 'instantDiscountActivationSessions' 'AppMetricaDeviceHash' 'pagesViews' 'utmTerm' 'osName' 'screenView' 'linkingCardToPhoneNumberSessions' 'installApp' 'UtmHashHash' 'installs' 'promoCode' 'installationDeviceId' 'clientId' 'participationInLotterySessions' 'cartViewSessions' 'cityCode' 'utmContent' 'registrationCashbackSessions' 'registrationCardSessions' 'VisitStatHash' 'AppInstallStatHash' 'mobileAdsId' 'AppEventStatHash' 'utmSource' 'AppDeeplinkStatHash' 'registrationLendingPromotionsSessions' 'CrmUserHash' 'YmClientHash' '__table_name' 'visitId' 'sessions' '__id', maybe you meant: 'addToCartSessions', 'utmHash', 'webSalesSessions', 'sales', 'adSourceDirty', '__datetime', 'accountName', 'cityName', 'transactionId', 'event_datetime', 'utmCampaign', 'crmUserId', 'appmetricaDeviceId', 'utmMedium', '__link', 'checkoutSessions', 'pageViews', 'amountSales', 'registrationButtonClick', 'couponActivationSessions', '__emitted_at', '__date', 'instantDiscountActivationSessions', 'pagesViews', 'utmTerm', 'osName', 'screenView', 'linkingCardToPhoneNumberSessions', 'installApp', 'UtmHashHash', 'installs', 'promoCode', 'installationDeviceId', 'clientId', 'participationInLotterySessions', 'cartViewSessions', 'cityCode', 'utmContent', 'registrationCashbackSessions', 'registrationCardSessions', 'VisitStatHash', 'mobileAdsId', 'utmSource', 'registrationLendingPromotionsSessions', 'YmClientHash', '__table_name', 'visitId', 'sessions' or '__id'. (UNKNOWN_IDENTIFIER) (version 24.1.4.20 (official build))
[0m16:11:35.228593 [error] [MainThread]:   compiled Code at target/run/etlcraft_integration_tests/models/2_staging/3_hash/hash_events.sql
[0m16:11:35.229211 [info ] [MainThread]: 
[0m16:11:35.229541 [info ] [MainThread]: Done. PASS=59 WARN=0 ERROR=2 SKIP=31 TOTAL=92
[0m16:11:35.230147 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77843c9a20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77843cdd50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f77843cc190>]}
[0m16:11:35.230629 [debug] [MainThread]: Flushing usage events


============================== 2024-06-24 16:12:26.859259 | 6b731b6a-9717-429e-b532-9ae47a2855c8 ==============================
[0m16:12:26.859259 [info ] [MainThread]: Running with dbt=1.4.7
[0m16:12:26.861706 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m16:12:26.862078 [debug] [MainThread]: Tracking: tracking
[0m16:12:26.865173 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f534a01dc00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f534a083970>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f534a0825c0>]}
[0m16:12:26.892333 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m16:12:27.005332 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m16:12:27.008658 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/other/get_features.sql
[0m16:12:27.137353 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m16:12:27.175554 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m16:12:27.177185 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m16:12:27.185387 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m16:12:27.186913 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m16:12:27.229531 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m16:12:27.231046 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m16:12:27.241650 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m16:12:27.243200 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m16:12:27.262392 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m16:12:27.263974 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m16:12:27.269670 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m16:12:27.271295 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m16:12:27.279335 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m16:12:27.280938 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m16:12:27.298032 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m16:12:27.299652 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m16:12:27.307299 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m16:12:27.308979 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m16:12:27.317071 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m16:12:27.318656 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m16:12:27.333138 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m16:12:27.334655 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m16:12:27.341857 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m16:12:27.343351 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m16:12:27.356520 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m16:12:27.358100 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m16:12:27.365908 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m16:12:27.367284 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m16:12:27.376150 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m16:12:27.377626 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m16:12:27.382534 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m16:12:27.384373 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m16:12:27.389420 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m16:12:27.390875 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m16:12:27.398448 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m16:12:27.399923 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m16:12:27.405887 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m16:12:27.407406 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m16:12:27.415079 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m16:12:27.416442 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m16:12:27.421195 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m16:12:27.422424 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m16:12:27.482711 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m16:12:27.484293 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m16:12:27.498454 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m16:12:27.500180 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m16:12:27.519796 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m16:12:27.521410 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m16:12:27.573815 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m16:12:27.575064 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m16:12:27.588909 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m16:12:27.590732 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m16:12:27.598720 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m16:12:27.600159 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m16:12:27.608523 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m16:12:27.609665 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m16:12:27.615925 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m16:12:27.617236 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m16:12:27.623007 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m16:12:27.624096 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m16:12:27.634681 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m16:12:27.635784 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m16:12:27.639802 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m16:12:27.640896 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m16:12:27.650656 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m16:12:27.651827 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m16:12:27.655886 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m16:12:27.657035 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m16:12:27.665309 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m16:12:27.666401 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m16:12:27.671105 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m16:12:27.672201 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m16:12:27.679006 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m16:12:27.680268 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m16:12:27.684356 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m16:12:27.685418 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m16:12:27.692751 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m16:12:27.727349 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5349840fa0>]}
[0m16:12:27.764854 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5349380340>]}
[0m16:12:27.765307 [info ] [MainThread]: Found 92 models, 8 tests, 0 snapshots, 0 analyses, 539 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m16:12:27.765568 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5349380550>]}
[0m16:12:27.773789 [info ] [MainThread]: 
[0m16:12:27.775512 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m16:12:27.780430 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m16:12:27.789291 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:12:28.419750 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m16:12:28.424372 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:28.433030 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m16:12:28.433808 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m16:12:28.442494 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m16:12:28.455210 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.470056 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53492be440>]}
[0m16:12:28.471195 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m16:12:28.471720 [info ] [MainThread]: 
[0m16:12:28.478215 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m16:12:28.479371 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m16:12:28.480639 [info ] [Thread-1 (]: 1 of 92 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m16:12:28.481633 [info ] [Thread-2 (]: 2 of 92 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m16:12:28.484362 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m16:12:28.486112 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m16:12:28.486537 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m16:12:28.486903 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m16:12:28.487201 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m16:12:28.577183 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m16:12:28.578077 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m16:12:28.594006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:28.633956 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:28.641944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.686278 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m16:12:28.687059 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-06-24 16:12:28.509506 => 2024-06-24 16:12:28.686957
[0m16:12:28.687349 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m16:12:28.725743 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m16:12:28.727932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_cohorts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
)

)
  )...
[0m16:12:28.738487 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m16:12:28.743806 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:28.752994 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m16:12:28.754932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:28.759113 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:28.760866 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.762830 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m16:12:28.765565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.777525 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.779744 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m16:12:28.784577 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m16:12:28.787663 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-06-24 16:12:28.487524 => 2024-06-24 16:12:28.787449
[0m16:12:28.788090 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m16:12:28.793300 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m16:12:28.794498 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.796016 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m16:12:28.796368 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
)

)
  )...
[0m16:12:28.801157 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:28.822129 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:28.837237 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m16:12:28.832802 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m16:12:28.841570 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:28.843229 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m16:12:28.844282 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.846807 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-06-24 16:12:28.687475 => 2024-06-24 16:12:28.846731
[0m16:12:28.847937 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53358bfc40>]}
[0m16:12:28.848715 [info ] [Thread-1 (]: 1 of 92 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.36s]
[0m16:12:28.850819 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m16:12:28.851958 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m16:12:28.853322 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.853916 [info ] [Thread-1 (]: 3 of 92 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m16:12:28.859682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m16:12:28.861387 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m16:12:28.863364 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m16:12:28.864056 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m16:12:28.871483 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m16:12:28.873291 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.875702 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m16:12:28.880159 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:28.886548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m16:12:28.887825 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:28.894872 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:28.896134 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.901112 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-06-24 16:12:28.788220 => 2024-06-24 16:12:28.900988
[0m16:12:28.902226 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53358fdc00>]}
[0m16:12:28.903029 [info ] [Thread-2 (]: 2 of 92 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.42s]
[0m16:12:28.903754 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m16:12:28.904246 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m16:12:28.905211 [info ] [Thread-2 (]: 4 of 92 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m16:12:28.906646 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m16:12:28.907846 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.908311 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m16:12:28.925220 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m16:12:28.925942 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m16:12:28.933800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m16:12:28.936561 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-06-24 16:12:28.864337 => 2024-06-24 16:12:28.936337
[0m16:12:28.937130 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m16:12:28.944890 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m16:12:28.946147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.950333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:28.950965 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_network') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_network
)

)
  )...
[0m16:12:28.958252 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.971754 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m16:12:28.972713 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:28.976671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m16:12:28.978145 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-06-24 16:12:28.926432 => 2024-06-24 16:12:28.977921
[0m16:12:28.979001 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m16:12:28.985587 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m16:12:28.986584 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:28.988553 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m16:12:28.990436 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


  create view test.normalize_adjust_registry_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_events
)

)
  )...
[0m16:12:28.992927 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:28.996996 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m16:12:29.001253 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.003061 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m16:12:29.004023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.009724 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m16:12:29.010885 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.080932 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:29.083446 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m16:12:29.085210 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events to test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m16:12:29.089993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.093219 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events 
  
  ...
[0m16:12:29.094165 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.097187 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-06-24 16:12:28.937335 => 2024-06-24 16:12:29.097098
[0m16:12:29.098191 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327602cb0>]}
[0m16:12:29.098939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.099742 [info ] [Thread-1 (]: 3 of 92 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.24s]
[0m16:12:29.102098 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events__dbt_tmp to test.normalize_adjust_registry_default_events 
  
  ...
[0m16:12:29.102801 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m16:12:29.104530 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m16:12:29.105311 [info ] [Thread-1 (]: 5 of 92 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m16:12:29.107376 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m16:12:29.108576 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.108926 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m16:12:29.115015 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */
drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  ...
[0m16:12:29.115682 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m16:12:29.123715 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.125164 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-06-24 16:12:28.979241 => 2024-06-24 16:12:29.125102
[0m16:12:29.126545 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m16:12:29.127767 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53358fd4b0>]}
[0m16:12:29.130142 [info ] [Thread-2 (]: 4 of 92 OK created sql view model test.normalize_adjust_registry_default_events  [[32mOK[0m in 0.22s]
[0m16:12:29.130977 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m16:12:29.131317 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m16:12:29.132474 [info ] [Thread-2 (]: 6 of 92 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m16:12:29.134712 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m16:12:29.135051 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m16:12:29.135284 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m16:12:29.141486 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m16:12:29.143337 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.149836 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.156744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.168650 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:29.175306 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m16:12:29.179415 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.182370 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-06-24 16:12:29.117913 => 2024-06-24 16:12:29.182153
[0m16:12:29.183021 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m16:12:29.189584 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m16:12:29.190437 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.209523 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m16:12:29.210117 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
)

)
  )...
[0m16:12:29.211817 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-06-24 16:12:29.135417 => 2024-06-24 16:12:29.211636
[0m16:12:29.212236 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m16:12:29.218624 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m16:12:29.219312 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m16:12:29.223905 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.227634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m16:12:29.231744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.233318 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m16:12:29.237753 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.238877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.243219 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m16:12:29.249631 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m16:12:29.254772 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.256122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.257866 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m16:12:29.260780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m16:12:29.265596 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.270317 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m16:12:29.271231 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.279401 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m16:12:29.283504 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.285803 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m16:12:29.288218 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.290878 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-06-24 16:12:29.183392 => 2024-06-24 16:12:29.290741
[0m16:12:29.292158 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5349840fa0>]}
[0m16:12:29.293185 [info ] [Thread-1 (]: 5 of 92 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.19s]
[0m16:12:29.294342 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m16:12:29.295170 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m16:12:29.298201 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.296764 [info ] [Thread-1 (]: 7 of 92 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m16:12:29.306539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m16:12:29.307924 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m16:12:29.309195 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m16:12:29.309897 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m16:12:29.315920 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m16:12:29.316924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.320298 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-06-24 16:12:29.212391 => 2024-06-24 16:12:29.320198
[0m16:12:29.321777 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276c7eb0>]}
[0m16:12:29.322428 [info ] [Thread-2 (]: 6 of 92 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.19s]
[0m16:12:29.322886 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m16:12:29.323211 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m16:12:29.323618 [info ] [Thread-2 (]: 8 of 92 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m16:12:29.325571 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m16:12:29.326359 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m16:12:29.326772 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m16:12:29.334651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m16:12:29.335599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.342314 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.344676 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.349580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.351785 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.363630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.377892 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m16:12:29.393095 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m16:12:29.393889 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-06-24 16:12:29.310390 => 2024-06-24 16:12:29.393720
[0m16:12:29.394441 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m16:12:29.399304 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m16:12:29.400216 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-06-24 16:12:29.327004 => 2024-06-24 16:12:29.400042
[0m16:12:29.400804 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m16:12:29.405514 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m16:12:29.406178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m16:12:29.407615 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m16:12:29.422030 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.427056 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m16:12:29.428614 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.433339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m16:12:29.434690 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.436366 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m16:12:29.438254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.439721 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m16:12:29.441333 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.445350 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m16:12:29.446739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.450651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m16:12:29.451690 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.453858 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m16:12:29.455560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.457059 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m16:12:29.458789 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.463623 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m16:12:29.465106 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.470657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m16:12:29.473239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.475230 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-06-24 16:12:29.394664 => 2024-06-24 16:12:29.475133
[0m16:12:29.476151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.477090 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532762a4d0>]}
[0m16:12:29.479747 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-06-24 16:12:29.401063 => 2024-06-24 16:12:29.479627
[0m16:12:29.480943 [info ] [Thread-1 (]: 7 of 92 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.17s]
[0m16:12:29.483019 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277469e0>]}
[0m16:12:29.484591 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m16:12:29.486445 [info ] [Thread-2 (]: 8 of 92 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.16s]
[0m16:12:29.487289 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:12:29.488362 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m16:12:29.489632 [info ] [Thread-1 (]: 9 of 92 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m16:12:29.490241 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:12:29.492284 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m16:12:29.493775 [info ] [Thread-2 (]: 10 of 92 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m16:12:29.494512 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m16:12:29.495774 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m16:12:29.496452 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:12:29.497125 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m16:12:29.507588 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m16:12:29.508535 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:12:29.514378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m16:12:29.519964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.525489 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.531597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.532887 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.552339 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m16:12:29.556889 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.559257 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-06-24 16:12:29.497915 => 2024-06-24 16:12:29.559018
[0m16:12:29.559919 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:12:29.565425 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m16:12:29.566757 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.574599 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m16:12:29.575207 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m16:12:29.577267 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-06-24 16:12:29.510103 => 2024-06-24 16:12:29.577001
[0m16:12:29.577957 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:12:29.585923 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m16:12:29.586667 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m16:12:29.589996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.593817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m16:12:29.597735 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.599504 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m16:12:29.600391 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.604888 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m16:12:29.608553 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.609285 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.612796 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m16:12:29.615162 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m16:12:29.620107 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.621658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m16:12:29.622688 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.628007 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m16:12:29.629175 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.637368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m16:12:29.638220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.641169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m16:12:29.643210 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.644809 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-06-24 16:12:29.560198 => 2024-06-24 16:12:29.644732
[0m16:12:29.646591 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327523fa0>]}
[0m16:12:29.647287 [info ] [Thread-1 (]: 9 of 92 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.15s]
[0m16:12:29.647849 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m16:12:29.648256 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:12:29.649542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.650538 [info ] [Thread-1 (]: 11 of 92 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m16:12:29.658918 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m16:12:29.659690 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m16:12:29.660653 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m16:12:29.661163 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:12:29.668903 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m16:12:29.670294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.674248 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-06-24 16:12:29.578178 => 2024-06-24 16:12:29.674149
[0m16:12:29.675237 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53358fdc00>]}
[0m16:12:29.675944 [info ] [Thread-2 (]: 10 of 92 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.18s]
[0m16:12:29.676522 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m16:12:29.677176 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:12:29.678918 [info ] [Thread-2 (]: 12 of 92 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m16:12:29.679915 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m16:12:29.680132 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m16:12:29.680357 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:12:29.686961 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m16:12:29.688420 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.694536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.696425 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.703730 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.704834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.712471 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.733667 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m16:12:29.766599 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-06-24 16:12:29.680487 => 2024-06-24 16:12:29.766413
[0m16:12:29.778175 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:12:29.796026 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m16:12:29.796534 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m16:12:29.797324 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m16:12:29.798801 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-06-24 16:12:29.661383 => 2024-06-24 16:12:29.798617
[0m16:12:29.799253 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:12:29.805305 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m16:12:29.806179 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM test.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m16:12:29.809151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.813344 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m16:12:29.817024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.818809 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m16:12:29.823914 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.828164 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m16:12:29.829516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:29.833157 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m16:12:29.834791 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.836427 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m16:12:29.837918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.839346 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m16:12:29.842862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.848027 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m16:12:29.849126 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.853747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m16:12:29.857683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.859345 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-06-24 16:12:29.784111 => 2024-06-24 16:12:29.859281
[0m16:12:29.860067 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53358fd420>]}
[0m16:12:29.860879 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.863329 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m16:12:29.861882 [info ] [Thread-2 (]: 12 of 92 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.18s]
[0m16:12:29.866067 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m16:12:29.866605 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:12:29.867387 [info ] [Thread-2 (]: 13 of 92 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m16:12:29.868662 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.869610 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m16:12:29.876226 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m16:12:29.876860 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m16:12:29.878705 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:12:29.889270 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.890285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m16:12:29.892114 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-06-24 16:12:29.799435 => 2024-06-24 16:12:29.892045
[0m16:12:29.894691 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327703c70>]}
[0m16:12:29.895604 [info ] [Thread-1 (]: 11 of 92 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.24s]
[0m16:12:29.896073 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m16:12:29.896508 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:12:29.897587 [info ] [Thread-1 (]: 14 of 92 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m16:12:29.899822 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m16:12:29.901015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.901550 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m16:12:29.908439 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.909114 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:12:29.916667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.915292 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m16:12:29.930433 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m16:12:29.931949 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-06-24 16:12:29.879151 => 2024-06-24 16:12:29.931712
[0m16:12:29.932435 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:12:29.941842 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m16:12:29.942879 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.947424 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:29.949247 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m16:12:29.954630 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.961881 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m16:12:29.962926 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.967040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m16:12:29.969333 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-06-24 16:12:29.910333 => 2024-06-24 16:12:29.969085
[0m16:12:29.969875 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:12:29.975389 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m16:12:29.976522 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.978378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m16:12:29.979408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m16:12:29.983349 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.987297 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m16:12:29.991282 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:29.993114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m16:12:29.993973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:29.999276 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m16:12:30.000133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.008031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m16:12:30.008901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.011032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m16:12:30.012917 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.014541 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-06-24 16:12:29.932607 => 2024-06-24 16:12:30.014470
[0m16:12:30.015374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.016524 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53275f2a40>]}
[0m16:12:30.020634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m16:12:30.021700 [info ] [Thread-2 (]: 13 of 92 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.15s]
[0m16:12:30.023471 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m16:12:30.024453 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:12:30.026114 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.025073 [info ] [Thread-2 (]: 15 of 92 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m16:12:30.028246 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m16:12:30.029439 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m16:12:30.031674 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m16:12:30.032359 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:12:30.037770 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m16:12:30.038670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.045814 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m16:12:30.047817 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.053275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.054579 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.057641 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-06-24 16:12:29.970009 => 2024-06-24 16:12:30.057553
[0m16:12:30.058798 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5335c0d5d0>]}
[0m16:12:30.059386 [info ] [Thread-1 (]: 14 of 92 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.16s]
[0m16:12:30.059911 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m16:12:30.060340 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:12:30.061889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.062721 [info ] [Thread-1 (]: 16 of 92 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m16:12:30.070551 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m16:12:30.071768 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m16:12:30.072663 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m16:12:30.073053 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:12:30.079626 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-06-24 16:12:30.032977 => 2024-06-24 16:12:30.079231
[0m16:12:30.080200 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:12:30.086937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m16:12:30.091123 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m16:12:30.094438 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m16:12:30.101112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.106563 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.112293 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.115738 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m16:12:30.118025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.124368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.125770 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m16:12:30.137889 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m16:12:30.139582 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-06-24 16:12:30.073215 => 2024-06-24 16:12:30.139381
[0m16:12:30.140118 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:12:30.140984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.146270 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m16:12:30.150200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m16:12:30.152388 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m16:12:30.155684 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.157227 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m16:12:30.161467 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.168721 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m16:12:30.170398 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.249365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m16:12:30.252327 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:12:30.253954 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-06-24 16:12:30.080377 => 2024-06-24 16:12:30.253883
[0m16:12:30.254744 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274778e0>]}
[0m16:12:30.255301 [info ] [Thread-2 (]: 15 of 92 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.23s]
[0m16:12:30.255767 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m16:12:30.256565 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.257292 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:12:30.259271 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m16:12:30.259899 [info ] [Thread-2 (]: 17 of 92 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m16:12:30.263261 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m16:12:30.263652 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m16:12:30.263876 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:12:30.270335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.271193 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m16:12:30.274981 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m16:12:30.281355 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.283199 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m16:12:30.285620 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.289693 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.291254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.297663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.299390 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m16:12:30.322166 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m16:12:30.323910 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-24 16:12:30.264007 => 2024-06-24 16:12:30.323712
[0m16:12:30.324633 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:12:30.331258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.333090 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-06-24 16:12:30.141289 => 2024-06-24 16:12:30.332995
[0m16:12:30.334282 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m16:12:30.335546 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327522440>]}
[0m16:12:30.336495 [info ] [Thread-1 (]: 16 of 92 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.26s]
[0m16:12:30.337331 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m16:12:30.338454 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:12:30.339835 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m16:12:30.340673 [info ] [Thread-1 (]: 18 of 92 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m16:12:30.343572 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m16:12:30.343892 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m16:12:30.344098 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:12:30.349667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m16:12:30.351912 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.357548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m16:12:30.358372 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.362978 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.366369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.368516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m16:12:30.370098 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.384525 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.399873 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m16:12:30.401417 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m16:12:30.404108 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-06-24 16:12:30.344234 => 2024-06-24 16:12:30.403843
[0m16:12:30.404715 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:12:30.411974 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m16:12:30.412824 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.415590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m16:12:30.417224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m16:12:30.420446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.426048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m16:12:30.430024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.431849 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-06-24 16:12:30.324864 => 2024-06-24 16:12:30.431741
[0m16:12:30.432983 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.434216 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274769e0>]}
[0m16:12:30.438778 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m16:12:30.440402 [info ] [Thread-2 (]: 17 of 92 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.17s]
[0m16:12:30.442967 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m16:12:30.443735 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:12:30.445506 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.446493 [info ] [Thread-2 (]: 19 of 92 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m16:12:30.449259 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m16:12:30.450587 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m16:12:30.452020 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m16:12:30.452463 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:12:30.459360 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m16:12:30.461655 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.467456 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m16:12:30.472749 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.474762 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m16:12:30.477272 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.482400 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.483380 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.492363 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m16:12:30.493997 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.500840 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.508248 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-06-24 16:12:30.404858 => 2024-06-24 16:12:30.508102
[0m16:12:30.514694 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5335930520>]}
[0m16:12:30.516273 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m16:12:30.517716 [info ] [Thread-1 (]: 18 of 92 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.17s]
[0m16:12:30.519060 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m16:12:30.519609 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:12:30.520895 [info ] [Thread-1 (]: 20 of 92 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m16:12:30.522818 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m16:12:30.523614 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-06-24 16:12:30.452914 => 2024-06-24 16:12:30.523460
[0m16:12:30.523966 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m16:12:30.524445 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:12:30.525117 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:12:30.530598 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m16:12:30.537056 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m16:12:30.540274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m16:12:30.548831 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.554643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.559510 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.563327 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m16:12:30.565209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.579270 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.592141 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m16:12:30.599978 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m16:12:30.602529 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-06-24 16:12:30.531505 => 2024-06-24 16:12:30.602341
[0m16:12:30.602980 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:12:30.609965 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m16:12:30.610853 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.614358 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m16:12:30.616049 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m16:12:30.617910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.619241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m16:12:30.623686 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.628679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m16:12:30.629992 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.633791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m16:12:30.636877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.638477 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-06-24 16:12:30.525747 => 2024-06-24 16:12:30.638408
[0m16:12:30.639205 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53359614e0>]}
[0m16:12:30.639661 [info ] [Thread-2 (]: 19 of 92 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.19s]
[0m16:12:30.640416 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.641169 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m16:12:30.642818 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m16:12:30.643431 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:12:30.645318 [info ] [Thread-2 (]: 21 of 92 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m16:12:30.646539 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m16:12:30.646908 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m16:12:30.647334 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:12:30.654073 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.663836 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m16:12:30.671431 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m16:12:30.672537 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-06-24 16:12:30.647953 => 2024-06-24 16:12:30.672372
[0m16:12:30.673064 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:12:30.680272 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.687669 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m16:12:30.711682 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.727614 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m16:12:30.734339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.737404 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.738864 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-06-24 16:12:30.603179 => 2024-06-24 16:12:30.738797
[0m16:12:30.739439 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53359339d0>]}
[0m16:12:30.739795 [info ] [Thread-1 (]: 20 of 92 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.22s]
[0m16:12:30.740198 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m16:12:30.740494 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:12:30.742163 [info ] [Thread-1 (]: 22 of 92 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m16:12:30.743395 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m16:12:30.744147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.744521 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m16:12:30.749918 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.750577 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:12:30.759425 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m16:12:30.760401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.771772 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-06-24 16:12:30.752105 => 2024-06-24 16:12:30.771585
[0m16:12:30.772325 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:30.772896 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:12:30.791759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:30.795297 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.799571 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.814520 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.824594 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.835482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
    )
        ...
[0m16:12:30.841677 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.844683 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:30.847607 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:30.852508 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.856213 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
    )
        ...
[0m16:12:30.857982 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.863244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.870222 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.871950 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m16:12:30.872562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
  
      ...
[0m16:12:30.884976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:30.885735 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.888996 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.890838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:30.896696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.898879 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m16:12:30.899605 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
  
      ...
[0m16:12:30.911449 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.912800 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:30.947883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:30.951119 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.952129 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:30.956769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:30.958634 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.960889 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:30.967035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.969074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:30.971066 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.974993 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:30.979744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:30.984588 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m16:12:30.985457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:30.990567 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:30.992873 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.995469 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-06-24 16:12:30.784169 => 2024-06-24 16:12:30.995366
[0m16:12:30.996176 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5335933d60>]}
[0m16:12:30.997432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:30.996752 [info ] [Thread-1 (]: 22 of 92 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.25s]
[0m16:12:31.001298 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m16:12:31.002224 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m16:12:31.004041 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:12:31.004500 [info ] [Thread-1 (]: 23 of 92 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m16:12:31.005973 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m16:12:31.007709 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.008247 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m16:12:31.011048 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-06-24 16:12:30.673234 => 2024-06-24 16:12:31.010945
[0m16:12:31.011863 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:12:31.013237 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53358feaa0>]}
[0m16:12:31.021064 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m16:12:31.021909 [info ] [Thread-2 (]: 21 of 92 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.37s]
[0m16:12:31.023005 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m16:12:31.024185 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:12:31.025555 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-06-24 16:12:31.013701 => 2024-06-24 16:12:31.025417
[0m16:12:31.025178 [info ] [Thread-2 (]: 24 of 92 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m16:12:31.026246 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:12:31.027197 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m16:12:31.035316 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.036064 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m16:12:31.038402 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:12:31.045501 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m16:12:31.046619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.051780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.053231 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-06-24 16:12:31.039454 => 2024-06-24 16:12:31.053031
[0m16:12:31.053865 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:12:31.065526 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.074732 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:31.078512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
    )
        ...
[0m16:12:31.082433 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:31.089699 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.092460 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
    )
        ...
[0m16:12:31.106736 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:31.110749 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.114909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:31.118516 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.120006 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.122000 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m16:12:31.122929 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
  ...
[0m16:12:31.127163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.128851 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m16:12:31.129352 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
  
      ...
[0m16:12:31.138214 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.143690 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m16:12:31.147485 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:31.148651 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:31.150543 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.156795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m16:12:31.162031 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.163825 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-06-24 16:12:31.054712 => 2024-06-24 16:12:31.163733
[0m16:12:31.164782 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274775e0>]}
[0m16:12:31.165538 [info ] [Thread-2 (]: 24 of 92 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.14s]
[0m16:12:31.166129 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m16:12:31.166639 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:12:31.167542 [info ] [Thread-2 (]: 25 of 92 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m16:12:31.168611 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m16:12:31.169066 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m16:12:31.169363 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:12:31.175009 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m16:12:31.175711 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-06-24 16:12:31.169495 => 2024-06-24 16:12:31.175592
[0m16:12:31.176080 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:12:31.184546 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.189096 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:31.192613 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.193582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.199306 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.200575 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.205085 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:31.208060 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.211475 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:31.216527 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:31.217629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.223535 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:31.224944 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.227813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
    )
        ...
[0m16:12:31.229606 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.234886 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m16:12:31.239982 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.242377 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-06-24 16:12:31.027605 => 2024-06-24 16:12:31.242284
[0m16:12:31.243250 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327473a60>]}
[0m16:12:31.243798 [info ] [Thread-1 (]: 23 of 92 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.24s]
[0m16:12:31.244184 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m16:12:31.244509 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:12:31.245407 [info ] [Thread-1 (]: 26 of 92 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m16:12:31.246403 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m16:12:31.246674 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m16:12:31.246910 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:12:31.254043 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m16:12:31.255302 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:31.259841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.261515 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-06-24 16:12:31.247064 => 2024-06-24 16:12:31.261323
[0m16:12:31.262076 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:12:31.377520 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.378565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m16:12:31.381590 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m16:12:31.382169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
  
      ...
[0m16:12:31.385129 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.389218 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.394918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.398128 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:31.400945 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:31.402399 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:31.404053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:31.405536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.410434 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
    )
        ...
[0m16:12:31.435069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:31.439308 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.445642 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.447741 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m16:12:31.448547 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
  
      ...
[0m16:12:31.449956 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:31.453305 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.459846 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.462473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:31.473671 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:31.474883 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:31.476282 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.480324 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:31.485130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.490023 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m16:12:31.493506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.495906 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-06-24 16:12:31.176229 => 2024-06-24 16:12:31.495834
[0m16:12:31.496715 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532740bb20>]}
[0m16:12:31.520224 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:31.523125 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:31.529577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.531576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:31.541817 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:31.546680 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:31.552076 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.556319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m16:12:31.559971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:31.562296 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-06-24 16:12:31.262243 => 2024-06-24 16:12:31.562224
[0m16:12:31.562911 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327703a30>]}
[0m16:12:32.406528 [info ] [Thread-2 (]: 25 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.33s]
[0m16:12:32.407972 [info ] [Thread-1 (]: 26 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.32s]
[0m16:12:32.408772 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m16:12:32.409356 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m16:12:32.410413 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:12:32.411289 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:12:32.411985 [info ] [Thread-2 (]: 27 of 92 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m16:12:32.413023 [info ] [Thread-1 (]: 28 of 92 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m16:12:32.414615 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m16:12:32.415637 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m16:12:32.416207 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m16:12:32.416675 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m16:12:32.417232 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:12:32.417551 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:12:32.422324 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m16:12:32.427671 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m16:12:32.428979 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-06-24 16:12:32.422947 => 2024-06-24 16:12:32.428816
[0m16:12:32.429460 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:12:32.429749 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-06-24 16:12:32.417788 => 2024-06-24 16:12:32.429645
[0m16:12:32.442084 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.442738 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:12:32.455265 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.456661 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.462993 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.463914 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.472081 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.474485 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.478352 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:32.482475 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.483582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.488998 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_installations:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:32.490182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.493537 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.496516 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
    )
        ...
[0m16:12:32.500980 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:32.504520 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
    )
        ...
[0m16:12:32.523678 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:32.527001 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.528060 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:32.532385 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.534306 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.537620 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m16:12:32.538148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
  
      ...
[0m16:12:32.540087 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.542382 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m16:12:32.542820 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
  
      ...
[0m16:12:32.554890 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.556161 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

      delete from test.incremental_appmetrica_events_default_installations where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:32.565239 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:32.566414 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:32.594556 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:32.598850 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.599719 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:32.605839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.607027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.610216 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:32.613559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.615560 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        insert into test.incremental_appmetrica_events_default_installations select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:32.622290 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.625630 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.627000 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.630358 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.631364 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.635178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m16:12:32.635970 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:32.641661 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_distributed_new_data 
  ...
[0m16:12:32.642492 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.646458 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-06-24 16:12:32.430055 => 2024-06-24 16:12:32.646390
[0m16:12:32.647244 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:32.648321 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532740b6d0>]}
[0m16:12:32.650835 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-06-24 16:12:32.444763 => 2024-06-24 16:12:32.650678
[0m16:12:32.651664 [info ] [Thread-1 (]: 28 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.23s]
[0m16:12:32.652532 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532761b3d0>]}
[0m16:12:32.653172 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m16:12:32.653836 [info ] [Thread-2 (]: 27 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.24s]
[0m16:12:32.654603 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:12:32.655397 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m16:12:32.656250 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:12:32.655796 [info ] [Thread-1 (]: 29 of 92 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m16:12:32.657885 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m16:12:32.656585 [info ] [Thread-2 (]: 30 of 92 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m16:12:32.658581 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m16:12:32.659842 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m16:12:32.660573 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:12:32.661341 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m16:12:32.666666 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m16:12:32.667561 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:12:32.675526 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m16:12:32.676232 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-06-24 16:12:32.661860 => 2024-06-24 16:12:32.676076
[0m16:12:32.676807 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:12:32.682990 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.684425 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-06-24 16:12:32.668447 => 2024-06-24 16:12:32.684244
[0m16:12:32.684913 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:12:32.690990 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
    )
        ...
[0m16:12:32.691847 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.696546 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.704957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.708560 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:32.712434 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.713327 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:32.721595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.723359 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.726440 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
    )
        ...
[0m16:12:32.728015 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.730001 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m16:12:32.731040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
  ...
[0m16:12:32.745594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:32.749341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.750569 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:32.753797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m16:12:32.757834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.759896 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m16:12:32.760886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.765912 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m16:12:32.767652 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
  
      ...
[0m16:12:32.770917 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:32.772806 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-06-24 16:12:32.685146 => 2024-06-24 16:12:32.772714
[0m16:12:32.773894 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532740a950>]}
[0m16:12:32.774488 [info ] [Thread-2 (]: 30 of 92 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.11s]
[0m16:12:32.775095 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m16:12:32.775695 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:12:32.776764 [info ] [Thread-2 (]: 31 of 92 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m16:12:32.778171 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m16:12:32.778539 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m16:12:32.778841 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:12:32.784803 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m16:12:32.785800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:32.788355 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:32.789880 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-06-24 16:12:32.778992 => 2024-06-24 16:12:32.789707
[0m16:12:32.790477 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:12:32.802823 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.810872 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.819824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.832419 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.836307 [debug] [Thread-2 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:32.841068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.842597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:32.846813 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.850758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.854302 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
    )
        ...
[0m16:12:32.856203 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.859163 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:32.868469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.873022 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.874891 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:32.879066 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.880032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.885484 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m16:12:32.887487 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.890085 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m16:12:32.891480 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.894190 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-06-24 16:12:32.676955 => 2024-06-24 16:12:32.894104
[0m16:12:32.895270 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532778cfd0>]}
[0m16:12:32.895881 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
  
      ...
[0m16:12:32.896631 [info ] [Thread-1 (]: 29 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.24s]
[0m16:12:32.898460 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m16:12:32.899194 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:12:32.904282 [info ] [Thread-1 (]: 32 of 92 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m16:12:32.905681 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m16:12:32.906164 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m16:12:32.906445 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:12:32.923594 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:32.925098 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:32.925984 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m16:12:32.928715 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-06-24 16:12:32.906680 => 2024-06-24 16:12:32.928529
[0m16:12:32.929258 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:12:32.939901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.954332 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.960977 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.967379 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:32.986504 [debug] [Thread-1 (]: 
    In test.incremental_calltouch_events_default_calls:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:32.987942 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:32.992216 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:32.995915 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:32.999944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.004423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
    )
        ...
[0m16:12:33.005952 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.007891 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:33.016183 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.020394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.025895 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.030279 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m16:12:33.033981 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:33.034773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.038331 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.041215 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-06-24 16:12:32.791014 => 2024-06-24 16:12:33.041141
[0m16:12:33.043815 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53275226e0>]}
[0m16:12:33.045827 [info ] [Thread-2 (]: 31 of 92 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.27s]
[0m16:12:33.046429 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m16:12:33.046779 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:12:33.047149 [info ] [Thread-2 (]: 33 of 92 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m16:12:33.049245 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m16:12:33.050216 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.050606 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m16:12:33.053878 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m16:12:33.054646 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:12:33.059914 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m16:12:33.061182 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
  
      ...
[0m16:12:33.061962 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-06-24 16:12:33.055463 => 2024-06-24 16:12:33.061665
[0m16:12:33.065932 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:12:33.074059 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
    )
        ...
[0m16:12:33.091640 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:33.093495 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

      delete from test.incremental_calltouch_events_default_calls where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:33.096776 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.105577 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.115598 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.119441 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m16:12:33.121005 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
  ...
[0m16:12:33.137603 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.140001 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m16:12:33.146602 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.155082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m16:12:33.164140 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:33.168702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.170297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.172006 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-06-24 16:12:33.066379 => 2024-06-24 16:12:33.171925
[0m16:12:33.172694 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5335c0cca0>]}
[0m16:12:33.173151 [info ] [Thread-2 (]: 33 of 92 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.12s]
[0m16:12:33.173582 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m16:12:33.173897 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:12:33.175645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.174702 [info ] [Thread-2 (]: 34 of 92 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m16:12:33.178934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        insert into test.incremental_calltouch_events_default_calls select "__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:33.179868 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m16:12:33.182020 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m16:12:33.182524 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:12:33.188472 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m16:12:33.189488 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-06-24 16:12:33.182735 => 2024-06-24 16:12:33.189299
[0m16:12:33.189969 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:12:33.197567 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
    )
        ...
[0m16:12:33.201597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.206882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.212842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.222394 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_distributed_new_data 
  ...
[0m16:12:33.224441 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:33.228829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.230786 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.234614 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-06-24 16:12:32.929531 => 2024-06-24 16:12:33.234518
[0m16:12:33.236260 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532740b340>]}
[0m16:12:33.237138 [info ] [Thread-1 (]: 32 of 92 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.33s]
[0m16:12:33.238532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.239262 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m16:12:33.241479 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m16:12:33.242511 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:12:33.244002 [info ] [Thread-1 (]: 35 of 92 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m16:12:33.244781 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
  ...
[0m16:12:33.246167 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m16:12:33.247806 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m16:12:33.248890 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:12:33.256370 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m16:12:33.257205 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-06-24 16:12:33.249739 => 2024-06-24 16:12:33.257065
[0m16:12:33.257578 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:12:33.264432 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
    )
        ...
[0m16:12:33.266624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.268797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m16:12:33.274740 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.281339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m16:12:33.285754 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.286735 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.291211 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.293959 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-06-24 16:12:33.190171 => 2024-06-24 16:12:33.293837
[0m16:12:33.296949 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327408dc0>]}
[0m16:12:33.298728 [info ] [Thread-2 (]: 34 of 92 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.12s]
[0m16:12:33.299501 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m16:12:33.300181 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:12:33.301834 [info ] [Thread-2 (]: 36 of 92 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m16:12:33.304017 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.304981 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m16:12:33.307502 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m16:12:33.308185 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m16:12:33.309852 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:12:33.319379 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m16:12:33.320314 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
  ...
[0m16:12:33.322403 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-06-24 16:12:33.310464 => 2024-06-24 16:12:33.322140
[0m16:12:33.323498 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:12:33.333231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
    )
        ...
[0m16:12:33.336004 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.339222 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m16:12:33.346291 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.352404 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m16:12:33.354791 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.359632 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.362193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.364174 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-06-24 16:12:33.257724 => 2024-06-24 16:12:33.364088
[0m16:12:33.366041 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532740b340>]}
[0m16:12:33.367458 [info ] [Thread-1 (]: 35 of 92 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.12s]
[0m16:12:33.368672 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m16:12:33.369594 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:12:33.371036 [info ] [Thread-1 (]: 37 of 92 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m16:12:33.373586 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.374622 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m16:12:33.377031 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m16:12:33.377645 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m16:12:33.378618 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:12:33.384696 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
  ...
[0m16:12:33.387433 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m16:12:33.390003 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-06-24 16:12:33.379114 => 2024-06-24 16:12:33.389800
[0m16:12:33.390858 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:12:33.401961 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.403855 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.406126 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m16:12:33.413065 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.413931 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.419420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.426295 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m16:12:33.433867 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.436131 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-06-24 16:12:33.324002 => 2024-06-24 16:12:33.436027
[0m16:12:33.437506 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.438999 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274a8670>]}
[0m16:12:33.443583 [debug] [Thread-1 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:33.444802 [info ] [Thread-2 (]: 36 of 92 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.13s]
[0m16:12:33.451610 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m16:12:33.450587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.452631 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:12:33.455211 [info ] [Thread-2 (]: 38 of 92 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m16:12:33.456709 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m16:12:33.457330 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m16:12:33.458472 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.459136 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:12:33.462159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    )
        ...
[0m16:12:33.469710 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m16:12:33.472905 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-06-24 16:12:33.462737 => 2024-06-24 16:12:33.472707
[0m16:12:33.473402 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:12:33.485213 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
    )
        ...
[0m16:12:33.498901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:33.607076 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m16:12:33.609735 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.613762 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.621031 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.623589 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m16:12:33.624809 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.627732 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m16:12:33.628879 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
  
      ...
[0m16:12:33.629469 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
  ...
[0m16:12:33.643701 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.645200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:33.645872 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.649499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m16:12:33.657245 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.662566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m16:12:33.670537 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.672901 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-06-24 16:12:33.473532 => 2024-06-24 16:12:33.672750
[0m16:12:33.674177 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327591990>]}
[0m16:12:33.675096 [info ] [Thread-2 (]: 38 of 92 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.22s]
[0m16:12:33.676593 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m16:12:33.677569 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:12:33.678986 [info ] [Thread-2 (]: 39 of 92 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m16:12:33.680327 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m16:12:33.680932 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m16:12:33.681995 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:12:33.692474 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m16:12:33.693352 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-06-24 16:12:33.682742 => 2024-06-24 16:12:33.693196
[0m16:12:33.693801 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:12:33.705499 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:33.708960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.714374 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.723284 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.728564 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.730881 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.736523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:33.739466 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.743826 [debug] [Thread-2 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:33.749264 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.752586 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.757444 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.759417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.763060 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
    )
        ...
[0m16:12:33.764355 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.772579 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m16:12:33.777111 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.780306 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-06-24 16:12:33.391168 => 2024-06-24 16:12:33.780182
[0m16:12:33.781707 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274686a0>]}
[0m16:12:33.782530 [info ] [Thread-1 (]: 37 of 92 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.41s]
[0m16:12:33.783326 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m16:12:33.783801 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:12:33.785140 [info ] [Thread-1 (]: 40 of 92 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m16:12:33.786355 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m16:12:33.786848 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m16:12:33.787099 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:12:33.796663 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m16:12:33.798297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:33.803992 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.806861 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-06-24 16:12:33.787234 => 2024-06-24 16:12:33.806533
[0m16:12:33.807565 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:12:33.821124 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.822670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.826801 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m16:12:33.828327 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
  
      ...
[0m16:12:33.830895 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.837055 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.843535 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.845443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:33.847516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.855393 [debug] [Thread-1 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:33.859990 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.863801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.867559 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
    )
        ...
[0m16:12:33.889216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:33.894929 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.896825 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:33.901082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.907089 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.909454 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:33.911021 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.913846 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m16:12:33.915273 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
  
      ...
[0m16:12:33.920909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.925940 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:33.930239 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:33.934824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m16:12:33.935762 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:33.938460 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:33.941506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:33.944265 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-06-24 16:12:33.693961 => 2024-06-24 16:12:33.944180
[0m16:12:33.945277 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276df550>]}
[0m16:12:33.945967 [info ] [Thread-2 (]: 39 of 92 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.27s]
[0m16:12:33.946545 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m16:12:33.947179 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:12:33.948408 [info ] [Thread-2 (]: 41 of 92 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m16:12:33.949760 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m16:12:33.950094 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m16:12:33.950313 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:12:33.974552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m16:12:33.977069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:33.981422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:33.986659 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.000877 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:34.009215 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:34.026892 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.034079 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.043906 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m16:12:34.044770 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:34.048942 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:34.050444 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-06-24 16:12:33.950444 => 2024-06-24 16:12:34.050312
[0m16:12:34.050967 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:12:34.059477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



    )
        ...
[0m16:12:34.060443 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.066791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m16:12:34.072612 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.075996 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-06-24 16:12:33.807878 => 2024-06-24 16:12:34.075845
[0m16:12:34.077276 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274685b0>]}
[0m16:12:34.078138 [info ] [Thread-1 (]: 40 of 92 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.29s]
[0m16:12:34.078887 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m16:12:34.079403 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:12:34.080660 [info ] [Thread-1 (]: 42 of 92 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m16:12:34.082402 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m16:12:34.084090 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m16:12:34.085068 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:12:34.095764 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:34.101464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.138351 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:34.141288 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m16:12:34.145828 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m16:12:34.150036 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



  ...
[0m16:12:34.158962 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.166339 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.168242 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:34.170475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m16:12:34.176544 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.177582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.182724 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m16:12:34.190527 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m16:12:34.197532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:34.200132 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-06-24 16:12:34.051170 => 2024-06-24 16:12:34.200001
[0m16:12:34.201568 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327492d10>]}
[0m16:12:34.202565 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.203571 [info ] [Thread-2 (]: 41 of 92 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.25s]
[0m16:12:34.211899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.212716 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m16:12:34.214757 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m16:12:34.215499 [info ] [Thread-2 (]: 43 of 92 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m16:12:34.218234 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m16:12:34.218692 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m16:12:34.218993 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m16:12:34.225855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.245012 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m16:12:34.261655 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m16:12:34.270578 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.277682 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.278563 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:34.286395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.287920 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.294926 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m16:12:34.301311 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.308861 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m16:12:34.309904 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.316250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.320632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.325769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.326662 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.334518 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m16:12:34.336949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.342153 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m16:12:34.344213 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.351347 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.352499 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.362477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.363322 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.372944 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m16:12:34.374204 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.387169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m16:12:34.387982 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-06-24 16:12:34.085575 => 2024-06-24 16:12:34.387837
[0m16:12:34.389547 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:12:34.398279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.400035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.408568 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:12:34.410819 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.416319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.422991 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.432749 [debug] [Thread-1 (]: 
    In test.join_appmetrica_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:34.433670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:34.437606 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:34.440216 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m16:12:34.442700 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-06-24 16:12:34.219151 => 2024-06-24 16:12:34.442427
[0m16:12:34.443283 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m16:12:34.450453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.457621 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.461037 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



    )
        ...
[0m16:12:34.468769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.474265 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.480751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.485414 [debug] [Thread-2 (]: 
    In test.join_mt_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:34.489361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:34.493169 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:34.496255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



    )
        ...
[0m16:12:34.558120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:34.564395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.576050 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.579734 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m16:12:34.581276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



  
      ...
[0m16:12:34.680447 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:12:34.682496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

      delete from test.join_mt_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:34.751974 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:34.756414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.766213 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.769990 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        insert into test.join_mt_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:34.788047 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:34.789310 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.33 seconds
[0m16:12:34.797302 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:34.803480 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.810558 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.815912 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_distributed_new_data 
  ...
[0m16:12:34.817931 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.822131 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m16:12:34.823546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.827103 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-06-24 16:12:34.443622 => 2024-06-24 16:12:34.826998
[0m16:12:34.829294 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532755b8e0>]}
[0m16:12:34.830110 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



  
      ...
[0m16:12:34.832248 [info ] [Thread-2 (]: 43 of 92 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.61s]
[0m16:12:34.835851 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m16:12:34.836616 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:12:34.837666 [info ] [Thread-2 (]: 44 of 92 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m16:12:34.839125 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m16:12:34.839680 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m16:12:34.840295 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:12:34.860114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m16:12:34.874676 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.881398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.890053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.894329 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m16:12:34.895440 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-06-24 16:12:34.840655 => 2024-06-24 16:12:34.895206
[0m16:12:34.896195 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:12:34.906643 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



    )
        ...
[0m16:12:34.935602 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:34.943644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:34.950539 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.952837 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m16:12:34.953884 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



  ...
[0m16:12:34.966044 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.967764 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m16:12:34.974238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:34.980303 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m16:12:34.984755 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:34.986569 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-06-24 16:12:34.896449 => 2024-06-24 16:12:34.986483
[0m16:12:34.987401 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276df490>]}
[0m16:12:34.987998 [info ] [Thread-2 (]: 44 of 92 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.15s]
[0m16:12:34.988600 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m16:12:34.989080 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:12:34.990519 [info ] [Thread-2 (]: 45 of 92 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m16:12:34.991751 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m16:12:34.992103 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m16:12:34.992446 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:12:35.010186 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m16:12:35.021321 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.028134 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.037068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.041481 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m16:12:35.042781 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-06-24 16:12:34.992663 => 2024-06-24 16:12:35.042545
[0m16:12:35.043347 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:12:35.050622 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



    )
        ...
[0m16:12:35.081818 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:35.089669 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.096625 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.099164 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m16:12:35.100454 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



  ...
[0m16:12:35.121162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.122793 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m16:12:35.128642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.134392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m16:12:35.139468 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:35.141563 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-06-24 16:12:35.043580 => 2024-06-24 16:12:35.141472
[0m16:12:35.142675 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532767c400>]}
[0m16:12:35.143530 [info ] [Thread-2 (]: 45 of 92 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.15s]
[0m16:12:35.144479 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m16:12:35.145619 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:12:35.146944 [info ] [Thread-2 (]: 46 of 92 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m16:12:35.148918 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m16:12:35.149310 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m16:12:35.149714 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:12:35.172319 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m16:12:35.185644 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.191787 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.200910 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.206789 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m16:12:35.215128 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.223096 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.230662 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.236003 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m16:12:35.243294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.245506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:12:35.261371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.263460 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m16:12:35.264379 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-06-24 16:12:35.149955 => 2024-06-24 16:12:35.264211
[0m16:12:35.264830 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:12:35.275591 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.283648 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.289585 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.296778 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.301159 [debug] [Thread-2 (]: 
    In test.join_vkads_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:35.305519 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:35.310150 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:35.313555 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



    )
        ...
[0m16:12:35.363462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:35.368527 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.378850 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.381779 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m16:12:35.383010 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



  
      ...
[0m16:12:35.384003 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.55 seconds
[0m16:12:35.386909 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

      delete from test.join_appmetrica_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:35.449546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:35.450604 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:35.452106 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

      delete from test.join_vkads_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:35.456422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.467155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.469710 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        insert into test.join_appmetrica_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link" from test.join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:35.484623 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.496932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:35.502741 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.634743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.18 seconds
[0m16:12:35.637391 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_distributed_new_data 
  ...
[0m16:12:35.643130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.650327 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.653490 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-06-24 16:12:34.390169 => 2024-06-24 16:12:35.653369
[0m16:12:35.654633 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327435e10>]}
[0m16:12:35.655971 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.656829 [info ] [Thread-1 (]: 42 of 92 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 1.57s]
[0m16:12:35.660207 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        insert into test.join_vkads_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link" from test.join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:35.661115 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m16:12:35.663169 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m16:12:35.664605 [info ] [Thread-1 (]: 47 of 92 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m16:12:35.665722 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m16:12:35.666054 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m16:12:35.666288 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m16:12:35.686873 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m16:12:35.695109 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:35.705405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:35.708609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.719375 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.721371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.730724 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_distributed_new_data 
  ...
[0m16:12:35.734968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.745221 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m16:12:35.746693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.753118 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-06-24 16:12:35.265004 => 2024-06-24 16:12:35.752987
[0m16:12:35.755362 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277f1a20>]}
[0m16:12:35.758331 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.756927 [info ] [Thread-2 (]: 46 of 92 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.61s]
[0m16:12:35.762212 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:12:35.763192 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m16:12:35.766380 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m16:12:35.768134 [info ] [Thread-2 (]: 48 of 92 START sql incremental model test.join_ym_events ....................... [RUN]
[0m16:12:35.769910 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m16:12:35.770636 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m16:12:35.771290 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m16:12:35.807305 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:35.811158 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m16:12:35.814334 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m16:12:35.819232 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-06-24 16:12:35.666457 => 2024-06-24 16:12:35.818915
[0m16:12:35.820231 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m16:12:35.838276 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.840679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.847709 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.857501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.865186 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.866385 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.879227 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m16:12:35.881724 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.888606 [debug] [Thread-1 (]: 
    In test.join_yd_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:35.899823 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:35.901046 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:35.904850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m16:12:35.905733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:35.910331 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



    )
        ...
[0m16:12:35.938269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:35.941514 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m16:12:35.943752 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-06-24 16:12:35.771627 => 2024-06-24 16:12:35.943476
[0m16:12:35.944437 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m16:12:35.958351 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.959400 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:35.965984 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.970415 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.975815 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:35.977966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.981752 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m16:12:35.983417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:35.990576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



  
      ...
[0m16:12:35.995475 [debug] [Thread-2 (]: 
    In test.join_ym_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:36.003919 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:36.011029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.022196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



    )
        ...
[0m16:12:36.045078 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:36.047153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

      delete from test.join_yd_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:36.063752 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:36.068962 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.078984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.081756 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m16:12:36.082920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



  
      ...
[0m16:12:36.100090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:36.104731 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.111330 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.113882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        insert into test.join_yd_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:36.127995 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.133570 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:36.134789 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:36.138032 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

      delete from test.join_ym_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:36.139927 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:36.144724 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_distributed_new_data 
  ...
[0m16:12:36.150345 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:36.153144 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-06-24 16:12:35.821000 => 2024-06-24 16:12:36.152994
[0m16:12:36.154014 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276616f0>]}
[0m16:12:36.154634 [info ] [Thread-1 (]: 47 of 92 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.49s]
[0m16:12:36.155271 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m16:12:36.155760 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:12:36.156805 [info ] [Thread-1 (]: 49 of 92 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m16:12:36.158766 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m16:12:36.159179 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m16:12:36.159493 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:12:36.177986 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m16:12:36.189356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:36.190820 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.198758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.205029 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.212739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.215486 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        insert into test.join_ym_events select "__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link" from test.join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:36.217836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.220840 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m16:12:36.222002 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-06-24 16:12:36.159743 => 2024-06-24 16:12:36.221819
[0m16:12:36.222437 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:12:36.228694 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

    )
        ...
[0m16:12:36.234542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.240074 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:36.246183 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.250874 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_distributed_new_data 
  ...
[0m16:12:36.252765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.257279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.258527 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.262804 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-06-24 16:12:35.944878 => 2024-06-24 16:12:36.262705
[0m16:12:36.264442 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532745a470>]}
[0m16:12:36.266003 [info ] [Thread-2 (]: 48 of 92 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.50s]
[0m16:12:36.267221 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m16:12:36.268448 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m16:12:36.270908 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.271852 [info ] [Thread-2 (]: 50 of 92 START sql table model test.combine_periodstat ......................... [RUN]
[0m16:12:36.276232 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m16:12:36.277818 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m16:12:36.279036 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m16:12:36.279692 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m16:12:36.294975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m16:12:36.295745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

  ...
[0m16:12:36.308513 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.314161 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.317118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.319632 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m16:12:36.323330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.328448 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m16:12:36.330012 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-06-24 16:12:36.280274 => 2024-06-24 16:12:36.329792
[0m16:12:36.330618 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m16:12:36.331657 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.342551 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

    )
        ...
[0m16:12:36.352764 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m16:12:36.361912 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.364125 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-06-24 16:12:36.222613 => 2024-06-24 16:12:36.363969
[0m16:12:36.365698 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532752b340>]}
[0m16:12:36.366852 [info ] [Thread-1 (]: 49 of 92 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.21s]
[0m16:12:36.367622 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m16:12:36.368306 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:12:36.369665 [info ] [Thread-1 (]: 51 of 92 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m16:12:36.372022 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m16:12:36.372803 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m16:12:36.373214 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:12:36.382112 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m16:12:36.387260 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:36.406829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.409216 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:36.428884 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.430979 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.438689 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m16:12:36.441131 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.442121 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

  ...
[0m16:12:36.450692 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m16:12:36.454531 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-06-24 16:12:36.373356 => 2024-06-24 16:12:36.454241
[0m16:12:36.455424 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:12:36.467585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

    )
        ...
[0m16:12:36.473717 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.476991 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m16:12:36.488114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.497628 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m16:12:36.499723 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:36.505835 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.507089 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.512050 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-06-24 16:12:36.332082 => 2024-06-24 16:12:36.511859
[0m16:12:36.513959 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277f2320>]}
[0m16:12:36.514924 [info ] [Thread-2 (]: 50 of 92 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.24s]
[0m16:12:36.516574 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.517255 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m16:12:36.519618 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m16:12:36.520621 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m16:12:36.522863 [info ] [Thread-2 (]: 52 of 92 START sql incremental model test.combine_datestat ..................... [RUN]
[0m16:12:36.524042 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

  ...
[0m16:12:36.525740 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m16:12:36.528072 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m16:12:36.528957 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m16:12:36.540865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m16:12:36.547860 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.551552 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m16:12:36.559773 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.565517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.567145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.584955 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m16:12:36.586088 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.595837 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.596823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.601562 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-06-24 16:12:36.455735 => 2024-06-24 16:12:36.601426
[0m16:12:36.603619 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276a2560>]}
[0m16:12:36.605862 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.608172 [info ] [Thread-1 (]: 51 of 92 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.23s]
[0m16:12:36.617175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.618256 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m16:12:36.621755 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m16:12:36.623364 [info ] [Thread-1 (]: 53 of 92 START sql incremental model test.combine_events ....................... [RUN]
[0m16:12:36.626300 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m16:12:36.627688 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.628294 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m16:12:36.637777 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m16:12:36.639071 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m16:12:36.647440 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m16:12:36.650415 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-06-24 16:12:36.529490 => 2024-06-24 16:12:36.650147
[0m16:12:36.651138 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m16:12:36.662555 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.663838 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:36.677866 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.679181 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.689164 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.690421 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.703502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.704690 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.711679 [debug] [Thread-2 (]: 
    In test.combine_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:36.712921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.720059 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:36.728111 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m16:12:36.730986 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-06-24 16:12:36.640194 => 2024-06-24 16:12:36.730759
[0m16:12:36.731668 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m16:12:36.738775 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.751135 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

    )
        ...
[0m16:12:36.752436 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.764887 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.774305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.785143 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.797965 [debug] [Thread-1 (]: 
    In test.combine_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:36.802195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:36.803033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:36.810592 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.811745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.816550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

    )
        ...
[0m16:12:36.820029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.822847 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m16:12:36.823899 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

  
      ...
[0m16:12:36.850788 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:36.856034 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.865548 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.868084 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m16:12:36.869122 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

  
      ...
[0m16:12:36.879795 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:36.881361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

      delete from test.combine_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:36.943135 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:36.944935 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

      delete from test.combine_events where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:36.946821 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:36.953618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:36.964732 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:36.968234 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        insert into test.combine_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId" from test.combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:36.992165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:37.002451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:37.005338 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:37.009429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:37.010671 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.016818 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_distributed_new_data 
  ...
[0m16:12:37.019180 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.022990 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        insert into test.combine_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews" from test.combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:37.024218 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.028980 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-06-24 16:12:36.651440 => 2024-06-24 16:12:37.028860
[0m16:12:37.030640 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532756de10>]}
[0m16:12:37.031605 [info ] [Thread-2 (]: 52 of 92 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.51s]
[0m16:12:37.032551 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m16:12:37.033389 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:12:37.034716 [info ] [Thread-2 (]: 54 of 92 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m16:12:37.036399 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m16:12:37.036817 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m16:12:37.037094 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:12:37.050022 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m16:12:37.051522 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:37.058165 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:37.060135 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-06-24 16:12:37.037255 => 2024-06-24 16:12:37.059909
[0m16:12:37.060684 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:12:37.173527 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m16:12:37.183107 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_distributed_new_data 
  ...
[0m16:12:37.184086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:12:37.188905 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:37.191987 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-06-24 16:12:36.731921 => 2024-06-24 16:12:37.191875
[0m16:12:37.193217 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276e9cc0>]}
[0m16:12:37.193934 [info ] [Thread-1 (]: 53 of 92 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.57s]
[0m16:12:37.194517 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m16:12:37.194977 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m16:12:37.195920 [info ] [Thread-1 (]: 55 of 92 START sql table model test.hash_periodstat ............................ [RUN]
[0m16:12:37.198583 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m16:12:37.199248 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m16:12:37.199907 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m16:12:37.213482 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m16:12:37.217433 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-06-24 16:12:37.200290 => 2024-06-24 16:12:37.217212
[0m16:12:37.217930 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m16:12:37.224618 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:12:37.225927 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:37.236585 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:37.244713 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.247403 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m16:12:37.248792 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m16:12:37.254464 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:37.259652 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:37.267428 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.270102 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m16:12:37.271194 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m16:12:37.287553 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:37.289461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m16:12:37.295029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:37.296774 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m16:12:37.299086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.307266 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m16:12:37.309229 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.315954 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.317450 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m16:12:37.319328 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-06-24 16:12:37.061312 => 2024-06-24 16:12:37.319244
[0m16:12:37.321496 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53273545b0>]}
[0m16:12:37.322833 [info ] [Thread-2 (]: 54 of 92 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.29s]
[0m16:12:37.323791 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m16:12:37.324435 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:12:37.325401 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.326633 [info ] [Thread-2 (]: 56 of 92 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m16:12:37.329928 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-06-24 16:12:37.218080 => 2024-06-24 16:12:37.329813
[0m16:12:37.331033 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m16:12:37.332246 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276e9c90>]}
[0m16:12:37.332799 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m16:12:37.336207 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:12:37.353317 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m16:12:37.355342 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-06-24 16:12:37.336533 => 2024-06-24 16:12:37.355028
[0m16:12:37.356509 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:12:37.365563 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:12:37.393130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:37.396804 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:37.404939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.407626 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m16:12:37.408617 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m16:12:37.434867 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:37.437282 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m16:12:37.443644 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:37.449378 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m16:12:37.454455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:37.456132 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-06-24 16:12:37.356889 => 2024-06-24 16:12:37.456051
[0m16:12:37.456981 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532750fa90>]}
[0m16:12:38.262314 [info ] [Thread-1 (]: 55 of 92 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.13s]
[0m16:12:38.264424 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m16:12:38.263768 [info ] [Thread-2 (]: 56 of 92 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.13s]
[0m16:12:38.265684 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m16:12:38.267037 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m16:12:38.268103 [info ] [Thread-1 (]: 57 of 92 START sql incremental model test.hash_datestat ........................ [RUN]
[0m16:12:38.269308 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m16:12:38.271309 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m16:12:38.272379 [info ] [Thread-2 (]: 58 of 92 START sql incremental model test.hash_events .......................... [RUN]
[0m16:12:38.273408 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m16:12:38.274423 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m16:12:38.275076 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m16:12:38.275929 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m16:12:38.291742 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m16:12:38.292304 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m16:12:38.310320 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-06-24 16:12:38.276594 => 2024-06-24 16:12:38.310096
[0m16:12:38.311235 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m16:12:38.311891 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m16:12:38.322874 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.324283 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-06-24 16:12:38.292978 => 2024-06-24 16:12:38.324123
[0m16:12:38.326402 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m16:12:38.338691 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.341077 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:38.348842 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.357375 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.359309 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:38.367480 [debug] [Thread-1 (]: 
    In test.hash_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:38.376702 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.382415 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:38.392626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.396717 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:12:38.398140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.424370 [debug] [Thread-2 (]: 
    In test.hash_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:38.431425 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:38.437781 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.442797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m16:12:38.451493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:38.457408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.465973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.470041 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m16:12:38.471421 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m16:12:38.564061 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:12:38.566578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

      delete from test.hash_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:38.600857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.16 seconds
[0m16:12:38.610630 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.620268 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.625634 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m16:12:38.627579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m16:12:38.653204 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:12:38.660082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.669800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.674248 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        insert into test.hash_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime" from test.hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:38.705432 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:38.713521 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:38.719976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.728212 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_distributed_new_data 
  ...
[0m16:12:38.734604 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.738737 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-06-24 16:12:38.312464 => 2024-06-24 16:12:38.738597
[0m16:12:38.740004 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276dded0>]}
[0m16:12:38.741210 [info ] [Thread-1 (]: 57 of 92 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.47s]
[0m16:12:38.742158 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m16:12:38.743341 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m16:12:38.745571 [info ] [Thread-1 (]: 59 of 92 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m16:12:38.748035 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m16:12:38.748868 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m16:12:38.749692 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m16:12:38.765256 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.777412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.782067 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m16:12:38.784183 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-06-24 16:12:38.750249 => 2024-06-24 16:12:38.783770
[0m16:12:38.785321 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m16:12:38.811669 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m16:12:38.847478 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:38.855036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.868028 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.871656 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m16:12:38.873043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m16:12:38.886264 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.26 seconds
[0m16:12:38.889064 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

      delete from test.hash_events where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:38.916975 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:38.920968 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m16:12:38.939913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:38.949135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m16:12:38.958103 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:38.960417 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-06-24 16:12:38.786071 => 2024-06-24 16:12:38.960308
[0m16:12:38.961696 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276dcf40>]}
[0m16:12:38.962428 [info ] [Thread-1 (]: 59 of 92 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.21s]
[0m16:12:38.962972 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m16:12:38.963506 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m16:12:38.965969 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:12:38.964722 [info ] [Thread-1 (]: 60 of 92 START sql table model test.link_periodstat ............................ [RUN]
[0m16:12:38.971744 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.973344 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m16:12:38.975529 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m16:12:38.976699 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m16:12:38.991868 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:38.993929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.000717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:39.011022 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.014841 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m16:12:39.017824 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-06-24 16:12:38.977501 => 2024-06-24 16:12:39.017313
[0m16:12:39.019218 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m16:12:39.035754 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

    )
        ...
[0m16:12:39.046199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:39.052036 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:39.057258 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:39.063490 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_distributed_new_data 
  ...
[0m16:12:39.068152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:39.069083 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.074621 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.078382 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-06-24 16:12:38.326792 => 2024-06-24 16:12:39.078289
[0m16:12:39.080773 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327302650>]}
[0m16:12:39.081598 [info ] [Thread-2 (]: 58 of 92 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.81s]
[0m16:12:39.082195 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m16:12:39.082726 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:12:39.084944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.083913 [info ] [Thread-2 (]: 61 of 92 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m16:12:39.089086 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m16:12:39.090319 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m16:12:39.091242 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m16:12:39.091733 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:12:39.099424 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.101640 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

  ...
[0m16:12:39.108602 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.111860 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m16:12:39.113617 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-06-24 16:12:39.091962 => 2024-06-24 16:12:39.113313
[0m16:12:39.114355 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:12:39.130629 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

    )
        ...
[0m16:12:39.131815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:39.135965 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m16:12:39.146112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.153795 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m16:12:39.159939 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.162006 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-06-24 16:12:39.019795 => 2024-06-24 16:12:39.161909
[0m16:12:39.163011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:39.164067 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276dcc70>]}
[0m16:12:39.171305 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.172395 [info ] [Thread-1 (]: 60 of 92 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.19s]
[0m16:12:39.174553 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m16:12:39.175618 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m16:12:39.176680 [info ] [Thread-1 (]: 62 of 92 START sql table model test.link_datestat .............................. [RUN]
[0m16:12:39.177987 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m16:12:39.178340 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m16:12:39.178591 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m16:12:39.187461 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.188499 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.192250 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m16:12:39.193882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

  ...
[0m16:12:39.199881 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.203335 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m16:12:39.204434 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-06-24 16:12:39.178742 => 2024-06-24 16:12:39.204207
[0m16:12:39.205014 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m16:12:39.212691 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

    )
        ...
[0m16:12:39.231569 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:39.233715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m16:12:39.245493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.256393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m16:12:39.257633 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:39.263543 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.264765 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.268678 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-06-24 16:12:39.114777 => 2024-06-24 16:12:39.268551
[0m16:12:39.270603 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53273545b0>]}
[0m16:12:39.271404 [info ] [Thread-2 (]: 61 of 92 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.18s]
[0m16:12:39.272096 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m16:12:39.272588 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m16:12:39.275132 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.273804 [info ] [Thread-2 (]: 63 of 92 START sql table model test.link_events ................................ [RUN]
[0m16:12:39.278680 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m16:12:39.279892 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m16:12:39.280982 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m16:12:39.281843 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m16:12:39.290898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.291492 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

  ...
[0m16:12:39.299951 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.304304 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m16:12:39.306395 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-06-24 16:12:39.282139 => 2024-06-24 16:12:39.306165
[0m16:12:39.306958 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m16:12:39.314202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m16:12:39.327955 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:39.330456 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m16:12:39.346494 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.358657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m16:12:39.359794 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:39.365956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.368928 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.372010 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-06-24 16:12:39.205204 => 2024-06-24 16:12:39.371884
[0m16:12:39.373233 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277dda20>]}
[0m16:12:39.374048 [info ] [Thread-1 (]: 62 of 92 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.20s]
[0m16:12:39.374660 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m16:12:39.375190 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m16:12:39.376203 [info ] [Thread-1 (]: 64 of 92 START sql table model test.full_periodstat ............................ [RUN]
[0m16:12:39.378050 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.379400 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m16:12:39.383045 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m16:12:39.383842 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m16:12:39.385326 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m16:12:39.391790 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m16:12:39.396250 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m16:12:39.406309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.409421 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m16:12:39.419348 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.424432 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m16:12:39.432248 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.435938 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m16:12:39.445382 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.447571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m16:12:39.454678 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:39.455941 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.457795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m16:12:39.460006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m16:12:39.474648 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.481101 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m16:12:39.482244 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.485449 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m16:12:39.489575 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.492249 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-06-24 16:12:39.307164 => 2024-06-24 16:12:39.492120
[0m16:12:39.493949 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327365390>]}
[0m16:12:39.495129 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.496147 [info ] [Thread-2 (]: 63 of 92 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.21s]
[0m16:12:39.498814 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m16:12:39.499637 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m16:12:39.501850 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m16:12:39.503537 [info ] [Thread-2 (]: 65 of 92 START sql incremental model test.full_datestat ........................ [RUN]
[0m16:12:39.505179 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m16:12:39.505570 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m16:12:39.505914 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m16:12:39.520162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.523671 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m16:12:39.526943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m16:12:39.535698 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.538450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m16:12:39.541407 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.544469 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m16:12:39.546549 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.549937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m16:12:39.553139 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.560693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.563042 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.567322 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m16:12:39.575616 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.579550 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m16:12:39.582491 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.587770 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m16:12:39.590425 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-06-24 16:12:39.386330 => 2024-06-24 16:12:39.590041
[0m16:12:39.591554 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m16:12:39.603530 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m16:12:39.605018 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.609703 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m16:12:39.617441 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.619424 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m16:12:39.626285 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.628494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m16:12:39.634901 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.637034 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m16:12:39.643086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.646156 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m16:12:39.656509 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.659933 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m16:12:39.661169 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-06-24 16:12:39.506151 => 2024-06-24 16:12:39.660924
[0m16:12:39.661849 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m16:12:39.673533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.675536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:39.680184 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.688856 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.691214 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m16:12:39.692507 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

  
    
    
        
        insert into test.full_periodstat__dbt_backup ("period_date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m16:12:39.694431 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.699889 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.707861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.719560 [debug] [Thread-2 (]: 
    In test.full_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m16:12:39.725367 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:39.731221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.734722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m16:12:39.743063 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:39.744819 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m16:12:39.756200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.764681 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m16:12:39.769590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:39.771815 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-06-24 16:12:39.592390 => 2024-06-24 16:12:39.771719
[0m16:12:39.772859 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327576a40>]}
[0m16:12:39.773881 [info ] [Thread-1 (]: 64 of 92 OK created sql table model test.full_periodstat ....................... [[32mOK[0m in 0.39s]
[0m16:12:39.774643 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m16:12:39.775228 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m16:12:39.776126 [info ] [Thread-1 (]: 66 of 92 START sql table model test.graph_tuples ............................... [RUN]
[0m16:12:39.777201 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m16:12:39.777513 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m16:12:39.777765 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m16:12:39.792032 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m16:12:39.793379 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:39.798865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.802110 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-06-24 16:12:39.777918 => 2024-06-24 16:12:39.801720
[0m16:12:39.803152 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m16:12:39.814258 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



    )
        ...
[0m16:12:39.815789 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:39.820643 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m16:12:39.822512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  
      ...
[0m16:12:39.849630 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:39.858001 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.866069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.868493 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m16:12:39.870892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



  ...
[0m16:12:39.873258 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:39.874959 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

      delete from test.full_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8);
    ...
[0m16:12:39.930870 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:39.932827 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m16:12:39.941920 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.950688 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m16:12:39.958010 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:39.960354 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-06-24 16:12:39.803824 => 2024-06-24 16:12:39.960212
[0m16:12:39.961852 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53275efd90>]}
[0m16:12:39.963046 [info ] [Thread-1 (]: 66 of 92 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.18s]
[0m16:12:39.964069 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m16:12:39.965764 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m16:12:39.966376 [info ] [Thread-1 (]: 67 of 92 START sql table model test.graph_lookup ............................... [RUN]
[0m16:12:39.967425 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m16:12:39.967862 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m16:12:39.968124 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m16:12:39.969108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:12:39.977994 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m16:12:39.986706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:39.990344 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-06-24 16:12:39.969494 => 2024-06-24 16:12:39.989937
[0m16:12:39.991157 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m16:12:40.003884 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys




    )
        ...
[0m16:12:40.006841 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:40.010568 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        insert into test.full_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash" from test.full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8
    ...
[0m16:12:40.040014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:40.045895 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_6b731b6a_9717_429e_b532_9ae47a2855c8 
  ...
[0m16:12:40.046884 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:40.057199 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:40.058754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.065821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_distributed_new_data 
  ...
[0m16:12:40.071792 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:40.076208 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-06-24 16:12:39.662174 => 2024-06-24 16:12:40.076066
[0m16:12:40.077372 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:40.078406 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327575ff0>]}
[0m16:12:40.081087 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m16:12:40.082383 [info ] [Thread-2 (]: 65 of 92 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.57s]
[0m16:12:40.083579 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m16:12:40.085151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys




  ...
[0m16:12:40.119353 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:40.121606 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m16:12:40.136838 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.155279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m16:12:40.163233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.165817 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-06-24 16:12:39.991540 => 2024-06-24 16:12:40.165661
[0m16:12:40.167575 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532751e7d0>]}
[0m16:12:40.168594 [info ] [Thread-1 (]: 67 of 92 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.20s]
[0m16:12:40.169686 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m16:12:40.174947 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m16:12:40.175862 [info ] [Thread-2 (]: 68 of 92 START sql table model test.graph_unique ............................... [RUN]
[0m16:12:40.177486 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m16:12:40.178041 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m16:12:40.178448 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m16:12:40.357043 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m16:12:40.359032 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-06-24 16:12:40.178724 => 2024-06-24 16:12:40.358708
[0m16:12:40.359599 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m16:12:40.370797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup




    )
        ...
[0m16:12:40.405446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:40.410911 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:40.418732 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.421175 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m16:12:40.422163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup




  ...
[0m16:12:40.444747 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:40.447291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m16:12:40.463801 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:40.473104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m16:12:40.480231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.483306 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-06-24 16:12:40.359914 => 2024-06-24 16:12:40.483157
[0m16:12:40.484963 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532740a350>]}
[0m16:12:40.486038 [info ] [Thread-2 (]: 68 of 92 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.31s]
[0m16:12:40.486973 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m16:12:40.489091 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m16:12:40.490015 [info ] [Thread-1 (]: 69 of 92 START sql table model test.graph_edge ................................. [RUN]
[0m16:12:40.491626 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m16:12:40.492284 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m16:12:40.492706 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m16:12:40.501269 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m16:12:40.502317 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-06-24 16:12:40.492951 => 2024-06-24 16:12:40.502147
[0m16:12:40.502959 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m16:12:40.524860 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash




    )
        ...
[0m16:12:40.571971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:40.578751 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:40.590812 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.593919 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m16:12:40.595277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash




  ...
[0m16:12:40.623041 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:40.625360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m16:12:40.640818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.645364 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m16:12:40.658412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.663862 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m16:12:40.669532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:40.672420 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-06-24 16:12:40.503856 => 2024-06-24 16:12:40.672276
[0m16:12:40.673982 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277ddff0>]}
[0m16:12:40.674978 [info ] [Thread-1 (]: 69 of 92 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.18s]
[0m16:12:40.675703 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m16:12:40.677535 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m16:12:40.678505 [info ] [Thread-2 (]: 70 of 92 START sql table model test.graph_glue ................................. [RUN]
[0m16:12:40.680226 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m16:12:40.680928 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m16:12:40.681331 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m16:12:40.687686 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m16:12:40.690202 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-06-24 16:12:40.681528 => 2024-06-24 16:12:40.689874
[0m16:12:40.691332 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m16:12:40.703496 [debug] [Thread-2 (]: Running iteration 0
[0m16:12:40.705420 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m16:12:40.809014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:12:40.810829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m16:12:40.858659 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:40.861282 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m16:12:40.880988 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:40.885044 [debug] [Thread-2 (]: VALUE: 1
[0m16:12:40.885845 [debug] [Thread-2 (]: Running iteration 1
[0m16:12:40.887185 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m16:12:40.943387 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:40.945786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m16:12:41.010562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:41.012450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m16:12:41.024929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.027904 [debug] [Thread-2 (]: VALUE: 0
[0m16:12:41.028532 [debug] [Thread-2 (]: Running iteration 2
[0m16:12:41.028802 [debug] [Thread-2 (]: Running iteration 3
[0m16:12:41.028968 [debug] [Thread-2 (]: Running iteration 4
[0m16:12:41.029123 [debug] [Thread-2 (]: Running iteration 5
[0m16:12:41.029300 [debug] [Thread-2 (]: Running iteration 6
[0m16:12:41.029460 [debug] [Thread-2 (]: Running iteration 7
[0m16:12:41.029715 [debug] [Thread-2 (]: Running iteration 8
[0m16:12:41.029908 [debug] [Thread-2 (]: Running iteration 9
[0m16:12:41.030067 [debug] [Thread-2 (]: Running iteration 10
[0m16:12:41.030242 [debug] [Thread-2 (]: Running iteration 11
[0m16:12:41.030621 [debug] [Thread-2 (]: Running iteration 12
[0m16:12:41.030877 [debug] [Thread-2 (]: Running iteration 13
[0m16:12:41.032963 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left




    )
        ...
[0m16:12:41.062699 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:41.068457 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:41.078668 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.081482 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m16:12:41.082966 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left




  ...
[0m16:12:41.113672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:41.116148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m16:12:41.134669 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:41.145399 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m16:12:41.151099 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:41.153662 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-06-24 16:12:40.691793 => 2024-06-24 16:12:41.153496
[0m16:12:41.155145 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327408c10>]}
[0m16:12:41.156165 [info ] [Thread-2 (]: 70 of 92 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.48s]
[0m16:12:41.157114 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m16:12:41.159443 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m16:12:41.160277 [info ] [Thread-1 (]: 71 of 92 START sql table model test.graph_qid .................................. [RUN]
[0m16:12:41.162242 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m16:12:41.162822 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m16:12:41.163268 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m16:12:41.170676 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m16:12:41.172005 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-06-24 16:12:41.163507 => 2024-06-24 16:12:41.171750
[0m16:12:41.172801 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m16:12:41.184355 [debug] [Thread-1 (]: Running iteration 0
[0m16:12:41.185826 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m16:12:41.299994 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m16:12:41.302542 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m16:12:41.442115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m16:12:41.444308 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m16:12:41.454366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.456648 [debug] [Thread-1 (]: VALUE: 0
[0m16:12:41.457241 [debug] [Thread-1 (]: Running iteration 1
[0m16:12:41.457860 [debug] [Thread-1 (]: Running iteration 2
[0m16:12:41.458560 [debug] [Thread-1 (]: Running iteration 3
[0m16:12:41.459143 [debug] [Thread-1 (]: Running iteration 4
[0m16:12:41.459564 [debug] [Thread-1 (]: Running iteration 5
[0m16:12:41.459853 [debug] [Thread-1 (]: Running iteration 6
[0m16:12:41.460127 [debug] [Thread-1 (]: Running iteration 7
[0m16:12:41.460314 [debug] [Thread-1 (]: Running iteration 8
[0m16:12:41.460570 [debug] [Thread-1 (]: Running iteration 9
[0m16:12:41.461033 [debug] [Thread-1 (]: Running iteration 10
[0m16:12:41.461302 [debug] [Thread-1 (]: Running iteration 11
[0m16:12:41.461576 [debug] [Thread-1 (]: Running iteration 12
[0m16:12:41.461758 [debug] [Thread-1 (]: Running iteration 13
[0m16:12:41.464904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup




    )
        ...
[0m16:12:41.600305 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m16:12:41.604231 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:41.614369 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.616910 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m16:12:41.617939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup




  ...
[0m16:12:41.637733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:41.641285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m16:12:41.652740 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.661208 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m16:12:41.667999 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.672132 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-06-24 16:12:41.173172 => 2024-06-24 16:12:41.671874
[0m16:12:41.674274 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532743e5c0>]}
[0m16:12:41.675666 [info ] [Thread-1 (]: 71 of 92 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.51s]
[0m16:12:41.676786 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m16:12:41.679219 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m16:12:41.680465 [info ] [Thread-2 (]: 72 of 92 START sql table model test.full_events ................................ [RUN]
[0m16:12:41.682190 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m16:12:41.682758 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m16:12:41.683294 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m16:12:41.701325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m16:12:41.709515 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.711559 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m16:12:41.720359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.723374 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m16:12:41.729644 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.732882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m16:12:41.740349 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.742398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m16:12:41.750278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.753526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m16:12:41.759648 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.761872 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m16:12:41.769698 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.772251 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m16:12:41.778647 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.780605 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m16:12:41.787706 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.790345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m16:12:41.796232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.798946 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m16:12:41.799618 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-06-24 16:12:41.683619 => 2024-06-24 16:12:41.799524
[0m16:12:41.799914 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m16:12:41.806086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m16:12:41.874715 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m16:12:41.878502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:41.885145 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:41.888376 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m16:12:41.889124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "qid", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m16:12:41.995029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m16:12:41.997387 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m16:12:42.011706 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.017190 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m16:12:42.023516 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.026088 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-06-24 16:12:41.800057 => 2024-06-24 16:12:42.025949
[0m16:12:42.027208 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532761c190>]}
[0m16:12:42.028111 [info ] [Thread-2 (]: 72 of 92 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.35s]
[0m16:12:42.028927 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m16:12:42.031120 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m16:12:42.032063 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m16:12:42.033217 [info ] [Thread-1 (]: 73 of 92 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m16:12:42.034272 [info ] [Thread-2 (]: 74 of 92 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m16:12:42.035987 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m16:12:42.036943 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m16:12:42.037312 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m16:12:42.037781 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m16:12:42.038434 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m16:12:42.039131 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m16:12:42.045009 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m16:12:42.051900 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m16:12:42.053556 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-06-24 16:12:42.039535 => 2024-06-24 16:12:42.053285
[0m16:12:42.054337 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m16:12:42.064666 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m16:12:42.065623 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-06-24 16:12:42.045816 => 2024-06-24 16:12:42.065383
[0m16:12:42.067525 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m16:12:42.076907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m16:12:42.102200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.107483 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.114890 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.117841 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m16:12:42.118871 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m16:12:42.120454 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.125275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.133326 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.136427 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m16:12:42.137321 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m16:12:42.148476 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:42.150251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m16:12:42.159551 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.167454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m16:12:42.172795 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:42.174756 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-06-24 16:12:42.054664 => 2024-06-24 16:12:42.174665
[0m16:12:42.175659 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327520970>]}
[0m16:12:42.176256 [info ] [Thread-1 (]: 73 of 92 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.14s]
[0m16:12:42.176818 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m16:12:42.178200 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m16:12:42.178896 [info ] [Thread-1 (]: 75 of 92 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m16:12:42.180083 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m16:12:42.181359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.181963 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m16:12:42.183896 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m16:12:42.184606 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m16:12:42.197389 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m16:12:42.198939 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.206723 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m16:12:42.208830 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-06-24 16:12:42.186790 => 2024-06-24 16:12:42.208646
[0m16:12:42.209373 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m16:12:42.216600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




    )
        ...
[0m16:12:42.217949 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.222254 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-06-24 16:12:42.068111 => 2024-06-24 16:12:42.222137
[0m16:12:42.224380 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327602b30>]}
[0m16:12:42.225299 [info ] [Thread-2 (]: 74 of 92 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.19s]
[0m16:12:42.226206 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m16:12:42.227670 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m16:12:42.228288 [info ] [Thread-2 (]: 76 of 92 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m16:12:42.229344 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m16:12:42.229721 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m16:12:42.229949 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m16:12:42.243340 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m16:12:42.244575 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-06-24 16:12:42.230093 => 2024-06-24 16:12:42.244394
[0m16:12:42.245039 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m16:12:42.253061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




    )
        ...
[0m16:12:42.254058 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.261553 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.270926 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.274167 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m16:12:42.275144 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




  ...
[0m16:12:42.281358 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:42.287472 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.294794 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.296842 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m16:12:42.298107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.303043 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m16:12:42.304732 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




  ...
[0m16:12:42.312262 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.320459 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m16:12:42.321433 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.324489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m16:12:42.326468 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m16:12:42.328767 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-06-24 16:12:42.209614 => 2024-06-24 16:12:42.328679
[0m16:12:42.330248 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327400bb0>]}
[0m16:12:42.331060 [info ] [Thread-1 (]: 75 of 92 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.15s]
[0m16:12:42.331747 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m16:12:42.332955 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m16:12:42.333688 [info ] [Thread-1 (]: 77 of 92 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m16:12:42.335117 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m16:12:42.336140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.336819 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m16:12:42.344801 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m16:12:42.345433 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m16:12:42.353243 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.354467 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m16:12:42.357377 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-06-24 16:12:42.245350 => 2024-06-24 16:12:42.357242
[0m16:12:42.359413 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327436590>]}
[0m16:12:42.360657 [info ] [Thread-2 (]: 76 of 92 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.13s]
[0m16:12:42.361943 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-06-24 16:12:42.346836 => 2024-06-24 16:12:42.361733
[0m16:12:42.362666 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m16:12:42.363473 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m16:12:42.372981 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




    )
        ...
[0m16:12:42.374955 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m16:12:42.376071 [info ] [Thread-2 (]: 78 of 92 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m16:12:42.377850 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m16:12:42.378589 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m16:12:42.378952 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m16:12:42.384055 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m16:12:42.385022 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-06-24 16:12:42.379118 => 2024-06-24 16:12:42.384804
[0m16:12:42.385648 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m16:12:42.397938 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




    )
        ...
[0m16:12:42.400554 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:42.407097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.425328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.428192 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m16:12:42.429300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:42.435995 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.438569 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




  ...
[0m16:12:42.444672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.447139 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m16:12:42.448069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




  ...
[0m16:12:42.459246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.461002 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m16:12:42.463279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.465173 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m16:12:42.470279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.476148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m16:12:42.478052 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.484588 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.486759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m16:12:42.489122 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-06-24 16:12:42.364900 => 2024-06-24 16:12:42.489007
[0m16:12:42.491390 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327400cd0>]}
[0m16:12:42.492674 [info ] [Thread-1 (]: 77 of 92 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.16s]
[0m16:12:42.494074 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m16:12:42.495429 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.498105 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-06-24 16:12:42.385880 => 2024-06-24 16:12:42.498024
[0m16:12:42.498769 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m16:12:42.499844 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276090f0>]}
[0m16:12:42.500710 [info ] [Thread-1 (]: 79 of 92 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m16:12:42.502094 [info ] [Thread-2 (]: 78 of 92 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.12s]
[0m16:12:42.503760 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m16:12:42.504675 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m16:12:42.505228 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m16:12:42.506883 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m16:12:42.507760 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m16:12:42.520960 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m16:12:42.522012 [info ] [Thread-2 (]: 80 of 92 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m16:12:42.523815 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m16:12:42.524514 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m16:12:42.525768 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m16:12:42.526490 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-06-24 16:12:42.508366 => 2024-06-24 16:12:42.526316
[0m16:12:42.536996 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m16:12:42.537690 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m16:12:42.546155 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m16:12:42.548135 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-06-24 16:12:42.526915 => 2024-06-24 16:12:42.547889
[0m16:12:42.549832 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m16:12:42.558451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m16:12:42.594162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m16:12:42.599359 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.600340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.608155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.606793 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.611048 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m16:12:42.613934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m16:12:42.618544 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.621805 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m16:12:42.622971 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m16:12:42.642990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.644156 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:42.646543 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m16:12:42.648900 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m16:12:42.656877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.664882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m16:12:42.665949 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.674423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m16:12:42.676778 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.679020 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-06-24 16:12:42.550208 => 2024-06-24 16:12:42.678904
[0m16:12:42.680610 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532743bbe0>]}
[0m16:12:42.681657 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.682598 [info ] [Thread-2 (]: 80 of 92 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.16s]
[0m16:12:42.684785 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-06-24 16:12:42.538354 => 2024-06-24 16:12:42.684689
[0m16:12:42.685431 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m16:12:42.686832 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532743a5f0>]}
[0m16:12:42.689527 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m16:12:42.688813 [info ] [Thread-1 (]: 79 of 92 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.18s]
[0m16:12:42.690824 [info ] [Thread-2 (]: 81 of 92 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m16:12:42.691823 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m16:12:42.693176 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m16:12:42.694655 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m16:12:42.695723 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m16:12:42.696392 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m16:12:42.705960 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m16:12:42.702947 [info ] [Thread-1 (]: 82 of 92 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m16:12:42.707802 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m16:12:42.708300 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m16:12:42.708770 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m16:12:42.715497 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m16:12:42.716287 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-06-24 16:12:42.696910 => 2024-06-24 16:12:42.716107
[0m16:12:42.717554 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m16:12:42.718128 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-06-24 16:12:42.709324 => 2024-06-24 16:12:42.718005
[0m16:12:42.731765 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




    )
        ...
[0m16:12:42.732700 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m16:12:42.743287 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




    )
        ...
[0m16:12:42.760984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:42.767685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.769142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.777366 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.779381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.782103 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m16:12:42.783136 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




  ...
[0m16:12:42.785164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.788007 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m16:12:42.789313 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




  ...
[0m16:12:42.799468 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:42.801176 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m16:12:42.803300 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.805062 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m16:12:42.808709 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.815833 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m16:12:42.816880 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.826340 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m16:12:42.827335 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.831849 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-06-24 16:12:42.718586 => 2024-06-24 16:12:42.831757
[0m16:12:42.832725 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274004f0>]}
[0m16:12:42.833610 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:42.834474 [info ] [Thread-2 (]: 81 of 92 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.14s]
[0m16:12:42.837111 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-06-24 16:12:42.734415 => 2024-06-24 16:12:42.836976
[0m16:12:42.837866 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m16:12:42.839076 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532731f490>]}
[0m16:12:42.840958 [info ] [Thread-1 (]: 82 of 92 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.13s]
[0m16:12:42.841911 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m16:12:42.842588 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m16:12:42.843354 [info ] [Thread-2 (]: 83 of 92 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m16:12:42.846060 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m16:12:42.846798 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m16:12:42.847200 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m16:12:42.848126 [info ] [Thread-1 (]: 84 of 92 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m16:12:42.849108 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m16:12:42.850541 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m16:12:42.856968 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m16:12:42.857663 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m16:12:42.858762 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m16:12:42.863276 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m16:12:42.864416 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-06-24 16:12:42.851285 => 2024-06-24 16:12:42.863964
[0m16:12:42.865093 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m16:12:42.875561 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m16:12:42.876077 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-06-24 16:12:42.859428 => 2024-06-24 16:12:42.875969
[0m16:12:42.877901 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m16:12:42.885729 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m16:12:42.921354 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.926465 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.928891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:42.938193 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:42.939921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.030362 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m16:12:43.032129 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m16:12:43.034399 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m16:12:43.035450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m16:12:43.037213 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m16:12:43.070465 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:43.071548 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:43.073288 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m16:12:43.074961 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m16:12:43.086920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.092801 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m16:12:43.093875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:43.101684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m16:12:43.102529 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.106351 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-06-24 16:12:42.865727 => 2024-06-24 16:12:43.106247
[0m16:12:43.107302 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274a8e50>]}
[0m16:12:43.108164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.108964 [info ] [Thread-2 (]: 83 of 92 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.26s]
[0m16:12:43.111371 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-06-24 16:12:42.878560 => 2024-06-24 16:12:43.111278
[0m16:12:43.112131 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m16:12:43.113346 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53276c24a0>]}
[0m16:12:43.116026 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m16:12:43.115388 [info ] [Thread-1 (]: 84 of 92 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.26s]
[0m16:12:43.117257 [info ] [Thread-2 (]: 85 of 92 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m16:12:43.118347 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m16:12:43.119544 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m16:12:43.122073 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m16:12:43.122759 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m16:12:43.124097 [info ] [Thread-1 (]: 86 of 92 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m16:12:43.125215 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m16:12:43.127219 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m16:12:43.143287 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m16:12:43.143944 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m16:12:43.145867 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m16:12:43.166929 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m16:12:43.168267 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-06-24 16:12:43.128068 => 2024-06-24 16:12:43.167894
[0m16:12:43.169553 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m16:12:43.181341 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m16:12:43.182121 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-06-24 16:12:43.146489 => 2024-06-24 16:12:43.181836
[0m16:12:43.185095 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m16:12:43.192875 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m16:12:43.215482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:43.220130 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:43.224465 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:43.229224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:43.230377 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.235954 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m16:12:43.237590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m16:12:43.239635 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.243209 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m16:12:43.244448 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m16:12:43.275143 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:43.276868 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m16:12:43.277854 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:43.281679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m16:12:43.288551 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.296215 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m16:12:43.297388 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:43.306416 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m16:12:43.308629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.311291 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-06-24 16:12:43.185739 => 2024-06-24 16:12:43.311176
[0m16:12:43.313096 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277d7520>]}
[0m16:12:43.317980 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:43.319670 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-06-24 16:12:43.170155 => 2024-06-24 16:12:43.319590
[0m16:12:43.320622 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277ce830>]}
[0m16:12:44.174132 [info ] [Thread-1 (]: 86 of 92 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.19s]
[0m16:12:44.176298 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m16:12:44.175163 [info ] [Thread-2 (]: 85 of 92 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.20s]
[0m16:12:44.178207 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m16:12:44.178752 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m16:12:44.181993 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m16:12:44.180945 [info ] [Thread-1 (]: 87 of 92 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m16:12:44.183294 [info ] [Thread-2 (]: 88 of 92 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m16:12:44.184939 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m16:12:44.186340 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m16:12:44.187105 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m16:12:44.188015 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m16:12:44.188619 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m16:12:44.188986 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m16:12:44.206244 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m16:12:44.215071 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m16:12:44.216304 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-06-24 16:12:44.189490 => 2024-06-24 16:12:44.216121
[0m16:12:44.216899 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m16:12:44.224050 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m16:12:44.225780 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-06-24 16:12:44.200638 => 2024-06-24 16:12:44.225542
[0m16:12:44.227203 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m16:12:44.239241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m16:12:44.268938 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:44.274010 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.276921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:44.283285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.285560 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.288602 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m16:12:44.290198 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




  ...
[0m16:12:44.292397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.296584 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m16:12:44.297722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




  ...
[0m16:12:44.338269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m16:12:44.340058 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m16:12:44.349134 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:44.350921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.353399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m16:12:44.364952 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m16:12:44.376318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.377325 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.384060 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m16:12:44.386306 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-06-24 16:12:44.227836 => 2024-06-24 16:12:44.386212
[0m16:12:44.389245 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5335883280>]}
[0m16:12:44.392051 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.390992 [info ] [Thread-2 (]: 88 of 92 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.20s]
[0m16:12:44.395148 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-06-24 16:12:44.217257 => 2024-06-24 16:12:44.395023
[0m16:12:44.396177 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m16:12:44.397642 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f532768ebc0>]}
[0m16:12:44.401003 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m16:12:44.400143 [info ] [Thread-1 (]: 87 of 92 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.21s]
[0m16:12:44.402441 [info ] [Thread-2 (]: 89 of 92 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m16:12:44.404093 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m16:12:44.405570 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m16:12:44.407400 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m16:12:44.408105 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m16:12:44.408736 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m16:12:44.409639 [info ] [Thread-1 (]: 90 of 92 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m16:12:44.419039 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m16:12:44.420576 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m16:12:44.421763 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m16:12:44.422420 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m16:12:44.431386 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m16:12:44.432405 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-06-24 16:12:44.410986 => 2024-06-24 16:12:44.432184
[0m16:12:44.433628 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m16:12:44.443782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m16:12:44.446562 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-06-24 16:12:44.423168 => 2024-06-24 16:12:44.446185
[0m16:12:44.447239 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m16:12:44.462233 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m16:12:44.502454 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:44.508146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.518506 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m16:12:44.525482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:44.527636 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.531436 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m16:12:44.534516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m16:12:44.541104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.545191 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m16:12:44.546098 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m16:12:44.631256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m16:12:44.633623 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m16:12:44.635506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m16:12:44.639031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m16:12:44.649683 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:44.659411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m16:12:44.660731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:44.668857 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m16:12:44.670953 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.673535 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-06-24 16:12:44.447925 => 2024-06-24 16:12:44.673406
[0m16:12:44.675597 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5349840fa0>]}
[0m16:12:44.678325 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.677039 [info ] [Thread-1 (]: 90 of 92 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.26s]
[0m16:12:44.681318 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-06-24 16:12:44.434119 => 2024-06-24 16:12:44.681207
[0m16:12:44.682169 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m16:12:44.683811 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5335930610>]}
[0m16:12:44.686759 [info ] [Thread-2 (]: 89 of 92 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.28s]
[0m16:12:44.688073 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m16:12:44.689364 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m16:12:44.690849 [info ] [Thread-1 (]: 91 of 92 START sql table model test.dataset_event_table ........................ [RUN]
[0m16:12:44.692081 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m16:12:44.693840 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m16:12:44.695023 [info ] [Thread-2 (]: 92 of 92 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m16:12:44.696135 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m16:12:44.698165 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m16:12:44.699201 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m16:12:44.700033 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m16:12:44.713979 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m16:12:44.733336 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.743641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.752634 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.765217 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.767275 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m16:12:44.777522 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:44.778760 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:44.804329 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m16:12:44.805971 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m16:12:44.826033 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m16:12:44.827158 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-06-24 16:12:44.700901 => 2024-06-24 16:12:44.826737
[0m16:12:44.828203 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m16:12:44.829012 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-06-24 16:12:44.724462 => 2024-06-24 16:12:44.828801
[0m16:12:44.839487 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table



   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m16:12:44.840540 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m16:12:44.857688 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m16:12:45.084451 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.24 seconds
[0m16:12:45.090439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:45.099249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:45.103643 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m16:12:45.105876 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table



   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m16:12:45.146860 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.29 seconds
[0m16:12:45.151466 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m16:12:45.160141 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:45.163778 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m16:12:45.165296 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'yd'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[4] = 'ym'
    and 
    splitByChar('_', __table_name)[7] = 'testaccount'
    and 
    splitByChar('_', __table_name)[6] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m16:12:45.499700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.39 seconds
[0m16:12:45.501696 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m16:12:45.510443 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:45.520351 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m16:12:45.528795 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:45.531192 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-06-24 16:12:44.829416 => 2024-06-24 16:12:45.531069
[0m16:12:45.532414 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274d8040>]}
[0m16:12:45.533518 [info ] [Thread-1 (]: 91 of 92 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.84s]
[0m16:12:45.534695 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m16:12:45.538495 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.37 seconds
[0m16:12:45.540746 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m16:12:45.554290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:45.563362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m16:12:45.571612 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m16:12:45.574524 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-06-24 16:12:44.843753 => 2024-06-24 16:12:45.574415
[0m16:12:45.575726 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6b731b6a-9717-429e-b532-9ae47a2855c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53274a8910>]}
[0m16:12:45.576653 [info ] [Thread-2 (]: 92 of 92 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.88s]
[0m16:12:45.577401 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m16:12:45.589745 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m16:12:45.595728 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:12:45.596421 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m16:12:45.596896 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m16:12:45.597093 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m16:12:45.597283 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m16:12:45.599676 [info ] [MainThread]: 
[0m16:12:45.601150 [info ] [MainThread]: Finished running 20 view models, 23 incremental models, 49 table models in 0 hours 0 minutes and 17.82 seconds (17.82s).
[0m16:12:45.608128 [debug] [MainThread]: Command end result
[0m16:12:45.848418 [info ] [MainThread]: 
[0m16:12:45.849219 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:12:45.850035 [info ] [MainThread]: 
[0m16:12:45.850780 [info ] [MainThread]: Done. PASS=92 WARN=0 ERROR=0 SKIP=0 TOTAL=92
[0m16:12:45.852123 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5327746d10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277454b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53277b81f0>]}
[0m16:12:45.852945 [debug] [MainThread]: Flushing usage events


============================== 2024-07-01 06:45:42.283713 | 0f7e0f65-02c9-48a2-bc1f-b0620389249c ==============================
[0m06:45:42.283713 [info ] [MainThread]: Running with dbt=1.4.7
[0m06:45:42.288825 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m06:45:42.289285 [debug] [MainThread]: Tracking: tracking
[0m06:45:42.297086 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabd61dc90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabd67b8e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabd67bee0>]}
[0m06:45:42.334486 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m06:45:42.736524 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 1 files added, 6 files changed.
[0m06:45:42.737486 [debug] [MainThread]: Partial parsing: added file: etlcraft://macros/other/get_table_types_sql.sql
[0m06:45:42.737910 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/7_dataset/dataset_event_table.sql
[0m06:45:42.738170 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/dataset/create_dataset.sql
[0m06:45:42.744936 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/other/clickhouse-adapters.sql
[0m06:45:42.746788 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m06:45:42.747249 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/7_dataset/dataset_event_table2.sql
[0m06:45:42.747452 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/other/get_features.sql
[0m06:45:43.013086 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m06:45:43.063777 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m06:45:43.065042 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m06:45:43.071417 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m06:45:43.072541 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m06:45:43.131475 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m06:45:43.133079 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m06:45:43.148350 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m06:45:43.149600 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m06:45:43.197905 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m06:45:43.199081 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_datestat.sql
[0m06:45:43.219385 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_datestat.sql
[0m06:45:43.220766 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m06:45:43.230183 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m06:45:43.231334 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m06:45:43.244860 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m06:45:43.246019 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m06:45:43.249856 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m06:45:43.250931 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m06:45:43.259599 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m06:45:43.260784 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m06:45:43.272963 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m06:45:43.274173 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m06:45:43.280158 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m06:45:43.281261 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m06:45:43.287981 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m06:45:43.289155 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m06:45:43.303213 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m06:45:43.304516 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m06:45:43.310089 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m06:45:43.311170 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m06:45:43.321385 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m06:45:43.322457 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m06:45:43.328067 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m06:45:43.329116 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m06:45:43.336365 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m06:45:43.337536 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m06:45:43.341241 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m06:45:43.342267 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m06:45:43.345935 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m06:45:43.347092 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m06:45:43.354668 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m06:45:43.355775 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m06:45:43.400254 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m06:45:43.401379 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m06:45:43.407219 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m06:45:43.408368 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m06:45:43.412493 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m06:45:43.413655 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m06:45:43.420799 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m06:45:43.422049 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m06:45:43.435545 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m06:45:43.436961 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m06:45:43.443543 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m06:45:43.444758 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m06:45:43.452240 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m06:45:43.453499 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m06:45:43.459199 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m06:45:43.460355 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m06:45:43.466437 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m06:45:43.467709 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m06:45:43.480503 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m06:45:43.482132 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m06:45:43.487362 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m06:45:43.488718 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m06:45:43.496393 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m06:45:43.497869 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_events.sql
[0m06:45:43.503835 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_events.sql
[0m06:45:43.505181 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m06:45:43.513137 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m06:45:43.514417 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m06:45:43.518847 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m06:45:43.520046 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m06:45:43.528483 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m06:45:43.529652 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_periodstat.sql
[0m06:45:43.534712 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_periodstat.sql
[0m06:45:43.535911 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m06:45:43.540309 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m06:45:43.541513 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m06:45:43.547826 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m06:45:43.549001 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m06:45:43.553175 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m06:45:43.554350 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m06:45:43.559268 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m06:45:43.560420 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m06:45:43.567466 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m06:45:43.568607 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_utmhashregistry.sql
[0m06:45:43.573093 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_utmhashregistry.sql
[0m06:45:43.574281 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m06:45:43.600550 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m06:45:43.602092 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m06:45:43.629098 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m06:45:43.630197 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_event_metrics.sql
[0m06:45:43.635178 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_event_metrics.sql
[0m06:45:43.636311 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m06:45:43.640436 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m06:45:43.641490 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_network.sql
[0m06:45:43.646160 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_network.sql
[0m06:45:43.647341 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m06:45:43.652563 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m06:45:43.653751 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_registry_default_events.sql
[0m06:45:43.660293 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_registry_default_events.sql
[0m06:45:43.661359 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql
[0m06:45:43.667841 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_registry_default_events.sql
[0m06:45:43.668894 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_events.sql
[0m06:45:43.695968 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_events.sql
[0m06:45:43.697135 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_deeplinks.sql
[0m06:45:43.701491 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_deeplinks.sql
[0m06:45:43.702545 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m06:45:43.706787 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m06:45:43.707948 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m06:45:43.712595 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m06:45:43.713674 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql
[0m06:45:43.719059 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_events.sql
[0m06:45:43.720124 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_installations.sql
[0m06:45:43.724649 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_installations.sql
[0m06:45:43.725836 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql
[0m06:45:43.730147 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_installations.sql
[0m06:45:43.731181 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m06:45:43.735703 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m06:45:43.736939 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql
[0m06:45:43.743351 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/manual/normalize_appmetrica_events_default_screen_view.sql
[0m06:45:43.744447 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m06:45:43.750245 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m06:45:43.751348 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m06:45:43.756955 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m06:45:43.758098 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m06:45:43.765593 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m06:45:43.766678 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m06:45:43.770918 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m06:45:43.772009 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m06:45:43.777578 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m06:45:43.778665 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m06:45:43.783279 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/calltouch/incremental_calltouch_events_default_calls.sql
[0m06:45:43.784494 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m06:45:43.791794 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/calltouch/normalize_calltouch_events_default_calls.sql
[0m06:45:43.793035 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_mt_datestat.sql
[0m06:45:43.810592 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_mt_datestat.sql
[0m06:45:43.811828 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m06:45:43.816590 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m06:45:43.817728 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m06:45:43.822205 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m06:45:43.823275 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_banners.sql
[0m06:45:43.827818 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_banners.sql
[0m06:45:43.828974 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql
[0m06:45:43.834023 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_banners.sql
[0m06:45:43.835314 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_campaigns.sql
[0m06:45:43.840535 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_registry_default_campaigns.sql
[0m06:45:43.841720 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql
[0m06:45:43.845673 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_registry_default_campaigns.sql
[0m06:45:43.846866 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_sheets_periodstat.sql
[0m06:45:43.854838 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_sheets_periodstat.sql
[0m06:45:43.856135 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m06:45:43.860922 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m06:45:43.862144 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m06:45:43.867095 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m06:45:43.868280 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_utmcraft_registry_utmhashregistry.sql
[0m06:45:43.878764 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_utmcraft_registry_utmhashregistry.sql
[0m06:45:43.880019 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m06:45:43.884380 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/utmcraft/incremental_utmcraft_registry_default_utmresult.sql
[0m06:45:43.885709 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m06:45:43.890214 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m06:45:43.891300 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_vkads_datestat.sql
[0m06:45:43.908887 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_vkads_datestat.sql
[0m06:45:43.910070 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans_statistics.sql
[0m06:45:43.914846 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans_statistics.sql
[0m06:45:43.916196 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m06:45:43.923230 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m06:45:43.924462 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_registry_default_ad_plans.sql
[0m06:45:43.930612 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_registry_default_ad_plans.sql
[0m06:45:43.931930 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql
[0m06:45:43.936841 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_registry_default_ad_plans.sql
[0m06:45:43.938078 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_yd_datestat.sql
[0m06:45:43.949624 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_yd_datestat.sql
[0m06:45:43.950867 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m06:45:43.956251 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m06:45:43.957536 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m06:45:43.963007 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m06:45:43.964402 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_ym_events.sql
[0m06:45:43.979039 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_ym_events.sql
[0m06:45:43.980180 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m06:45:43.984867 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m06:45:43.986052 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m06:45:43.990815 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m06:45:44.175085 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabc622ce0>]}
[0m06:45:44.235625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabca9c040>]}
[0m06:45:44.236083 [info ] [MainThread]: Found 92 models, 8 tests, 0 snapshots, 0 analyses, 543 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m06:45:44.236375 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabe413400>]}
[0m06:45:44.243971 [info ] [MainThread]: 
[0m06:45:44.246905 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m06:45:44.252596 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m06:45:44.259828 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m06:45:46.799351 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m06:45:46.805123 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:46.819363 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m06:45:46.819815 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m06:45:46.839031 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m06:45:46.893350 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:46.904019 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabc8d9f60>]}
[0m06:45:46.905632 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m06:45:46.906353 [info ] [MainThread]: 
[0m06:45:46.918980 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:45:46.919518 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:45:46.920169 [info ] [Thread-1 (]: 1 of 92 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m06:45:46.921737 [info ] [Thread-2 (]: 2 of 92 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m06:45:46.923583 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m06:45:46.927282 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m06:45:46.927986 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m06:45:46.928615 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:45:46.930126 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:45:46.964136 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m06:45:46.959894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m06:45:47.113998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m06:45:47.144971 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:47.146706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m06:45:47.172025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:47.197511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:47.196459 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m06:45:47.201383 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:47.206210 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-07-01 06:45:46.943709 => 2024-07-01 06:45:47.206027
[0m06:45:47.206722 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:45:47.216099 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.257454 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m06:45:47.270278 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m06:45:47.271294 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-07-01 06:45:46.930393 => 2024-07-01 06:45:47.271106
[0m06:45:47.272084 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:45:47.279578 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m06:45:47.280729 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
)

)
  )...
[0m06:45:47.281369 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_cohorts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
)

)
  )...
[0m06:45:47.503237 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.22 seconds
[0m06:45:47.511368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m06:45:47.512991 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.23 seconds
[0m06:45:47.517321 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m06:45:47.528019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:47.529693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.536316 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m06:45:47.538408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m06:45:47.571764 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:47.572667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:47.577474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m06:45:47.594030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m06:45:47.598835 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:47.600468 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m06:45:47.602582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.604055 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m06:45:47.606122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.620342 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:47.651891 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m06:45:47.654068 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m06:45:47.660307 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:47.662333 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-07-01 06:45:47.206942 => 2024-07-01 06:45:47.662245
[0m06:45:47.663058 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.664480 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8ef4b50>]}
[0m06:45:47.666564 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-07-01 06:45:47.272503 => 2024-07-01 06:45:47.666495
[0m06:45:47.667245 [info ] [Thread-1 (]: 1 of 92 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.74s]
[0m06:45:47.668572 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8ef4df0>]}
[0m06:45:47.671605 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:45:47.672891 [info ] [Thread-2 (]: 2 of 92 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.74s]
[0m06:45:47.673767 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:45:47.675324 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:45:47.676117 [info ] [Thread-1 (]: 3 of 92 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m06:45:47.677049 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:45:47.678406 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m06:45:47.679244 [info ] [Thread-2 (]: 4 of 92 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m06:45:47.679952 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m06:45:47.680970 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m06:45:47.681853 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:45:47.682599 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m06:45:47.689776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m06:45:47.690379 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:45:47.698988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m06:45:47.720133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:47.725934 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:47.735802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.749686 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m06:45:47.750939 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-07-01 06:45:47.692021 => 2024-07-01 06:45:47.750814
[0m06:45:47.751331 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:45:47.757197 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m06:45:47.758368 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


  create view test.normalize_adjust_registry_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_events
)

)
  )...
[0m06:45:47.760971 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:47.767241 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:47.777127 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.792223 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m06:45:47.793104 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-07-01 06:45:47.683074 => 2024-07-01 06:45:47.792966
[0m06:45:47.793683 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:45:47.799922 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m06:45:47.800846 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:47.807343 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m06:45:47.809065 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_network') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_network
)

)
  )...
[0m06:45:47.812086 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:47.813623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events to test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m06:45:47.818420 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:47.825069 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events 
  
  ...
[0m06:45:47.832961 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.834363 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events__dbt_tmp to test.normalize_adjust_registry_default_events 
  
  ...
[0m06:45:47.838490 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:47.842374 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m06:45:47.843542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.850290 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */
drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  ...
[0m06:45:47.851132 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.854045 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m06:45:47.855921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:47.858654 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-07-01 06:45:47.751505 => 2024-07-01 06:45:47.858567
[0m06:45:47.859959 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa848d960>]}
[0m06:45:47.861677 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.860769 [info ] [Thread-2 (]: 4 of 92 OK created sql view model test.normalize_adjust_registry_default_events  [[32mOK[0m in 0.18s]
[0m06:45:47.866624 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m06:45:47.867390 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:45:47.869278 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:45:47.870124 [info ] [Thread-2 (]: 5 of 92 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m06:45:47.873121 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m06:45:47.874318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.874699 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m06:45:47.876057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m06:45:47.876607 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:45:47.896327 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:47.911143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m06:45:47.912836 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m06:45:47.920585 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.922888 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-07-01 06:45:47.793905 => 2024-07-01 06:45:47.922716
[0m06:45:47.924323 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa847b700>]}
[0m06:45:47.925328 [info ] [Thread-1 (]: 3 of 92 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.25s]
[0m06:45:47.926257 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:45:47.926990 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:45:47.928210 [info ] [Thread-1 (]: 6 of 92 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m06:45:47.930098 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m06:45:47.930450 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m06:45:47.930686 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:45:47.940004 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m06:45:47.942090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:47.948915 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:47.958013 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:47.981453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:47.996604 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:47.998440 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m06:45:48.001589 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-07-01 06:45:47.878140 => 2024-07-01 06:45:48.001355
[0m06:45:48.002213 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:45:48.013211 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m06:45:48.014324 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.033118 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
)

)
  )...
[0m06:45:48.046727 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m06:45:48.048966 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-07-01 06:45:47.930812 => 2024-07-01 06:45:48.048708
[0m06:45:48.049525 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:45:48.057485 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m06:45:48.058973 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m06:45:48.076189 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:48.085386 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m06:45:48.092522 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.094100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m06:45:48.100952 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.104965 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m06:45:48.110039 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:48.111362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m06:45:48.117135 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.122061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m06:45:48.126187 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:48.132883 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m06:45:48.134505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.137587 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-07-01 06:45:48.002610 => 2024-07-01 06:45:48.137478
[0m06:45:48.139083 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8603220>]}
[0m06:45:48.140328 [info ] [Thread-2 (]: 5 of 92 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.27s]
[0m06:45:48.141005 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:45:48.141391 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:45:48.143109 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.141959 [info ] [Thread-2 (]: 7 of 92 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m06:45:48.145443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m06:45:48.146619 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m06:45:48.148563 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m06:45:48.149424 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:45:48.160349 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.172817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m06:45:48.173678 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m06:45:48.179863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.181955 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m06:45:48.189193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.198181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m06:45:48.208514 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.210184 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-07-01 06:45:48.049713 => 2024-07-01 06:45:48.210095
[0m06:45:48.211569 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8ef4280>]}
[0m06:45:48.212793 [info ] [Thread-1 (]: 6 of 92 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.28s]
[0m06:45:48.213306 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:45:48.213746 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:45:48.214589 [info ] [Thread-1 (]: 8 of 92 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m06:45:48.216149 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:48.217729 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m06:45:48.222376 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.223034 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m06:45:48.225042 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:45:48.231251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m06:45:48.239793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.265219 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m06:45:48.266280 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:48.271932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.273557 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-07-01 06:45:48.149694 => 2024-07-01 06:45:48.273369
[0m06:45:48.274600 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:45:48.284301 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m06:45:48.285602 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m06:45:48.288559 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.313503 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m06:45:48.314664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:48.321787 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m06:45:48.323220 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-07-01 06:45:48.225727 => 2024-07-01 06:45:48.323017
[0m06:45:48.324020 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:45:48.330256 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m06:45:48.331355 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.333319 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m06:45:48.334901 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m06:45:48.339071 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.343508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m06:45:48.352518 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.354064 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m06:45:48.362219 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.367668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m06:45:48.374602 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.376510 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-07-01 06:45:48.275521 => 2024-07-01 06:45:48.376410
[0m06:45:48.377410 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8377a00>]}
[0m06:45:48.378154 [info ] [Thread-2 (]: 7 of 92 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.23s]
[0m06:45:48.378736 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:45:48.379310 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:45:48.380545 [info ] [Thread-2 (]: 9 of 92 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m06:45:48.381676 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m06:45:48.382031 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m06:45:48.382269 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:45:48.395776 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m06:45:48.401374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:48.407657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m06:45:48.410167 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.419295 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.420920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.422994 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m06:45:48.431206 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.435840 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m06:45:48.437530 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.449391 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.454898 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m06:45:48.458022 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m06:45:48.460857 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-07-01 06:45:48.382400 => 2024-07-01 06:45:48.460643
[0m06:45:48.461426 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:45:48.468138 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m06:45:48.468998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.484449 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m06:45:48.485031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m06:45:48.491184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.492932 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-07-01 06:45:48.324286 => 2024-07-01 06:45:48.492836
[0m06:45:48.493757 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8ef4310>]}
[0m06:45:48.494632 [info ] [Thread-1 (]: 8 of 92 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.28s]
[0m06:45:48.495249 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:45:48.495673 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:45:48.496546 [info ] [Thread-1 (]: 10 of 92 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m06:45:48.497919 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m06:45:48.498527 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m06:45:48.498898 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:45:48.506036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m06:45:48.522860 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:48.530279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.531832 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m06:45:48.625890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.632857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.634427 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m06:45:48.638326 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.644707 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m06:45:48.645481 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.649351 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m06:45:48.650961 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-07-01 06:45:48.499068 => 2024-07-01 06:45:48.650800
[0m06:45:48.651358 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:45:48.656246 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m06:45:48.657379 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m06:45:48.659096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.660390 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m06:45:48.663976 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:48.668539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m06:45:48.673889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:48.675484 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-07-01 06:45:48.461652 => 2024-07-01 06:45:48.675414
[0m06:45:48.676201 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83fb610>]}
[0m06:45:48.676743 [info ] [Thread-2 (]: 9 of 92 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.29s]
[0m06:45:48.677212 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:45:48.677628 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:45:48.678622 [info ] [Thread-2 (]: 11 of 92 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m06:45:48.679988 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.680825 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m06:45:48.684639 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m06:45:48.685083 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m06:45:48.686458 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:45:48.693644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m06:45:48.695897 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.697536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m06:45:48.708739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.715454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m06:45:48.716938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.721281 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.723378 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.725767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m06:45:48.729665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.741258 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.751452 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m06:45:48.780339 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.781861 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-07-01 06:45:48.651550 => 2024-07-01 06:45:48.781775
[0m06:45:48.793344 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa82c9b10>]}
[0m06:45:48.803459 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m06:45:48.804451 [info ] [Thread-1 (]: 10 of 92 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.30s]
[0m06:45:48.805877 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:45:48.806560 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:45:48.807178 [info ] [Thread-1 (]: 12 of 92 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m06:45:48.809093 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m06:45:48.809600 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m06:45:48.809914 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:45:48.814964 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m06:45:48.816750 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-07-01 06:45:48.686772 => 2024-07-01 06:45:48.816580
[0m06:45:48.817211 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:45:48.825338 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m06:45:48.826418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM test.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m06:45:48.836793 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.841327 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.850453 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.858737 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m06:45:48.859528 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-07-01 06:45:48.810087 => 2024-07-01 06:45:48.859347
[0m06:45:48.859890 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:45:48.864956 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m06:45:48.865702 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m06:45:48.869296 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:48.873056 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m06:45:48.877011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:48.878257 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m06:45:48.882419 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.885780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m06:45:48.886632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.892505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m06:45:48.893332 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.895745 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m06:45:48.898585 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:48.899810 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m06:45:48.900520 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:48.905659 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m06:45:48.907504 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.912339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m06:45:48.913366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.916595 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m06:45:48.920240 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.921687 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-07-01 06:45:48.817461 => 2024-07-01 06:45:48.921537
[0m06:45:48.922623 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8278610>]}
[0m06:45:48.923423 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.924209 [info ] [Thread-2 (]: 11 of 92 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.24s]
[0m06:45:48.928896 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m06:45:48.929611 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:45:48.931304 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:45:48.932459 [info ] [Thread-2 (]: 13 of 92 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m06:45:48.933912 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m06:45:48.934389 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m06:45:48.934685 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:45:48.939343 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m06:45:48.940999 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.943688 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-07-01 06:45:48.860011 => 2024-07-01 06:45:48.943518
[0m06:45:48.947283 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa848c250>]}
[0m06:45:48.948636 [info ] [Thread-1 (]: 12 of 92 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.14s]
[0m06:45:48.949377 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:45:48.950009 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:45:48.951005 [info ] [Thread-1 (]: 14 of 92 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m06:45:48.952690 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m06:45:48.953007 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m06:45:48.953218 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:45:48.959363 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m06:45:48.961926 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:48.969254 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.973570 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.978238 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:48.980043 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.988417 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m06:45:48.989985 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:48.997239 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m06:45:48.997856 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-07-01 06:45:48.934850 => 2024-07-01 06:45:48.997559
[0m06:45:48.998776 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:45:49.004961 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m06:45:49.006227 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-07-01 06:45:48.953326 => 2024-07-01 06:45:49.006026
[0m06:45:49.007365 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:45:49.008275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m06:45:49.013580 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m06:45:49.016356 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m06:45:49.030252 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.033696 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m06:45:49.034692 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.040510 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m06:45:49.043835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.045068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m06:45:49.045801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:49.048589 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m06:45:49.051167 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.055865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m06:45:49.056703 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.061677 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m06:45:49.063041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.064869 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m06:45:49.069015 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.070832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m06:45:49.071907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.078599 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m06:45:49.080312 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.086052 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m06:45:49.087253 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.090205 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-07-01 06:45:48.998977 => 2024-07-01 06:45:49.090083
[0m06:45:49.091466 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85eff70>]}
[0m06:45:49.092761 [info ] [Thread-2 (]: 13 of 92 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.16s]
[0m06:45:49.094303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.095180 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:45:49.096974 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-07-01 06:45:49.008768 => 2024-07-01 06:45:49.096840
[0m06:45:49.098007 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:45:49.099474 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa848d540>]}
[0m06:45:49.101302 [info ] [Thread-2 (]: 15 of 92 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m06:45:49.102718 [info ] [Thread-1 (]: 14 of 92 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.15s]
[0m06:45:49.104187 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m06:45:49.104885 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:45:49.105352 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m06:45:49.106158 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:45:49.107264 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:45:49.108064 [info ] [Thread-1 (]: 16 of 92 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m06:45:49.116392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m06:45:49.117401 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m06:45:49.119022 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m06:45:49.119713 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:45:49.126764 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m06:45:49.130297 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.139237 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.140717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.149153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.151451 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.160485 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m06:45:49.162043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.177728 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m06:45:49.178785 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-07-01 06:45:49.108725 => 2024-07-01 06:45:49.178425
[0m06:45:49.180556 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:45:49.194856 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m06:45:49.195508 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-07-01 06:45:49.119980 => 2024-07-01 06:45:49.195300
[0m06:45:49.196708 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:45:49.205493 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m06:45:49.206656 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m06:45:49.207384 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m06:45:49.223561 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.229410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m06:45:49.230457 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.263026 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m06:45:49.265907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:49.268206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m06:45:49.269491 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.273553 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m06:45:49.277107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.284669 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m06:45:49.285625 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.292805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m06:45:49.293683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.296620 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m06:45:49.299326 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.300721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m06:45:49.301700 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:49.310374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.310932 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m06:45:49.316471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m06:45:49.325075 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.327411 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-07-01 06:45:49.181635 => 2024-07-01 06:45:49.327297
[0m06:45:49.328945 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8278340>]}
[0m06:45:49.329874 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.331007 [info ] [Thread-2 (]: 15 of 92 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.23s]
[0m06:45:49.333633 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-07-01 06:45:49.197283 => 2024-07-01 06:45:49.333529
[0m06:45:49.334432 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:45:49.335695 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8ebf760>]}
[0m06:45:49.336620 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:45:49.338358 [info ] [Thread-1 (]: 16 of 92 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.22s]
[0m06:45:49.340263 [info ] [Thread-2 (]: 17 of 92 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m06:45:49.341741 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:45:49.343073 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m06:45:49.344075 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:45:49.345043 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m06:45:49.346186 [info ] [Thread-1 (]: 18 of 92 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m06:45:49.347379 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:45:49.353187 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m06:45:49.360882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m06:45:49.361363 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m06:45:49.363274 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:45:49.373144 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m06:45:49.380357 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.385970 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.393434 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.398860 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.399741 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.417619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.437130 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m06:45:49.459602 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m06:45:49.464735 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-01 06:45:49.353813 => 2024-07-01 06:45:49.464527
[0m06:45:49.465324 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:45:49.470935 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m06:45:49.471945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m06:45:49.474979 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-07-01 06:45:49.363865 => 2024-07-01 06:45:49.474759
[0m06:45:49.475589 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:45:49.482605 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m06:45:49.483376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m06:45:49.490014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.496464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m06:45:49.501519 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:49.503298 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m06:45:49.506589 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.510748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m06:45:49.511742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.517740 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m06:45:49.519178 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.522506 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m06:45:49.524855 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.526480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m06:45:49.528335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.532610 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m06:45:49.539510 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.545918 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.545177 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m06:45:49.547962 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m06:45:49.553731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.556052 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-01 06:45:49.465508 => 2024-07-01 06:45:49.555959
[0m06:45:49.557158 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa82b8730>]}
[0m06:45:49.558252 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.559226 [info ] [Thread-2 (]: 17 of 92 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.21s]
[0m06:45:49.572077 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m06:45:49.573080 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:45:49.575840 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:45:49.576479 [info ] [Thread-2 (]: 19 of 92 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m06:45:49.578962 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m06:45:49.579377 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m06:45:49.579608 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:45:49.587595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m06:45:49.588940 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.592284 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-07-01 06:45:49.475768 => 2024-07-01 06:45:49.592188
[0m06:45:49.593496 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa813c310>]}
[0m06:45:49.594781 [info ] [Thread-1 (]: 18 of 92 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.24s]
[0m06:45:49.595606 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:45:49.596108 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:45:49.598084 [info ] [Thread-1 (]: 20 of 92 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m06:45:49.599224 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m06:45:49.599566 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m06:45:49.599787 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:45:49.606871 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m06:45:49.609207 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.615593 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.624232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.625363 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.653298 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.658479 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m06:45:49.660031 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-07-01 06:45:49.579752 => 2024-07-01 06:45:49.659843
[0m06:45:49.660553 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:45:49.667918 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m06:45:49.669095 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.686051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m06:45:49.713771 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m06:45:49.715554 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.840994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m06:45:49.841601 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-07-01 06:45:49.599912 => 2024-07-01 06:45:49.841486
[0m06:45:49.843735 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:45:49.851923 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.852463 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m06:45:49.854256 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m06:45:49.856021 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m06:45:49.860581 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.864317 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m06:45:49.868804 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:49.870096 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m06:45:49.875934 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.881694 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m06:45:49.882426 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:49.887918 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m06:45:49.897249 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.898424 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.900872 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-07-01 06:45:49.660708 => 2024-07-01 06:45:49.900747
[0m06:45:49.902622 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m06:45:49.904098 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa81761d0>]}
[0m06:45:49.906110 [info ] [Thread-2 (]: 19 of 92 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.33s]
[0m06:45:49.907349 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:45:49.908119 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:45:49.909065 [info ] [Thread-2 (]: 21 of 92 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m06:45:49.910517 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m06:45:49.910958 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m06:45:49.911589 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.912005 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:45:49.915553 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m06:45:49.921934 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m06:45:49.925275 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-07-01 06:45:49.916014 => 2024-07-01 06:45:49.925062
[0m06:45:49.925815 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:45:49.938905 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.946627 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m06:45:49.970806 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:49.977206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.982675 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m06:45:49.992217 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.993125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:49.997704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:49.999812 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-07-01 06:45:49.844146 => 2024-07-01 06:45:49.999728
[0m06:45:50.003159 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85b2ef0>]}
[0m06:45:50.003833 [info ] [Thread-1 (]: 20 of 92 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.40s]
[0m06:45:50.004384 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:45:50.004876 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:45:50.007096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.006384 [info ] [Thread-1 (]: 22 of 92 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m06:45:50.013623 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m06:45:50.019222 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m06:45:50.018931 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:50.020123 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:45:50.040119 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:50.041339 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m06:45:50.043308 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-07-01 06:45:50.031445 => 2024-07-01 06:45:50.043104
[0m06:45:50.043884 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:45:50.052059 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.059553 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.084906 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
    )
        ...
[0m06:45:50.086672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:50.093400 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.106006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.110546 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:50.117035 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:50.122987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.128697 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
    )
        ...
[0m06:45:50.140926 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:50.149298 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.158889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.161471 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m06:45:50.164618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
  
      ...
[0m06:45:50.167638 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:50.173158 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.184611 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.187337 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m06:45:50.188868 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
  
      ...
[0m06:45:50.275328 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m06:45:50.276976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:50.307573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m06:45:50.309586 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:50.547609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.24 seconds
[0m06:45:50.551698 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.560285 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.562183 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:50.568943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.29 seconds
[0m06:45:50.572791 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.582212 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.584193 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:50.591757 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:50.598739 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:50.602319 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:50.606620 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:50.607674 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.613818 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m06:45:50.614629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.620086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m06:45:50.621853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.626298 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-07-01 06:45:50.044516 => 2024-07-01 06:45:50.626190
[0m06:45:50.627320 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85ee350>]}
[0m06:45:50.628366 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.629217 [info ] [Thread-1 (]: 22 of 92 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.61s]
[0m06:45:50.632346 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-07-01 06:45:49.926138 => 2024-07-01 06:45:50.632262
[0m06:45:50.633192 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:45:50.634382 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83644c0>]}
[0m06:45:50.635344 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:45:50.636601 [info ] [Thread-2 (]: 21 of 92 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.72s]
[0m06:45:50.638017 [info ] [Thread-1 (]: 23 of 92 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m06:45:50.639409 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:45:50.641570 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m06:45:50.642841 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:45:50.643698 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m06:45:50.644964 [info ] [Thread-2 (]: 24 of 92 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m06:45:50.645754 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:45:50.646710 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m06:45:50.652510 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m06:45:50.653224 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m06:45:50.653944 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:45:50.661211 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m06:45:50.662423 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-07-01 06:45:50.647446 => 2024-07-01 06:45:50.662220
[0m06:45:50.663126 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-07-01 06:45:50.654246 => 2024-07-01 06:45:50.662950
[0m06:45:50.663684 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:45:50.664281 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:45:50.686178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
    )
        ...
[0m06:45:50.696571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.715826 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:50.720689 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.732823 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:50.737312 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.738860 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:50.745438 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:50.750917 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:50.753304 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.757193 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m06:45:50.759087 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
  ...
[0m06:45:50.761212 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.765994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
    )
        ...
[0m06:45:50.809856 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:50.816587 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.820352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:50.828593 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m06:45:50.830948 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.833147 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m06:45:50.834071 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
  
      ...
[0m06:45:50.838882 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.845823 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m06:45:50.851858 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.853972 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-07-01 06:45:50.664746 => 2024-07-01 06:45:50.853859
[0m06:45:50.855056 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa82a3850>]}
[0m06:45:50.855950 [info ] [Thread-1 (]: 23 of 92 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.21s]
[0m06:45:50.856647 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:45:50.857529 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:45:50.859186 [info ] [Thread-1 (]: 25 of 92 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m06:45:50.861011 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m06:45:50.861457 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m06:45:50.861903 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:45:50.869256 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m06:45:50.871193 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-07-01 06:45:50.862119 => 2024-07-01 06:45:50.870954
[0m06:45:50.871979 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:45:50.883441 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.899434 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:50.904303 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.905664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:50.909539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:50.915449 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.919141 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:50.928415 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:50.934844 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.937823 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
    )
        ...
[0m06:45:50.971705 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:50.976657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:50.991976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:50.994045 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m06:45:50.994807 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
  
      ...
[0m06:45:51.052225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:51.053568 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:51.070287 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.16 seconds
[0m06:45:51.073749 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:51.087470 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.089944 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:51.120740 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:51.125969 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:51.131945 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.136433 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m06:45:51.142356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.144999 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-07-01 06:45:50.686656 => 2024-07-01 06:45:51.144903
[0m06:45:51.145799 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8365510>]}
[0m06:45:51.146266 [info ] [Thread-2 (]: 24 of 92 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.50s]
[0m06:45:51.147076 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:45:51.147493 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:45:51.148547 [info ] [Thread-2 (]: 26 of 92 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m06:45:51.149580 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m06:45:51.149874 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m06:45:51.150076 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:45:51.159598 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m06:45:51.162093 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-07-01 06:45:51.150195 => 2024-07-01 06:45:51.161866
[0m06:45:51.162683 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:45:51.170883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:51.186652 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:51.192436 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:51.198059 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:45:51.202251 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:51.204339 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.209779 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:51.214307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:51.215617 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.219364 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:51.220409 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:51.225725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
    )
        ...
[0m06:45:51.259494 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:51.265651 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:51.271663 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.276501 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m06:45:51.277463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:51.283144 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:51.284435 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.288313 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-07-01 06:45:50.872457 => 2024-07-01 06:45:51.288215
[0m06:45:51.289652 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85dfee0>]}
[0m06:45:51.297140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.299502 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m06:45:51.300441 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
  
      ...
[0m06:45:51.347318 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:51.349392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:51.555214 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.21 seconds
[0m06:45:51.560120 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:51.569123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.571473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:51.591730 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:51.595912 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:51.601482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:51.605577 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m06:45:51.610465 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:51.613375 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-07-01 06:45:51.162884 => 2024-07-01 06:45:51.613244
[0m06:45:51.614377 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa848d3c0>]}
[0m06:45:52.354578 [info ] [Thread-1 (]: 25 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.43s]
[0m06:45:52.356328 [info ] [Thread-2 (]: 26 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.47s]
[0m06:45:52.358043 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:45:52.359421 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:45:52.360457 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:45:52.362892 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:45:52.364297 [info ] [Thread-1 (]: 27 of 92 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m06:45:52.365661 [info ] [Thread-2 (]: 28 of 92 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m06:45:52.368018 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m06:45:52.369143 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m06:45:52.369802 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m06:45:52.370518 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m06:45:52.371609 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:45:52.372796 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:45:52.396226 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m06:45:52.406826 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m06:45:52.409635 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-07-01 06:45:52.373446 => 2024-07-01 06:45:52.409327
[0m06:45:52.410810 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-07-01 06:45:52.397306 => 2024-07-01 06:45:52.410626
[0m06:45:52.411479 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:45:52.412851 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:45:52.433061 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.442267 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.457491 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.466215 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.468505 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:52.475934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.483320 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:52.490579 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:52.492115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:52.498529 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:52.503906 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_installations:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:52.513625 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:52.516154 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.522722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
    )
        ...
[0m06:45:52.525747 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.530507 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
    )
        ...
[0m06:45:52.566952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:52.573518 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.575624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:52.581477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.586395 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.589060 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m06:45:52.590626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
  
      ...
[0m06:45:52.593506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.595913 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m06:45:52.598144 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
  
      ...
[0m06:45:52.631749 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:52.633328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

      delete from test.incremental_appmetrica_events_default_installations where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:52.713348 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m06:45:52.715113 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:52.768261 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m06:45:52.776002 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.785647 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.788172 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        insert into test.incremental_appmetrica_events_default_installations select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:52.808211 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:45:52.813200 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.816102 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:52.820437 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:52.822170 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.824793 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:52.827135 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.831861 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_distributed_new_data 
  ...
[0m06:45:52.838399 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.841050 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-07-01 06:45:52.413640 => 2024-07-01 06:45:52.840968
[0m06:45:52.841883 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa918ca00>]}
[0m06:45:52.842540 [info ] [Thread-1 (]: 27 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.47s]
[0m06:45:52.843101 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:45:52.843762 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:45:52.844852 [info ] [Thread-1 (]: 29 of 92 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m06:45:52.847307 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m06:45:52.847814 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m06:45:52.848071 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:45:52.854175 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m06:45:52.855492 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:52.860035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:52.862145 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-07-01 06:45:52.848195 => 2024-07-01 06:45:52.861910
[0m06:45:52.862817 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:45:52.872122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.875876 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.881180 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m06:45:52.886687 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:52.889628 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-07-01 06:45:52.424410 => 2024-07-01 06:45:52.889547
[0m06:45:52.890507 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8367790>]}
[0m06:45:52.891223 [info ] [Thread-2 (]: 28 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.52s]
[0m06:45:52.891878 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:45:52.892421 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:45:52.893469 [info ] [Thread-2 (]: 30 of 92 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m06:45:52.894826 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.896150 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m06:45:52.900780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:52.901375 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m06:45:52.903281 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:45:52.912583 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m06:45:52.913570 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:52.917370 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:52.921458 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:52.923306 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-07-01 06:45:52.904093 => 2024-07-01 06:45:52.923098
[0m06:45:52.923953 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:45:53.119750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.20 seconds
[0m06:45:53.128400 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
    )
        ...
[0m06:45:53.129453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
    )
        ...
[0m06:45:53.157559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.162054 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.164025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.168268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.170945 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.172945 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m06:45:53.173907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
  ...
[0m06:45:53.176013 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.178490 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m06:45:53.179354 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
  
      ...
[0m06:45:53.195549 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.197265 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m06:45:53.210711 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.216615 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m06:45:53.217725 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:53.220420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:53.224104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.225945 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-07-01 06:45:52.924354 => 2024-07-01 06:45:53.225846
[0m06:45:53.226953 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83f79d0>]}
[0m06:45:53.227550 [info ] [Thread-2 (]: 30 of 92 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.33s]
[0m06:45:53.228339 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:45:53.229127 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:45:53.231267 [info ] [Thread-2 (]: 31 of 92 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m06:45:53.232614 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m06:45:53.232993 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m06:45:53.233219 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:45:53.241468 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m06:45:53.242533 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-07-01 06:45:53.233462 => 2024-07-01 06:45:53.242323
[0m06:45:53.243043 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:45:53.258832 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.276200 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.284968 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.294857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.313966 [debug] [Thread-2 (]: 
    In test.incremental_calltouch_events_default_calls:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:53.317423 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:53.322237 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:53.325257 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
    )
        ...
[0m06:45:53.337241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.12 seconds
[0m06:45:53.340957 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.351521 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.353812 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:53.379491 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.384841 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:53.387068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:53.394619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.395314 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.401021 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m06:45:53.407745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.410860 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-07-01 06:45:52.863126 => 2024-07-01 06:45:53.410772
[0m06:45:53.411942 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.413221 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83c9d50>]}
[0m06:45:53.416529 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m06:45:53.417915 [info ] [Thread-1 (]: 29 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.57s]
[0m06:45:53.419541 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:45:53.420395 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:45:53.422197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
  
      ...
[0m06:45:53.421701 [info ] [Thread-1 (]: 32 of 92 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m06:45:53.425681 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m06:45:53.426402 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m06:45:53.426726 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:45:53.432838 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m06:45:53.435459 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-07-01 06:45:53.426916 => 2024-07-01 06:45:53.435266
[0m06:45:53.435948 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:45:53.445777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.456037 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.461578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.467557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.470475 [debug] [Thread-1 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:53.477131 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:53.482418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:53.485499 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
    )
        ...
[0m06:45:53.500443 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:45:53.501852 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

      delete from test.incremental_calltouch_events_default_calls where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:53.514130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.519030 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.528026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.530129 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m06:45:53.530815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
  
      ...
[0m06:45:53.549213 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.550601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:53.607603 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:53.611721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.618214 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.621076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:53.639234 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.643965 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:53.649762 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m06:45:53.650696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.654403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.659195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m06:45:53.664158 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:53.667007 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-07-01 06:45:53.436106 => 2024-07-01 06:45:53.666921
[0m06:45:53.667937 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa84ed9c0>]}
[0m06:45:53.668957 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.669944 [info ] [Thread-1 (]: 32 of 92 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.24s]
[0m06:45:53.673931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        insert into test.incremental_calltouch_events_default_calls select "__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:53.674803 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:45:53.677095 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:45:53.678253 [info ] [Thread-1 (]: 33 of 92 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m06:45:53.679339 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m06:45:53.679710 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m06:45:53.679938 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:45:53.688838 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m06:45:53.690189 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-07-01 06:45:53.680085 => 2024-07-01 06:45:53.689875
[0m06:45:53.691131 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:45:53.702243 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
    )
        ...
[0m06:45:53.732784 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.736581 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.746102 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:53.750761 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:53.752614 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.755248 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m06:45:53.756505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.761717 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_distributed_new_data 
  ...
[0m06:45:53.763857 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
  ...
[0m06:45:53.767681 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.770716 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-07-01 06:45:53.243369 => 2024-07-01 06:45:53.770612
[0m06:45:53.771738 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa82cb730>]}
[0m06:45:53.772376 [info ] [Thread-2 (]: 31 of 92 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.54s]
[0m06:45:53.772909 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:45:53.773364 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:45:53.774096 [info ] [Thread-2 (]: 34 of 92 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m06:45:53.775478 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m06:45:53.775895 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m06:45:53.776139 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:45:53.782165 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m06:45:53.783565 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-07-01 06:45:53.776274 => 2024-07-01 06:45:53.783346
[0m06:45:53.784134 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:45:53.794335 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
    )
        ...
[0m06:45:53.796187 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.799499 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m06:45:53.817440 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.825924 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m06:45:53.827788 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.834186 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.839299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.842324 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-07-01 06:45:53.691494 => 2024-07-01 06:45:53.842098
[0m06:45:53.843771 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8448ca0>]}
[0m06:45:53.844978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.846141 [info ] [Thread-1 (]: 33 of 92 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.16s]
[0m06:45:53.849667 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m06:45:53.850405 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:45:53.851714 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:45:53.852323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
  ...
[0m06:45:53.853717 [info ] [Thread-1 (]: 35 of 92 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m06:45:53.858476 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m06:45:53.859263 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m06:45:53.860140 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:45:53.865786 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m06:45:53.866502 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-07-01 06:45:53.860566 => 2024-07-01 06:45:53.866368
[0m06:45:53.866997 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:45:53.874248 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
    )
        ...
[0m06:45:53.881429 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.883712 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m06:45:53.895140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.902053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m06:45:53.904932 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.912679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.913640 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.916844 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-07-01 06:45:53.784376 => 2024-07-01 06:45:53.916744
[0m06:45:53.918332 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83e3700>]}
[0m06:45:53.919088 [info ] [Thread-2 (]: 34 of 92 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.14s]
[0m06:45:53.919813 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:45:53.920551 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:45:53.924217 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.922703 [info ] [Thread-2 (]: 36 of 92 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m06:45:53.927297 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m06:45:53.928522 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m06:45:53.929454 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m06:45:53.930004 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:45:53.936911 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m06:45:53.938377 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
  ...
[0m06:45:53.939090 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-07-01 06:45:53.930374 => 2024-07-01 06:45:53.938932
[0m06:45:53.941050 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:45:53.949680 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
    )
        ...
[0m06:45:53.964946 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:53.967169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m06:45:53.975011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.982163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:53.983539 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:53.992812 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m06:45:53.997448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:53.999940 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m06:45:54.000923 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.003485 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-07-01 06:45:53.867254 => 2024-07-01 06:45:54.003376
[0m06:45:54.005214 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa852b9a0>]}
[0m06:45:54.006093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
  ...
[0m06:45:54.007324 [info ] [Thread-1 (]: 35 of 92 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.15s]
[0m06:45:54.010045 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:45:54.010996 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:45:54.012113 [info ] [Thread-1 (]: 37 of 92 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m06:45:54.014609 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m06:45:54.015441 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m06:45:54.016179 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:45:54.025925 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m06:45:54.026745 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-01 06:45:54.016668 => 2024-07-01 06:45:54.026590
[0m06:45:54.027120 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:45:54.047503 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.048724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:54.052311 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m06:45:54.058165 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.065295 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.066482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.075837 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m06:45:54.078184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.083120 [debug] [Thread-1 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:54.084423 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.088514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:54.090893 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-07-01 06:45:53.941696 => 2024-07-01 06:45:54.090793
[0m06:45:54.094230 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83e1810>]}
[0m06:45:54.095074 [info ] [Thread-2 (]: 36 of 92 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.17s]
[0m06:45:54.095816 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:45:54.096452 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:45:54.097620 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.098427 [info ] [Thread-2 (]: 38 of 92 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m06:45:54.102881 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    )
        ...
[0m06:45:54.104797 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m06:45:54.107188 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m06:45:54.108042 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:45:54.117327 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m06:45:54.118243 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-07-01 06:45:54.108771 => 2024-07-01 06:45:54.118090
[0m06:45:54.118749 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:45:54.129356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
    )
        ...
[0m06:45:54.140598 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.145654 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.154357 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.157131 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m06:45:54.158198 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
  
      ...
[0m06:45:54.167975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:54.173750 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.185828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.188452 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m06:45:54.189399 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.191265 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:54.192540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
  ...
[0m06:45:54.234424 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:54.236133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m06:45:54.246742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.251850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m06:45:54.256674 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:54.258472 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-07-01 06:45:54.118975 => 2024-07-01 06:45:54.258388
[0m06:45:54.259256 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8177340>]}
[0m06:45:54.259811 [info ] [Thread-2 (]: 38 of 92 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.16s]
[0m06:45:54.260309 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:45:54.260706 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:45:54.261553 [info ] [Thread-2 (]: 39 of 92 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m06:45:54.262595 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m06:45:54.262980 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m06:45:54.263233 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:45:54.268598 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m06:45:54.269510 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-07-01 06:45:54.263363 => 2024-07-01 06:45:54.269349
[0m06:45:54.269930 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:45:54.280196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.294772 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.300228 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.302089 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m06:45:54.306532 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.309080 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.312625 [debug] [Thread-2 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:54.317266 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:54.318370 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.321642 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:54.324837 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.328713 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
    )
        ...
[0m06:45:54.347994 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.351976 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:54.358214 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.364903 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m06:45:54.366030 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:54.373095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.374112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.378891 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-01 06:45:54.027264 => 2024-07-01 06:45:54.378784
[0m06:45:54.380432 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83e0fa0>]}
[0m06:45:54.381240 [info ] [Thread-1 (]: 37 of 92 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.37s]
[0m06:45:54.381889 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:45:54.382959 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.383678 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:45:54.386881 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m06:45:54.388097 [info ] [Thread-1 (]: 40 of 92 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m06:45:54.389978 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m06:45:54.390808 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m06:45:54.391413 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:45:54.392100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
  
      ...
[0m06:45:54.398186 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m06:45:54.401690 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-07-01 06:45:54.392465 => 2024-07-01 06:45:54.401421
[0m06:45:54.402288 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:45:54.413224 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.432437 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.439015 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.440664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:54.443887 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:54.448779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.454730 [debug] [Thread-1 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:54.463153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:54.468924 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.472407 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
    )
        ...
[0m06:45:54.495665 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.503667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.513766 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.516598 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m06:45:54.518073 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:54.523276 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.525480 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
  
      ...
[0m06:45:54.532474 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.535268 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:54.554907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.560024 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:54.560987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.563763 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:54.565431 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:54.571565 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m06:45:54.577631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.580466 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-07-01 06:45:54.270088 => 2024-07-01 06:45:54.580383
[0m06:45:54.581431 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa824c7f0>]}
[0m06:45:54.582246 [info ] [Thread-2 (]: 39 of 92 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.32s]
[0m06:45:54.583190 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:45:54.584393 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:45:54.585991 [info ] [Thread-2 (]: 41 of 92 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m06:45:54.589115 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m06:45:54.590078 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m06:45:54.590979 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:45:54.602028 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m06:45:54.618295 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.664536 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.674239 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.686674 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m06:45:54.688803 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-07-01 06:45:54.591580 => 2024-07-01 06:45:54.688517
[0m06:45:54.689387 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:45:54.696824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



    )
        ...
[0m06:45:54.708212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:45:54.712270 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.723461 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.727015 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:54.731779 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.736741 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.745615 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.747909 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m06:45:54.749652 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



  ...
[0m06:45:54.756409 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.761185 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:54.766993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.775667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m06:45:54.776808 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:54.779945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m06:45:54.784874 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.788263 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-07-01 06:45:54.402568 => 2024-07-01 06:45:54.788128
[0m06:45:54.789787 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa84c96f0>]}
[0m06:45:54.790791 [info ] [Thread-1 (]: 40 of 92 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.40s]
[0m06:45:54.791540 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:45:54.792129 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:45:54.793324 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.794838 [info ] [Thread-1 (]: 42 of 92 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m06:45:54.803910 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m06:45:54.806117 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m06:45:54.809779 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m06:45:54.810858 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:45:54.818771 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m06:45:54.821300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.826847 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-07-01 06:45:54.689597 => 2024-07-01 06:45:54.826641
[0m06:45:54.828805 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feabcee73d0>]}
[0m06:45:54.829915 [info ] [Thread-2 (]: 41 of 92 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.24s]
[0m06:45:54.830981 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:45:54.831973 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m06:45:54.833580 [info ] [Thread-2 (]: 43 of 92 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m06:45:54.835146 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m06:45:54.835817 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m06:45:54.836341 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m06:45:54.837563 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.848343 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m06:45:54.855365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.871373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.881417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.894840 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m06:45:54.900480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.911127 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.915603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m06:45:54.918043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.928345 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.931157 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.936853 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.939254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.946531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m06:45:54.947513 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.955089 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m06:45:54.957378 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.962437 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.964857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.970909 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:54.972601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:54.997479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:54.998536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m06:45:55.035288 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m06:45:55.041510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:55.051692 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.054169 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:55.065637 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:45:55.066680 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.083919 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m06:45:55.096152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.298031 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.301497 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.23 seconds
[0m06:45:55.313139 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m06:45:55.314600 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.321458 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m06:45:55.322619 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-07-01 06:45:54.838612 => 2024-07-01 06:45:55.322376
[0m06:45:55.323404 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m06:45:55.335613 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-07-01 06:45:54.811208 => 2024-07-01 06:45:55.335426
[0m06:45:55.336935 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.337738 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:45:55.348886 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.350228 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.357439 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.361624 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.368892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.371103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.376351 [debug] [Thread-2 (]: 
    In test.join_mt_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:55.380953 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:55.423384 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:55.432992 [debug] [Thread-1 (]: 
    In test.join_appmetrica_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:55.433876 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:55.438010 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:55.441041 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



    )
        ...
[0m06:45:55.446154 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:55.449476 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



    )
        ...
[0m06:45:55.532471 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:45:55.537244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.545889 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.548438 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m06:45:55.550554 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



  
      ...
[0m06:45:55.639033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:45:55.641006 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

      delete from test.join_mt_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:55.700287 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:55.706202 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.715973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.719204 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        insert into test.join_mt_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:55.737561 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:55.743673 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:55.749287 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.753760 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_distributed_new_data 
  ...
[0m06:45:55.758344 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:55.762203 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-07-01 06:45:55.324042 => 2024-07-01 06:45:55.762104
[0m06:45:55.763286 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa84f45e0>]}
[0m06:45:55.764157 [info ] [Thread-2 (]: 43 of 92 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.93s]
[0m06:45:55.764859 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m06:45:55.765550 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:45:55.766480 [info ] [Thread-2 (]: 44 of 92 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m06:45:55.767609 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m06:45:55.768113 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m06:45:55.768379 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:45:55.774558 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m06:45:55.796119 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:55.805785 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.816753 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.821349 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m06:45:55.823619 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-07-01 06:45:55.768512 => 2024-07-01 06:45:55.823273
[0m06:45:55.824707 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:45:55.833797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



    )
        ...
[0m06:45:55.868478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:55.874566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.883199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.886269 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m06:45:55.887951 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



  ...
[0m06:45:55.895725 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.45 seconds
[0m06:45:55.902780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.906747 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:55.908827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m06:45:55.913150 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.915925 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m06:45:55.916799 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



  
      ...
[0m06:45:55.920316 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.926709 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m06:45:55.933027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.935031 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-07-01 06:45:55.825491 => 2024-07-01 06:45:55.934937
[0m06:45:55.936061 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8453250>]}
[0m06:45:55.936865 [info ] [Thread-2 (]: 44 of 92 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.17s]
[0m06:45:55.937706 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:45:55.938422 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:45:55.939776 [info ] [Thread-2 (]: 45 of 92 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m06:45:55.941346 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m06:45:55.941758 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m06:45:55.942091 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:45:55.948658 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m06:45:55.959760 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.965935 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:55.978455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:55.982577 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m06:45:55.983346 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-07-01 06:45:55.942336 => 2024-07-01 06:45:55.983203
[0m06:45:55.983807 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:45:55.991331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



    )
        ...
[0m06:45:56.039420 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:56.043707 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.052362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.057831 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m06:45:56.058819 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



  ...
[0m06:45:56.093929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:56.095782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m06:45:56.105113 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.111410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m06:45:56.118362 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.120211 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-07-01 06:45:55.984003 => 2024-07-01 06:45:56.120099
[0m06:45:56.121181 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8241bd0>]}
[0m06:45:56.121971 [info ] [Thread-2 (]: 45 of 92 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.18s]
[0m06:45:56.122607 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:45:56.123090 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:45:56.124319 [info ] [Thread-2 (]: 46 of 92 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m06:45:56.125723 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m06:45:56.126178 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m06:45:56.126497 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:45:56.133288 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m06:45:56.145368 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.150772 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.159121 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.164274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m06:45:56.174511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.180212 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.187130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.191901 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m06:45:56.201686 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.204757 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:45:56.232023 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:56.234283 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m06:45:56.236468 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-07-01 06:45:56.126682 => 2024-07-01 06:45:56.236164
[0m06:45:56.237154 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:45:56.251651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.263107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.268417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.277461 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.281470 [debug] [Thread-2 (]: 
    In test.join_vkads_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:56.285500 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:56.292749 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.296484 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



    )
        ...
[0m06:45:56.356717 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:56.361795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.369600 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.372464 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m06:45:56.373313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



  
      ...
[0m06:45:56.430521 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:56.432332 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

      delete from test.join_vkads_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:56.484921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:56.489047 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.497410 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.499718 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        insert into test.join_vkads_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link" from test.join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:56.515775 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:56.519627 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:56.526035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.532494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_distributed_new_data 
  ...
[0m06:45:56.537247 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:56.541054 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-07-01 06:45:56.237421 => 2024-07-01 06:45:56.540960
[0m06:45:56.542026 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8417850>]}
[0m06:45:56.542682 [info ] [Thread-2 (]: 46 of 92 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.42s]
[0m06:45:56.543378 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:45:56.543900 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m06:45:56.544889 [info ] [Thread-2 (]: 47 of 92 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m06:45:56.545909 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m06:45:56.546339 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m06:45:56.546598 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m06:45:56.551661 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m06:45:56.572369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:56.579906 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.591608 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.599618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m06:45:56.612107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.615139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:45:56.642805 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:56.647061 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m06:45:56.647872 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-07-01 06:45:56.546742 => 2024-07-01 06:45:56.647697
[0m06:45:56.648299 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m06:45:56.656453 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.668546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.673159 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.682062 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.686804 [debug] [Thread-2 (]: 
    In test.join_yd_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:56.693765 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:56.701371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.704497 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



    )
        ...
[0m06:45:56.733855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.82 seconds
[0m06:45:56.735403 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

      delete from test.join_appmetrica_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:56.771416 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:56.776104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.784055 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.786118 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m06:45:56.786966 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



  
      ...
[0m06:45:56.817578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:56.819323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

      delete from test.join_yd_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:56.850472 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m06:45:56.854585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.862876 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.865648 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        insert into test.join_appmetrica_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link" from test.join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:56.886208 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:45:56.889600 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.891456 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:56.895600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:56.901405 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.902344 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.904864 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        insert into test.join_yd_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:56.911390 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_distributed_new_data 
  ...
[0m06:45:56.917480 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:56.920296 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-07-01 06:45:55.339572 => 2024-07-01 06:45:56.920214
[0m06:45:56.921077 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa82d0eb0>]}
[0m06:45:56.921697 [info ] [Thread-1 (]: 42 of 92 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 2.12s]
[0m06:45:56.922335 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:45:56.922830 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m06:45:56.923730 [info ] [Thread-1 (]: 48 of 92 START sql incremental model test.join_ym_events ....................... [RUN]
[0m06:45:56.924759 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m06:45:56.925018 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m06:45:56.925249 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m06:45:56.933947 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m06:45:56.936271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:56.943174 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:56.947612 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.953122 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:56.954748 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.964231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_distributed_new_data 
  ...
[0m06:45:56.967838 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.976419 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:56.985223 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m06:45:56.991075 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-07-01 06:45:56.648445 => 2024-07-01 06:45:56.990849
[0m06:45:56.996054 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8415e40>]}
[0m06:45:56.997560 [info ] [Thread-2 (]: 47 of 92 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.45s]
[0m06:45:56.999010 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m06:45:57.001069 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:45:57.005007 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.006879 [info ] [Thread-2 (]: 49 of 92 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m06:45:57.014282 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:45:57.016507 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m06:45:57.023461 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m06:45:57.024879 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:45:57.041206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m06:45:57.060972 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:57.077520 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.078778 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:57.085187 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m06:45:57.087310 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-07-01 06:45:56.925431 => 2024-07-01 06:45:57.087030
[0m06:45:57.088486 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m06:45:57.106290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:57.107948 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.112110 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m06:45:57.128024 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-07-01 06:45:57.025645 => 2024-07-01 06:45:57.127681
[0m06:45:57.128999 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:45:57.140541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

    )
        ...
[0m06:45:57.141949 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:57.153538 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.169279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.182036 [debug] [Thread-1 (]: 
    In test.join_ym_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:57.183562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:57.189645 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:57.197687 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.203431 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:57.206831 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



    )
        ...
[0m06:45:57.208162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.211573 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m06:45:57.212580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

  ...
[0m06:45:57.235229 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:57.238191 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m06:45:57.250463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.257280 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m06:45:57.264905 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.267057 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-07-01 06:45:57.129533 => 2024-07-01 06:45:57.266884
[0m06:45:57.268111 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa827eb00>]}
[0m06:45:57.268858 [info ] [Thread-2 (]: 49 of 92 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.25s]
[0m06:45:57.269496 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:45:57.270126 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m06:45:57.272405 [info ] [Thread-2 (]: 50 of 92 START sql table model test.combine_periodstat ......................... [RUN]
[0m06:45:57.273854 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m06:45:57.274201 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m06:45:57.274575 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m06:45:57.280718 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m06:45:57.288014 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:45:57.292319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.294484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.299963 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.307040 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.309945 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m06:45:57.310875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.314770 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m06:45:57.315795 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



  
      ...
[0m06:45:57.318089 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-07-01 06:45:57.274770 => 2024-07-01 06:45:57.317845
[0m06:45:57.318738 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m06:45:57.329356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

    )
        ...
[0m06:45:57.357391 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:57.361024 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.362144 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:57.365395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

      delete from test.join_ym_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:57.370323 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.372345 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m06:45:57.373164 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

  ...
[0m06:45:57.387179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.388769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m06:45:57.402687 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.408722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m06:45:57.415705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.417600 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-07-01 06:45:57.319055 => 2024-07-01 06:45:57.417484
[0m06:45:57.418702 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa848f700>]}
[0m06:45:57.419384 [info ] [Thread-2 (]: 50 of 92 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.15s]
[0m06:45:57.420014 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m06:45:57.420411 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:45:57.421518 [info ] [Thread-2 (]: 51 of 92 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m06:45:57.422639 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m06:45:57.424545 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:57.425190 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m06:45:57.428965 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.429816 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:45:57.436494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m06:45:57.445507 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:57.449817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        insert into test.join_ym_events select "__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link" from test.join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:57.453818 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:57.459679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.468191 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.471485 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m06:45:57.472815 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:57.481028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:57.481655 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-07-01 06:45:57.431619 => 2024-07-01 06:45:57.481498
[0m06:45:57.483685 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:45:57.491505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

    )
        ...
[0m06:45:57.492683 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.498276 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_distributed_new_data 
  ...
[0m06:45:57.505527 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.509738 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-07-01 06:45:57.089010 => 2024-07-01 06:45:57.509636
[0m06:45:57.510940 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85fd990>]}
[0m06:45:57.511781 [info ] [Thread-1 (]: 48 of 92 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.59s]
[0m06:45:57.512421 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m06:45:57.513081 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m06:45:57.514110 [info ] [Thread-1 (]: 52 of 92 START sql incremental model test.combine_datestat ..................... [RUN]
[0m06:45:57.517309 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m06:45:57.517691 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m06:45:57.518374 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m06:45:57.526709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m06:45:57.527729 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:57.533924 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.543259 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.544520 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.550363 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.553378 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m06:45:57.556170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

  ...
[0m06:45:57.563008 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.574336 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.581535 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.703875 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.704776 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m06:45:57.708668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m06:45:57.713706 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.719295 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m06:45:57.720692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.726950 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m06:45:57.728941 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-07-01 06:45:57.518665 => 2024-07-01 06:45:57.728720
[0m06:45:57.729478 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m06:45:57.739579 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.740715 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.744118 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-07-01 06:45:57.483990 => 2024-07-01 06:45:57.744014
[0m06:45:57.745479 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8481240>]}
[0m06:45:57.746272 [info ] [Thread-2 (]: 51 of 92 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.32s]
[0m06:45:57.747045 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:45:57.747578 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:45:57.749001 [info ] [Thread-2 (]: 53 of 92 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m06:45:57.750279 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m06:45:57.750947 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m06:45:57.751353 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:45:57.761581 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m06:45:57.762572 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:57.768898 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.771087 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-07-01 06:45:57.751631 => 2024-07-01 06:45:57.770865
[0m06:45:57.771618 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:45:57.779811 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE
    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 


FROM test.combine_registry_appprofilematching 
WHERE 

)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:45:57.782264 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.788639 [debug] [Thread-1 (]: 
    In test.combine_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:57.794869 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:57.800513 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:57.804520 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

    )
        ...
[0m06:45:57.843726 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:57.849412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:57.860672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:57.863175 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m06:45:57.863970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

  
      ...
[0m06:45:57.920395 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:57.922810 [debug] [Thread-2 (]: dbt_clickhouse adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE
    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 


FROM test.combine_registry_appprofilematching 
WHERE 

)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        
[0m06:45:57.924571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

      delete from test.combine_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:57.925437 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-07-01 06:45:57.771875 => 2024-07-01 06:45:57.925297
[0m06:45:57.963079 [debug] [Thread-2 (]: Database Error in model hash_registry_appprofilematching (models/2_staging/3_hash/hash_registry_appprofilematching.sql)
  :HTTPDriver for http://localhost:8123 returned response code 400)
   Code: 62. DB::Exception: Syntax error: failed at position 493 ('END') (line 20, col 5): END) as __id
    , assumeNotNull(CASE
      WHEN __link = 'UtmHashRegistry' 
      
      THEN toDateTime(
      0) 
      END) AS __datetime
  FROM (
  
  SELECT *, 
  
  
  FROM test. Expected one of: WHEN, ELSE, END, token, Dot, Comma, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS. (SYNTAX_ERROR) (version 24.1.4.20 (official build))
[0m06:45:57.963872 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa838a1d0>]}
[0m06:45:57.964502 [error] [Thread-2 (]: 53 of 92 ERROR creating sql table model test.hash_registry_appprofilematching .. [[31mERROR[0m in 0.21s]
[0m06:45:57.965073 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:45:57.965533 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m06:45:57.966060 [info ] [Thread-2 (]: 54 of 92 START sql table model test.hash_periodstat ............................ [RUN]
[0m06:45:57.968215 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m06:45:57.968592 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m06:45:57.968833 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m06:45:57.981011 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m06:45:57.981921 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-07-01 06:45:57.968976 => 2024-07-01 06:45:57.981767
[0m06:45:57.982429 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m06:45:57.989489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:45:58.015373 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:45:58.019319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.028388 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.031443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        insert into test.combine_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId" from test.combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:58.048121 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:58.052821 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.054285 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:58.060080 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:58.063153 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.065165 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m06:45:58.066509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m06:45:58.068290 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.072706 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_distributed_new_data 
  ...
[0m06:45:58.077675 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:58.080675 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-07-01 06:45:57.729762 => 2024-07-01 06:45:58.080592
[0m06:45:58.081430 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83405b0>]}
[0m06:45:58.081872 [info ] [Thread-1 (]: 52 of 92 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.56s]
[0m06:45:58.082379 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m06:45:58.082836 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m06:45:58.083326 [info ] [Thread-1 (]: 55 of 92 START sql incremental model test.combine_events ....................... [RUN]
[0m06:45:58.084239 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m06:45:58.085021 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m06:45:58.085513 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m06:45:58.094563 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m06:45:58.108593 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.114653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.115638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:58.118552 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m06:45:58.126161 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.133090 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.141122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.148327 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m06:45:58.149888 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-07-01 06:45:58.086134 => 2024-07-01 06:45:58.149689
[0m06:45:58.150930 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:58.151550 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m06:45:58.158693 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m06:45:58.166963 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.174677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.176463 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-07-01 06:45:57.982632 => 2024-07-01 06:45:58.176385
[0m06:45:58.177239 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa830c4c0>]}
[0m06:45:58.177934 [info ] [Thread-2 (]: 54 of 92 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.21s]
[0m06:45:58.178512 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m06:45:58.179463 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.180128 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:45:58.190483 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.191396 [info ] [Thread-2 (]: 56 of 92 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m06:45:58.194166 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m06:45:58.194732 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m06:45:58.195530 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:45:58.205489 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m06:45:58.207421 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:58.220355 [debug] [Thread-1 (]: 
    In test.combine_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:58.224814 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:58.225512 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-07-01 06:45:58.195903 => 2024-07-01 06:45:58.225291
[0m06:45:58.229131 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:45:58.240529 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:45:58.242484 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:58.252396 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

    )
        ...
[0m06:45:58.284995 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:58.292935 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.300763 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.304164 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m06:45:58.305613 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m06:45:58.309372 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:58.313417 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.322310 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.325043 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m06:45:58.325775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

  
      ...
[0m06:45:58.349126 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:58.350645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m06:45:58.368735 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:58.374273 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m06:45:58.381036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.382900 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-07-01 06:45:58.229823 => 2024-07-01 06:45:58.382791
[0m06:45:58.383850 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa83d1030>]}
[0m06:45:58.405069 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:45:58.406341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

      delete from test.combine_events where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:58.535842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m06:45:58.539492 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:58.547055 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.549634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        insert into test.combine_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews" from test.combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:58.583163 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:58.586603 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:58.591535 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:45:58.595418 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_distributed_new_data 
  ...
[0m06:45:58.600941 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:58.603274 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-07-01 06:45:58.159247 => 2024-07-01 06:45:58.603201
[0m06:45:58.603913 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85b18a0>]}
[0m06:45:59.178643 [info ] [Thread-2 (]: 56 of 92 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.19s]
[0m06:45:59.180334 [info ] [Thread-1 (]: 55 of 92 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.52s]
[0m06:45:59.181137 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:45:59.181841 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m06:45:59.182729 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m06:45:59.183936 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m06:45:59.186028 [info ] [Thread-2 (]: 57 of 92 SKIP relation test.link_registry_appprofilematching ................... [[33mSKIP[0m]
[0m06:45:59.187320 [info ] [Thread-1 (]: 58 of 92 START sql incremental model test.hash_datestat ........................ [RUN]
[0m06:45:59.188918 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m06:45:59.191005 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m06:45:59.192550 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m06:45:59.193998 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m06:45:59.195388 [info ] [Thread-2 (]: 59 of 92 START sql table model test.link_periodstat ............................ [RUN]
[0m06:45:59.197057 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m06:45:59.199849 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m06:45:59.221157 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m06:45:59.222180 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m06:45:59.223803 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m06:45:59.229833 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-07-01 06:45:59.201044 => 2024-07-01 06:45:59.229644
[0m06:45:59.233517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.234124 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m06:45:59.250238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.251157 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.254289 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m06:45:59.259019 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-07-01 06:45:59.224395 => 2024-07-01 06:45:59.258781
[0m06:45:59.259597 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m06:45:59.276745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.275303 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

    )
        ...
[0m06:45:59.285301 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.297106 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.306036 [debug] [Thread-1 (]: 
    In test.hash_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:59.311285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:59.316958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.321890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:45:59.324348 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:59.330764 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.340521 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.343664 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m06:45:59.346203 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

  ...
[0m06:45:59.379669 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:45:59.384027 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.385120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:59.388376 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m06:45:59.395289 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.398121 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m06:45:59.399219 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.409151 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m06:45:59.411476 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m06:45:59.415813 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.417704 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-07-01 06:45:59.259785 => 2024-07-01 06:45:59.417596
[0m06:45:59.418821 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa82751e0>]}
[0m06:45:59.419607 [info ] [Thread-2 (]: 59 of 92 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.22s]
[0m06:45:59.420250 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m06:45:59.420738 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:45:59.422268 [info ] [Thread-2 (]: 60 of 92 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m06:45:59.423368 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m06:45:59.423700 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m06:45:59.424005 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:45:59.432036 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.449308 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.453728 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m06:45:59.455433 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-07-01 06:45:59.424170 => 2024-07-01 06:45:59.455111
[0m06:45:59.456559 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:45:59.466877 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

    )
        ...
[0m06:45:59.495708 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:45:59.498082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

      delete from test.hash_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:45:59.499514 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:45:59.509573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.533526 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.538073 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m06:45:59.539711 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

  ...
[0m06:45:59.586508 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:59.589970 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m06:45:59.606589 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.617373 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m06:45:59.625805 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.629491 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-07-01 06:45:59.457034 => 2024-07-01 06:45:59.629203
[0m06:45:59.631204 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8501360>]}
[0m06:45:59.632434 [info ] [Thread-2 (]: 60 of 92 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.21s]
[0m06:45:59.633633 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:45:59.634693 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m06:45:59.636403 [info ] [Thread-2 (]: 61 of 92 START sql incremental model test.hash_events .......................... [RUN]
[0m06:45:59.642895 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:45:59.644335 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m06:45:59.661793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.662746 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m06:45:59.665598 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m06:45:59.681103 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m06:45:59.683121 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.689141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        insert into test.hash_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime" from test.hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:45:59.690396 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-07-01 06:45:59.666398 => 2024-07-01 06:45:59.690172
[0m06:45:59.692988 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m06:45:59.713094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.729495 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:45:59.736819 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.739055 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:59.750513 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.761447 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.769034 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_distributed_new_data 
  ...
[0m06:45:59.770384 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.789252 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.793160 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-07-01 06:45:59.235662 => 2024-07-01 06:45:59.793045
[0m06:45:59.797366 [debug] [Thread-2 (]: 
    In test.hash_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:45:59.799090 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa849dab0>]}
[0m06:45:59.805855 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c 
  ...
[0m06:45:59.807113 [info ] [Thread-1 (]: 58 of 92 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.61s]
[0m06:45:59.810475 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m06:45:59.811614 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m06:45:59.812691 [info ] [Thread-1 (]: 62 of 92 SKIP relation test.full_periodstat .................................... [[33mSKIP[0m]
[0m06:45:59.815856 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m06:45:59.817269 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m06:45:59.818561 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.820314 [info ] [Thread-1 (]: 63 of 92 START sql table model test.link_datestat .............................. [RUN]
[0m06:45:59.825313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_events 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:45:59.827361 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m06:45:59.829585 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m06:45:59.830602 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m06:45:59.842787 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.851227 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.855209 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m06:45:59.857501 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-07-01 06:45:59.831003 => 2024-07-01 06:45:59.857273
[0m06:45:59.858160 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m06:45:59.866287 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

    )
        ...
[0m06:45:59.913638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:45:59.915054 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:45:59.935215 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.937233 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:45:59.950397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:45:59.955209 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m06:45:59.956775 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:45:59.959964 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m06:45:59.961245 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "YmClientHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_events 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m06:45:59.961775 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

  ...
[0m06:46:00.033842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:46:00.037528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m06:46:00.047674 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:46:00.061554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m06:46:00.071411 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m06:46:00.072898 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:46:00.075461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

      delete from test.hash_events where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c);
    ...
[0m06:46:00.081060 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-07-01 06:45:59.858322 => 2024-07-01 06:46:00.080726
[0m06:46:00.085263 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8621270>]}
[0m06:46:00.087415 [info ] [Thread-1 (]: 63 of 92 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.26s]
[0m06:46:00.089737 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m06:46:00.092222 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m06:46:00.093086 [info ] [Thread-1 (]: 64 of 92 SKIP relation test.full_datestat ...................................... [[33mSKIP[0m]
[0m06:46:00.094033 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m06:46:00.233152 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.15 seconds
[0m06:46:00.238231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:46:00.252562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:46:00.256734 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    ...
[0m06:46:00.305688 [debug] [Thread-2 (]: dbt_clickhouse adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c
    
[0m06:46:00.306563 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-07-01 06:45:59.693764 => 2024-07-01 06:46:00.306400
[0m06:46:00.308354 [debug] [Thread-2 (]: Database Error in model hash_events (models/2_staging/3_hash/hash_events.sql)
  :HTTPDriver for http://localhost:8123 returned response code 404)
   Code: 47. DB::Exception: Missing columns: 'CrmUserHash' 'AppDeeplinkStatHash' 'AppEventStatHash' 'AppInstallStatHash' 'AppMetricaDeviceHash' 'AppSessionStatHash' while processing query: 'SELECT __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, pageViews, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime FROM test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c', required columns: 'addToCartSessions' 'utmHash' 'webSalesSessions' 'sales' 'adSourceDirty' '__datetime' 'accountName' 'cityName' 'transactionId' 'event_datetime' 'utmCampaign' 'AppSessionStatHash' 'crmUserId' 'appmetricaDeviceId' 'utmMedium' '__link' 'checkoutSessions' 'pageViews' 'amountSales' 'registrationButtonClick' 'couponActivationSessions' '__emitted_at' '__date' 'instantDiscountActivationSessions' 'AppMetricaDeviceHash' 'pagesViews' 'utmTerm' 'osName' 'screenView' 'linkingCardToPhoneNumberSessions' 'installApp' 'UtmHashHash' 'installs' 'promoCode' 'installationDeviceId' 'clientId' 'participationInLotterySessions' 'cartViewSessions' 'cityCode' 'utmContent' 'registrationCashbackSessions' 'registrationCardSessions' 'VisitStatHash' 'AppInstallStatHash' 'mobileAdsId' 'AppEventStatHash' 'utmSource' 'AppDeeplinkStatHash' 'registrationLendingPromotionsSessions' 'CrmUserHash' 'YmClientHash' '__table_name' 'visitId' 'sessions' '__id', maybe you meant: 'addToCartSessions', 'utmHash', 'webSalesSessions', 'sales', 'adSourceDirty', '__datetime', 'accountName', 'cityName', 'transactionId', 'event_datetime', 'utmCampaign', 'crmUserId', 'appmetricaDeviceId', 'utmMedium', '__link', 'checkoutSessions', 'pageViews', 'amountSales', 'registrationButtonClick', 'couponActivationSessions', '__emitted_at', '__date', 'instantDiscountActivationSessions', 'pagesViews', 'utmTerm', 'osName', 'screenView', 'linkingCardToPhoneNumberSessions', 'installApp', 'UtmHashHash', 'installs', 'promoCode', 'installationDeviceId', 'clientId', 'participationInLotterySessions', 'cartViewSessions', 'cityCode', 'utmContent', 'registrationCashbackSessions', 'registrationCardSessions', 'VisitStatHash', 'mobileAdsId', 'utmSource', 'registrationLendingPromotionsSessions', 'YmClientHash', '__table_name', 'visitId', 'sessions' or '__id'. (UNKNOWN_IDENTIFIER) (version 24.1.4.20 (official build))
  compiled Code at target/run/etlcraft_integration_tests/models/2_staging/3_hash/hash_events.sql
[0m06:46:00.310187 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0f7e0f65-02c9-48a2-bc1f-b0620389249c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85ff3a0>]}
[0m06:46:00.311186 [error] [Thread-2 (]: 61 of 92 ERROR creating sql incremental model test.hash_events ................. [[31mERROR[0m in 0.67s]
[0m06:46:00.311940 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m06:46:00.316383 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_events
[0m06:46:00.317527 [info ] [Thread-1 (]: 65 of 92 SKIP relation test.link_events ........................................ [[33mSKIP[0m]
[0m06:46:00.318639 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m06:46:00.321378 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m06:46:00.322915 [info ] [Thread-2 (]: 66 of 92 SKIP relation test.graph_tuples ....................................... [[33mSKIP[0m]
[0m06:46:00.323932 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m06:46:00.326240 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m06:46:00.326997 [info ] [Thread-1 (]: 67 of 92 SKIP relation test.graph_lookup ....................................... [[33mSKIP[0m]
[0m06:46:00.327874 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m06:46:00.330956 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m06:46:00.331851 [info ] [Thread-2 (]: 68 of 92 SKIP relation test.graph_unique ....................................... [[33mSKIP[0m]
[0m06:46:00.332772 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m06:46:00.335227 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m06:46:00.336623 [info ] [Thread-1 (]: 69 of 92 SKIP relation test.graph_edge ......................................... [[33mSKIP[0m]
[0m06:46:00.337419 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m06:46:00.339749 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m06:46:00.340514 [info ] [Thread-2 (]: 70 of 92 SKIP relation test.graph_glue ......................................... [[33mSKIP[0m]
[0m06:46:00.341291 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m06:46:00.343695 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m06:46:00.344456 [info ] [Thread-1 (]: 71 of 92 SKIP relation test.graph_qid .......................................... [[33mSKIP[0m]
[0m06:46:00.345384 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m06:46:00.347709 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m06:46:00.348541 [info ] [Thread-2 (]: 72 of 92 SKIP relation test.full_events ........................................ [[33mSKIP[0m]
[0m06:46:00.349242 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m06:46:00.351931 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m06:46:00.352897 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m06:46:00.353901 [info ] [Thread-1 (]: 73 of 92 SKIP relation test.attr_myfirstfunnel_prepare_with_qid ................ [[33mSKIP[0m]
[0m06:46:00.355242 [info ] [Thread-2 (]: 74 of 92 SKIP relation test.attr_mysecondfunnel_prepare_with_qid ............... [[33mSKIP[0m]
[0m06:46:00.356784 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m06:46:00.358154 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m06:46:00.363520 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m06:46:00.365621 [info ] [Thread-2 (]: 75 of 92 SKIP relation test.attr_myfirstfunnel_create_events ................... [[33mSKIP[0m]
[0m06:46:00.368113 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m06:46:00.369049 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m06:46:00.370050 [info ] [Thread-1 (]: 76 of 92 SKIP relation test.attr_mysecondfunnel_create_events .................. [[33mSKIP[0m]
[0m06:46:00.372315 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m06:46:00.373939 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m06:46:00.375362 [info ] [Thread-1 (]: 77 of 92 SKIP relation test.attr_myfirstfunnel_add_row_number .................. [[33mSKIP[0m]
[0m06:46:00.377271 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m06:46:00.378361 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m06:46:00.381580 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m06:46:00.380610 [info ] [Thread-2 (]: 78 of 92 SKIP relation test.attr_mysecondfunnel_add_row_number ................. [[33mSKIP[0m]
[0m06:46:00.383012 [info ] [Thread-1 (]: 79 of 92 SKIP relation test.attr_myfirstfunnel_find_new_period ................. [[33mSKIP[0m]
[0m06:46:00.384506 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m06:46:00.385768 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m06:46:00.387910 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m06:46:00.389550 [info ] [Thread-1 (]: 80 of 92 SKIP relation test.attr_mysecondfunnel_find_new_period ................ [[33mSKIP[0m]
[0m06:46:00.390616 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m06:46:00.391673 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m06:46:00.392775 [info ] [Thread-2 (]: 81 of 92 SKIP relation test.attr_myfirstfunnel_calculate_period_number ......... [[33mSKIP[0m]
[0m06:46:00.395848 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m06:46:00.397145 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m06:46:00.398600 [info ] [Thread-1 (]: 82 of 92 SKIP relation test.attr_mysecondfunnel_calculate_period_number ........ [[33mSKIP[0m]
[0m06:46:00.401707 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m06:46:00.402983 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m06:46:00.404144 [info ] [Thread-2 (]: 83 of 92 SKIP relation test.attr_myfirstfunnel_create_missed_steps ............. [[33mSKIP[0m]
[0m06:46:00.406909 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m06:46:00.407649 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m06:46:00.410294 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m06:46:00.409398 [info ] [Thread-1 (]: 84 of 92 SKIP relation test.attr_mysecondfunnel_create_missed_steps ............ [[33mSKIP[0m]
[0m06:46:00.411555 [info ] [Thread-2 (]: 85 of 92 SKIP relation test.attr_myfirstfunnel_join_to_attr_prepare_with_qid ... [[33mSKIP[0m]
[0m06:46:00.413559 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m06:46:00.414840 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m06:46:00.417208 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m06:46:00.420565 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m06:46:00.419334 [info ] [Thread-1 (]: 86 of 92 SKIP relation test.attr_mysecondfunnel_join_to_attr_prepare_with_qid .. [[33mSKIP[0m]
[0m06:46:00.422819 [info ] [Thread-2 (]: 87 of 92 SKIP relation test.attr_myfirstfunnel_model ........................... [[33mSKIP[0m]
[0m06:46:00.424570 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m06:46:00.425591 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m06:46:00.427959 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m06:46:00.429722 [info ] [Thread-1 (]: 88 of 92 SKIP relation test.attr_mysecondfunnel_model .......................... [[33mSKIP[0m]
[0m06:46:00.432235 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m06:46:00.433169 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m06:46:00.434362 [info ] [Thread-1 (]: 89 of 92 SKIP relation test.attr_myfirstfunnel_final_table ..................... [[33mSKIP[0m]
[0m06:46:00.436356 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m06:46:00.437505 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m06:46:00.438648 [info ] [Thread-2 (]: 90 of 92 SKIP relation test.attr_mysecondfunnel_final_table .................... [[33mSKIP[0m]
[0m06:46:00.441495 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m06:46:00.443366 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m06:46:00.444283 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m06:46:00.445977 [info ] [Thread-1 (]: 91 of 92 SKIP relation test.dataset_event_table ................................ [[33mSKIP[0m]
[0m06:46:00.447863 [info ] [Thread-2 (]: 92 of 92 SKIP relation test.dataset_event_table2 ............................... [[33mSKIP[0m]
[0m06:46:00.449146 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m06:46:00.450233 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m06:46:00.467839 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m06:46:00.471819 [debug] [MainThread]: Connection 'master' was properly closed.
[0m06:46:00.472349 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.link_datestat' was left open.
[0m06:46:00.472609 [debug] [MainThread]: On model.etlcraft_integration_tests.link_datestat: Close
[0m06:46:00.472840 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.hash_events' was left open.
[0m06:46:00.473113 [debug] [MainThread]: On model.etlcraft_integration_tests.hash_events: Close
[0m06:46:00.476510 [info ] [MainThread]: 
[0m06:46:00.478233 [info ] [MainThread]: Finished running 20 view models, 23 incremental models, 49 table models in 0 hours 0 minutes and 16.23 seconds (16.23s).
[0m06:46:00.483590 [debug] [MainThread]: Command end result
[0m06:46:00.768284 [info ] [MainThread]: 
[0m06:46:00.769305 [info ] [MainThread]: [31mCompleted with 2 errors and 0 warnings:[0m
[0m06:46:00.770133 [info ] [MainThread]: 
[0m06:46:00.770921 [error] [MainThread]: [33mDatabase Error in model hash_registry_appprofilematching (models/2_staging/3_hash/hash_registry_appprofilematching.sql)[0m
[0m06:46:00.771550 [error] [MainThread]:   :HTTPDriver for http://localhost:8123 returned response code 400)
[0m06:46:00.772137 [error] [MainThread]:    Code: 62. DB::Exception: Syntax error: failed at position 493 ('END') (line 20, col 5): END) as __id
[0m06:46:00.772608 [error] [MainThread]:     , assumeNotNull(CASE
[0m06:46:00.772997 [error] [MainThread]:       WHEN __link = 'UtmHashRegistry' 
[0m06:46:00.773484 [error] [MainThread]:       
[0m06:46:00.774098 [error] [MainThread]:       THEN toDateTime(
[0m06:46:00.774759 [error] [MainThread]:       0) 
[0m06:46:00.775281 [error] [MainThread]:       END) AS __datetime
[0m06:46:00.776021 [error] [MainThread]:   FROM (
[0m06:46:00.776855 [error] [MainThread]:   
[0m06:46:00.777512 [error] [MainThread]:   SELECT *, 
[0m06:46:00.778066 [error] [MainThread]:   
[0m06:46:00.778585 [error] [MainThread]:   
[0m06:46:00.779174 [error] [MainThread]:   FROM test. Expected one of: WHEN, ELSE, END, token, Dot, Comma, ClosingRoundBracket, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS. (SYNTAX_ERROR) (version 24.1.4.20 (official build))
[0m06:46:00.779710 [info ] [MainThread]: 
[0m06:46:00.780289 [error] [MainThread]: [33mDatabase Error in model hash_events (models/2_staging/3_hash/hash_events.sql)[0m
[0m06:46:00.780946 [error] [MainThread]:   :HTTPDriver for http://localhost:8123 returned response code 404)
[0m06:46:00.782318 [error] [MainThread]:    Code: 47. DB::Exception: Missing columns: 'CrmUserHash' 'AppDeeplinkStatHash' 'AppEventStatHash' 'AppInstallStatHash' 'AppMetricaDeviceHash' 'AppSessionStatHash' while processing query: 'SELECT __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, sessions, addToCartSessions, cartViewSessions, checkoutSessions, webSalesSessions, sales, amountSales, registrationCardSessions, registrationButtonClick, linkingCardToPhoneNumberSessions, registrationLendingPromotionsSessions, registrationCashbackSessions, instantDiscountActivationSessions, couponActivationSessions, participationInLotterySessions, pagesViews, screenView, installApp, installs, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, pageViews, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime FROM test.hash_events__dbt_new_data_0f7e0f65_02c9_48a2_bc1f_b0620389249c', required columns: 'addToCartSessions' 'utmHash' 'webSalesSessions' 'sales' 'adSourceDirty' '__datetime' 'accountName' 'cityName' 'transactionId' 'event_datetime' 'utmCampaign' 'AppSessionStatHash' 'crmUserId' 'appmetricaDeviceId' 'utmMedium' '__link' 'checkoutSessions' 'pageViews' 'amountSales' 'registrationButtonClick' 'couponActivationSessions' '__emitted_at' '__date' 'instantDiscountActivationSessions' 'AppMetricaDeviceHash' 'pagesViews' 'utmTerm' 'osName' 'screenView' 'linkingCardToPhoneNumberSessions' 'installApp' 'UtmHashHash' 'installs' 'promoCode' 'installationDeviceId' 'clientId' 'participationInLotterySessions' 'cartViewSessions' 'cityCode' 'utmContent' 'registrationCashbackSessions' 'registrationCardSessions' 'VisitStatHash' 'AppInstallStatHash' 'mobileAdsId' 'AppEventStatHash' 'utmSource' 'AppDeeplinkStatHash' 'registrationLendingPromotionsSessions' 'CrmUserHash' 'YmClientHash' '__table_name' 'visitId' 'sessions' '__id', maybe you meant: 'addToCartSessions', 'utmHash', 'webSalesSessions', 'sales', 'adSourceDirty', '__datetime', 'accountName', 'cityName', 'transactionId', 'event_datetime', 'utmCampaign', 'crmUserId', 'appmetricaDeviceId', 'utmMedium', '__link', 'checkoutSessions', 'pageViews', 'amountSales', 'registrationButtonClick', 'couponActivationSessions', '__emitted_at', '__date', 'instantDiscountActivationSessions', 'pagesViews', 'utmTerm', 'osName', 'screenView', 'linkingCardToPhoneNumberSessions', 'installApp', 'UtmHashHash', 'installs', 'promoCode', 'installationDeviceId', 'clientId', 'participationInLotterySessions', 'cartViewSessions', 'cityCode', 'utmContent', 'registrationCashbackSessions', 'registrationCardSessions', 'VisitStatHash', 'mobileAdsId', 'utmSource', 'registrationLendingPromotionsSessions', 'YmClientHash', '__table_name', 'visitId', 'sessions' or '__id'. (UNKNOWN_IDENTIFIER) (version 24.1.4.20 (official build))
[0m06:46:00.784045 [error] [MainThread]:   compiled Code at target/run/etlcraft_integration_tests/models/2_staging/3_hash/hash_events.sql
[0m06:46:00.784890 [info ] [MainThread]: 
[0m06:46:00.786473 [info ] [MainThread]: Done. PASS=59 WARN=0 ERROR=2 SKIP=31 TOTAL=92
[0m06:46:00.788988 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa85460e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa8547550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7feaa830c4c0>]}
[0m06:46:00.790186 [debug] [MainThread]: Flushing usage events


============================== 2024-07-01 06:51:25.399627 | 0aa9aeaf-5cd9-435f-8908-a9af65d9d477 ==============================
[0m06:51:25.399627 [info ] [MainThread]: Running with dbt=1.4.7
[0m06:51:25.406710 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/+'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m06:51:25.407236 [debug] [MainThread]: Tracking: tracking
[0m06:51:25.419045 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e45f1c90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e4677910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e4677f10>]}
[0m06:51:25.461192 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m06:51:25.774012 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m06:51:25.776735 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m06:51:25.777127 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/other/get_features.sql
[0m06:51:25.900760 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table.sql
[0m06:51:25.952181 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table.sql
[0m06:51:25.953669 [debug] [MainThread]: 1603: static parser failed on 7_dataset/dataset_event_table2.sql
[0m06:51:25.960577 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 7_dataset/dataset_event_table2.sql
[0m06:51:25.961982 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m06:51:26.019389 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m06:51:26.021004 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m06:51:26.030819 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m06:51:26.032220 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m06:51:26.049423 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m06:51:26.050718 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m06:51:26.055551 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m06:51:26.056856 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m06:51:26.067298 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m06:51:26.068618 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m06:51:26.084774 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m06:51:26.086157 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m06:51:26.092925 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m06:51:26.094212 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m06:51:26.100840 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m06:51:26.102075 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m06:51:26.120509 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m06:51:26.121922 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m06:51:26.128296 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m06:51:26.129701 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m06:51:26.144014 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m06:51:26.145439 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m06:51:26.152289 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m06:51:26.153560 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m06:51:26.162820 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m06:51:26.164088 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m06:51:26.168340 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m06:51:26.169649 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m06:51:26.173913 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m06:51:26.175205 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m06:51:26.183756 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m06:51:26.185003 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m06:51:26.189164 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m06:51:26.190363 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m06:51:26.199571 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m06:51:26.200820 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m06:51:26.206916 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m06:51:26.208963 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m06:51:26.285616 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m06:51:26.287017 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m06:51:26.298469 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m06:51:26.300034 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m06:51:26.314636 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m06:51:26.316186 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m06:51:26.370100 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m06:51:26.371483 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m06:51:26.386543 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m06:51:26.387962 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m06:51:26.394955 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m06:51:26.396227 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m06:51:26.403824 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m06:51:26.405078 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m06:51:26.411709 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m06:51:26.412944 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m06:51:26.419186 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m06:51:26.420351 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m06:51:26.432168 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m06:51:26.433386 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m06:51:26.437676 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m06:51:26.438909 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m06:51:26.450429 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m06:51:26.451669 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m06:51:26.456437 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m06:51:26.457682 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m06:51:26.466811 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m06:51:26.467993 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m06:51:26.473102 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m06:51:26.474367 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m06:51:26.481796 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m06:51:26.483033 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m06:51:26.487649 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m06:51:26.488891 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m06:51:26.497977 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m06:51:26.598933 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e38e3ca0>]}
[0m06:51:26.733160 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3913d60>]}
[0m06:51:26.733867 [info ] [MainThread]: Found 92 models, 8 tests, 0 snapshots, 0 analyses, 543 macros, 0 operations, 26 seed files, 0 sources, 0 exposures, 0 metrics
[0m06:51:26.734298 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3913fd0>]}
[0m06:51:26.742867 [info ] [MainThread]: 
[0m06:51:26.746374 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m06:51:26.753016 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m06:51:26.773009 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m06:51:29.388637 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m06:51:29.395575 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.405303 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m06:51:29.406136 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m06:51:29.411254 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m06:51:29.467912 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:29.490562 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e38e1a80>]}
[0m06:51:29.491389 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m06:51:29.491720 [info ] [MainThread]: 
[0m06:51:29.515526 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:51:29.516262 [info ] [Thread-1 (]: 1 of 92 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m06:51:29.517146 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:51:29.519451 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m06:51:29.521390 [info ] [Thread-2 (]: 2 of 92 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m06:51:29.522249 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m06:51:29.530111 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m06:51:29.530797 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:51:29.531345 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:51:29.623550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_cohorts$')        
...
[0m06:51:29.624932 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m06:51:29.685936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:29.721955 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:29.748881 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:29.790906 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m06:51:29.795785 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-07-01 06:51:29.531710 => 2024-07-01 06:51:29.795614
[0m06:51:29.796173 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:51:29.842814 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m06:51:29.845773 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_cohorts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_cohorts
)

)
  )...
[0m06:51:29.852773 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_event_metrics$')        
...
[0m06:51:29.883735 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:29.888823 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:29.889868 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:29.900593 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m06:51:29.904458 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.911645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.917412 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m06:51:29.919126 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m06:51:29.922257 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-07-01 06:51:29.555157 => 2024-07-01 06:51:29.922053
[0m06:51:29.922873 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:51:29.928642 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m06:51:29.929672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.934195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m06:51:29.935992 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_event_metrics
)

)
  )...
[0m06:51:29.939282 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:29.940564 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m06:51:29.945429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:29.965315 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:29.975135 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m06:51:29.979722 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m06:51:29.985247 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.986684 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m06:51:29.988208 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.990279 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-07-01 06:51:29.796296 => 2024-07-01 06:51:29.990200
[0m06:51:29.991671 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfeea4a0>]}
[0m06:51:29.992702 [info ] [Thread-1 (]: 1 of 92 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.47s]
[0m06:51:29.994817 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m06:51:29.995627 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:29.996175 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:51:30.000829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m06:51:30.001666 [info ] [Thread-1 (]: 3 of 92 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m06:51:30.004558 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m06:51:30.005109 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m06:51:30.005883 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:51:30.011912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_network$')        
...
[0m06:51:30.013026 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.016571 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m06:51:30.021876 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.027325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m06:51:30.033070 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.037334 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.040033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.042003 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-07-01 06:51:29.923185 => 2024-07-01 06:51:30.041904
[0m06:51:30.042772 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfeea770>]}
[0m06:51:30.043316 [info ] [Thread-2 (]: 2 of 92 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.52s]
[0m06:51:30.044116 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m06:51:30.044624 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:51:30.047211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.045989 [info ] [Thread-2 (]: 4 of 92 START sql view model test.normalize_adjust_registry_default_events ..... [RUN]
[0m06:51:30.064084 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m06:51:30.065216 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_registry_default_events'
[0m06:51:30.066270 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_registry_default_events)
[0m06:51:30.066765 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:51:30.073031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_adjust_default_[^_]+_events$')        
...
[0m06:51:30.075701 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-07-01 06:51:30.006171 => 2024-07-01 06:51:30.075433
[0m06:51:30.076275 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:51:30.083779 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m06:51:30.085361 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.089623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_adjust_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.093817 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_network') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_network
)

)
  )...
[0m06:51:30.097547 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.109717 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m06:51:30.111874 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (compile): 2024-07-01 06:51:30.067030 => 2024-07-01 06:51:30.111580
[0m06:51:30.112805 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:51:30.118973 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"
[0m06:51:30.119972 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:30.123629 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m06:51:30.125716 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */


  create view test.normalize_adjust_registry_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_adjust_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_adjust_default_accountid_events
)

)
  )...
[0m06:51:30.128786 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.130657 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m06:51:30.137054 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.140585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m06:51:30.145199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.212353 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:30.213795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m06:51:30.214995 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m06:51:30.222397 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.226599 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m06:51:30.229041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.230304 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events to test.normalize_adjust_registry_default_events__dbt_backup 
  
  ...
[0m06:51:30.235072 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.235915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.239283 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    drop table if exists test.normalize_adjust_registry_default_events 
  
  ...
[0m06:51:30.241126 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-07-01 06:51:30.076517 => 2024-07-01 06:51:30.241054
[0m06:51:30.242959 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcb34c0>]}
[0m06:51:30.244081 [info ] [Thread-1 (]: 3 of 92 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.24s]
[0m06:51:30.244956 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m06:51:30.245408 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:51:30.246166 [info ] [Thread-1 (]: 5 of 92 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m06:51:30.247429 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.248265 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m06:51:30.250109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */

    rename table test.normalize_adjust_registry_default_events__dbt_tmp to test.normalize_adjust_registry_default_events 
  
  ...
[0m06:51:30.250657 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m06:51:30.251871 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:51:30.257005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_deeplinks$')        
...
[0m06:51:30.258408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.265180 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_registry_default_events"} */
drop table if exists test.normalize_adjust_registry_default_events__dbt_backup 
  ...
[0m06:51:30.269415 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.270189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.272142 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_registry_default_events (execute): 2024-07-01 06:51:30.113246 => 2024-07-01 06:51:30.272068
[0m06:51:30.276748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.277812 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc89900>]}
[0m06:51:30.279666 [info ] [Thread-2 (]: 4 of 92 OK created sql view model test.normalize_adjust_registry_default_events  [[32mOK[0m in 0.21s]
[0m06:51:30.280249 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_registry_default_events
[0m06:51:30.281124 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:51:30.282472 [info ] [Thread-2 (]: 6 of 92 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m06:51:30.284081 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m06:51:30.284505 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m06:51:30.284719 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:51:30.291629 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m06:51:30.292944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.309717 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m06:51:30.310978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.315883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.317675 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-07-01 06:51:30.252095 => 2024-07-01 06:51:30.317501
[0m06:51:30.318212 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:51:30.324232 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m06:51:30.325294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.346521 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m06:51:30.348470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_deeplinks
)

)
  )...
[0m06:51:30.352625 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-07-01 06:51:30.284858 => 2024-07-01 06:51:30.351252
[0m06:51:30.353213 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:51:30.359091 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m06:51:30.359784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m06:51:30.375972 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:30.379999 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m06:51:30.384206 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.385476 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m06:51:30.389884 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.394791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m06:51:30.399728 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.401153 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m06:51:30.406159 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:30.410339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m06:51:30.411487 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.417749 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m06:51:30.419637 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.420985 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m06:51:30.424773 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.426586 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-07-01 06:51:30.318404 => 2024-07-01 06:51:30.426494
[0m06:51:30.427537 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff16a40>]}
[0m06:51:30.428568 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.429417 [info ] [Thread-1 (]: 5 of 92 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.18s]
[0m06:51:30.433870 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m06:51:30.434594 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m06:51:30.435997 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:51:30.437533 [info ] [Thread-1 (]: 7 of 92 START sql view model test.normalize_appmetrica_events_default_installations  [RUN]
[0m06:51:30.439021 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations'
[0m06:51:30.439669 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations)
[0m06:51:30.440890 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:51:30.441812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.448888 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_installations$')        
...
[0m06:51:30.450475 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m06:51:30.456381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.463002 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m06:51:30.464834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.471775 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.472650 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.474989 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-07-01 06:51:30.353372 => 2024-07-01 06:51:30.474917
[0m06:51:30.477234 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfee9f00>]}
[0m06:51:30.477975 [info ] [Thread-2 (]: 6 of 92 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.19s]
[0m06:51:30.478679 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m06:51:30.479299 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:51:30.480496 [info ] [Thread-2 (]: 8 of 92 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m06:51:30.481479 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m06:51:30.481890 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m06:51:30.482136 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:51:30.487410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_events$')        
...
[0m06:51:30.488596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.508737 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.509175 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m06:51:30.513995 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.517171 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (compile): 2024-07-01 06:51:30.442149 => 2024-07-01 06:51:30.516917
[0m06:51:30.517781 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:51:30.523106 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"
[0m06:51:30.524151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.544508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */


  create view test.normalize_appmetrica_events_default_installations__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_receive_datetime') AS install_receive_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_installations') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_installations
)

)
  )...
[0m06:51:30.560610 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m06:51:30.562668 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-07-01 06:51:30.482256 => 2024-07-01 06:51:30.562506
[0m06:51:30.563091 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:51:30.569649 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m06:51:30.570413 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_receive_datetime') AS event_receive_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_events') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_receive_datetime) AS event_receive_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_receive_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m06:51:30.571996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.575179 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m06:51:30.580770 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.582176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations to test.normalize_appmetrica_events_default_installations__dbt_backup 
  
  ...
[0m06:51:30.586933 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.590268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    drop table if exists test.normalize_appmetrica_events_default_installations 
  
  ...
[0m06:51:30.594479 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.596277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */

    rename table test.normalize_appmetrica_events_default_installations__dbt_tmp to test.normalize_appmetrica_events_default_installations 
  
  ...
[0m06:51:30.600391 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.604662 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations"} */
drop table if exists test.normalize_appmetrica_events_default_installations__dbt_backup 
  ...
[0m06:51:30.609318 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:30.610331 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.613656 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m06:51:30.615276 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations (execute): 2024-07-01 06:51:30.518087 => 2024-07-01 06:51:30.615186
[0m06:51:30.617197 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff15210>]}
[0m06:51:30.617768 [info ] [Thread-1 (]: 7 of 92 OK created sql view model test.normalize_appmetrica_events_default_installations  [[32mOK[0m in 0.18s]
[0m06:51:30.618495 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_installations
[0m06:51:30.619333 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:51:30.620554 [info ] [Thread-1 (]: 9 of 92 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m06:51:30.622014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.622771 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m06:51:30.624974 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m06:51:30.625420 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m06:51:30.626457 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:51:30.631037 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_sessions_starts$')        
...
[0m06:51:30.633130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.637851 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m06:51:30.643133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.644649 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m06:51:30.646800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.650905 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.652675 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.656909 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m06:51:30.659082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.671845 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.673616 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m06:51:30.675463 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-07-01 06:51:30.563257 => 2024-07-01 06:51:30.675398
[0m06:51:30.677249 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfee9f00>]}
[0m06:51:30.678321 [info ] [Thread-2 (]: 8 of 92 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.20s]
[0m06:51:30.679231 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m06:51:30.679996 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:51:30.681461 [info ] [Thread-2 (]: 10 of 92 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m06:51:30.682415 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-07-01 06:51:30.626684 => 2024-07-01 06:51:30.682278
[0m06:51:30.683261 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m06:51:30.684016 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:51:30.684368 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m06:51:30.689450 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m06:51:30.690149 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:51:30.695974 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_appmetrica_default_[^_]+_profiles$')        
...
[0m06:51:30.698454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_receive_datetime') AS session_start_receive_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_sessions_starts
)

)
  )...
[0m06:51:30.712891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.716441 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m06:51:30.720321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.721760 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m06:51:30.722849 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:30.730863 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.731758 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.737442 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m06:51:30.739464 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.746636 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m06:51:30.747527 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.749466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m06:51:30.751186 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-07-01 06:51:30.690945 => 2024-07-01 06:51:30.750953
[0m06:51:30.751874 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:51:30.757132 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m06:51:30.758200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.763089 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m06:51:30.764967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_appmetrica_default_accountid_profiles
)

)
  )...
[0m06:51:30.767896 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.769375 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-07-01 06:51:30.684623 => 2024-07-01 06:51:30.769293
[0m06:51:30.770144 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff17a90>]}
[0m06:51:30.770698 [info ] [Thread-1 (]: 9 of 92 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.15s]
[0m06:51:30.771243 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m06:51:30.771631 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:51:30.772795 [info ] [Thread-1 (]: 11 of 92 START sql view model test.normalize_calltouch_events_default_calls .... [RUN]
[0m06:51:30.774169 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_calltouch_events_default_calls'
[0m06:51:30.774433 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_calltouch_events_default_calls)
[0m06:51:30.774609 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:51:30.781296 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_calltouch_default_[^_]+_calls$')        
...
[0m06:51:30.784663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.789621 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m06:51:30.795206 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.796489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m06:51:30.797235 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.802178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.803886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.809110 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m06:51:30.811965 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.812923 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.830663 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m06:51:30.854712 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.871126 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m06:51:30.888365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.890209 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m06:51:30.892000 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-07-01 06:51:30.752145 => 2024-07-01 06:51:30.891934
[0m06:51:30.893152 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfee8a00>]}
[0m06:51:30.893846 [info ] [Thread-2 (]: 10 of 92 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.21s]
[0m06:51:30.894386 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m06:51:30.894786 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:51:30.896473 [info ] [Thread-2 (]: 12 of 92 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m06:51:30.897103 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (compile): 2024-07-01 06:51:30.774714 => 2024-07-01 06:51:30.896944
[0m06:51:30.898125 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m06:51:30.898878 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:51:30.899288 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m06:51:30.904709 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"
[0m06:51:30.905452 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:51:30.910591 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners_statistics$')        
...
[0m06:51:30.912640 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */


  create view test.normalize_calltouch_events_default_calls__dbt_tmp 
  
  as (
    SELECT
        replaceRegexpOne(replaceRegexpOne(date, '\\s+(\\d):', ' 0\\1:'), '(\\d{2})\\/(\\d{2})\\/(\\d{4})', '\\3-\\2-\\1') AS __date, 
        JSONExtractString(_airbyte_data, 'additionalTags') AS additionalTags, 
        JSONExtractString(_airbyte_data, 'attribution') AS attribution, 
        JSONExtractString(_airbyte_data, 'attrs') AS attrs, 
        JSONExtractString(_airbyte_data, 'browser') AS browser, 
        JSONExtractString(_airbyte_data, 'callbackCall') AS callbackCall, 
        JSONExtractString(_airbyte_data, 'callbackInfo') AS callbackInfo, 
        JSONExtractString(_airbyte_data, 'callClientUniqueId') AS callClientUniqueId, 
        JSONExtractString(_airbyte_data, 'callerNumber') AS callerNumber, 
        JSONExtractString(_airbyte_data, 'callId') AS callId, 
        JSONExtractString(_airbyte_data, 'callphase') AS callphase, 
        JSONExtractString(_airbyte_data, 'callReferenceId') AS callReferenceId, 
        JSONExtractString(_airbyte_data, 'callUrl') AS callUrl, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'clientId') AS clientId, 
        JSONExtractString(_airbyte_data, 'ctCallerId') AS ctCallerId, 
        JSONExtractString(_airbyte_data, 'ctClientId') AS ctClientId, 
        JSONExtractString(_airbyte_data, 'ctGlobalId') AS ctGlobalId, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'dcm') AS dcm, 
        JSONExtractString(_airbyte_data, 'device') AS device, 
        JSONExtractString(_airbyte_data, 'duration') AS duration, 
        JSONExtractString(_airbyte_data, 'googleAdWords') AS googleAdWords, 
        JSONExtractString(_airbyte_data, 'hostname') AS hostname, 
        JSONExtractString(_airbyte_data, 'ip') AS ip, 
        JSONExtractString(_airbyte_data, 'keyword') AS keyword, 
        JSONExtractString(_airbyte_data, 'manager') AS manager, 
        JSONExtractString(_airbyte_data, 'mapVisits') AS mapVisits, 
        JSONExtractString(_airbyte_data, 'medium') AS medium, 
        JSONExtractString(_airbyte_data, 'order') AS order, 
        JSONExtractString(_airbyte_data, 'orders') AS orders, 
        JSONExtractString(_airbyte_data, 'os') AS os, 
        JSONExtractString(_airbyte_data, 'phoneNumber') AS phoneNumber, 
        JSONExtractString(_airbyte_data, 'phonesInText') AS phonesInText, 
        JSONExtractString(_airbyte_data, 'phrases') AS phrases, 
        JSONExtractString(_airbyte_data, 'redirectNumber') AS redirectNumber, 
        JSONExtractString(_airbyte_data, 'ref') AS ref, 
        JSONExtractString(_airbyte_data, 'sessionDate') AS sessionDate, 
        JSONExtractString(_airbyte_data, 'sessionId') AS sessionId, 
        JSONExtractString(_airbyte_data, 'sipCallId') AS sipCallId, 
        JSONExtractString(_airbyte_data, 'siteId') AS siteId, 
        JSONExtractString(_airbyte_data, 'siteName') AS siteName, 
        JSONExtractString(_airbyte_data, 'source') AS source, 
        JSONExtractString(_airbyte_data, 'statusDetails') AS statusDetails, 
        JSONExtractString(_airbyte_data, 'subPoolName') AS subPoolName, 
        JSONExtractString(_airbyte_data, 'successful') AS successful, 
        JSONExtractString(_airbyte_data, 'targetCall') AS targetCall, 
        JSONExtractString(_airbyte_data, 'timestamp') AS timestamp, 
        JSONExtractString(_airbyte_data, 'uniqTargetCall') AS uniqTargetCall, 
        JSONExtractString(_airbyte_data, 'uniqueCall') AS uniqueCall, 
        JSONExtractString(_airbyte_data, 'url') AS url, 
        JSONExtractString(_airbyte_data, 'userAgent') AS userAgent, 
        JSONExtractString(_airbyte_data, 'utmCampaign') AS utmCampaign, 
        JSONExtractString(_airbyte_data, 'utmContent') AS utmContent, 
        JSONExtractString(_airbyte_data, 'utmMedium') AS utmMedium, 
        JSONExtractString(_airbyte_data, 'utmSource') AS utmSource, 
        JSONExtractString(_airbyte_data, 'utmTerm') AS utmTerm, 
        JSONExtractString(_airbyte_data, 'waitingConnect') AS waitingConnect, 
        JSONExtractString(_airbyte_data, 'yaClientId') AS yaClientId, 
        JSONExtractString(_airbyte_data, 'yandexDirect') AS yandexDirect,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at,
        toInt32("_airbyte_loaded_at") AS _airbyte_loaded_at
FROM test.datacraft_testValeriya_raw__stream_calltouch_default_accountid_calls
)

)
  )...
[0m06:51:30.920883 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.925175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:30.933542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.941796 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m06:51:30.942684 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-07-01 06:51:30.905883 => 2024-07-01 06:51:30.942579
[0m06:51:30.942971 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:51:30.950347 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m06:51:30.951477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners_statistics
)

)
  )...
[0m06:51:30.964917 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:30.969264 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m06:51:30.974541 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.975434 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:30.976750 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls to test.normalize_calltouch_events_default_calls__dbt_backup 
  
  ...
[0m06:51:30.981141 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m06:51:30.986948 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:30.988505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m06:51:30.989518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.997280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:30.998701 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    drop table if exists test.normalize_calltouch_events_default_calls 
  
  ...
[0m06:51:31.002610 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m06:51:31.007750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.009268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */

    rename table test.normalize_calltouch_events_default_calls__dbt_tmp to test.normalize_calltouch_events_default_calls 
  
  ...
[0m06:51:31.010521 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.013322 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m06:51:31.015532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.019880 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_calltouch_events_default_calls"} */
drop table if exists test.normalize_calltouch_events_default_calls__dbt_backup 
  ...
[0m06:51:31.021502 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.026950 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m06:51:31.027935 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.030646 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_calltouch_events_default_calls (execute): 2024-07-01 06:51:30.899635 => 2024-07-01 06:51:31.030560
[0m06:51:31.031886 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdba3550>]}
[0m06:51:31.032584 [info ] [Thread-1 (]: 11 of 92 OK created sql view model test.normalize_calltouch_events_default_calls  [[32mOK[0m in 0.26s]
[0m06:51:31.033068 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_calltouch_events_default_calls
[0m06:51:31.033922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.034646 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:51:31.037022 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-07-01 06:51:30.943084 => 2024-07-01 06:51:31.036935
[0m06:51:31.037722 [info ] [Thread-1 (]: 13 of 92 START sql view model test.normalize_mt_registry_default_banners ....... [RUN]
[0m06:51:31.039246 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdbeb8b0>]}
[0m06:51:31.040541 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_banners'
[0m06:51:31.041579 [info ] [Thread-2 (]: 12 of 92 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.14s]
[0m06:51:31.042454 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_banners)
[0m06:51:31.043168 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m06:51:31.043956 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:51:31.044618 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:51:31.050732 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_banners$')        
...
[0m06:51:31.051980 [info ] [Thread-2 (]: 14 of 92 START sql view model test.normalize_mt_registry_default_campaigns ..... [RUN]
[0m06:51:31.055878 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns'
[0m06:51:31.056178 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns)
[0m06:51:31.056373 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:51:31.061331 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_mt_default_[^_]+_campaigns$')        
...
[0m06:51:31.063721 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.070386 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.073614 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.078309 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_mt_default_accountid_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.079820 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.092052 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m06:51:31.093603 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.101834 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m06:51:31.102355 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (compile): 2024-07-01 06:51:31.045785 => 2024-07-01 06:51:31.102185
[0m06:51:31.102993 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:51:31.108893 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"
[0m06:51:31.109637 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (compile): 2024-07-01 06:51:31.056488 => 2024-07-01 06:51:31.109457
[0m06:51:31.110363 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:51:31.110922 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */


  create view test.normalize_mt_registry_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_banners') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_banners
)

)
  )...
[0m06:51:31.118971 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"
[0m06:51:31.121930 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */


  create view test.normalize_mt_registry_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_mt_default_accountid_campaigns') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_mt_default_accountid_campaigns
)

)
  )...
[0m06:51:31.133831 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.137567 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m06:51:31.139034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.142494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m06:51:31.146573 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.148440 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners to test.normalize_mt_registry_default_banners__dbt_backup 
  
  ...
[0m06:51:31.149583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.152480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns to test.normalize_mt_registry_default_campaigns__dbt_backup 
  
  ...
[0m06:51:31.156161 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.234705 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    drop table if exists test.normalize_mt_registry_default_banners 
  
  ...
[0m06:51:31.235897 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:31.240543 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    drop table if exists test.normalize_mt_registry_default_campaigns 
  
  ...
[0m06:51:31.242001 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.244227 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */

    rename table test.normalize_mt_registry_default_banners__dbt_tmp to test.normalize_mt_registry_default_banners 
  
  ...
[0m06:51:31.245068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.247615 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */

    rename table test.normalize_mt_registry_default_campaigns__dbt_tmp to test.normalize_mt_registry_default_campaigns 
  
  ...
[0m06:51:31.249018 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.252937 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_banners"} */
drop table if exists test.normalize_mt_registry_default_banners__dbt_backup 
  ...
[0m06:51:31.254594 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.259194 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns"} */
drop table if exists test.normalize_mt_registry_default_campaigns__dbt_backup 
  ...
[0m06:51:31.260754 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.262503 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_banners (execute): 2024-07-01 06:51:31.103220 => 2024-07-01 06:51:31.262427
[0m06:51:31.263695 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdacffd0>]}
[0m06:51:31.264359 [info ] [Thread-1 (]: 13 of 92 OK created sql view model test.normalize_mt_registry_default_banners .. [[32mOK[0m in 0.22s]
[0m06:51:31.265338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.265987 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_banners
[0m06:51:31.267577 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns (execute): 2024-07-01 06:51:31.111371 => 2024-07-01 06:51:31.267510
[0m06:51:31.268230 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:51:31.269488 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc18b50>]}
[0m06:51:31.270434 [info ] [Thread-1 (]: 15 of 92 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m06:51:31.271598 [info ] [Thread-2 (]: 14 of 92 OK created sql view model test.normalize_mt_registry_default_campaigns  [[32mOK[0m in 0.21s]
[0m06:51:31.273137 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m06:51:31.274051 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_registry_default_campaigns
[0m06:51:31.274355 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m06:51:31.275156 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:51:31.275741 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:51:31.277002 [info ] [Thread-2 (]: 16 of 92 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m06:51:31.285001 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_sheets_default_[^_]+_planCosts$')        
...
[0m06:51:31.286219 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m06:51:31.288070 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m06:51:31.288821 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:51:31.294072 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_utmcraft_default_[^_]+_utmresult$')        
...
[0m06:51:31.297523 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.307700 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_sheets_default_accountid_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.309599 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.315174 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.320947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.328470 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m06:51:31.329686 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.343091 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m06:51:31.344174 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-07-01 06:51:31.277874 => 2024-07-01 06:51:31.343882
[0m06:51:31.345540 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:51:31.351573 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-07-01 06:51:31.289119 => 2024-07-01 06:51:31.351351
[0m06:51:31.353097 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m06:51:31.353708 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:51:31.361582 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m06:51:31.362683 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_sheets_default_accountid_planCosts') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_sheets_default_accountid_planCosts
)

)
  )...
[0m06:51:31.364550 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_utmcraft_default_accountid_utmresult
)

)
  )...
[0m06:51:31.376762 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.377860 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.381232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m06:51:31.385934 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m06:51:31.390977 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.392230 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m06:51:31.394129 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.396089 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m06:51:31.399002 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.402369 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m06:51:31.403344 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.408354 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m06:51:31.409540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.412255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m06:51:31.415763 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.420131 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m06:51:31.420921 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.423939 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m06:51:31.426675 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.428427 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-07-01 06:51:31.354360 => 2024-07-01 06:51:31.428348
[0m06:51:31.429198 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdba3790>]}
[0m06:51:31.430385 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.435156 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m06:51:31.429702 [info ] [Thread-2 (]: 16 of 92 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.14s]
[0m06:51:31.437627 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m06:51:31.438480 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:51:31.439443 [info ] [Thread-2 (]: 17 of 92 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m06:51:31.440473 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m06:51:31.441908 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.442520 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m06:51:31.444901 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-07-01 06:51:31.346052 => 2024-07-01 06:51:31.444824
[0m06:51:31.445547 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:51:31.447298 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb25390>]}
[0m06:51:31.452244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans_statistics$')        
...
[0m06:51:31.453310 [info ] [Thread-1 (]: 15 of 92 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.17s]
[0m06:51:31.457017 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m06:51:31.457524 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:51:31.457878 [info ] [Thread-1 (]: 18 of 92 START sql view model test.normalize_vkads_registry_default_ad_plans ... [RUN]
[0m06:51:31.459360 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans'
[0m06:51:31.459731 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans)
[0m06:51:31.459980 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:51:31.467423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_vkads_default_[^_]+_ad_plans$')        
...
[0m06:51:31.469111 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.474943 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.479014 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.483704 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.485314 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.503606 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.507358 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m06:51:31.529137 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m06:51:31.530280 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-01 06:51:31.447802 => 2024-07-01 06:51:31.530036
[0m06:51:31.531066 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:51:31.537192 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (compile): 2024-07-01 06:51:31.460128 => 2024-07-01 06:51:31.536984
[0m06:51:31.538993 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m06:51:31.539615 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:51:31.544791 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"
[0m06:51:31.547198 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans_statistics
)

)
  )...
[0m06:51:31.549377 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */


  create view test.normalize_vkads_registry_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_vkads_default_accountid_ad_plans
)

)
  )...
[0m06:51:31.567203 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.571435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m06:51:31.572963 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.576480 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m06:51:31.577490 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.579955 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m06:51:31.583138 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.584117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.585338 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans to test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  
  ...
[0m06:51:31.588644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m06:51:31.593756 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.594486 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.597981 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    drop table if exists test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m06:51:31.600033 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m06:51:31.604139 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.605300 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */

    rename table test.normalize_vkads_registry_default_ad_plans__dbt_tmp to test.normalize_vkads_registry_default_ad_plans 
  
  ...
[0m06:51:31.606616 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.611012 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m06:51:31.612753 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.618176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans"} */
drop table if exists test.normalize_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m06:51:31.619322 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.622177 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-01 06:51:31.531597 => 2024-07-01 06:51:31.622109
[0m06:51:31.623642 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdae3160>]}
[0m06:51:31.625329 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.624680 [info ] [Thread-2 (]: 17 of 92 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.18s]
[0m06:51:31.627238 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans (execute): 2024-07-01 06:51:31.540110 => 2024-07-01 06:51:31.627169
[0m06:51:31.627710 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m06:51:31.628913 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb25390>]}
[0m06:51:31.629657 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:51:31.631117 [info ] [Thread-1 (]: 18 of 92 OK created sql view model test.normalize_vkads_registry_default_ad_plans  [[32mOK[0m in 0.17s]
[0m06:51:31.632094 [info ] [Thread-2 (]: 19 of 92 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m06:51:31.633250 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_registry_default_ad_plans
[0m06:51:31.634468 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m06:51:31.635188 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:51:31.636212 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m06:51:31.636942 [info ] [Thread-1 (]: 20 of 92 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m06:51:31.637832 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:51:31.639203 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m06:51:31.646464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_yd_default_[^_]+_custom_report$')        
...
[0m06:51:31.647077 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m06:51:31.649247 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:51:31.654328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '[^_]+_[^_]+_raw__stream_ym_default_[^_]+_yandex_metrika_stream$')        
...
[0m06:51:31.662692 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.667105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.668100 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.672759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'datacraft_clientname_raw__stream_yd_default_accountid_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.675710 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.685275 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.716491 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m06:51:31.721199 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m06:51:31.722124 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-07-01 06:51:31.649628 => 2024-07-01 06:51:31.721964
[0m06:51:31.722615 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:51:31.728400 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-07-01 06:51:31.639857 => 2024-07-01 06:51:31.728277
[0m06:51:31.729964 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m06:51:31.730710 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:51:31.735611 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m06:51:31.736296 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_yd_default_accountid_custom_report') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_yd_default_accountid_custom_report
)

)
  )...
[0m06:51:31.737366 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(toString(_airbyte_extracted_at), 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_raw_id") AS _airbyte_raw_id,
        toString("_airbyte_data") AS _airbyte_data,
        toString("_airbyte_extracted_at") AS _airbyte_extracted_at
FROM test.datacraft_clientname_raw__stream_ym_default_accountid_yandex_metrika_stream
)

)
  )...
[0m06:51:31.754048 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.757066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m06:51:31.758495 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:31.762872 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m06:51:31.763894 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.766230 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m06:51:31.768305 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.769628 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m06:51:31.771079 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.774066 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m06:51:31.775359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.778524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m06:51:31.779374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.781151 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m06:51:31.783337 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.784778 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m06:51:31.785554 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.791744 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m06:51:31.795295 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.799232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m06:51:31.800901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.803070 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-07-01 06:51:31.723093 => 2024-07-01 06:51:31.802998
[0m06:51:31.804243 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb1a500>]}
[0m06:51:31.804681 [info ] [Thread-1 (]: 20 of 92 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.17s]
[0m06:51:31.805061 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m06:51:31.805300 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:51:31.806175 [info ] [Thread-1 (]: 21 of 92 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m06:51:31.807056 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m06:51:31.807363 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m06:51:31.808109 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.809092 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:51:31.810995 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-07-01 06:51:31.731220 => 2024-07-01 06:51:31.810931
[0m06:51:31.825734 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m06:51:31.826960 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff00f40>]}
[0m06:51:31.828216 [info ] [Thread-2 (]: 19 of 92 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.19s]
[0m06:51:31.829573 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m06:51:31.830961 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-07-01 06:51:31.811301 => 2024-07-01 06:51:31.830620
[0m06:51:31.832141 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:51:31.833178 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:51:31.834318 [info ] [Thread-2 (]: 22 of 92 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m06:51:31.840936 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m06:51:31.841281 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m06:51:31.847298 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:51:31.857767 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m06:51:31.886405 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.887894 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-07-01 06:51:31.853383 => 2024-07-01 06:51:31.887701
[0m06:51:31.888486 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:51:31.896528 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.897596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.903108 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.907347 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.911619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:31.913731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.920069 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:31.925336 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_cohorts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:31.929036 [debug] [Thread-2 (]: 
    In test.incremental_adjust_events_default_event_metrics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:31.954751 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:31.958788 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:31.964276 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.965061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:31.996928 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
    )
        ...
[0m06:51:32.000598 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
    )
        ...
[0m06:51:32.034309 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.039830 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.047185 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:32.050515 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.052320 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.055495 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m06:51:32.057487 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_event_metrics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_event_metrics
  
      ...
[0m06:51:32.058989 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.061097 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m06:51:32.062327 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_cohorts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_cohorts
  
      ...
[0m06:51:32.097518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.099266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

      delete from test.incremental_adjust_events_default_cohorts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:32.100256 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:32.102893 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

      delete from test.incremental_adjust_events_default_event_metrics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:32.231782 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m06:51:32.235474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.242201 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:51:32.247292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.251912 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.254081 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        insert into test.incremental_adjust_events_default_cohorts select "__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:32.259317 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.261433 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        insert into test.incremental_adjust_events_default_event_metrics select "__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:32.273757 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.277289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.279712 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.282883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.283849 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.289249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_distributed_new_data 
  ...
[0m06:51:32.294134 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.295241 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.298651 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_distributed_new_data 
  ...
[0m06:51:32.301255 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-07-01 06:51:31.835157 => 2024-07-01 06:51:32.301176
[0m06:51:32.303158 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfeae080>]}
[0m06:51:32.304260 [info ] [Thread-1 (]: 21 of 92 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.50s]
[0m06:51:32.304872 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m06:51:32.305417 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:51:32.306350 [info ] [Thread-1 (]: 23 of 92 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m06:51:32.307186 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.308040 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m06:51:32.310415 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-07-01 06:51:31.888709 => 2024-07-01 06:51:32.310345
[0m06:51:32.310966 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m06:51:32.312333 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdba3df0>]}
[0m06:51:32.312821 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:51:32.313478 [info ] [Thread-2 (]: 22 of 92 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.47s]
[0m06:51:32.319704 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m06:51:32.320369 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m06:51:32.321431 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:51:32.322275 [info ] [Thread-2 (]: 24 of 92 START sql table model test.incremental_adjust_registry_default_events . [RUN]
[0m06:51:32.322981 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-07-01 06:51:32.313973 => 2024-07-01 06:51:32.322808
[0m06:51:32.324014 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_registry_default_events'
[0m06:51:32.324989 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:51:32.325397 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_registry_default_events)
[0m06:51:32.335526 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.336163 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:51:32.344338 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m06:51:32.346684 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (compile): 2024-07-01 06:51:32.338448 => 2024-07-01 06:51:32.346305
[0m06:51:32.347293 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:51:32.353640 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.371879 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.376933 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

            

    
        create table test.incremental_adjust_registry_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
    )
        ...
[0m06:51:32.379806 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.383557 [debug] [Thread-1 (]: 
    In test.incremental_adjust_events_default_network:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:32.387728 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.392358 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:32.394832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
    )
        ...
[0m06:51:32.406123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.410500 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_registry_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.420302 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.421252 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.423559 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"
[0m06:51:32.426826 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.429133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_registry_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_registry_default_events


SELECT * 

FROM test.normalize_adjust_registry_default_events
  ...
[0m06:51:32.436585 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.438466 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m06:51:32.439781 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_adjust_events_default_network


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_adjust_events_default_network
  
      ...
[0m06:51:32.455493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.460315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
EXCHANGE TABLES test.incremental_adjust_registry_default_events__dbt_backup AND test.incremental_adjust_registry_default_events 
  
  ...
[0m06:51:32.463427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.464604 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

      delete from test.incremental_adjust_events_default_network where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:32.469677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.473722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_registry_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_registry_default_events"} */
drop table if exists test.incremental_adjust_registry_default_events__dbt_backup 
  ...
[0m06:51:32.479662 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.481079 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_registry_default_events (execute): 2024-07-01 06:51:32.347477 => 2024-07-01 06:51:32.481010
[0m06:51:32.481796 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3893310>]}
[0m06:51:32.482196 [info ] [Thread-2 (]: 24 of 92 OK created sql table model test.incremental_adjust_registry_default_events  [[32mOK[0m in 0.16s]
[0m06:51:32.482638 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_registry_default_events
[0m06:51:32.483063 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:51:32.484011 [info ] [Thread-2 (]: 25 of 92 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m06:51:32.484936 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m06:51:32.485103 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m06:51:32.485273 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:51:32.489658 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m06:51:32.490320 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-07-01 06:51:32.485374 => 2024-07-01 06:51:32.490213
[0m06:51:32.490643 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:51:32.506132 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.514662 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.596121 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m06:51:32.597715 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.600608 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.609518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.611277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        insert into test.incremental_adjust_events_default_network select "__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:32.612279 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.616718 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_deeplinks:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:32.619726 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.624108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:32.626526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
    )
        ...
[0m06:51:32.628108 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.631377 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.636747 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.640220 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_distributed_new_data 
  ...
[0m06:51:32.643853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:32.645841 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-07-01 06:51:32.325679 => 2024-07-01 06:51:32.645770
[0m06:51:32.646458 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cda6b7f0>]}
[0m06:51:32.647537 [info ] [Thread-1 (]: 23 of 92 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.34s]
[0m06:51:32.648088 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m06:51:32.648587 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:51:32.649175 [info ] [Thread-1 (]: 26 of 92 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m06:51:32.650696 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m06:51:32.651454 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.651858 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m06:51:32.655479 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.656146 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:51:32.665398 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m06:51:32.666417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.668322 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m06:51:32.669174 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_deeplinks


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_deeplinks
  
      ...
[0m06:51:32.670167 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-07-01 06:51:32.659398 => 2024-07-01 06:51:32.670064
[0m06:51:32.670696 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:51:32.677590 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.686857 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.690358 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.695745 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.697477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

      delete from test.incremental_appmetrica_events_default_deeplinks where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:32.699297 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.702989 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:32.706226 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.713093 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.715919 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
    )
        ...
[0m06:51:32.751702 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:32.756674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.767255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.769183 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m06:51:32.770973 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_events


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_events
  
      ...
[0m06:51:32.773091 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:32.776152 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.783027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.784976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        insert into test.incremental_appmetrica_events_default_deeplinks select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_receive_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:32.810024 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:32.813235 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.818948 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.822348 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_distributed_new_data 
  ...
[0m06:51:32.825945 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:32.828395 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-07-01 06:51:32.490765 => 2024-07-01 06:51:32.828310
[0m06:51:32.829289 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cda51c90>]}
[0m06:51:32.855409 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:32.856589 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

      delete from test.incremental_appmetrica_events_default_events where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:32.938014 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:32.941534 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:32.948580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:32.950276 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        insert into test.incremental_appmetrica_events_default_events select "__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_json", "event_name", "event_receive_datetime", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:32.977615 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:32.980637 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:32.985174 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:32.990632 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_distributed_new_data 
  ...
[0m06:51:32.995902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:32.997839 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-07-01 06:51:32.671303 => 2024-07-01 06:51:32.997774
[0m06:51:32.998501 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cddd0ee0>]}
[0m06:51:33.710454 [info ] [Thread-2 (]: 25 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.34s]
[0m06:51:33.711565 [info ] [Thread-1 (]: 26 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.35s]
[0m06:51:33.712329 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m06:51:33.712838 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m06:51:33.714223 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:51:33.715301 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:51:33.716547 [info ] [Thread-2 (]: 27 of 92 START sql incremental model test.incremental_appmetrica_events_default_installations  [RUN]
[0m06:51:33.717333 [info ] [Thread-1 (]: 28 of 92 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m06:51:33.719367 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations'
[0m06:51:33.720447 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m06:51:33.721006 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations)
[0m06:51:33.721346 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m06:51:33.721659 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:51:33.721888 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:51:33.728062 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m06:51:33.733136 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m06:51:33.735188 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (compile): 2024-07-01 06:51:33.722219 => 2024-07-01 06:51:33.734987
[0m06:51:33.735809 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:51:33.741755 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-07-01 06:51:33.728625 => 2024-07-01 06:51:33.741511
[0m06:51:33.743244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.743794 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:51:33.754044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.760006 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:33.764697 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.765725 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.769920 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.776013 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.777321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.780977 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_installations:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:33.783722 [debug] [Thread-1 (]: 
    In test.incremental_appmetrica_events_default_screen_view:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:33.787698 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:33.791214 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:33.795984 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:33.801175 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

            

    
        create table test.incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
    )
        ...
[0m06:51:33.802604 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.806026 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
    )
        ...
[0m06:51:33.837011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:33.839948 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.841194 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:33.845360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.850184 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.852296 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"
[0m06:51:33.853234 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.855510 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m06:51:33.855877 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_installations


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_installations
  
      ...
[0m06:51:33.857408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  -- depends_on: test.normalize_appmetrica_events_default_screen_view


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_screen_view
  
      ...
[0m06:51:33.870838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.872068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

      delete from test.incremental_appmetrica_events_default_installations where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:33.917978 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:33.919533 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

      delete from test.incremental_appmetrica_events_default_screen_view where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:33.955978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:33.959516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.965496 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:33.968725 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:33.970728 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.973602 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */

        insert into test.incremental_appmetrica_events_default_installations select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_receive_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:33.976872 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.978966 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        insert into test.incremental_appmetrica_events_default_screen_view select "__date", "event_receive_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view" from test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:33.988681 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.993163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:33.993964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:33.998690 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.002700 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.007923 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations"} */
drop table if exists test.incremental_appmetrica_events_default_installations__dbt_distributed_new_data 
  ...
[0m06:51:34.008736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.015876 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_distributed_new_data 
  ...
[0m06:51:34.018631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.021081 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations (execute): 2024-07-01 06:51:33.735986 => 2024-07-01 06:51:34.021009
[0m06:51:34.021876 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.024334 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cd9671f0>]}
[0m06:51:34.026982 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-07-01 06:51:33.745173 => 2024-07-01 06:51:34.026902
[0m06:51:34.028052 [info ] [Thread-2 (]: 27 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_installations  [[32mOK[0m in 0.31s]
[0m06:51:34.029771 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cd966b30>]}
[0m06:51:34.030465 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_installations
[0m06:51:34.031120 [info ] [Thread-1 (]: 28 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.31s]
[0m06:51:34.032178 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:51:34.033024 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m06:51:34.033835 [info ] [Thread-2 (]: 29 of 92 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m06:51:34.034625 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:51:34.036147 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m06:51:34.037187 [info ] [Thread-1 (]: 30 of 92 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m06:51:34.038002 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m06:51:34.039396 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m06:51:34.040026 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:51:34.040552 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m06:51:34.047940 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m06:51:34.048571 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:51:34.052710 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m06:51:34.054105 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-07-01 06:51:34.041102 => 2024-07-01 06:51:34.053876
[0m06:51:34.054673 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:51:34.062238 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.063645 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-07-01 06:51:34.049032 => 2024-07-01 06:51:34.063468
[0m06:51:34.064351 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:51:34.070622 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
    )
        ...
[0m06:51:34.072616 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.078215 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.085460 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.088643 [debug] [Thread-2 (]: 
    In test.incremental_appmetrica_events_default_sessions_starts:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:34.092045 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.097027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.100459 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
    )
        ...
[0m06:51:34.102206 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.106309 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.118175 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.120048 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m06:51:34.120625 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_registry_default_profiles


SELECT * 

FROM test.normalize_appmetrica_registry_default_profiles
  ...
[0m06:51:34.128975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.132406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.139745 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.141633 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m06:51:34.142924 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_appmetrica_events_default_sessions_starts


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_appmetrica_events_default_sessions_starts
  
      ...
[0m06:51:34.145572 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.147023 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m06:51:34.157616 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.162359 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m06:51:34.167081 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.168681 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-07-01 06:51:34.065178 => 2024-07-01 06:51:34.168597
[0m06:51:34.169568 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc0b2e0>]}
[0m06:51:34.170168 [info ] [Thread-1 (]: 30 of 92 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.13s]
[0m06:51:34.170731 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m06:51:34.171181 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:51:34.172241 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.172926 [info ] [Thread-1 (]: 31 of 92 START sql incremental model test.incremental_calltouch_events_default_calls  [RUN]
[0m06:51:34.175679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

      delete from test.incremental_appmetrica_events_default_sessions_starts where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:34.176663 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_calltouch_events_default_calls'
[0m06:51:34.178110 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_calltouch_events_default_calls)
[0m06:51:34.178712 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:51:34.184498 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m06:51:34.186058 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (compile): 2024-07-01 06:51:34.178898 => 2024-07-01 06:51:34.185779
[0m06:51:34.186554 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:51:34.198110 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.208804 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.215464 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.223640 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.238517 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:34.246265 [debug] [Thread-1 (]: 
    In test.incremental_calltouch_events_default_calls:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:34.249747 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.253810 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.260805 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.263833 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

            

    
        create table test.incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
    )
        ...
[0m06:51:34.264887 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.268498 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        insert into test.incremental_appmetrica_events_default_sessions_starts select "__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_receive_datetime", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:34.284268 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.289630 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.294706 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.298220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_distributed_new_data 
  ...
[0m06:51:34.302593 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.303536 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:34.305801 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-07-01 06:51:34.054842 => 2024-07-01 06:51:34.305729
[0m06:51:34.309478 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.310634 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff05d80>]}
[0m06:51:34.313134 [info ] [Thread-2 (]: 29 of 92 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.28s]
[0m06:51:34.314097 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m06:51:34.314846 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:51:34.315763 [info ] [Thread-2 (]: 32 of 92 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m06:51:34.317380 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m06:51:34.317679 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m06:51:34.317980 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:51:34.322503 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m06:51:34.324115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.324633 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-07-01 06:51:34.318210 => 2024-07-01 06:51:34.324542
[0m06:51:34.327552 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"
[0m06:51:34.328284 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:51:34.337491 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.339277 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        
  
    
    
        
        insert into test.incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_calltouch_events_default_calls


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_calltouch_events_default_calls
  
      ...
[0m06:51:34.345406 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.352300 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.358293 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.361418 [debug] [Thread-2 (]: 
    In test.incremental_mt_datestat_default_banners_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:34.365635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.369879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.372679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
    )
        ...
[0m06:51:34.396330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.400149 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.403072 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:34.404378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

      delete from test.incremental_calltouch_events_default_calls where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:34.407022 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.408889 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m06:51:34.410406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_datestat_default_banners_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_mt_datestat_default_banners_statistics
  
      ...
[0m06:51:34.433839 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.435198 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

      delete from test.incremental_mt_datestat_default_banners_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:34.467673 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:34.471525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

    select name, type from system.columns where table = 'incremental_calltouch_events_default_calls'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.478554 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.479301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:34.481868 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */

        insert into test.incremental_calltouch_events_default_calls select "__date", "additionalTags", "attribution", "attrs", "browser", "callbackCall", "callbackInfo", "callClientUniqueId", "callerNumber", "callId", "callphase", "callReferenceId", "callUrl", "city", "clientId", "ctCallerId", "ctClientId", "ctGlobalId", "date", "dcm", "device", "duration", "googleAdWords", "hostname", "ip", "keyword", "manager", "mapVisits", "medium", "order", "orders", "os", "phoneNumber", "phonesInText", "phrases", "redirectNumber", "ref", "sessionDate", "sessionId", "sipCallId", "siteId", "siteName", "source", "statusDetails", "subPoolName", "successful", "targetCall", "timestamp", "uniqTargetCall", "uniqueCall", "url", "userAgent", "utmCampaign", "utmContent", "utmMedium", "utmSource", "utmTerm", "waitingConnect", "yaClientId", "yandexDirect", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:34.485930 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.493282 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.495273 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        insert into test.incremental_mt_datestat_default_banners_statistics select "__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:34.512541 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.516415 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.518626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.525187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.525680 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.529308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_distributed_new_data 
  ...
[0m06:51:34.534742 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.538560 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_calltouch_events_default_calls: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_calltouch_events_default_calls"} */
drop table if exists test.incremental_calltouch_events_default_calls__dbt_distributed_new_data 
  ...
[0m06:51:34.539488 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.543458 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-07-01 06:51:34.328877 => 2024-07-01 06:51:34.543339
[0m06:51:34.544414 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.545454 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdd09480>]}
[0m06:51:34.547751 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_calltouch_events_default_calls (execute): 2024-07-01 06:51:34.186715 => 2024-07-01 06:51:34.547680
[0m06:51:34.550499 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdbdaaa0>]}
[0m06:51:34.549171 [info ] [Thread-2 (]: 32 of 92 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.23s]
[0m06:51:34.551813 [info ] [Thread-1 (]: 31 of 92 OK created sql incremental model test.incremental_calltouch_events_default_calls  [[32mOK[0m in 0.37s]
[0m06:51:34.552489 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m06:51:34.553136 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_calltouch_events_default_calls
[0m06:51:34.553879 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:51:34.554746 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:51:34.555696 [info ] [Thread-2 (]: 33 of 92 START sql table model test.incremental_mt_registry_default_banners .... [RUN]
[0m06:51:34.556518 [info ] [Thread-1 (]: 34 of 92 START sql table model test.incremental_mt_registry_default_campaigns .. [RUN]
[0m06:51:34.557854 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_banners'
[0m06:51:34.559024 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns'
[0m06:51:34.559848 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_banners)
[0m06:51:34.560279 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns)
[0m06:51:34.560623 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:51:34.560916 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:51:34.566519 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m06:51:34.571545 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m06:51:34.573447 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (compile): 2024-07-01 06:51:34.561316 => 2024-07-01 06:51:34.573167
[0m06:51:34.574315 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:51:34.581001 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

            

    
        create table test.incremental_mt_registry_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
    )
        ...
[0m06:51:34.582910 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (compile): 2024-07-01 06:51:34.567361 => 2024-07-01 06:51:34.582469
[0m06:51:34.583838 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:51:34.591443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

            

    
        create table test.incremental_mt_registry_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
    )
        ...
[0m06:51:34.608653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.613340 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.618412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.621821 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.622914 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.626325 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"
[0m06:51:34.628982 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_banners


SELECT * 

FROM test.normalize_mt_registry_default_banners
  ...
[0m06:51:34.632451 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.634558 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"
[0m06:51:34.635368 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_registry_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_mt_registry_default_campaigns


SELECT * 

FROM test.normalize_mt_registry_default_campaigns
  ...
[0m06:51:34.649693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.651082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
EXCHANGE TABLES test.incremental_mt_registry_default_banners__dbt_backup AND test.incremental_mt_registry_default_banners 
  
  ...
[0m06:51:34.652959 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.654534 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_registry_default_campaigns__dbt_backup AND test.incremental_mt_registry_default_campaigns 
  
  ...
[0m06:51:34.661252 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.666547 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_banners"} */
drop table if exists test.incremental_mt_registry_default_banners__dbt_backup 
  ...
[0m06:51:34.667413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.673098 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns"} */
drop table if exists test.incremental_mt_registry_default_campaigns__dbt_backup 
  ...
[0m06:51:34.676493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.678328 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_banners (execute): 2024-07-01 06:51:34.574519 => 2024-07-01 06:51:34.678189
[0m06:51:34.679207 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfee9090>]}
[0m06:51:34.679793 [info ] [Thread-2 (]: 33 of 92 OK created sql table model test.incremental_mt_registry_default_banners  [[32mOK[0m in 0.12s]
[0m06:51:34.680700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.681187 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_banners
[0m06:51:34.683141 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns (execute): 2024-07-01 06:51:34.584334 => 2024-07-01 06:51:34.683072
[0m06:51:34.683930 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:51:34.685539 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdab5180>]}
[0m06:51:34.686219 [info ] [Thread-2 (]: 35 of 92 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m06:51:34.687324 [info ] [Thread-1 (]: 34 of 92 OK created sql table model test.incremental_mt_registry_default_campaigns  [[32mOK[0m in 0.13s]
[0m06:51:34.688660 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m06:51:34.689323 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_registry_default_campaigns
[0m06:51:34.689675 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m06:51:34.690332 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:51:34.691287 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:51:34.692124 [info ] [Thread-1 (]: 36 of 92 START sql table model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m06:51:34.697226 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m06:51:34.698229 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m06:51:34.698876 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m06:51:34.699235 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:51:34.705676 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m06:51:34.706782 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-07-01 06:51:34.692589 => 2024-07-01 06:51:34.706525
[0m06:51:34.707483 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:51:34.712836 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
    )
        ...
[0m06:51:34.713845 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-07-01 06:51:34.699368 => 2024-07-01 06:51:34.713698
[0m06:51:34.715665 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:51:34.723996 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
    )
        ...
[0m06:51:34.743664 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.747897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.749549 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.754131 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.756759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.758833 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m06:51:34.760619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_utmcraft_registry_default_utmresult


SELECT * 

FROM test.normalize_utmcraft_registry_default_utmresult
  ...
[0m06:51:34.762415 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.764983 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m06:51:34.766674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_backup ("Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_sheets_periodstat_default_planCosts


SELECT * 

FROM test.normalize_sheets_periodstat_default_planCosts
  ...
[0m06:51:34.776121 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.777713 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m06:51:34.783271 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:34.784915 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m06:51:34.787815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.794627 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m06:51:34.796189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.878633 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:34.881528 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m06:51:34.883665 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-07-01 06:51:34.707872 => 2024-07-01 06:51:34.883579
[0m06:51:34.886059 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc10fd0>]}
[0m06:51:34.886717 [info ] [Thread-2 (]: 35 of 92 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.20s]
[0m06:51:34.887318 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m06:51:34.887754 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:51:34.888703 [info ] [Thread-2 (]: 37 of 92 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m06:51:34.889925 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.890870 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m06:51:34.893159 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-07-01 06:51:34.716345 => 2024-07-01 06:51:34.892970
[0m06:51:34.894053 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m06:51:34.895672 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb9f7f0>]}
[0m06:51:34.896229 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:51:34.897026 [info ] [Thread-1 (]: 36 of 92 OK created sql table model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.20s]
[0m06:51:34.903574 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m06:51:34.904511 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m06:51:34.905775 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:51:34.906810 [info ] [Thread-1 (]: 38 of 92 START sql table model test.incremental_vkads_registry_default_ad_plans  [RUN]
[0m06:51:34.907904 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-07-01 06:51:34.897633 => 2024-07-01 06:51:34.907692
[0m06:51:34.910111 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans'
[0m06:51:34.911797 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:51:34.912326 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans)
[0m06:51:34.922286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.923346 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:51:34.932957 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m06:51:34.934496 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (compile): 2024-07-01 06:51:34.926507 => 2024-07-01 06:51:34.934223
[0m06:51:34.935154 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:51:34.936040 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.943655 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

            

    
        create table test.incremental_vkads_registry_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
    )
        ...
[0m06:51:34.949088 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.958971 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.963370 [debug] [Thread-2 (]: 
    In test.incremental_vkads_datestat_default_ad_plans_statistics:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:34.967555 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:34.971900 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:34.975370 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    )
        ...
[0m06:51:34.978579 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:34.982840 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:34.992763 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:34.995097 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"
[0m06:51:34.996436 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_registry_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_registry_default_ad_plans


SELECT * 

FROM test.normalize_vkads_registry_default_ad_plans
  ...
[0m06:51:34.999915 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.004904 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.012275 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.014447 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m06:51:35.015313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_vkads_datestat_default_ad_plans_statistics


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_vkads_datestat_default_ad_plans_statistics
  
      ...
[0m06:51:35.021882 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.023317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_registry_default_ad_plans__dbt_backup AND test.incremental_vkads_registry_default_ad_plans 
  
  ...
[0m06:51:35.032765 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.034256 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

      delete from test.incremental_vkads_datestat_default_ad_plans_statistics where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:35.037289 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.041778 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans"} */
drop table if exists test.incremental_vkads_registry_default_ad_plans__dbt_backup 
  ...
[0m06:51:35.047931 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.049633 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans (execute): 2024-07-01 06:51:34.936413 => 2024-07-01 06:51:35.049543
[0m06:51:35.050616 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc104c0>]}
[0m06:51:35.051210 [info ] [Thread-1 (]: 38 of 92 OK created sql table model test.incremental_vkads_registry_default_ad_plans  [[32mOK[0m in 0.14s]
[0m06:51:35.051669 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_registry_default_ad_plans
[0m06:51:35.052017 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:51:35.052380 [info ] [Thread-1 (]: 39 of 92 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m06:51:35.053724 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m06:51:35.054019 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m06:51:35.054231 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:51:35.060534 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m06:51:35.061890 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-07-01 06:51:35.054399 => 2024-07-01 06:51:35.061727
[0m06:51:35.062369 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:51:35.070776 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.079933 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.085539 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.093828 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.101415 [debug] [Thread-1 (]: 
    In test.incremental_ym_events_default_yandex_metrika_stream:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:35.105344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.110720 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:35.114555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
    )
        ...
[0m06:51:35.116657 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:35.120920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.133166 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.135574 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        insert into test.incremental_vkads_datestat_default_ad_plans_statistics select "__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:35.141629 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:35.148252 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.155115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.158215 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m06:51:35.159452 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.163151 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.165389 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_ym_events_default_yandex_metrika_stream


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_ym_events_default_yandex_metrika_stream
  
      ...
[0m06:51:35.169764 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.173690 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_distributed_new_data 
  ...
[0m06:51:35.177742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:35.180411 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-07-01 06:51:34.912737 => 2024-07-01 06:51:35.180315
[0m06:51:35.181239 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc10760>]}
[0m06:51:35.182459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.181871 [info ] [Thread-2 (]: 37 of 92 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.29s]
[0m06:51:35.184822 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

      delete from test.incremental_ym_events_default_yandex_metrika_stream where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:35.185531 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m06:51:35.187484 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:51:35.188046 [info ] [Thread-2 (]: 40 of 92 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m06:51:35.190248 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m06:51:35.190906 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m06:51:35.191279 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:51:35.198130 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m06:51:35.199041 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-07-01 06:51:35.191433 => 2024-07-01 06:51:35.198903
[0m06:51:35.199467 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:51:35.206997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.217064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.222786 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.231074 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.234435 [debug] [Thread-2 (]: 
    In test.incremental_yd_datestat_default_custom_report:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:35.237439 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.243034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.246975 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
    )
        ...
[0m06:51:35.247996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:35.252827 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.262043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.265200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        insert into test.incremental_ym_events_default_yandex_metrika_stream select "__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:35.271802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.275025 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.280025 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.283274 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.284416 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.287578 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m06:51:35.289203 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  -- depends_on: test.normalize_yd_datestat_default_custom_report


SELECT * REPLACE(toDate(__date, 'UTC') AS __date) 

FROM test.normalize_yd_datestat_default_custom_report
  
      ...
[0m06:51:35.291450 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.296539 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_distributed_new_data 
  ...
[0m06:51:35.300376 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:35.303005 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-07-01 06:51:35.062557 => 2024-07-01 06:51:35.302925
[0m06:51:35.303766 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdbecf70>]}
[0m06:51:35.304279 [info ] [Thread-1 (]: 39 of 92 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.25s]
[0m06:51:35.304670 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m06:51:35.305018 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:51:35.305871 [info ] [Thread-1 (]: 41 of 92 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m06:51:35.306919 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m06:51:35.308079 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.308451 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m06:51:35.309795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

      delete from test.incremental_yd_datestat_default_custom_report where (__date, __table_name) in (select __date, __table_name
                                          from test.incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:35.310409 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:51:35.330017 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m06:51:35.339232 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.365261 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.367107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:35.371124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.373150 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.380124 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.382752 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        insert into test.incremental_yd_datestat_default_custom_report select "__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at" from test.incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:35.386661 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m06:51:35.389938 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-07-01 06:51:35.311565 => 2024-07-01 06:51:35.389711
[0m06:51:35.390605 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:51:35.396267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



    )
        ...
[0m06:51:35.401879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.405396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.411963 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.416936 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_distributed_new_data 
  ...
[0m06:51:35.420433 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:35.422658 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-07-01 06:51:35.199689 => 2024-07-01 06:51:35.422570
[0m06:51:35.423512 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdd02ce0>]}
[0m06:51:35.424212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:35.424734 [info ] [Thread-2 (]: 40 of 92 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.23s]
[0m06:51:35.428018 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.428815 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m06:51:35.430154 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:51:35.431212 [info ] [Thread-2 (]: 42 of 92 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m06:51:35.432089 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m06:51:35.433018 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m06:51:35.433836 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:51:35.447185 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.455383 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m06:51:35.460850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m06:51:35.464981 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )



  ...
[0m06:51:35.474171 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.478961 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.481030 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.482798 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m06:51:35.484543 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.488765 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m06:51:35.490987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.496082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m06:51:35.498204 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.502867 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.508488 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.509358 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.511142 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-07-01 06:51:35.390883 => 2024-07-01 06:51:35.511070
[0m06:51:35.514864 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_installations$')        
...
[0m06:51:35.516101 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcc8490>]}
[0m06:51:35.517682 [info ] [Thread-1 (]: 41 of 92 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.21s]
[0m06:51:35.518170 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m06:51:35.518512 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m06:51:35.519550 [info ] [Thread-1 (]: 43 of 92 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m06:51:35.521169 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m06:51:35.521506 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m06:51:35.521784 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m06:51:35.535634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:35.541086 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m06:51:35.546118 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.554877 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.558310 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.559822 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.564348 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m06:51:35.590488 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:35.594671 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_banners$')        
...
[0m06:51:35.597429 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:35.602437 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.603564 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.610538 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.612365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.615892 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m06:51:35.618321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.621687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_registry_[^_]+_campaigns$')        
...
[0m06:51:35.623451 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.627845 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.628656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.634864 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_registry_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.636335 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.642727 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.645172 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m06:51:35.656138 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m06:51:35.659652 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-07-01 06:51:35.434178 => 2024-07-01 06:51:35.659481
[0m06:51:35.660153 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:51:35.666718 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.668119 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.674330 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:51:35.680479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.686009 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.692716 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.701723 [debug] [Thread-2 (]: 
    In test.join_appmetrica_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:35.704638 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.711233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.712152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:35.714759 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



    )
        ...
[0m06:51:35.716935 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m06:51:35.720668 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-07-01 06:51:35.522036 => 2024-07-01 06:51:35.720505
[0m06:51:35.721050 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m06:51:35.727603 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.735469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.739028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.748947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.752983 [debug] [Thread-1 (]: 
    In test.join_mt_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:35.755895 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:35.760308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:35.764420 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



    )
        ...
[0m06:51:35.836173 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:35.839301 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.845093 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.846750 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m06:51:35.848690 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_registry_default_banners
-- depends_on: test.incremental_mt_registry_default_campaigns
                                                             
  
  
  
  
  

WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_registry_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_registry_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id



  
      ...
[0m06:51:35.918016 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:35.919190 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

      delete from test.join_mt_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:35.977998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:35.981578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.983257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.27 seconds
[0m06:51:35.987067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:35.989019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.991433 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        insert into test.join_mt_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:35.996421 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:35.998692 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m06:51:36.000040 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_installations
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_receive_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("event_receive_datetime" as String) as "event_receive_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_installations' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_receive_datetime" as String) as "install_receive_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_installations

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_receive_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_receive_datetime" as DateTime) as "event_receive_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_receive_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_receive_datetime" as String) as "session_start_receive_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
), final_union AS (
SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts
)
SELECT *
FROM final_union



  
      ...
[0m06:51:36.005029 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.008576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:36.013834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.017470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_distributed_new_data 
  ...
[0m06:51:36.022243 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.024613 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-07-01 06:51:35.721168 => 2024-07-01 06:51:36.024503
[0m06:51:36.025469 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdbc91e0>]}
[0m06:51:36.026050 [info ] [Thread-1 (]: 43 of 92 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.50s]
[0m06:51:36.026644 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m06:51:36.027067 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:51:36.027595 [info ] [Thread-1 (]: 44 of 92 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m06:51:36.028695 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m06:51:36.029185 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m06:51:36.029518 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:51:36.046349 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m06:51:36.057208 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.061832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.071795 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.075278 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m06:51:36.076047 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-07-01 06:51:36.029711 => 2024-07-01 06:51:36.075944
[0m06:51:36.076328 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:51:36.082565 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



    )
        ...
[0m06:51:36.114325 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:36.118641 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.125194 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.127464 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m06:51:36.129724 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )



  ...
[0m06:51:36.154386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:36.155767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m06:51:36.163005 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.168436 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m06:51:36.173468 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.175397 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-07-01 06:51:36.076468 => 2024-07-01 06:51:36.175314
[0m06:51:36.176188 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb61150>]}
[0m06:51:36.176798 [info ] [Thread-1 (]: 44 of 92 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.15s]
[0m06:51:36.177324 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m06:51:36.177735 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:51:36.178608 [info ] [Thread-1 (]: 45 of 92 START sql table model test.join_sheets_periodstat ..................... [RUN]
[0m06:51:36.179729 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m06:51:36.180503 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m06:51:36.180799 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:51:36.191635 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m06:51:36.202216 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.209085 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.216993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.220176 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m06:51:36.221945 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-07-01 06:51:36.180930 => 2024-07-01 06:51:36.221720
[0m06:51:36.222466 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:51:36.229587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



    )
        ...
[0m06:51:36.257543 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:36.261643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.269807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.271673 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m06:51:36.272482 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

  
    
    
        
        insert into test.join_sheets_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )



  ...
[0m06:51:36.292217 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:36.294074 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m06:51:36.304046 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.309415 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m06:51:36.314273 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.315999 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-07-01 06:51:36.222619 => 2024-07-01 06:51:36.315914
[0m06:51:36.316819 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcc8490>]}
[0m06:51:36.317499 [info ] [Thread-1 (]: 45 of 92 OK created sql table model test.join_sheets_periodstat ................ [[32mOK[0m in 0.14s]
[0m06:51:36.318177 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m06:51:36.318667 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:51:36.319689 [info ] [Thread-1 (]: 46 of 92 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m06:51:36.320850 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m06:51:36.321240 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m06:51:36.321497 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:51:36.350785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m06:51:36.360700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.367366 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.372937 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.377333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_registry_[^_]+_ad_plans$')        
...
[0m06:51:36.385948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.474893 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_registry_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.481906 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.485171 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m06:51:36.491365 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.493181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:51:36.528145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:36.529599 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m06:51:36.530397 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-07-01 06:51:36.321670 => 2024-07-01 06:51:36.530231
[0m06:51:36.530804 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:51:36.538089 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.544122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.547337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.553165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.55 seconds
[0m06:51:36.554644 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

      delete from test.join_appmetrica_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:36.556177 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.559474 [debug] [Thread-1 (]: 
    In test.join_vkads_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:36.562672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:36.566464 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.569650 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



    )
        ...
[0m06:51:36.615979 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:36.621242 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.622059 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:36.627602 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.629428 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.631597 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m06:51:36.633779 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_registry_default_ad_plans
                                                             
    
  
    
  
    

WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),  

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_registry_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_registry_default_ad_plans

            
        )

        )
)  

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    ad_plans.name AS adCampaignName,
    ad_plans.id AS adId,
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id



  
      ...
[0m06:51:36.637677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.639896 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        insert into test.join_appmetrica_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link" from test.join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:36.656120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:36.659697 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:36.664001 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.667089 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_distributed_new_data 
  ...
[0m06:51:36.670809 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.673086 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-07-01 06:51:35.660345 => 2024-07-01 06:51:36.673006
[0m06:51:36.673969 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdce0a90>]}
[0m06:51:36.674508 [info ] [Thread-2 (]: 42 of 92 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 1.24s]
[0m06:51:36.674979 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m06:51:36.675395 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m06:51:36.676124 [info ] [Thread-2 (]: 47 of 92 START sql incremental model test.join_ym_events ....................... [RUN]
[0m06:51:36.677494 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m06:51:36.677748 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m06:51:36.677930 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m06:51:36.689352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:36.694621 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_')        
...
[0m06:51:36.696230 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

      delete from test.join_vkads_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:36.706721 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.711258 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.718523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.722478 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m06:51:36.734234 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.736383 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:51:36.757326 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:36.766142 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.768116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:36.771434 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m06:51:36.772909 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-07-01 06:51:36.678046 => 2024-07-01 06:51:36.772663
[0m06:51:36.773628 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m06:51:36.784323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.785113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:36.789133 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        insert into test.join_vkads_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "__emitted_at", "__link" from test.join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:36.798069 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.805209 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.807977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:36.813307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:36.814588 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.822960 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.826951 [debug] [Thread-2 (]: 
    In test.join_ym_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:36.832636 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_distributed_new_data 
  ...
[0m06:51:36.840994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:36.846032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:36.849150 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-07-01 06:51:36.530968 => 2024-07-01 06:51:36.849041
[0m06:51:36.850313 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cde0c850>]}
[0m06:51:36.852188 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.851259 [info ] [Thread-1 (]: 46 of 92 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.53s]
[0m06:51:36.856673 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



    )
        ...
[0m06:51:36.858315 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m06:51:36.861358 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m06:51:36.862291 [info ] [Thread-1 (]: 48 of 92 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m06:51:36.863992 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m06:51:36.864872 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m06:51:36.865904 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m06:51:36.894677 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m06:51:36.908756 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.917181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.924242 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.929663 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m06:51:36.930838 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:36.936781 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:36.944308 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.947044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        False as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m06:51:36.948159 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:36.953293 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m06:51:36.955728 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream

                                                             
  
  
  
  
  

WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 
FROM events



  
      ...
[0m06:51:36.982669 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:36.984660 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m06:51:36.986527 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-07-01 06:51:36.866408 => 2024-07-01 06:51:36.986313
[0m06:51:36.987097 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m06:51:36.999337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.005769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:37.007967 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

      delete from test.join_ym_events where (__date, __table_name) in (select __date, __table_name
                                          from test.join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:37.011599 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.017337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.025998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.030734 [debug] [Thread-1 (]: 
    In test.join_yd_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:37.035236 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:37.040597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:37.044380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



    )
        ...
[0m06:51:37.071943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:37.076860 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.081263 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:37.085872 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.088540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.092168 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        insert into test.join_ym_events select "__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link" from test.join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:37.099418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.102802 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m06:51:37.104537 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
                                                             
  
  
  
  
  

WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps



  
      ...
[0m06:51:37.134872 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:37.141323 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:37.148996 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.155548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_distributed_new_data 
  ...
[0m06:51:37.160844 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:37.161924 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:37.165183 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-07-01 06:51:36.773997 => 2024-07-01 06:51:37.165083
[0m06:51:37.167085 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

      delete from test.join_yd_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:37.168387 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcaa830>]}
[0m06:51:37.170695 [info ] [Thread-2 (]: 47 of 92 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.49s]
[0m06:51:37.171426 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m06:51:37.171962 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:51:37.173701 [info ] [Thread-2 (]: 49 of 92 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m06:51:37.174765 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m06:51:37.175130 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m06:51:37.175413 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:51:37.193846 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m06:51:37.207631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.213627 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.222673 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.223854 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:37.227221 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m06:51:37.232424 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.235368 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-07-01 06:51:37.175578 => 2024-07-01 06:51:37.235157
[0m06:51:37.235925 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:51:37.243011 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

    )
        ...
[0m06:51:37.245331 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.249791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        insert into test.join_yd_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link" from test.join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:37.263386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.270005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:37.276597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.281716 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_distributed_new_data 
  ...
[0m06:51:37.282564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:37.288544 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.292146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.295453 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-07-01 06:51:36.987317 => 2024-07-01 06:51:37.295337
[0m06:51:37.296519 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdbd3be0>]}
[0m06:51:37.297586 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.300857 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m06:51:37.298393 [info ] [Thread-1 (]: 48 of 92 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.43s]
[0m06:51:37.304314 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m06:51:37.304986 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:51:37.306715 [info ] [Thread-1 (]: 50 of 92 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m06:51:37.307573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("crmUserId") as crmUserId ,
        toString("cityName") as cityName ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_appmetrica_registry_appprofilematching
)

) 

  ...
[0m06:51:37.309014 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m06:51:37.311028 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m06:51:37.311477 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:51:37.318034 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m06:51:37.327235 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.328423 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.331566 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m06:51:37.338245 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.350832 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.358677 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m06:51:37.359920 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.365443 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m06:51:37.367599 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-07-01 06:51:37.311635 => 2024-07-01 06:51:37.367335
[0m06:51:37.368432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.369032 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:51:37.371141 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-07-01 06:51:37.236140 => 2024-07-01 06:51:37.371046
[0m06:51:37.381414 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

    )
        ...
[0m06:51:37.383049 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff01f00>]}
[0m06:51:37.385692 [info ] [Thread-2 (]: 49 of 92 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.21s]
[0m06:51:37.387235 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m06:51:37.388278 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m06:51:37.389265 [info ] [Thread-2 (]: 51 of 92 START sql table model test.combine_periodstat ......................... [RUN]
[0m06:51:37.390750 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m06:51:37.391249 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m06:51:37.391542 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m06:51:37.398882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m06:51:37.420238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.426349 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.439290 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:37.443658 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.450733 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.456232 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m06:51:37.457361 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-07-01 06:51:37.391687 => 2024-07-01 06:51:37.457141
[0m06:51:37.457950 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m06:51:37.468457 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

    )
        ...
[0m06:51:37.469633 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.479577 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m06:51:37.481317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("utmHash") as utmHash ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_utmcraft_registry_utmhashregistry
)

) 

  ...
[0m06:51:37.504513 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.506200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m06:51:37.520309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.527525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m06:51:37.529505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:37.535376 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.541082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.542877 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-07-01 06:51:37.371687 => 2024-07-01 06:51:37.542769
[0m06:51:37.544009 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdbd0370>]}
[0m06:51:37.544800 [info ] [Thread-1 (]: 50 of 92 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.24s]
[0m06:51:37.545494 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m06:51:37.546442 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.547282 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m06:51:37.549877 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m06:51:37.550947 [info ] [Thread-1 (]: 52 of 92 START sql incremental model test.combine_events ....................... [RUN]
[0m06:51:37.552744 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m06:51:37.553391 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m06:51:37.554113 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

  
    
    
        
        insert into test.combine_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toString("campaign") as campaign ,
        toFloat64("cost") as cost ,
        toDate("periodStart") as periodStart ,
        toDate("periodEnd") as periodEnd ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__table_name") as __table_name ,
        toString("__link") as __link 
FROM test.join_sheets_periodstat
)

) 

  ...
[0m06:51:37.554632 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m06:51:37.563012 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m06:51:37.574930 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.580249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.584488 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:37.586172 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m06:51:37.587774 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.594525 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.604374 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.610827 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m06:51:37.611993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:37.618371 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m06:51:37.621206 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-07-01 06:51:37.556802 => 2024-07-01 06:51:37.621024
[0m06:51:37.621760 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m06:51:37.631842 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.634794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.637197 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-07-01 06:51:37.458334 => 2024-07-01 06:51:37.637114
[0m06:51:37.639594 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff009d0>]}
[0m06:51:37.640436 [info ] [Thread-2 (]: 51 of 92 OK created sql table model test.combine_periodstat .................... [[32mOK[0m in 0.25s]
[0m06:51:37.641712 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m06:51:37.642465 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m06:51:37.643850 [info ] [Thread-2 (]: 53 of 92 START sql incremental model test.combine_datestat ..................... [RUN]
[0m06:51:37.645440 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m06:51:37.646113 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m06:51:37.647126 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.647676 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m06:51:37.652822 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.659982 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m06:51:37.668162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.680473 [debug] [Thread-1 (]: 
    In test.combine_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:37.681608 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.686310 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:37.691932 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.699684 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.701115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.704865 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

    )
        ...
[0m06:51:37.714352 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.724004 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.729814 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.736742 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.743074 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m06:51:37.745032 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-07-01 06:51:37.653433 => 2024-07-01 06:51:37.744814
[0m06:51:37.745516 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m06:51:37.754548 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.755647 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:37.761039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.764240 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.769238 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.771003 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.773941 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m06:51:37.775683 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.780979 [debug] [Thread-2 (]: 
    In test.combine_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:37.787058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime("event_datetime") as event_datetime ,
        toString("accountName") as accountName ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8("registrationButtonClick") as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt8("installApp") as installApp ,
        toUInt8("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt32(0) as pageViews 
FROM test.join_appmetrica_events
)

UNION ALL


(
SELECT
        toDateTime("__date") as __date ,
        toString("__table_name") as __table_name ,
        toDateTime(0) as event_datetime ,
        toString('') as accountName ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("transactionId") as transactionId ,
        toString("utmHash") as utmHash ,
        toUInt8("sessions") as sessions ,
        toUInt8("addToCartSessions") as addToCartSessions ,
        toUInt8("cartViewSessions") as cartViewSessions ,
        toUInt8("checkoutSessions") as checkoutSessions ,
        toUInt8("webSalesSessions") as webSalesSessions ,
        toUInt8("sales") as sales ,
        toFloat64(0) as amountSales ,
        toUInt8("registrationCardSessions") as registrationCardSessions ,
        toUInt8(0) as registrationButtonClick ,
        toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt8(0) as instantDiscountActivationSessions ,
        toUInt8("couponActivationSessions") as couponActivationSessions ,
        toUInt8("participationInLotterySessions") as participationInLotterySessions ,
        toUInt8(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt8(0) as installApp ,
        toUInt8(0) as installs ,
        toString('') as installationDeviceId ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt32("pageViews") as pageViews 
FROM test.join_ym_events
)

) 

  
      ...
[0m06:51:37.787577 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:37.794474 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.797487 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

    )
        ...
[0m06:51:37.832164 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:37.836104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.842739 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.845024 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m06:51:37.847803 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_mt_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString('') as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId 
FROM test.join_vkads_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64("adCost") as adCost ,
        toInt32("impressions") as impressions ,
        toInt32("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId 
FROM test.join_yd_datestat
)

) 

  
      ...
[0m06:51:37.849833 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:37.851113 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

      delete from test.combine_events where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:37.915430 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:37.916761 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

      delete from test.combine_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:37.947450 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m06:51:37.952092 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:37.961288 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:37.964313 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        insert into test.combine_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews" from test.combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:37.987474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:37.992103 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:37.996660 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:38.002039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_distributed_new_data 
  ...
[0m06:51:38.006186 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:51:38.009871 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:38.010934 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.015441 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-07-01 06:51:37.621982 => 2024-07-01 06:51:38.015329
[0m06:51:38.016884 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cde2bee0>]}
[0m06:51:38.018677 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.021104 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        insert into test.combine_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId" from test.combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:38.017784 [info ] [Thread-1 (]: 52 of 92 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.46s]
[0m06:51:38.023870 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m06:51:38.024727 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:51:38.026321 [info ] [Thread-1 (]: 54 of 92 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m06:51:38.027572 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m06:51:38.028014 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m06:51:38.028602 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:51:38.042759 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:38.046031 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m06:51:38.051545 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:38.054321 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-07-01 06:51:38.029027 => 2024-07-01 06:51:38.053960
[0m06:51:38.055034 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:51:38.062563 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:51:38.063611 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.076514 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_distributed_new_data 
  ...
[0m06:51:38.081758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:38.084835 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-07-01 06:51:37.745717 => 2024-07-01 06:51:38.084733
[0m06:51:38.085833 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb45f90>]}
[0m06:51:38.086715 [info ] [Thread-2 (]: 53 of 92 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.44s]
[0m06:51:38.087664 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m06:51:38.088694 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:51:38.092435 [info ] [Thread-2 (]: 55 of 92 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m06:51:38.094533 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m06:51:38.095286 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m06:51:38.095795 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:51:38.272535 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m06:51:38.273806 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.21 seconds
[0m06:51:38.278529 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:38.280891 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-07-01 06:51:38.096075 => 2024-07-01 06:51:38.280586
[0m06:51:38.281660 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:51:38.291774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:51:38.293152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.296623 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m06:51:38.298709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as AppProfileMatchingHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_registry_appprofilematching 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m06:51:38.334241 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:38.338667 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:38.345630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.348703 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m06:51:38.349717 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:38.351947 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m06:51:38.353478 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'UtmHashRegistry' 
    
    THEN toDateTime(
    0) 
    
    WHEN __link = 'AppProfileMatching' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashRegistryHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_registry_utmhashregistry 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m06:51:38.363841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.369104 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m06:51:38.374746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.376570 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-07-01 06:51:38.055269 => 2024-07-01 06:51:38.376484
[0m06:51:38.377405 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdd27af0>]}
[0m06:51:38.378035 [info ] [Thread-1 (]: 54 of 92 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.35s]
[0m06:51:38.378696 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m06:51:38.379231 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m06:51:38.380766 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:38.381458 [info ] [Thread-1 (]: 56 of 92 START sql table model test.hash_periodstat ............................ [RUN]
[0m06:51:38.385383 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m06:51:38.386380 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m06:51:38.389401 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m06:51:38.389889 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m06:51:38.405024 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m06:51:38.406122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:38.413907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m06:51:38.415945 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-07-01 06:51:38.390083 => 2024-07-01 06:51:38.415751
[0m06:51:38.416620 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m06:51:38.425519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:51:38.436622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:38.438870 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-07-01 06:51:38.281876 => 2024-07-01 06:51:38.438770
[0m06:51:38.439918 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcd62f0>]}
[0m06:51:38.564083 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:51:38.569088 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:38.576182 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.578550 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m06:51:38.579524 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

  
    
    
        
        insert into test.hash_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'ManualAdCostStat' 
    
    THEN toDateTime(
    0) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '')))))) as ManualAdCostStatHash


FROM test.combine_periodstat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m06:51:38.602357 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:38.603832 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m06:51:38.611947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:38.616848 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m06:51:38.621026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:38.622565 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-07-01 06:51:38.417041 => 2024-07-01 06:51:38.622475
[0m06:51:38.623642 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdd27f70>]}
[0m06:51:39.195146 [info ] [Thread-2 (]: 55 of 92 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.35s]
[0m06:51:39.197461 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m06:51:39.196735 [info ] [Thread-1 (]: 56 of 92 OK created sql table model test.hash_periodstat ....................... [[32mOK[0m in 0.24s]
[0m06:51:39.198683 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m06:51:39.199915 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m06:51:39.200827 [info ] [Thread-2 (]: 57 of 92 START sql incremental model test.hash_events .......................... [RUN]
[0m06:51:39.201781 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m06:51:39.204001 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m06:51:39.204846 [info ] [Thread-1 (]: 58 of 92 START sql incremental model test.hash_datestat ........................ [RUN]
[0m06:51:39.206214 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m06:51:39.207418 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m06:51:39.208283 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m06:51:39.209107 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m06:51:39.227594 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m06:51:39.228443 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m06:51:39.242792 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m06:51:39.244248 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-07-01 06:51:39.209847 => 2024-07-01 06:51:39.243883
[0m06:51:39.245468 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m06:51:39.260365 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.263012 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-07-01 06:51:39.229508 => 2024-07-01 06:51:39.262647
[0m06:51:39.263688 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m06:51:39.273160 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.274364 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.283096 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.285205 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.290148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.291922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.304497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.317480 [debug] [Thread-2 (]: 
    In test.hash_events:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:39.318455 [debug] [Thread-1 (]: 
    In test.hash_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:39.324489 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:39.327839 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:39.333653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.336186 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:51:39.337419 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.341550 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m06:51:39.390057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:39.394768 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.403412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.405614 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m06:51:39.406492 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'AdCostStat' 
    
    THEN toDateTime(__date) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


FROM test.combine_datestat 
WHERE 

    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m06:51:39.462676 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:39.464168 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

      delete from test.hash_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:39.476615 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:51:39.481280 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.493844 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.497555 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m06:51:39.498864 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE  
    WHEN __link = 'VisitStat' 
    THEN VisitStatHash 
  
    WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
  
    WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
  
    WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
  
    WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 

    END) as __id
  , assumeNotNull(CASE
    WHEN __link = 'VisitStat' 
    
    THEN toDateTime(__date) 
    
    WHEN __link = 'AppInstallStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppEventStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppSessionStat' 
    
    THEN toDateTime(event_datetime) 
    
    WHEN __link = 'AppDeeplinkStat' 
    
    THEN toDateTime(event_datetime) 
    END) AS __datetime
FROM (

SELECT *, 
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as VisitStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


FROM test.combine_events 
WHERE 

    True AND 
    True AND 
    True AND 
    True AND 
    True
)
-- SETTINGS short_circuit_function_evaluation=force_enable


  
      ...
[0m06:51:39.532528 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m06:51:39.536201 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.542146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.544809 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        insert into test.hash_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime" from test.hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:39.559832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.563031 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:39.567508 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:39.573041 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_distributed_new_data 
  ...
[0m06:51:39.577162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:39.579877 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-07-01 06:51:39.263879 => 2024-07-01 06:51:39.579764
[0m06:51:39.580768 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cda47eb0>]}
[0m06:51:39.581324 [info ] [Thread-1 (]: 58 of 92 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.37s]
[0m06:51:39.581828 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m06:51:39.582282 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m06:51:39.582738 [info ] [Thread-1 (]: 59 of 92 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m06:51:39.584620 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m06:51:39.584964 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m06:51:39.585182 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m06:51:39.592009 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.599402 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.601434 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m06:51:39.602091 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-07-01 06:51:39.585309 => 2024-07-01 06:51:39.601981
[0m06:51:39.602430 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m06:51:39.608387 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m06:51:39.635068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.14 seconds
[0m06:51:39.635969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:39.637457 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

      delete from test.hash_events where (__date, __table_name) in (select __date, __table_name
                                          from test.hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:39.641199 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.651604 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.653544 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m06:51:39.654334 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m06:51:39.673302 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:39.674899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m06:51:39.679975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:39.683093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.684957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.691313 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m06:51:39.696515 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.697237 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:39.700390 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        insert into test.hash_events select "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime" from test.hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:39.702391 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-07-01 06:51:39.602580 => 2024-07-01 06:51:39.702315
[0m06:51:39.704842 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfe46d40>]}
[0m06:51:39.705436 [info ] [Thread-1 (]: 59 of 92 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.12s]
[0m06:51:39.705920 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m06:51:39.706299 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:51:39.707149 [info ] [Thread-1 (]: 60 of 92 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m06:51:39.707959 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m06:51:39.708186 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m06:51:39.708377 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:51:39.714871 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.721464 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.722286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:39.725085 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m06:51:39.729307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:39.731957 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-07-01 06:51:39.708496 => 2024-07-01 06:51:39.731753
[0m06:51:39.732464 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:51:39.738723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

    )
        ...
[0m06:51:39.740318 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.744758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_distributed_new_data 
  ...
[0m06:51:39.750675 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.754106 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-07-01 06:51:39.246217 => 2024-07-01 06:51:39.754003
[0m06:51:39.755015 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb16350>]}
[0m06:51:39.755588 [info ] [Thread-2 (]: 57 of 92 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.55s]
[0m06:51:39.756144 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m06:51:39.756588 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m06:51:39.757976 [info ] [Thread-2 (]: 61 of 92 START sql table model test.link_periodstat ............................ [RUN]
[0m06:51:39.758873 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m06:51:39.759415 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m06:51:39.760084 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m06:51:39.766352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:39.770758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.774459 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.783277 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.784324 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.786568 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m06:51:39.789035 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m06:51:39.790618 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-07-01 06:51:39.760308 => 2024-07-01 06:51:39.790459
[0m06:51:39.791096 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m06:51:39.791456 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime

  ...
[0m06:51:39.797999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

    )
        ...
[0m06:51:39.814121 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:39.816316 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m06:51:39.825266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.830014 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m06:51:39.831929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:39.836496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.837747 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.840861 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-07-01 06:51:39.732714 => 2024-07-01 06:51:39.840793
[0m06:51:39.841574 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdccbd30>]}
[0m06:51:39.842023 [info ] [Thread-1 (]: 60 of 92 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.13s]
[0m06:51:39.842989 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m06:51:39.843902 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m06:51:39.844581 [info ] [Thread-1 (]: 62 of 92 START sql table model test.link_datestat .............................. [RUN]
[0m06:51:39.845330 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m06:51:39.845554 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m06:51:39.845785 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m06:51:39.852814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.856823 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.859657 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m06:51:39.862261 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime

  ...
[0m06:51:39.869238 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.871643 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m06:51:39.872993 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-07-01 06:51:39.845905 => 2024-07-01 06:51:39.872814
[0m06:51:39.873398 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m06:51:39.878738 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

    )
        ...
[0m06:51:39.888139 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:39.889728 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m06:51:39.897029 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.902866 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m06:51:39.906729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:39.909716 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.910883 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.914268 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-07-01 06:51:39.791844 => 2024-07-01 06:51:39.914184
[0m06:51:39.915512 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc6cc40>]}
[0m06:51:39.915998 [info ] [Thread-2 (]: 61 of 92 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.16s]
[0m06:51:39.916395 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m06:51:39.916725 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m06:51:39.917736 [info ] [Thread-2 (]: 63 of 92 START sql table model test.link_events ................................ [RUN]
[0m06:51:39.919031 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.919924 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m06:51:39.922968 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m06:51:39.923620 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m06:51:39.924506 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m06:51:39.934118 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.935349 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime

  ...
[0m06:51:39.940978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.945453 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m06:51:39.946123 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-07-01 06:51:39.924732 => 2024-07-01 06:51:39.946010
[0m06:51:39.946461 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m06:51:39.952067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

    )
        ...
[0m06:51:39.956898 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:39.958405 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m06:51:39.966909 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:39.971953 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m06:51:39.976429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:39.978374 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-07-01 06:51:39.873665 => 2024-07-01 06:51:39.978251
[0m06:51:39.979416 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e39600a0>]}
[0m06:51:39.980403 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:39.981268 [info ] [Thread-1 (]: 62 of 92 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.13s]
[0m06:51:39.985867 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:39.986625 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m06:51:39.988498 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m06:51:39.989744 [info ] [Thread-1 (]: 64 of 92 START sql table model test.full_periodstat ............................ [RUN]
[0m06:51:39.991694 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m06:51:39.992142 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m06:51:39.992414 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m06:51:40.000710 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.004300 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m06:51:40.006897 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m06:51:40.009166 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,VisitStatHash,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,YmClientHash,UtmHashHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, VisitStatHash, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, YmClientHash, UtmHashHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime

  ...
[0m06:51:40.014007 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.016169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m06:51:40.023591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.027011 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m06:51:40.033766 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.035357 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m06:51:40.038494 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:40.040075 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m06:51:40.041704 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.043268 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m06:51:40.047825 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.053048 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m06:51:40.054721 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.056606 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m06:51:40.057610 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.060611 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-07-01 06:51:39.946615 => 2024-07-01 06:51:40.060518
[0m06:51:40.061439 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cd94ff10>]}
[0m06:51:40.062333 [info ] [Thread-2 (]: 63 of 92 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.14s]
[0m06:51:40.063169 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m06:51:40.063847 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m06:51:40.064487 [info ] [Thread-2 (]: 65 of 92 START sql incremental model test.full_datestat ........................ [RUN]
[0m06:51:40.066002 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m06:51:40.067091 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.067902 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m06:51:40.069600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m06:51:40.070291 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m06:51:40.080485 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m06:51:40.082724 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.084381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m06:51:40.086155 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.087771 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m06:51:40.093825 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.095726 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m06:51:40.096732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.101284 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m06:51:40.103861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.105524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m06:51:40.110736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.112484 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m06:51:40.114378 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.117340 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m06:51:40.119398 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.125841 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.126450 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.128494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m06:51:40.135875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.137956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m06:51:40.139008 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.143288 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m06:51:40.145210 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-07-01 06:51:39.992560 => 2024-07-01 06:51:40.144948
[0m06:51:40.145762 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m06:51:40.151690 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m06:51:40.152975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.155998 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m06:51:40.161354 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.162957 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m06:51:40.167869 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.169463 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m06:51:40.175901 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.178673 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m06:51:40.179428 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-07-01 06:51:40.072346 => 2024-07-01 06:51:40.179256
[0m06:51:40.179833 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m06:51:40.187839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.189423 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:40.192748 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.198047 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.204270 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.204664 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.206501 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m06:51:40.208977 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

  
    
    
        
        insert into test.full_periodstat__dbt_backup ("period_date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * 
FROM t0
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m06:51:40.213921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.221069 [debug] [Thread-2 (]: 
    In test.full_datestat:
        Schema changed: False
        Source columns not in target: []
        Target columns not in source: []
        New column types: []
  
[0m06:51:40.308504 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m06:51:40.311095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:40.313118 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m06:51:40.317449 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.320024 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m06:51:40.321532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.325870 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m06:51:40.331323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.332686 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-07-01 06:51:40.145963 => 2024-07-01 06:51:40.332619
[0m06:51:40.333389 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb23100>]}
[0m06:51:40.333974 [info ] [Thread-1 (]: 64 of 92 OK created sql table model test.full_periodstat ....................... [[32mOK[0m in 0.34s]
[0m06:51:40.334398 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m06:51:40.334752 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m06:51:40.335766 [info ] [Thread-1 (]: 66 of 92 START sql table model test.graph_tuples ............................... [RUN]
[0m06:51:40.336683 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m06:51:40.336934 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m06:51:40.337142 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m06:51:40.343650 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m06:51:40.344552 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-07-01 06:51:40.337251 => 2024-07-01 06:51:40.344413
[0m06:51:40.344923 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m06:51:40.351595 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppEventStatHash'), toDateTime(0),  AppEventStatHash) as node_left
            from test.hash_events
            where nullIf(AppEventStatHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



    )
        ...
[0m06:51:40.352466 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:40.356675 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.365018 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.367510 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m06:51:40.368093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * 
FROM t1
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  
      ...
[0m06:51:40.375293 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.378717 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.385890 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.388038 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m06:51:40.389601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppEventStatHash'), toDateTime(0),  AppEventStatHash) as node_left
            from test.hash_events
            where nullIf(AppEventStatHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
            
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null
            



  ...
[0m06:51:40.403712 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:40.405091 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

      delete from test.full_datestat where (__date, __table_name) in (select __date, __table_name
                                          from test.full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477);
    ...
[0m06:51:40.422143 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:40.423990 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m06:51:40.429336 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.433813 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m06:51:40.439603 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.441345 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-07-01 06:51:40.345046 => 2024-07-01 06:51:40.441269
[0m06:51:40.442119 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb22e30>]}
[0m06:51:40.442773 [info ] [Thread-1 (]: 66 of 92 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.11s]
[0m06:51:40.443339 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m06:51:40.444362 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m06:51:40.444859 [info ] [Thread-1 (]: 67 of 92 START sql table model test.graph_lookup ............................... [RUN]
[0m06:51:40.447044 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m06:51:40.447302 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m06:51:40.447502 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m06:51:40.451109 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m06:51:40.451963 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-07-01 06:51:40.447628 => 2024-07-01 06:51:40.451796
[0m06:51:40.452475 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m06:51:40.457797 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys




    )
        ...
[0m06:51:40.462163 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:40.467807 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.477258 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.479949 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        insert into test.full_datestat select "__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash" from test.full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477
    ...
[0m06:51:40.482793 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.486783 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.493113 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.494950 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m06:51:40.495693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys




  ...
[0m06:51:40.500264 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.504288 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_new_data_0aa9aeaf_5cd9_435f_8908_a9af65d9d477 
  ...
[0m06:51:40.509052 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.513049 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_distributed_new_data 
  ...
[0m06:51:40.515249 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.517376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m06:51:40.518751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.521152 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-07-01 06:51:40.180056 => 2024-07-01 06:51:40.521086
[0m06:51:40.521845 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdaf4250>]}
[0m06:51:40.522939 [info ] [Thread-2 (]: 65 of 92 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.46s]
[0m06:51:40.523854 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m06:51:40.529774 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.534416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m06:51:40.539172 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.540627 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-07-01 06:51:40.452638 => 2024-07-01 06:51:40.540509
[0m06:51:40.541204 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cde2a770>]}
[0m06:51:40.541567 [info ] [Thread-1 (]: 67 of 92 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.09s]
[0m06:51:40.541907 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m06:51:40.544514 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m06:51:40.545216 [info ] [Thread-2 (]: 68 of 92 START sql table model test.graph_unique ............................... [RUN]
[0m06:51:40.546077 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m06:51:40.546282 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m06:51:40.546460 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m06:51:40.549954 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m06:51:40.550600 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-07-01 06:51:40.546565 => 2024-07-01 06:51:40.550515
[0m06:51:40.550831 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m06:51:40.556415 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup




    )
        ...
[0m06:51:40.577248 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.580994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.587250 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.588724 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m06:51:40.589170 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup




  ...
[0m06:51:40.599629 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.600792 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m06:51:40.607944 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.612066 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m06:51:40.616986 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.618512 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-07-01 06:51:40.550933 => 2024-07-01 06:51:40.618409
[0m06:51:40.619080 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3961360>]}
[0m06:51:40.620210 [info ] [Thread-2 (]: 68 of 92 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.07s]
[0m06:51:40.620587 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m06:51:40.622254 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m06:51:40.623555 [info ] [Thread-1 (]: 69 of 92 START sql table model test.graph_edge ................................. [RUN]
[0m06:51:40.624233 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m06:51:40.624405 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m06:51:40.624558 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m06:51:40.627968 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m06:51:40.628577 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-07-01 06:51:40.624668 => 2024-07-01 06:51:40.628476
[0m06:51:40.628897 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m06:51:40.633520 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash




    )
        ...
[0m06:51:40.657703 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.660710 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.666515 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.668315 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m06:51:40.668970 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash




  ...
[0m06:51:40.683016 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.684949 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m06:51:40.694595 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.698540 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m06:51:40.706557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.711330 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m06:51:40.714760 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.716291 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-07-01 06:51:40.629040 => 2024-07-01 06:51:40.716202
[0m06:51:40.717019 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb19540>]}
[0m06:51:40.717669 [info ] [Thread-1 (]: 69 of 92 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.09s]
[0m06:51:40.718126 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m06:51:40.719695 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m06:51:40.720666 [info ] [Thread-2 (]: 70 of 92 START sql table model test.graph_glue ................................. [RUN]
[0m06:51:40.721811 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m06:51:40.721977 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m06:51:40.722135 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m06:51:40.725099 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m06:51:40.726953 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-07-01 06:51:40.722226 => 2024-07-01 06:51:40.726822
[0m06:51:40.727257 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m06:51:40.730996 [debug] [Thread-2 (]: Running iteration 0
[0m06:51:40.731615 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m06:51:40.783851 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:40.784925 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m06:51:40.816316 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:40.817573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m06:51:40.826064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.828748 [debug] [Thread-2 (]: VALUE: 1
[0m06:51:40.829161 [debug] [Thread-2 (]: Running iteration 1
[0m06:51:40.829655 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m06:51:40.861484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:40.862641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m06:51:40.895229 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:40.896396 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m06:51:40.903679 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.905210 [debug] [Thread-2 (]: VALUE: 0
[0m06:51:40.905583 [debug] [Thread-2 (]: Running iteration 2
[0m06:51:40.905884 [debug] [Thread-2 (]: Running iteration 3
[0m06:51:40.906093 [debug] [Thread-2 (]: Running iteration 4
[0m06:51:40.906262 [debug] [Thread-2 (]: Running iteration 5
[0m06:51:40.906390 [debug] [Thread-2 (]: Running iteration 6
[0m06:51:40.906552 [debug] [Thread-2 (]: Running iteration 7
[0m06:51:40.906688 [debug] [Thread-2 (]: Running iteration 8
[0m06:51:40.906824 [debug] [Thread-2 (]: Running iteration 9
[0m06:51:40.907003 [debug] [Thread-2 (]: Running iteration 10
[0m06:51:40.907128 [debug] [Thread-2 (]: Running iteration 11
[0m06:51:40.907269 [debug] [Thread-2 (]: Running iteration 12
[0m06:51:40.907435 [debug] [Thread-2 (]: Running iteration 13
[0m06:51:40.909153 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left




    )
        ...
[0m06:51:40.928670 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:40.932146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:40.942448 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.944443 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m06:51:40.944988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left




  ...
[0m06:51:40.957280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.958598 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m06:51:40.964389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:40.968954 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m06:51:40.972835 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:40.974644 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-07-01 06:51:40.727356 => 2024-07-01 06:51:40.974561
[0m06:51:40.975416 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb18d00>]}
[0m06:51:40.976056 [info ] [Thread-2 (]: 70 of 92 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.25s]
[0m06:51:40.976605 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m06:51:40.978705 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m06:51:40.979491 [info ] [Thread-1 (]: 71 of 92 START sql table model test.graph_qid .................................. [RUN]
[0m06:51:40.980358 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m06:51:40.980656 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m06:51:40.980846 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m06:51:40.984476 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m06:51:40.985192 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-07-01 06:51:40.980957 => 2024-07-01 06:51:40.985074
[0m06:51:40.985505 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m06:51:40.991425 [debug] [Thread-1 (]: Running iteration 0
[0m06:51:40.991985 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m06:51:41.023201 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:41.024869 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m06:51:41.063387 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:41.064643 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m06:51:41.071168 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.072532 [debug] [Thread-1 (]: VALUE: 0
[0m06:51:41.072759 [debug] [Thread-1 (]: Running iteration 1
[0m06:51:41.072895 [debug] [Thread-1 (]: Running iteration 2
[0m06:51:41.073022 [debug] [Thread-1 (]: Running iteration 3
[0m06:51:41.073144 [debug] [Thread-1 (]: Running iteration 4
[0m06:51:41.073265 [debug] [Thread-1 (]: Running iteration 5
[0m06:51:41.073389 [debug] [Thread-1 (]: Running iteration 6
[0m06:51:41.073571 [debug] [Thread-1 (]: Running iteration 7
[0m06:51:41.073710 [debug] [Thread-1 (]: Running iteration 8
[0m06:51:41.073829 [debug] [Thread-1 (]: Running iteration 9
[0m06:51:41.073948 [debug] [Thread-1 (]: Running iteration 10
[0m06:51:41.074069 [debug] [Thread-1 (]: Running iteration 11
[0m06:51:41.074200 [debug] [Thread-1 (]: Running iteration 12
[0m06:51:41.074320 [debug] [Thread-1 (]: Running iteration 13
[0m06:51:41.075890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup




    )
        ...
[0m06:51:41.100733 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.104289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.111303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.113119 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m06:51:41.113915 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup




  ...
[0m06:51:41.124877 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.126490 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m06:51:41.132982 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.138181 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m06:51:41.143517 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:41.145188 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-07-01 06:51:40.985626 => 2024-07-01 06:51:41.145112
[0m06:51:41.145899 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcc8e20>]}
[0m06:51:41.146326 [info ] [Thread-1 (]: 71 of 92 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.17s]
[0m06:51:41.146768 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m06:51:41.148656 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m06:51:41.149619 [info ] [Thread-2 (]: 72 of 92 START sql table model test.full_events ................................ [RUN]
[0m06:51:41.150442 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m06:51:41.150791 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m06:51:41.151063 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m06:51:41.158938 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m06:51:41.166196 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.168825 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m06:51:41.176564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.179135 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m06:51:41.185726 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.187570 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m06:51:41.192970 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:41.195315 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m06:51:41.202340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.204460 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m06:51:41.210131 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.212832 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m06:51:41.220958 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.224291 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m06:51:41.231667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.233754 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m06:51:41.239606 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.241406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m06:51:41.246987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.249425 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m06:51:41.250008 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-07-01 06:51:41.151249 => 2024-07-01 06:51:41.249920
[0m06:51:41.250253 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m06:51:41.255633 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

    )
        ...
[0m06:51:41.331033 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:41.334472 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.341600 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.344745 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m06:51:41.345294 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "qid", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT t0.*, link_registry_utmhashregistry.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t0 
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT t1.*, link_registry_appprofilematching.*EXCEPT(__emitted_at, __table_name, __id, __datetime, __link) 
FROM t1 
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT COLUMNS('^[^.]+$') FROM t2 

  ...
[0m06:51:41.425292 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m06:51:41.426850 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m06:51:41.433929 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.438523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m06:51:41.442863 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:41.444837 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-07-01 06:51:41.250390 => 2024-07-01 06:51:41.444766
[0m06:51:41.445451 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdadb130>]}
[0m06:51:41.445820 [info ] [Thread-2 (]: 72 of 92 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.30s]
[0m06:51:41.446207 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m06:51:41.447844 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m06:51:41.448372 [info ] [Thread-1 (]: 73 of 92 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m06:51:41.448973 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m06:51:41.449789 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m06:51:41.450383 [info ] [Thread-2 (]: 74 of 92 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m06:51:41.451019 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m06:51:41.451761 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m06:51:41.452267 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m06:51:41.452621 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m06:51:41.456824 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m06:51:41.457567 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m06:51:41.461758 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m06:51:41.462376 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-07-01 06:51:41.452929 => 2024-07-01 06:51:41.462261
[0m06:51:41.462733 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-07-01 06:51:41.458274 => 2024-07-01 06:51:41.462671
[0m06:51:41.463237 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m06:51:41.463733 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m06:51:41.472493 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m06:51:41.481352 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m06:51:41.512032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:41.516681 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.518888 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:41.522580 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.524266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.528598 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m06:51:41.530392 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m06:51:41.532231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.534869 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m06:51:41.535422 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m06:51:41.553841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.555393 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m06:51:41.564867 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.569175 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m06:51:41.570246 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:41.573192 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m06:51:41.575601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:41.577661 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-07-01 06:51:41.464190 => 2024-07-01 06:51:41.577461
[0m06:51:41.578621 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e46766e0>]}
[0m06:51:41.579279 [info ] [Thread-1 (]: 73 of 92 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.13s]
[0m06:51:41.579930 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m06:51:41.581322 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m06:51:41.581904 [info ] [Thread-1 (]: 75 of 92 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m06:51:41.582853 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m06:51:41.584089 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.584512 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m06:51:41.589998 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m06:51:41.590628 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m06:51:41.603603 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.604058 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m06:51:41.606340 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-07-01 06:51:41.472892 => 2024-07-01 06:51:41.606270
[0m06:51:41.607906 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc9d360>]}
[0m06:51:41.608620 [info ] [Thread-2 (]: 74 of 92 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.16s]
[0m06:51:41.609583 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m06:51:41.611303 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-07-01 06:51:41.591971 => 2024-07-01 06:51:41.611095
[0m06:51:41.611891 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m06:51:41.617581 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m06:51:41.619328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




    )
        ...
[0m06:51:41.619884 [info ] [Thread-2 (]: 76 of 92 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m06:51:41.623159 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m06:51:41.623502 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m06:51:41.623712 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m06:51:41.632411 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m06:51:41.633222 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-07-01 06:51:41.623820 => 2024-07-01 06:51:41.633097
[0m06:51:41.633679 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m06:51:41.641070 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




    )
        ...
[0m06:51:41.650303 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:41.654583 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.660952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.663152 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m06:51:41.664388 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.668414 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.669954 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid




  ...
[0m06:51:41.674051 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.675997 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m06:51:41.676889 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid




  ...
[0m06:51:41.686693 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.688428 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m06:51:41.691300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.692877 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m06:51:41.697687 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.703057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m06:51:41.704115 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.709725 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m06:51:41.710942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.714531 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-07-01 06:51:41.612105 => 2024-07-01 06:51:41.714422
[0m06:51:41.715885 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb1bd30>]}
[0m06:51:41.716622 [info ] [Thread-1 (]: 75 of 92 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.13s]
[0m06:51:41.717275 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m06:51:41.718383 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.721361 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-07-01 06:51:41.633803 => 2024-07-01 06:51:41.721281
[0m06:51:41.722237 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb19180>]}
[0m06:51:41.722907 [info ] [Thread-2 (]: 76 of 92 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.10s]
[0m06:51:41.723800 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m06:51:41.724627 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m06:51:41.726252 [info ] [Thread-1 (]: 77 of 92 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m06:51:41.727658 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m06:51:41.728584 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m06:51:41.729417 [info ] [Thread-2 (]: 78 of 92 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m06:51:41.730200 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m06:51:41.731404 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m06:51:41.732181 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m06:51:41.732665 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m06:51:41.738679 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m06:51:41.739372 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m06:51:41.743786 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m06:51:41.744996 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-07-01 06:51:41.739913 => 2024-07-01 06:51:41.744782
[0m06:51:41.745671 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m06:51:41.746275 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-07-01 06:51:41.733129 => 2024-07-01 06:51:41.746094
[0m06:51:41.753788 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




    )
        ...
[0m06:51:41.754351 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m06:51:41.761498 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




    )
        ...
[0m06:51:41.782765 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:41.786564 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.787636 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:41.794816 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.796160 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.799978 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m06:51:41.800712 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events




  ...
[0m06:51:41.802959 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.804977 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m06:51:41.805618 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events




  ...
[0m06:51:41.817360 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.819179 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m06:51:41.820380 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.823781 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m06:51:41.829896 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.835655 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m06:51:41.837193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.842003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m06:51:41.844019 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.845569 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-07-01 06:51:41.746660 => 2024-07-01 06:51:41.845488
[0m06:51:41.846437 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb26da0>]}
[0m06:51:41.848057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.847268 [info ] [Thread-2 (]: 78 of 92 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.12s]
[0m06:51:41.850141 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-07-01 06:51:41.756295 => 2024-07-01 06:51:41.850069
[0m06:51:41.850668 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m06:51:41.852033 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb24a00>]}
[0m06:51:41.853450 [info ] [Thread-1 (]: 77 of 92 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.12s]
[0m06:51:41.854647 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m06:51:41.855402 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m06:51:41.856274 [info ] [Thread-2 (]: 79 of 92 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m06:51:41.858462 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m06:51:41.859097 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m06:51:41.859667 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m06:51:41.860359 [info ] [Thread-1 (]: 80 of 92 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m06:51:41.861043 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m06:51:41.862141 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m06:51:41.869688 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m06:51:41.870199 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m06:51:41.871105 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m06:51:41.882060 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m06:51:41.882903 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-07-01 06:51:41.862551 => 2024-07-01 06:51:41.882717
[0m06:51:41.883323 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m06:51:41.888597 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m06:51:41.890325 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-07-01 06:51:41.871541 => 2024-07-01 06:51:41.890155
[0m06:51:41.890825 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m06:51:41.896789 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




    )
        ...
[0m06:51:41.929187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:41.933143 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.934908 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:41.938724 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:41.941048 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.943205 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m06:51:41.944176 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m06:51:41.947081 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.948879 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m06:51:41.949510 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   




  ...
[0m06:51:41.966472 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.967909 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m06:51:41.969434 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:41.971046 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m06:51:41.977532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.983167 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m06:51:41.984167 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.991812 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:41.992742 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m06:51:41.994297 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-07-01 06:51:41.890982 => 2024-07-01 06:51:41.994227
[0m06:51:41.996300 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cd97a290>]}
[0m06:51:41.997453 [info ] [Thread-1 (]: 80 of 92 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.13s]
[0m06:51:41.997926 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m06:51:41.999150 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m06:51:41.999925 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.000625 [info ] [Thread-1 (]: 81 of 92 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m06:51:42.002870 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-07-01 06:51:41.883604 => 2024-07-01 06:51:42.002784
[0m06:51:42.004171 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m06:51:42.005136 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc19ae0>]}
[0m06:51:42.005510 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m06:51:42.006533 [info ] [Thread-2 (]: 79 of 92 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.15s]
[0m06:51:42.007193 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m06:51:42.007631 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m06:51:42.013706 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m06:51:42.016062 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m06:51:42.016849 [info ] [Thread-2 (]: 82 of 92 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m06:51:42.017980 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m06:51:42.018732 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m06:51:42.019737 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m06:51:42.020207 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-07-01 06:51:42.008013 => 2024-07-01 06:51:42.020055
[0m06:51:42.023898 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m06:51:42.024578 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m06:51:42.030709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




    )
        ...
[0m06:51:42.032826 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-07-01 06:51:42.020584 => 2024-07-01 06:51:42.032617
[0m06:51:42.033674 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m06:51:42.041907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




    )
        ...
[0m06:51:42.057482 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:42.156408 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m06:51:42.160030 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:42.163514 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:42.169191 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.171248 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m06:51:42.172457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.175130 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m06:51:42.176141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period




  ...
[0m06:51:42.177514 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period




  ...
[0m06:51:42.189041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.190573 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m06:51:42.191394 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.194434 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m06:51:42.198928 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.205758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m06:51:42.206749 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.214471 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m06:51:42.215721 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.219027 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-07-01 06:51:42.034243 => 2024-07-01 06:51:42.218952
[0m06:51:42.221102 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcd6470>]}
[0m06:51:42.224111 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.223051 [info ] [Thread-2 (]: 82 of 92 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.20s]
[0m06:51:42.227766 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-07-01 06:51:42.025186 => 2024-07-01 06:51:42.227678
[0m06:51:42.229190 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m06:51:42.230718 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff38fa0>]}
[0m06:51:42.232088 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m06:51:42.233021 [info ] [Thread-1 (]: 81 of 92 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.23s]
[0m06:51:42.233937 [info ] [Thread-2 (]: 83 of 92 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m06:51:42.234736 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m06:51:42.236003 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m06:51:42.237711 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m06:51:42.238308 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m06:51:42.239124 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m06:51:42.244035 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m06:51:42.246870 [info ] [Thread-1 (]: 84 of 92 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m06:51:42.249243 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m06:51:42.249967 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m06:51:42.250505 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-07-01 06:51:42.239464 => 2024-07-01 06:51:42.250356
[0m06:51:42.250932 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m06:51:42.251429 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m06:51:42.256425 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m06:51:42.265438 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m06:51:42.267799 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-07-01 06:51:42.251801 => 2024-07-01 06:51:42.267571
[0m06:51:42.268284 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m06:51:42.274930 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




    )
        ...
[0m06:51:42.307184 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:42.312115 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:42.314682 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:42.319291 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:42.325499 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.326539 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.329564 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m06:51:42.331869 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m06:51:42.333120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m06:51:42.333666 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final




  ...
[0m06:51:42.365841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:42.366930 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:42.368755 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m06:51:42.370763 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m06:51:42.381758 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.388387 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m06:51:42.390256 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m06:51:42.397495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m06:51:42.398482 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.402139 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-07-01 06:51:42.268481 => 2024-07-01 06:51:42.402043
[0m06:51:42.403609 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdcaa890>]}
[0m06:51:42.404211 [info ] [Thread-1 (]: 84 of 92 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.15s]
[0m06:51:42.404786 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m06:51:42.405792 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.407889 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-07-01 06:51:42.256999 => 2024-07-01 06:51:42.407810
[0m06:51:42.408874 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb8ae00>]}
[0m06:51:42.410085 [info ] [Thread-2 (]: 83 of 92 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.17s]
[0m06:51:42.410924 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m06:51:42.411378 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m06:51:42.411921 [info ] [Thread-1 (]: 85 of 92 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m06:51:42.414170 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m06:51:42.414627 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m06:51:42.415514 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m06:51:42.416075 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m06:51:42.427634 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m06:51:42.428625 [info ] [Thread-2 (]: 86 of 92 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m06:51:42.431405 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m06:51:42.432189 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-01 06:51:42.416471 => 2024-07-01 06:51:42.431968
[0m06:51:42.432706 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m06:51:42.433363 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m06:51:42.434108 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m06:51:42.439964 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m06:51:42.452969 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m06:51:42.455559 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-07-01 06:51:42.440462 => 2024-07-01 06:51:42.455392
[0m06:51:42.456061 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m06:51:42.461843 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




    )
        ...
[0m06:51:42.486389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:42.490003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:42.497670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.500688 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m06:51:42.501822 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:42.506114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:42.508044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m06:51:42.512192 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.516020 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m06:51:42.516847 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)




  ...
[0m06:51:42.541620 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:42.543674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m06:51:42.546850 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m06:51:42.548524 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m06:51:42.555601 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.561416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m06:51:42.563158 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.568739 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m06:51:42.572128 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.574255 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-01 06:51:42.434542 => 2024-07-01 06:51:42.574163
[0m06:51:42.575268 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdb178b0>]}
[0m06:51:42.578285 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:42.580872 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-07-01 06:51:42.456293 => 2024-07-01 06:51:42.580779
[0m06:51:42.581975 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdd16b60>]}
[0m06:51:43.310417 [info ] [Thread-1 (]: 85 of 92 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.16s]
[0m06:51:43.311230 [info ] [Thread-2 (]: 86 of 92 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.15s]
[0m06:51:43.312939 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m06:51:43.313556 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m06:51:43.316582 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m06:51:43.318054 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m06:51:43.319614 [info ] [Thread-1 (]: 87 of 92 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m06:51:43.321139 [info ] [Thread-2 (]: 88 of 92 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m06:51:43.323364 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m06:51:43.325025 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m06:51:43.325732 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m06:51:43.326376 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m06:51:43.327428 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m06:51:43.328327 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m06:51:43.340753 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m06:51:43.352482 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m06:51:43.353778 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-07-01 06:51:43.329052 => 2024-07-01 06:51:43.353510
[0m06:51:43.354677 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-07-01 06:51:43.341366 => 2024-07-01 06:51:43.354316
[0m06:51:43.356526 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m06:51:43.357781 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m06:51:43.369510 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m06:51:43.379293 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




    )
        ...
[0m06:51:43.432770 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:43.437034 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.439294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m06:51:43.444909 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.446356 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.449953 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m06:51:43.450813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


FROM target_count




  ...
[0m06:51:43.454932 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.458404 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m06:51:43.459487 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


FROM target_count




  ...
[0m06:51:43.493227 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:43.495668 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m06:51:43.507080 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.508221 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:43.515287 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m06:51:43.517231 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m06:51:43.522886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.524783 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-07-01 06:51:43.370325 => 2024-07-01 06:51:43.524678
[0m06:51:43.525762 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdc6a230>]}
[0m06:51:43.526396 [info ] [Thread-2 (]: 88 of 92 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.20s]
[0m06:51:43.527019 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m06:51:43.528347 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m06:51:43.529088 [info ] [Thread-2 (]: 89 of 92 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m06:51:43.530155 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m06:51:43.530690 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m06:51:43.531616 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.532301 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m06:51:43.540355 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m06:51:43.550234 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m06:51:43.553337 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-07-01 06:51:43.540955 => 2024-07-01 06:51:43.553157
[0m06:51:43.553901 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m06:51:43.560384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m06:51:43.561746 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.565088 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-07-01 06:51:43.358660 => 2024-07-01 06:51:43.564956
[0m06:51:43.566360 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3962950>]}
[0m06:51:43.567508 [info ] [Thread-1 (]: 87 of 92 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.24s]
[0m06:51:43.568530 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m06:51:43.569870 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m06:51:43.570430 [info ] [Thread-1 (]: 90 of 92 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m06:51:43.571439 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m06:51:43.571803 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m06:51:43.572037 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m06:51:43.576925 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m06:51:43.577937 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-07-01 06:51:43.572186 => 2024-07-01 06:51:43.577754
[0m06:51:43.578487 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m06:51:43.585958 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




    )
        ...
[0m06:51:43.604306 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:43.608166 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.617327 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.620951 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m06:51:43.621758 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m06:51:43.629748 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m06:51:43.634428 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.642664 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.646748 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m06:51:43.647711 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "UtmHashHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out 




  ...
[0m06:51:43.671216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m06:51:43.672795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m06:51:43.682665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.687854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m06:51:43.693162 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m06:51:43.695470 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-07-01 06:51:43.554079 => 2024-07-01 06:51:43.695359
[0m06:51:43.696443 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cff357b0>]}
[0m06:51:43.697352 [info ] [Thread-2 (]: 89 of 92 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.17s]
[0m06:51:43.697950 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m06:51:43.738684 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m06:51:43.740430 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m06:51:43.752958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.759464 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m06:51:43.766350 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.768321 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-07-01 06:51:43.578670 => 2024-07-01 06:51:43.768212
[0m06:51:43.769726 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3963340>]}
[0m06:51:43.770626 [info ] [Thread-1 (]: 90 of 92 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.20s]
[0m06:51:43.771279 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m06:51:43.773242 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m06:51:43.775010 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.dataset_event_table2
[0m06:51:43.774445 [info ] [Thread-2 (]: 91 of 92 START sql table model test.dataset_event_table ........................ [RUN]
[0m06:51:43.776263 [info ] [Thread-1 (]: 92 of 92 START sql table model test.dataset_event_table2 ....................... [RUN]
[0m06:51:43.777980 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m06:51:43.779302 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table2'
[0m06:51:43.779894 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m06:51:43.780341 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table2)
[0m06:51:43.780793 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m06:51:43.781306 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table2
[0m06:51:43.793044 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.808840 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.816973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.824219 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.827067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.834191 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'full_events'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:43.842370 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.843631 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:43.858039 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m06:51:43.872278 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m06:51:43.873834 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-07-01 06:51:43.781803 => 2024-07-01 06:51:43.873626
[0m06:51:43.874605 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m06:51:43.875338 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (compile): 2024-07-01 06:51:43.793685 => 2024-07-01 06:51:43.875073
[0m06:51:43.883293 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

            

    
        create table test.dataset_event_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m06:51:43.884293 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table2
[0m06:51:43.895192 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

            

    
        create table test.dataset_event_table2__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

    )
        ...
[0m06:51:44.142843 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.25 seconds
[0m06:51:44.149289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

    select name, type from system.columns where table = 'dataset_event_table2__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:44.155754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.27 seconds
[0m06:51:44.156620 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:44.159941 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    select name, type from system.columns where table = 'dataset_event_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m06:51:44.163940 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table2"
[0m06:51:44.166721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */

  
    
    
        
        insert into test.dataset_event_table2__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "qid", "AppProfileMatchingHash")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toUInt64(0) as qid ,
        toString('') as AppProfileMatchingHash 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toUInt64("qid") as qid ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash 
FROM test.full_events
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m06:51:44.171567 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:44.174779 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m06:51:44.179989 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

  
    
    
        
        insert into test.dataset_event_table__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "UtmHashRegistryHash", "__period_number", "__if_missed", "__priority", "__step", "qid", "event_datetime", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "transactionId", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "visitId", "clientId", "cityCode", "pageViews", "VisitStatHash", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "YmClientHash", "AppMetricaDeviceHash", "CrmUserHash", "AppProfileMatchingHash", "__last_click_rank", "__first_click_rank", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.full_datestat
-- depends_on: test.attr_myfirstfunnel_final_table


   
    
   
    
  WITH final_query AS (

  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'yd'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'appmetrica'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
    UNION ALL
  
    SELECT * FROM (

(
SELECT
        toDate("__date") as __date ,
        toString("reportType") as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString("adCampaignName") as adCampaignName ,
        toString("adId") as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString("adTitle1") as adTitle1 ,
        toString("adText") as adText ,
        toFloat64("adCost") as adCost ,
        toInt64("impressions") as impressions ,
        toInt64("clicks") as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString("adGroupName") as adGroupName ,
        toString("adPhraseId") as adPhraseId ,
        toString("AdCostStatHash") as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64(0) as __period_number ,
        toBool(0) as __if_missed ,
        toUInt16(0) as __priority ,
        toNullable('') as __step ,
        toUInt64(0) as qid ,
        toDateTime(0) as event_datetime ,
        toString('') as appmetricaDeviceId ,
        toString('') as mobileAdsId ,
        toString('') as crmUserId ,
        toString('') as promoCode ,
        toString('') as osName ,
        toString('') as cityName ,
        toString('') as transactionId ,
        toUInt64(0) as sessions ,
        toUInt64(0) as addToCartSessions ,
        toUInt64(0) as cartViewSessions ,
        toUInt64(0) as checkoutSessions ,
        toUInt64(0) as webSalesSessions ,
        toUInt64(0) as sales ,
        toFloat64(0) as amountSales ,
        toUInt64(0) as registrationCardSessions ,
        toUInt64(0) as registrationButtonClick ,
        toUInt64(0) as linkingCardToPhoneNumberSessions ,
        toUInt64(0) as registrationLendingPromotionsSessions ,
        toUInt64(0) as registrationCashbackSessions ,
        toUInt64(0) as instantDiscountActivationSessions ,
        toUInt64(0) as couponActivationSessions ,
        toUInt64(0) as participationInLotterySessions ,
        toUInt64(0) as pagesViews ,
        toUInt64(0) as screenView ,
        toUInt64(0) as installApp ,
        toUInt64(0) as installs ,
        toString('') as installationDeviceId ,
        toString('') as visitId ,
        toString('') as clientId ,
        toString('') as cityCode ,
        toUInt64(0) as pageViews ,
        toString('') as VisitStatHash ,
        toString('') as AppInstallStatHash ,
        toString('') as AppEventStatHash ,
        toString('') as AppSessionStatHash ,
        toString('') as AppDeeplinkStatHash ,
        toString('') as YmClientHash ,
        toString('') as AppMetricaDeviceHash ,
        toString('') as CrmUserHash ,
        toString('') as AppProfileMatchingHash ,
        toUInt8(0) as __last_click_rank ,
        toUInt8(0) as __first_click_rank ,
        toString('') as __myfirstfunnel_last_click_utmSource ,
        toString('') as __myfirstfunnel_last_click_utmMedium ,
        toString('') as __myfirstfunnel_last_click_utmCampaign ,
        toString('') as __myfirstfunnel_last_click_utmTerm ,
        toString('') as __myfirstfunnel_last_click_utmContent ,
        toString('') as __myfirstfunnel_last_click_adSourceDirty ,
        toString('') as __myfirstfunnel_first_click_utmSource ,
        toString('') as __myfirstfunnel_first_click_utmMedium ,
        toString('') as __myfirstfunnel_first_click_utmCampaign ,
        toString('') as __myfirstfunnel_first_click_utmTerm ,
        toString('') as __myfirstfunnel_first_click_utmContent ,
        toString('') as __myfirstfunnel_first_click_adSourceDirty 
FROM test.full_datestat
)

UNION ALL


(
SELECT
        toDate("__date") as __date ,
        toString('') as reportType ,
        toString("accountName") as accountName ,
        toString("__table_name") as __table_name ,
        toString("adSourceDirty") as adSourceDirty ,
        toString('') as adCampaignName ,
        toString('') as adId ,
        toString("utmSource") as utmSource ,
        toString("utmMedium") as utmMedium ,
        toString("utmCampaign") as utmCampaign ,
        toString("utmTerm") as utmTerm ,
        toString("utmContent") as utmContent ,
        toString("utmHash") as utmHash ,
        toString('') as adTitle1 ,
        toString('') as adText ,
        toFloat64(0) as adCost ,
        toInt64(0) as impressions ,
        toInt64(0) as clicks ,
        toDateTime("__emitted_at") as __emitted_at ,
        toString("__link") as __link ,
        toString('') as adGroupName ,
        toString('') as adPhraseId ,
        toString('') as AdCostStatHash ,
        toString("UtmHashHash") as UtmHashHash ,
        toString("__id") as __id ,
        toDateTime("__datetime") as __datetime ,
        toString("utm_base_url") as utm_base_url ,
        toString("utm_utmSource") as utm_utmSource ,
        toString("utm_utmMedium") as utm_utmMedium ,
        toString("utm_utmCampaign") as utm_utmCampaign ,
        toString("utm_project") as utm_project ,
        toString("utm_utmContent") as utm_utmContent ,
        toString("utm_strategy") as utm_strategy ,
        toString("utm_audience") as utm_audience ,
        toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
        toInt64("__period_number") as __period_number ,
        toBool("__if_missed") as __if_missed ,
        toUInt16("__priority") as __priority ,
        toNullable("__step") as __step ,
        toUInt64("qid") as qid ,
        toDateTime("event_datetime") as event_datetime ,
        toString("appmetricaDeviceId") as appmetricaDeviceId ,
        toString("mobileAdsId") as mobileAdsId ,
        toString("crmUserId") as crmUserId ,
        toString("promoCode") as promoCode ,
        toString("osName") as osName ,
        toString("cityName") as cityName ,
        toString("transactionId") as transactionId ,
        toUInt64("sessions") as sessions ,
        toUInt64("addToCartSessions") as addToCartSessions ,
        toUInt64("cartViewSessions") as cartViewSessions ,
        toUInt64("checkoutSessions") as checkoutSessions ,
        toUInt64("webSalesSessions") as webSalesSessions ,
        toUInt64("sales") as sales ,
        toFloat64("amountSales") as amountSales ,
        toUInt64("registrationCardSessions") as registrationCardSessions ,
        toUInt64("registrationButtonClick") as registrationButtonClick ,
        toUInt64("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
        toUInt64("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
        toUInt64("registrationCashbackSessions") as registrationCashbackSessions ,
        toUInt64("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
        toUInt64("couponActivationSessions") as couponActivationSessions ,
        toUInt64("participationInLotterySessions") as participationInLotterySessions ,
        toUInt64("pagesViews") as pagesViews ,
        toUInt64("screenView") as screenView ,
        toUInt64("installApp") as installApp ,
        toUInt64("installs") as installs ,
        toString("installationDeviceId") as installationDeviceId ,
        toString("visitId") as visitId ,
        toString("clientId") as clientId ,
        toString("cityCode") as cityCode ,
        toUInt64("pageViews") as pageViews ,
        toString("VisitStatHash") as VisitStatHash ,
        toString("AppInstallStatHash") as AppInstallStatHash ,
        toString("AppEventStatHash") as AppEventStatHash ,
        toString("AppSessionStatHash") as AppSessionStatHash ,
        toString("AppDeeplinkStatHash") as AppDeeplinkStatHash ,
        toString("YmClientHash") as YmClientHash ,
        toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
        toString("CrmUserHash") as CrmUserHash ,
        toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
        toUInt8("__last_click_rank") as __last_click_rank ,
        toUInt8("__first_click_rank") as __first_click_rank ,
        toString("__myfirstfunnel_last_click_utmSource") as __myfirstfunnel_last_click_utmSource ,
        toString("__myfirstfunnel_last_click_utmMedium") as __myfirstfunnel_last_click_utmMedium ,
        toString("__myfirstfunnel_last_click_utmCampaign") as __myfirstfunnel_last_click_utmCampaign ,
        toString("__myfirstfunnel_last_click_utmTerm") as __myfirstfunnel_last_click_utmTerm ,
        toString("__myfirstfunnel_last_click_utmContent") as __myfirstfunnel_last_click_utmContent ,
        toString("__myfirstfunnel_last_click_adSourceDirty") as __myfirstfunnel_last_click_adSourceDirty ,
        toString("__myfirstfunnel_first_click_utmSource") as __myfirstfunnel_first_click_utmSource ,
        toString("__myfirstfunnel_first_click_utmMedium") as __myfirstfunnel_first_click_utmMedium ,
        toString("__myfirstfunnel_first_click_utmCampaign") as __myfirstfunnel_first_click_utmCampaign ,
        toString("__myfirstfunnel_first_click_utmTerm") as __myfirstfunnel_first_click_utmTerm ,
        toString("__myfirstfunnel_first_click_utmContent") as __myfirstfunnel_first_click_utmContent ,
        toString("__myfirstfunnel_first_click_adSourceDirty") as __myfirstfunnel_first_click_adSourceDirty 
FROM test.attr_myfirstfunnel_final_table
)

) 
    WHERE 
    splitByChar('_', __table_name)[6] = 'ym'
    and 
    splitByChar('_', __table_name)[8] = 'accountid'
    and 
    splitByChar('_', __table_name)[7] = 'default'
  )
SELECT *
FROM final_query

  ...
[0m06:51:44.472096 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.30 seconds
[0m06:51:44.473646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
EXCHANGE TABLES test.dataset_event_table2__dbt_backup AND test.dataset_event_table2 
  
  ...
[0m06:51:44.482324 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:44.487307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table2: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table2"} */
drop table if exists test.dataset_event_table2__dbt_backup 
  ...
[0m06:51:44.493000 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:44.495146 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table2 (execute): 2024-07-01 06:51:43.886366 => 2024-07-01 06:51:44.495064
[0m06:51:44.495892 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cdaaab00>]}
[0m06:51:44.496369 [info ] [Thread-1 (]: 92 of 92 OK created sql table model test.dataset_event_table2 .................. [[32mOK[0m in 0.72s]
[0m06:51:44.496819 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table2
[0m06:51:44.574661 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.39 seconds
[0m06:51:44.576138 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
EXCHANGE TABLES test.dataset_event_table__dbt_backup AND test.dataset_event_table 
  
  ...
[0m06:51:44.585290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:44.589577 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m06:51:44.595814 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m06:51:44.598561 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-07-01 06:51:43.875880 => 2024-07-01 06:51:44.598445
[0m06:51:44.599745 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa9aeaf-5cd9-435f-8908-a9af65d9d477', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6e3961b70>]}
[0m06:51:44.600255 [info ] [Thread-2 (]: 91 of 92 OK created sql table model test.dataset_event_table ................... [[32mOK[0m in 0.82s]
[0m06:51:44.600670 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m06:51:44.606841 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m06:51:44.608087 [debug] [MainThread]: Connection 'master' was properly closed.
[0m06:51:44.608354 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table2' was left open.
[0m06:51:44.608526 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table2: Close
[0m06:51:44.609589 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.dataset_event_table' was left open.
[0m06:51:44.609766 [debug] [MainThread]: On model.etlcraft_integration_tests.dataset_event_table: Close
[0m06:51:44.611784 [info ] [MainThread]: 
[0m06:51:44.612421 [info ] [MainThread]: Finished running 20 view models, 23 incremental models, 49 table models in 0 hours 0 minutes and 17.87 seconds (17.87s).
[0m06:51:44.616033 [debug] [MainThread]: Command end result
[0m06:51:44.753065 [info ] [MainThread]: 
[0m06:51:44.753605 [info ] [MainThread]: [32mCompleted successfully[0m
[0m06:51:44.754049 [info ] [MainThread]: 
[0m06:51:44.754306 [info ] [MainThread]: Done. PASS=92 WARN=0 ERROR=0 SKIP=0 TOTAL=92
[0m06:51:44.755141 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6d017b160>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfee8430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc6cfee8610>]}
[0m06:51:44.755519 [debug] [MainThread]: Flushing usage events

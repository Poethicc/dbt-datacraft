[0m10:30:27.002039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m10:30:27.020513 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:27.060767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.065649 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.078412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.084004 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.085998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.090514 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.121339 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:30:27.122957 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-04-26 10:30:26.867975 => 2024-04-26 10:30:27.122820
[0m10:30:27.123358 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:30:27.156023 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m10:30:27.159038 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'period') AS period, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_cohorts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_cohorts

            
        )

        )
  )...
[0m10:30:27.162682 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m10:30:27.169101 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.175275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:27.176881 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.180391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.181875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.183055 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:27.186814 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.187696 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.190416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:30:27.193191 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.197051 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.198173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m10:30:27.201363 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.213655 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:27.225591 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:30:27.227232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.231493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.232700 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-04-26 10:30:27.123545 => 2024-04-26 10:30:27.232643
[0m10:30:27.233299 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbfd600>]}
[0m10:30:27.234093 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.234729 [info ] [Thread-1 (]: 1 of 89 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.39s]
[0m10:30:27.243842 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:30:27.245487 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m10:30:27.246554 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:30:27.247938 [info ] [Thread-1 (]: 3 of 89 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m10:30:27.250126 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m10:30:27.250476 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m10:30:27.250734 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-04-26 10:30:26.846204 => 2024-04-26 10:30:27.250635
[0m10:30:27.251043 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:30:27.251576 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:30:27.256063 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m10:30:27.261000 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m10:30:27.262976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_event_metrics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_event_metrics

            
        )

        )
  )...
[0m10:30:27.270593 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.275008 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.275796 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.283852 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:27.287726 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.288590 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.290242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:27.300363 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.303785 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.311045 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.312460 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.310284 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:30:27.316893 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.318356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m10:30:27.319643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.328983 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m10:30:27.329811 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.334398 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:30:27.335554 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-04-26 10:30:27.252081 => 2024-04-26 10:30:27.335407
[0m10:30:27.336296 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:30:27.340918 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m10:30:27.342038 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.343890 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-04-26 10:30:27.256474 => 2024-04-26 10:30:27.343826
[0m10:30:27.344550 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbfd8a0>]}
[0m10:30:27.345047 [info ] [Thread-2 (]: 2 of 89 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.50s]
[0m10:30:27.345439 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m10:30:27.346139 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:27.347074 [info ] [Thread-2 (]: 4 of 89 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m10:30:27.347721 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
JSONExtractString(_airbyte_data, 'description') AS description, 
JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'section') AS section, 
JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_events

            
        )

        )
  )...
[0m10:30:27.348939 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m10:30:27.350602 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m10:30:27.350860 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:27.355232 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m10:30:27.360958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.364881 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:30:27.365830 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.370607 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.371341 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.373863 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m10:30:27.376974 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.377914 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.381108 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.386451 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m10:30:27.391658 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.392825 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m10:30:27.394065 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.396394 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.397392 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.403443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m10:30:27.404507 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.416995 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:30:27.417843 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.419694 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-04-26 10:30:27.336756 => 2024-04-26 10:30:27.419619
[0m10:30:27.420481 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2fd390>]}
[0m10:30:27.420847 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-04-26 10:30:27.351098 => 2024-04-26 10:30:27.420747
[0m10:30:27.421364 [info ] [Thread-1 (]: 3 of 89 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.17s]
[0m10:30:27.421970 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:27.422580 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m10:30:27.426922 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m10:30:27.427747 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:27.429103 [info ] [Thread-1 (]: 5 of 89 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m10:30:27.431027 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m10:30:27.431620 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m10:30:27.431926 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:27.435791 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m10:30:27.436402 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
JSONExtractString(_airbyte_data, 'country') AS country, 
JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
JSONExtractString(_airbyte_data, 'installs') AS installs, 
JSONExtractString(_airbyte_data, 'network') AS network, 
JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_adjust_events_default_testaccount_network' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_adjust_events_default_testaccount_network

            
        )

        )
  )...
[0m10:30:27.443731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.447390 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.450338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.454945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:27.455973 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.459943 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.461103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.463554 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:27.467477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.526811 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:30:27.529313 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m10:30:27.531279 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.535283 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.536541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m10:30:27.537798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.549685 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:30:27.550519 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.554565 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m10:30:27.555590 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-04-26 10:30:27.432059 => 2024-04-26 10:30:27.555474
[0m10:30:27.555932 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:27.560125 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m10:30:27.560713 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks

            
        )

        )
  )...
[0m10:30:27.562267 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.563833 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-04-26 10:30:27.422967 => 2024-04-26 10:30:27.563776
[0m10:30:27.564936 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbcb880>]}
[0m10:30:27.566023 [info ] [Thread-2 (]: 4 of 89 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.22s]
[0m10:30:27.566696 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m10:30:27.567066 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:27.567497 [info ] [Thread-2 (]: 6 of 89 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m10:30:27.568384 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m10:30:27.569274 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m10:30:27.569698 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:27.573911 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m10:30:27.575253 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.578982 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:27.582593 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.583776 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.587918 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.589892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:27.595213 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.598424 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:30:27.600143 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.603781 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.605671 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.606805 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m10:30:27.610026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.613991 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:30:27.615187 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.619099 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.620256 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.623494 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-04-26 10:30:27.556059 => 2024-04-26 10:30:27.623420
[0m10:30:27.624257 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c203340>]}
[0m10:30:27.624765 [info ] [Thread-1 (]: 5 of 89 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.19s]
[0m10:30:27.625260 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m10:30:27.625722 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:30:27.626466 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.627006 [info ] [Thread-1 (]: 7 of 89 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m10:30:27.642654 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:30:27.643503 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m10:30:27.644128 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m10:30:27.644620 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:30:27.648694 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m10:30:27.649241 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-04-26 10:30:27.569811 => 2024-04-26 10:30:27.649080
[0m10:30:27.651633 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:27.657115 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m10:30:27.657900 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.663411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.665595 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name != 'screen_view'
  )...
[0m10:30:27.670160 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.673063 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.679400 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.681567 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.682623 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:27.687727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:27.688980 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.700572 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.703483 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m10:30:27.705418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:27.707490 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-04-26 10:30:27.644818 => 2024-04-26 10:30:27.707405
[0m10:30:27.707757 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:30:27.713176 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m10:30:27.714359 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.718057 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:30:27.719600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_installations' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_installations

            
        )

        )
  )...
[0m10:30:27.722026 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.723457 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m10:30:27.726931 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.730878 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:30:27.731670 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.736626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:30:27.740334 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.740907 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.742198 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-04-26 10:30:27.652230 => 2024-04-26 10:30:27.742138
[0m10:30:27.743531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:30:27.744956 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbb4c10>]}
[0m10:30:27.746352 [info ] [Thread-2 (]: 6 of 89 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.18s]
[0m10:30:27.746971 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m10:30:27.747720 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:27.748504 [info ] [Thread-2 (]: 8 of 89 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m10:30:27.749539 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m10:30:27.750225 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.750458 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m10:30:27.753918 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m10:30:27.754477 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:27.759051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m10:30:27.760942 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.762198 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m10:30:27.765897 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.769623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.770643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.775598 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m10:30:27.780526 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.781995 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-04-26 10:30:27.708159 => 2024-04-26 10:30:27.781928
[0m10:30:27.782775 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.784462 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbfcca0>]}
[0m10:30:27.787332 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.788211 [info ] [Thread-1 (]: 7 of 89 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.14s]
[0m10:30:27.790002 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m10:30:27.790482 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:27.791107 [info ] [Thread-1 (]: 9 of 89 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m10:30:27.792195 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m10:30:27.793631 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m10:30:27.794601 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.795025 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:27.796968 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.802028 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m10:30:27.807840 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.815917 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.829804 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:30:27.826762 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.831390 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-04-26 10:30:27.755325 => 2024-04-26 10:30:27.831134
[0m10:30:27.832967 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:27.838447 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m10:30:27.839382 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.842333 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.843841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_events' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_events

            
        )

        )
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m10:30:27.849142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.851214 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.857575 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.867022 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:27.869959 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:30:27.873332 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:27.875205 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-04-26 10:30:27.797474 => 2024-04-26 10:30:27.875062
[0m10:30:27.875536 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:27.879623 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m10:30:27.880978 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.882261 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:27.884239 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts

            
        )

        )
  )...
[0m10:30:27.887118 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.890199 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:30:27.893221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.893881 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.895519 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m10:30:27.899545 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:27.903815 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.904413 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.908000 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:30:27.909681 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:27.913369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.914746 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-04-26 10:30:27.833447 => 2024-04-26 10:30:27.914687
[0m10:30:27.915382 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3de87cd0>]}
[0m10:30:27.915824 [info ] [Thread-2 (]: 8 of 89 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.17s]
[0m10:30:27.916203 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m10:30:27.916834 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.917297 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:27.920159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:30:27.921589 [info ] [Thread-2 (]: 10 of 89 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m10:30:27.923993 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m10:30:27.924657 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m10:30:27.925076 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:27.929540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m10:30:27.930367 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.933957 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:30:27.937474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.941698 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:30:27.942325 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.946403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.949341 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.950835 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-04-26 10:30:27.875660 => 2024-04-26 10:30:27.950752
[0m10:30:27.951690 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbfcd00>]}
[0m10:30:27.952505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.953222 [info ] [Thread-1 (]: 9 of 89 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.16s]
[0m10:30:27.957094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )  LIMIT 1
  ...
[0m10:30:27.957746 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m10:30:27.959224 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:30:27.959965 [info ] [Thread-1 (]: 11 of 89 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m10:30:27.961598 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m10:30:27.961909 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m10:30:27.962088 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:30:27.968748 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.967894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m10:30:27.971169 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:27.978216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:27.979057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:27.986996 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:30:27.990767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:27.993080 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-04-26 10:30:27.925522 => 2024-04-26 10:30:27.992908
[0m10:30:27.994550 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:27.999427 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m10:30:28.000656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.004050 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.005443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
JSONExtractString(_airbyte_data, 'city') AS city, 
JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_appmetrica_registry_default_testaccount_profiles' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_appmetrica_registry_default_testaccount_profiles

            
        )

        )
  )...
[0m10:30:28.009782 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.011510 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.017590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.018626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.022539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:30:28.030948 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m10:30:28.033770 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-04-26 10:30:27.962187 => 2024-04-26 10:30:28.033429
[0m10:30:28.034348 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:30:28.038990 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m10:30:28.040071 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.040667 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners

            
        )

        )
  )...
[0m10:30:28.041783 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m10:30:28.046707 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.050996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:30:28.052577 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.055555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:30:28.057405 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.058619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m10:30:28.059268 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.061555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m10:30:28.062884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.067029 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:30:28.070060 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.070801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.072034 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-04-26 10:30:27.994817 => 2024-04-26 10:30:28.071976
[0m10:30:28.075587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m10:30:28.076908 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0d9b10>]}
[0m10:30:28.078960 [info ] [Thread-2 (]: 10 of 89 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.15s]
[0m10:30:28.079738 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m10:30:28.080019 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:28.081469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.080365 [info ] [Thread-2 (]: 12 of 89 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m10:30:28.083926 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m10:30:28.084930 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m10:30:28.086017 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m10:30:28.086201 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:28.091206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m10:30:28.092648 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.097178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m10:30:28.101338 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.103043 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-04-26 10:30:28.034489 => 2024-04-26 10:30:28.102965
[0m10:30:28.103879 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbcbb50>]}
[0m10:30:28.104530 [info ] [Thread-1 (]: 11 of 89 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.14s]
[0m10:30:28.105093 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m10:30:28.105453 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:30:28.106692 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:28.107132 [info ] [Thread-1 (]: 13 of 89 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m10:30:28.112160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.113415 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m10:30:28.115939 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m10:30:28.116677 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:30:28.121718 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m10:30:28.124434 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.127488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.130091 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.134674 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.135812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.138927 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.140697 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.143162 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.145580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.152736 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:30:28.153740 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.155998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.157661 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-04-26 10:30:28.086523 => 2024-04-26 10:30:28.157442
[0m10:30:28.158042 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:28.162332 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m10:30:28.163444 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.169160 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m10:30:28.170068 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics

            
        )

        )
  )...
[0m10:30:28.170405 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-04-26 10:30:28.117151 => 2024-04-26 10:30:28.170303
[0m10:30:28.171418 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:30:28.176035 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m10:30:28.177167 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_mt_datestat_default_testaccount_campaigns' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_mt_datestat_default_testaccount_campaigns

            
        )

        )
  )...
[0m10:30:28.179743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.184782 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:28.187678 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.188257 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.190046 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:28.193002 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:30:28.197141 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.198454 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m10:30:28.199180 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.204631 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:30:28.205915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.210189 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m10:30:28.211624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.212894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m10:30:28.215036 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.216162 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m10:30:28.217457 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.221706 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:30:28.222645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.227831 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m10:30:28.229331 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.231736 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-04-26 10:30:28.158143 => 2024-04-26 10:30:28.231675
[0m10:30:28.232349 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c120ee0>]}
[0m10:30:28.232737 [info ] [Thread-2 (]: 12 of 89 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.15s]
[0m10:30:28.233109 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m10:30:28.233420 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:28.234632 [info ] [Thread-2 (]: 14 of 89 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m10:30:28.235975 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m10:30:28.236366 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m10:30:28.236716 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:28.241081 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_sheets_periodstat_default_[^_]+_planCosts$')        
...
[0m10:30:28.242759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.244768 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-04-26 10:30:28.171573 => 2024-04-26 10:30:28.244669
[0m10:30:28.246224 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f78e5c0>]}
[0m10:30:28.246851 [info ] [Thread-1 (]: 13 of 89 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.13s]
[0m10:30:28.247209 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m10:30:28.247482 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:28.247767 [info ] [Thread-1 (]: 15 of 89 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m10:30:28.248462 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m10:30:28.249132 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m10:30:28.250625 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.250996 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:28.255058 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = '_airbyte_raw_sheets_periodstat_default_testaccount_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.259767 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m10:30:28.265285 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.267817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.268951 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.274519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.275291 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.279593 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.282482 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.285829 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.287709 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.293118 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m10:30:28.294379 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.295856 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.297327 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-04-26 10:30:28.236891 => 2024-04-26 10:30:28.297105
[0m10:30:28.298318 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:28.303820 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m10:30:28.304692 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.314615 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:30:28.315193 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Period_start') AS __date, 
JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts

            
        )

        )
  )...
[0m10:30:28.316312 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-04-26 10:30:28.255688 => 2024-04-26 10:30:28.316143
[0m10:30:28.316965 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:28.389043 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m10:30:28.390298 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:30:28.393139 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m10:30:28.394286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
JSONExtractString(_airbyte_data, 'data') AS data, 
JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult

            
        )

        )
  )...
[0m10:30:28.396257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.397345 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m10:30:28.400907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.403885 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m10:30:28.404626 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.408609 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:30:28.409801 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.412043 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m10:30:28.413344 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.414708 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m10:30:28.416195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.420215 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m10:30:28.421155 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.425352 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:30:28.426093 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.429409 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-04-26 10:30:28.298592 => 2024-04-26 10:30:28.429349
[0m10:30:28.430086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.431299 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f7c9900>]}
[0m10:30:28.432837 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m10:30:28.433345 [info ] [Thread-2 (]: 14 of 89 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.20s]
[0m10:30:28.435465 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m10:30:28.435835 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:30:28.437970 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.436951 [info ] [Thread-2 (]: 16 of 89 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m10:30:28.443496 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:30:28.444866 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m10:30:28.446081 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m10:30:28.446443 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:30:28.451838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m10:30:28.452877 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.456017 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-04-26 10:30:28.317193 => 2024-04-26 10:30:28.455949
[0m10:30:28.456764 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1b62c0>]}
[0m10:30:28.457569 [info ] [Thread-1 (]: 15 of 89 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.21s]
[0m10:30:28.458136 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m10:30:28.458657 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:28.459653 [info ] [Thread-1 (]: 17 of 89 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:30:28.461546 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m10:30:28.462265 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.462737 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m10:30:28.467122 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.467861 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:28.473307 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m10:30:28.478650 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.479520 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.483270 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.488064 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.495516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.497824 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.498874 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.502109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.505248 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.506968 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.508583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.517099 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.540992 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m10:30:28.546431 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:30:28.547819 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-26 10:30:28.470030 => 2024-04-26 10:30:28.547702
[0m10:30:28.548236 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-04-26 10:30:28.447018 => 2024-04-26 10:30:28.548114
[0m10:30:28.548761 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:28.549105 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:30:28.559104 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m10:30:28.560873 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m10:30:28.562250 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
JSONExtractString(_airbyte_data, 'created') AS created, 
JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
JSONExtractString(_airbyte_data, 'id') AS id, 
JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
JSONExtractString(_airbyte_data, 'name') AS name, 
JSONExtractString(_airbyte_data, 'objective') AS objective, 
JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
JSONExtractString(_airbyte_data, 'status') AS status, 
JSONExtractString(_airbyte_data, 'updated') AS updated, 
JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans

            
        )

        )
  )...
[0m10:30:28.563271 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
JSONExtractString(_airbyte_data, 'base') AS base, 
JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
JSONExtractString(_airbyte_data, 'date') AS date, 
JSONExtractString(_airbyte_data, 'events') AS events, 
JSONExtractString(_airbyte_data, 'moat') AS moat, 
JSONExtractString(_airbyte_data, 'playable') AS playable, 
JSONExtractString(_airbyte_data, 'romi') AS romi, 
JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
JSONExtractString(_airbyte_data, 'tps') AS tps, 
JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics

            
        )

        )
  )...
[0m10:30:28.574969 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.575641 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.578769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:30:28.582902 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:28.587027 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.587697 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.588976 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m10:30:28.590650 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:28.594238 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.597279 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m10:30:28.598090 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.601953 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:30:28.604780 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.605894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m10:30:28.606656 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.608796 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:30:28.610254 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.616540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m10:30:28.617828 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.622664 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:30:28.623501 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.626078 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-04-26 10:30:28.555086 => 2024-04-26 10:30:28.626019
[0m10:30:28.626670 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c25c850>]}
[0m10:30:28.627092 [info ] [Thread-2 (]: 16 of 89 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.18s]
[0m10:30:28.627400 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m10:30:28.627741 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:28.628578 [info ] [Thread-2 (]: 18 of 89 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m10:30:28.629876 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.630743 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m10:30:28.632341 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-26 10:30:28.549504 => 2024-04-26 10:30:28.632285
[0m10:30:28.632763 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m10:30:28.633897 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3de8dd80>]}
[0m10:30:28.634223 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:28.637747 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m10:30:28.638577 [info ] [Thread-1 (]: 17 of 89 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.17s]
[0m10:30:28.640852 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m10:30:28.641479 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:28.641820 [info ] [Thread-1 (]: 19 of 89 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:30:28.643142 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m10:30:28.643433 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m10:30:28.643930 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:28.648121 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m10:30:28.649812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.655474 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.657317 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.662120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:28.663107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.667749 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.673121 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.673831 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.676243 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )  LIMIT 1
  ...
[0m10:30:28.678528 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.684945 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.687266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    SELECT JSONExtractKeys(_airbyte_data) FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        ) ORDER BY JSONLength(JSONExtractRaw(_airbyte_data)) desc LIMIT 1
  ...
[0m10:30:28.688945 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.702174 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:30:28.703164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:28.725368 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-04-26 10:30:28.634587 => 2024-04-26 10:30:28.725121
[0m10:30:28.731462 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:28.736388 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m10:30:28.739504 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:30:28.740632 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
JSONExtractString(_airbyte_data, 'Date') AS Date, 
JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_yd_datestat_default_testaccount_custom_report' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_yd_datestat_default_testaccount_custom_report

            
        )

        )
  )...
[0m10:30:28.742345 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-04-26 10:30:28.644104 => 2024-04-26 10:30:28.742184
[0m10:30:28.743246 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:28.749481 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m10:30:28.750057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
JSONExtractString(_airbyte_data, '__productName') AS __productName, 
JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() as __normalized_at
    FROM (
    

        (
            select
                cast('test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("_airbyte_ab_id" as String) as "_airbyte_ab_id" ,
                    cast("_airbyte_data" as String) as "_airbyte_data" ,
                    cast("_airbyte_emitted_at" as String) as "_airbyte_emitted_at" 

            from test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream

            
        )

        )
  )...
[0m10:30:28.752110 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.756798 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:28.760278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.761826 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:28.763490 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.767342 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:28.770731 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.772505 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:28.773456 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.779913 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:30:28.780998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.787035 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:30:28.788073 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.791487 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m10:30:28.792564 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.795730 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:30:28.797699 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:28.802827 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:30:28.805819 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.811249 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:30:28.813232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.815040 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-04-26 10:30:28.731762 => 2024-04-26 10:30:28.814960
[0m10:30:28.815908 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c25c850>]}
[0m10:30:28.816845 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:28.819962 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-04-26 10:30:28.743858 => 2024-04-26 10:30:28.819879
[0m10:30:28.818050 [info ] [Thread-2 (]: 18 of 89 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.19s]
[0m10:30:28.821410 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbfc940>]}
[0m10:30:28.822119 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m10:30:28.823116 [info ] [Thread-1 (]: 19 of 89 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.18s]
[0m10:30:28.824186 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:28.826141 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m10:30:28.827215 [info ] [Thread-2 (]: 20 of 89 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m10:30:28.828270 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:28.830638 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m10:30:28.832231 [info ] [Thread-1 (]: 21 of 89 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m10:30:28.833425 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m10:30:28.834897 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m10:30:28.835681 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:28.836090 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m10:30:28.855584 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:30:28.856393 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:28.862035 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:30:28.863193 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-04-26 10:30:28.836499 => 2024-04-26 10:30:28.862951
[0m10:30:28.864463 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-04-26 10:30:28.857762 => 2024-04-26 10:30:28.864233
[0m10:30:28.865119 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:28.865732 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:28.979273 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m10:30:28.979868 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m10:30:28.995607 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.000053 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.001913 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.005495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.009638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.010350 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.012286 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m10:30:29.014378 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m10:30:29.015297 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
    ...
[0m10:30:29.016235 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
    ...
[0m10:30:29.024412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.028120 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:29.028919 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.032804 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:29.035669 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.036398 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.038064 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    rename table test.incremental_adjust_events_default_cohorts__dbt_tmp to test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m10:30:29.039432 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    rename table test.incremental_adjust_events_default_event_metrics__dbt_tmp to test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m10:30:29.044397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.044970 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.050019 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
EXCHANGE TABLES test.incremental_adjust_events_default_cohorts__dbt_backup AND test.incremental_adjust_events_default_cohorts 
  
  ...
[0m10:30:29.051700 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
EXCHANGE TABLES test.incremental_adjust_events_default_event_metrics__dbt_backup AND test.incremental_adjust_events_default_event_metrics 
  
  ...
[0m10:30:29.056875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.063383 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.065391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  ...
[0m10:30:29.069601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m10:30:29.073983 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.074496 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.075736 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-04-26 10:30:28.887229 => 2024-04-26 10:30:29.075678
[0m10:30:29.077052 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-04-26 10:30:28.866102 => 2024-04-26 10:30:29.077001
[0m10:30:29.077870 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2df3a0>]}
[0m10:30:29.078959 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c326f80>]}
[0m10:30:29.079797 [info ] [Thread-1 (]: 21 of 89 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.24s]
[0m10:30:29.080414 [info ] [Thread-2 (]: 20 of 89 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.25s]
[0m10:30:29.081117 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m10:30:29.081722 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m10:30:29.082251 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:30:29.082808 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:29.083788 [info ] [Thread-1 (]: 22 of 89 START sql table model test.incremental_adjust_events_default_events ... [RUN]
[0m10:30:29.084489 [info ] [Thread-2 (]: 23 of 89 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m10:30:29.085717 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m10:30:29.086933 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m10:30:29.087363 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m10:30:29.087676 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m10:30:29.088134 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:30:29.088648 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:29.092481 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m10:30:29.098843 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:30:29.099973 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-04-26 10:30:29.093075 => 2024-04-26 10:30:29.099850
[0m10:30:29.100403 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:29.105915 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-04-26 10:30:29.088873 => 2024-04-26 10:30:29.105794
[0m10:30:29.107070 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m10:30:29.107523 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:30:29.124467 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

            

    
        create table test.incremental_adjust_events_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_adjust_events_default_events

    )
        ...
[0m10:30:29.126319 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.129109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.134553 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.136445 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m10:30:29.136939 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_tmp ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
    ...
[0m10:30:29.139151 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.142109 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.145725 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.151231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:29.152186 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.155657 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m10:30:29.156628 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_events_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_adjust_events_default_events

  ...
[0m10:30:29.158720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.159911 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    rename table test.incremental_adjust_events_default_network__dbt_tmp to test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m10:30:29.164042 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.165413 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
EXCHANGE TABLES test.incremental_adjust_events_default_network__dbt_backup AND test.incremental_adjust_events_default_network 
  
  ...
[0m10:30:29.166191 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.168751 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
EXCHANGE TABLES test.incremental_adjust_events_default_events__dbt_backup AND test.incremental_adjust_events_default_events 
  
  ...
[0m10:30:29.172186 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.176308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  ...
[0m10:30:29.177931 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.182290 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m10:30:29.183047 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.185892 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-04-26 10:30:29.100569 => 2024-04-26 10:30:29.185824
[0m10:30:29.186544 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c15d0c0>]}
[0m10:30:29.187527 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.186935 [info ] [Thread-2 (]: 23 of 89 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.10s]
[0m10:30:29.190097 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-04-26 10:30:29.109184 => 2024-04-26 10:30:29.190041
[0m10:30:29.190679 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m10:30:29.192091 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f775930>]}
[0m10:30:29.192517 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:29.193232 [info ] [Thread-1 (]: 22 of 89 OK created sql table model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.11s]
[0m10:30:29.194738 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m10:30:29.194098 [info ] [Thread-2 (]: 24 of 89 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m10:30:29.195656 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:29.196450 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m10:30:29.196941 [info ] [Thread-1 (]: 25 of 89 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m10:30:29.197509 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m10:30:29.198729 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m10:30:29.199399 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:29.199691 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m10:30:29.204093 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:30:29.204511 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:29.208476 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:30:29.208979 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-04-26 10:30:29.199982 => 2024-04-26 10:30:29.208789
[0m10:30:29.209727 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:29.215599 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m10:30:29.216522 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-04-26 10:30:29.205077 => 2024-04-26 10:30:29.216298
[0m10:30:29.217928 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:29.225835 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m10:30:29.232564 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.236532 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.241943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.242689 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.245500 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.247970 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m10:30:29.250021 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
    ...
[0m10:30:29.254316 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.255977 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m10:30:29.256548 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_tmp ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
    ...
[0m10:30:29.260056 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.263116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:29.267330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.268965 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    rename table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp to test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m10:30:29.272299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.272994 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.276016 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:29.277858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_deeplinks__dbt_backup AND test.incremental_appmetrica_events_default_deeplinks 
  
  ...
[0m10:30:29.282264 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.283799 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    rename table test.incremental_appmetrica_events_default_events__dbt_tmp to test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m10:30:29.284427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.289906 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m10:30:29.292867 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.294183 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_events__dbt_backup AND test.incremental_appmetrica_events_default_events 
  
  ...
[0m10:30:29.295380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.297304 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-04-26 10:30:29.210229 => 2024-04-26 10:30:29.297150
[0m10:30:29.298762 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f76e6b0>]}
[0m10:30:29.299604 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.300291 [info ] [Thread-2 (]: 24 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.10s]
[0m10:30:29.306442 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m10:30:29.307369 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:30:29.308089 [info ] [Thread-2 (]: 26 of 89 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m10:30:29.308767 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m10:30:29.309351 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  ...
[0m10:30:29.309954 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m10:30:29.311766 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:30:29.317082 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m10:30:29.317993 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.319934 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-04-26 10:30:29.218260 => 2024-04-26 10:30:29.319875
[0m10:30:29.320541 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c382140>]}
[0m10:30:29.323104 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-04-26 10:30:29.312061 => 2024-04-26 10:30:29.322954
[0m10:30:29.323768 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:30:29.329284 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m10:30:29.346617 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:29.350029 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:29.355652 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.357105 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m10:30:29.357496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
    ...
[0m10:30:29.367042 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:29.370151 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:30:29.374174 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.375898 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    rename table test.incremental_appmetrica_events_default_install__dbt_tmp to test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m10:30:29.379487 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.380839 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_install__dbt_backup AND test.incremental_appmetrica_events_default_install 
  
  ...
[0m10:30:29.385134 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.390240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  ...
[0m10:30:29.393877 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:29.395680 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-04-26 10:30:29.324117 => 2024-04-26 10:30:29.395625
[0m10:30:29.396186 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c26c9d0>]}
[0m10:30:30.066086 [info ] [Thread-1 (]: 25 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.12s]
[0m10:30:30.068605 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m10:30:30.067826 [info ] [Thread-2 (]: 26 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.09s]
[0m10:30:30.069820 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:30.070726 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m10:30:30.071603 [info ] [Thread-1 (]: 27 of 89 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m10:30:30.072387 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:30.074316 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m10:30:30.075354 [info ] [Thread-2 (]: 28 of 89 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m10:30:30.076132 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m10:30:30.077195 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m10:30:30.077638 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:30.078066 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m10:30:30.164209 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:30:30.164714 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:30.169873 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:30:30.170689 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-04-26 10:30:30.165231 => 2024-04-26 10:30:30.170521
[0m10:30:30.171233 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-04-26 10:30:30.078492 => 2024-04-26 10:30:30.171132
[0m10:30:30.171709 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:30.172075 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:30.176740 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m10:30:30.182285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m10:30:30.201447 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.204057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.205096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.210317 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.215154 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.217208 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m10:30:30.218000 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.219834 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m10:30:30.220545 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_tmp ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
    ...
[0m10:30:30.221428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
    ...
[0m10:30:30.234233 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.237405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:30.238623 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.241394 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:30.244177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.245392 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    rename table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp to test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m10:30:30.247196 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.248523 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    rename table test.incremental_appmetrica_events_default_screen_view__dbt_tmp to test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m10:30:30.249636 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.250856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_sessions_starts__dbt_backup AND test.incremental_appmetrica_events_default_sessions_starts 
  
  ...
[0m10:30:30.254886 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.255579 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.257011 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_screen_view__dbt_backup AND test.incremental_appmetrica_events_default_screen_view 
  
  ...
[0m10:30:30.261482 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m10:30:30.267006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.270905 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m10:30:30.271990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.275004 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-04-26 10:30:30.172283 => 2024-04-26 10:30:30.274941
[0m10:30:30.275534 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f7008b0>]}
[0m10:30:30.275869 [info ] [Thread-2 (]: 28 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.20s]
[0m10:30:30.276204 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m10:30:30.276463 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:30.278126 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.276922 [info ] [Thread-2 (]: 29 of 89 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m10:30:30.279877 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-04-26 10:30:30.177220 => 2024-04-26 10:30:30.279821
[0m10:30:30.281006 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m10:30:30.281967 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f700250>]}
[0m10:30:30.282235 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m10:30:30.282685 [info ] [Thread-1 (]: 27 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.21s]
[0m10:30:30.283392 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:30.284323 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m10:30:30.288513 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:30:30.289431 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:30:30.290995 [info ] [Thread-1 (]: 30 of 89 START sql table model test.incremental_mt_datestat_default_banners .... [RUN]
[0m10:30:30.292361 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m10:30:30.293006 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m10:30:30.293658 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-04-26 10:30:30.284825 => 2024-04-26 10:30:30.293362
[0m10:30:30.294153 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:30:30.295037 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:30.299336 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m10:30:30.306354 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

    )
        ...
[0m10:30:30.308020 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-04-26 10:30:30.295278 => 2024-04-26 10:30:30.307921
[0m10:30:30.308302 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:30:30.312755 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

            

    
        create table test.incremental_mt_datestat_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_mt_datestat_default_banners

    )
        ...
[0m10:30:30.324793 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.327628 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.331701 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.335410 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.337562 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.339791 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m10:30:30.340275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  ...
[0m10:30:30.341891 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.343742 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m10:30:30.344275 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_datestat_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_mt_datestat_default_banners

  ...
[0m10:30:30.347310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.349275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m10:30:30.352661 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.354214 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners__dbt_backup AND test.incremental_mt_datestat_default_banners 
  
  ...
[0m10:30:30.355538 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.360375 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m10:30:30.365455 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.366231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.370189 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m10:30:30.372333 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-04-26 10:30:30.299841 => 2024-04-26 10:30:30.372273
[0m10:30:30.374135 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c17d750>]}
[0m10:30:30.374650 [info ] [Thread-2 (]: 29 of 89 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.09s]
[0m10:30:30.375458 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m10:30:30.375862 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:30.377788 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.376863 [info ] [Thread-2 (]: 31 of 89 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m10:30:30.379493 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-04-26 10:30:30.308423 => 2024-04-26 10:30:30.379435
[0m10:30:30.380410 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m10:30:30.381664 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2fcbe0>]}
[0m10:30:30.382210 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m10:30:30.383698 [info ] [Thread-1 (]: 30 of 89 OK created sql table model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.09s]
[0m10:30:30.384308 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:30.384707 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m10:30:30.388864 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:30:30.389838 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:30:30.391233 [info ] [Thread-1 (]: 32 of 89 START sql table model test.incremental_mt_datestat_default_campaigns .. [RUN]
[0m10:30:30.392161 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m10:30:30.392367 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m10:30:30.392566 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:30:30.392921 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-04-26 10:30:30.385014 => 2024-04-26 10:30:30.392759
[0m10:30:30.396754 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m10:30:30.398461 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:30.405626 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m10:30:30.406877 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-04-26 10:30:30.393291 => 2024-04-26 10:30:30.406711
[0m10:30:30.407653 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:30:30.412576 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

            

    
        create table test.incremental_mt_datestat_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_mt_datestat_default_campaigns

    )
        ...
[0m10:30:30.426647 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.430727 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.432181 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.435338 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.441032 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.442886 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m10:30:30.444115 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.444637 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_tmp ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
    ...
[0m10:30:30.446601 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m10:30:30.448849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_datestat_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  ...
[0m10:30:30.457062 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.457788 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.459032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_campaigns__dbt_backup AND test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m10:30:30.463547 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:30.469298 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.469997 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.471182 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    rename table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp to test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m10:30:30.474862 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m10:30:30.478762 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.479404 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.480644 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-04-26 10:30:30.408375 => 2024-04-26 10:30:30.480580
[0m10:30:30.482418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners_statistics__dbt_backup AND test.incremental_mt_datestat_default_banners_statistics 
  
  ...
[0m10:30:30.483898 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2dc970>]}
[0m10:30:30.485790 [info ] [Thread-1 (]: 32 of 89 OK created sql table model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.09s]
[0m10:30:30.486453 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m10:30:30.486962 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:30.487911 [info ] [Thread-1 (]: 33 of 89 START sql incremental model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m10:30:30.488743 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m10:30:30.489876 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.490127 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m10:30:30.494419 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m10:30:30.494939 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:30.499788 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m10:30:30.500529 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-04-26 10:30:30.496053 => 2024-04-26 10:30:30.500405
[0m10:30:30.500874 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:30.507647 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.509492 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-04-26 10:30:30.399313 => 2024-04-26 10:30:30.509435
[0m10:30:30.506798 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_sheets_periodstat_default_planCosts

    )
        ...
[0m10:30:30.510411 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0b4640>]}
[0m10:30:30.512288 [info ] [Thread-2 (]: 31 of 89 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.13s]
[0m10:30:30.512812 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m10:30:30.513368 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:30.515091 [info ] [Thread-2 (]: 34 of 89 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m10:30:30.515957 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m10:30:30.516244 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m10:30:30.516429 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:30.520680 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:30:30.521186 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-04-26 10:30:30.516526 => 2024-04-26 10:30:30.521111
[0m10:30:30.521382 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:30.525883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

    )
        ...
[0m10:30:30.528438 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.531591 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.538074 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.539505 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m10:30:30.540010 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

        
  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_tmp ("__date", "Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_sheets_periodstat_default_planCosts

  
    ...
[0m10:30:30.542195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.545244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.547879 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.553244 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m10:30:30.554330 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.557176 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m10:30:30.558093 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  ...
[0m10:30:30.559318 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.560556 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    rename table test.incremental_sheets_periodstat_default_planCosts__dbt_tmp to test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m10:30:30.564800 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.566792 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m10:30:30.570789 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.571569 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.573325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m10:30:30.578947 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m10:30:30.584911 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.590141 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m10:30:30.592146 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.594174 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-04-26 10:30:30.501010 => 2024-04-26 10:30:30.594101
[0m10:30:30.594986 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad662dd2a0>]}
[0m10:30:30.595891 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.596917 [info ] [Thread-1 (]: 33 of 89 OK created sql incremental model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.11s]
[0m10:30:30.599662 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-04-26 10:30:30.521496 => 2024-04-26 10:30:30.599574
[0m10:30:30.600420 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m10:30:30.601554 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c17e170>]}
[0m10:30:30.602274 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:30:30.603790 [info ] [Thread-2 (]: 34 of 89 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.09s]
[0m10:30:30.604832 [info ] [Thread-1 (]: 35 of 89 START sql table model test.incremental_vkads_datestat_default_ad_plans  [RUN]
[0m10:30:30.605926 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m10:30:30.607182 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m10:30:30.608121 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:30.609456 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m10:30:30.610230 [info ] [Thread-2 (]: 36 of 89 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m10:30:30.611027 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:30:30.611975 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m10:30:30.616912 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m10:30:30.617433 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m10:30:30.618160 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:30.623126 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:30:30.624004 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-04-26 10:30:30.612509 => 2024-04-26 10:30:30.623785
[0m10:30:30.624720 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-04-26 10:30:30.618694 => 2024-04-26 10:30:30.624602
[0m10:30:30.625358 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:30:30.626086 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:30.631179 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

    )
        ...
[0m10:30:30.639241 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m10:30:30.660131 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.663493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.665142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:30.670084 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.671389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.674694 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m10:30:30.675743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
    ...
[0m10:30:30.677211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.679502 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m10:30:30.680200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  ...
[0m10:30:30.687157 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.690882 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:30.691594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.694820 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m10:30:30.695857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.698894 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m10:30:30.702611 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.706364 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m10:30:30.707734 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.709284 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m10:30:30.712206 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.714008 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-04-26 10:30:30.626470 => 2024-04-26 10:30:30.713932
[0m10:30:30.714651 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.715722 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c382140>]}
[0m10:30:30.720502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m10:30:30.721385 [info ] [Thread-1 (]: 35 of 89 OK created sql table model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.11s]
[0m10:30:30.722837 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m10:30:30.723866 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:30.724600 [info ] [Thread-1 (]: 37 of 89 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m10:30:30.725380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.726053 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m10:30:30.727389 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-04-26 10:30:30.631724 => 2024-04-26 10:30:30.727330
[0m10:30:30.727719 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m10:30:30.728855 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c17cb50>]}
[0m10:30:30.729550 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:30.730467 [info ] [Thread-2 (]: 36 of 89 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.12s]
[0m10:30:30.736863 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:30:30.737562 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m10:30:30.738442 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:30.739190 [info ] [Thread-2 (]: 38 of 89 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m10:30:30.741079 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m10:30:30.741843 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m10:30:30.742285 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-04-26 10:30:30.731272 => 2024-04-26 10:30:30.742147
[0m10:30:30.742675 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:30.742935 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:30.747340 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:30:30.754656 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m10:30:30.755938 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-04-26 10:30:30.743220 => 2024-04-26 10:30:30.755822
[0m10:30:30.756311 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:30.761461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m10:30:30.772209 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.775626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.779215 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.784389 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.786330 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.788543 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m10:30:30.789282 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_tmp ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
    ...
[0m10:30:30.792820 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.795007 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m10:30:30.795556 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
    ...
[0m10:30:30.797818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.801443 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:30.805356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.806836 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    rename table test.incremental_yd_datestat_default_custom_report__dbt_tmp to test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m10:30:30.810538 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.813328 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:30.814557 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.817499 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
EXCHANGE TABLES test.incremental_yd_datestat_default_custom_report__dbt_backup AND test.incremental_yd_datestat_default_custom_report 
  
  ...
[0m10:30:30.819300 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.820858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    rename table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp to test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m10:30:30.822839 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.827409 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m10:30:30.829376 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.832036 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
EXCHANGE TABLES test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup AND test.incremental_ym_events_default_yandex_metrika_stream 
  
  ...
[0m10:30:30.832730 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.835151 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-04-26 10:30:30.747900 => 2024-04-26 10:30:30.835087
[0m10:30:30.835905 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f737970>]}
[0m10:30:30.836482 [info ] [Thread-1 (]: 37 of 89 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.11s]
[0m10:30:30.837359 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m10:30:30.837930 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:30.838276 [info ] [Thread-1 (]: 39 of 89 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m10:30:30.838951 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m10:30:30.839762 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m10:30:30.840520 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.841330 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:30.845714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m10:30:30.863601 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m10:30:30.868569 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.871175 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-04-26 10:30:30.756471 => 2024-04-26 10:30:30.871082
[0m10:30:30.871984 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1a5390>]}
[0m10:30:30.872820 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.873796 [info ] [Thread-2 (]: 38 of 89 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.13s]
[0m10:30:30.881615 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m10:30:30.882272 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m10:30:30.884950 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:30.885953 [info ] [Thread-2 (]: 40 of 89 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m10:30:30.887115 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m10:30:30.887387 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m10:30:30.887552 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:30.892328 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m10:30:30.893716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.895890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:30.902811 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.907657 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m10:30:30.914494 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.919685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.925318 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.927332 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m10:30:30.927733 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-04-26 10:30:30.887659 => 2024-04-26 10:30:30.927667
[0m10:30:30.927905 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:30.932739 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )




    )
        ...
[0m10:30:30.949484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:30.952858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.958502 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.960136 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m10:30:30.960650 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )




  ...
[0m10:30:30.962417 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:30:30.974030 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.975093 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m10:30:30.976299 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m10:30:30.982132 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:30.986493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:30.987617 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:30.993813 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:30.995128 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.061045 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-04-26 10:30:30.927994 => 2024-04-26 10:30:31.060932
[0m10:30:31.062368 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f749660>]}
[0m10:30:31.062807 [info ] [Thread-2 (]: 40 of 89 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.18s]
[0m10:30:31.063245 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m10:30:31.063531 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:31.065540 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:30:31.064488 [info ] [Thread-2 (]: 41 of 89 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m10:30:31.068824 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m10:30:31.070073 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m10:30:31.071478 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m10:30:31.071747 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:31.075422 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m10:30:31.081209 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.081977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.083946 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m10:30:31.087331 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.093204 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.094224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.097831 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m10:30:31.100165 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:31.106962 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.110554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.112257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.120753 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m10:30:31.122700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.126396 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m10:30:31.128239 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.131852 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.134412 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.139519 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.140996 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.144379 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m10:30:31.145898 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.148814 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m10:30:31.155107 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.158613 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.160092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.164980 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.165912 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.170135 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m10:30:31.172078 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.178566 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:30:31.179575 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.183271 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.184775 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-04-26 10:30:30.846126 => 2024-04-26 10:30:31.184655
[0m10:30:31.185170 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:31.189932 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId, --
    --'' AS clientId, -- 
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    --'' AS visitId,
    --'' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts





    )
        ...
[0m10:30:31.190896 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.194905 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:30:31.195338 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-04-26 10:30:31.071883 => 2024-04-26 10:30:31.195273
[0m10:30:31.195510 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:31.201728 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id






    )
        ...
[0m10:30:31.232840 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:31.236488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.241508 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.243697 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m10:30:31.244302 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    '' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(adGroupName, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id






  
    ...
[0m10:30:31.270758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:31.274264 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:30:31.274947 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.08 seconds
[0m10:30:31.279043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.280605 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.283160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat__dbt_backup 
  
  ...
[0m10:30:31.284796 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.287379 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m10:30:31.288170 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.290238 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
EXCHANGE TABLES test.join_mt_datestat__dbt_backup AND test.join_mt_datestat 
  
  ...
[0m10:30:31.291399 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId, --
    --'' AS clientId, -- 
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    --'' AS visitId,
    --'' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts





  
    ...
[0m10:30:31.295384 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.299265 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m10:30:31.303371 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.304832 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-04-26 10:30:31.195602 => 2024-04-26 10:30:31.304755
[0m10:30:31.305761 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f74bc10>]}
[0m10:30:31.306356 [info ] [Thread-2 (]: 41 of 89 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.24s]
[0m10:30:31.306839 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m10:30:31.307216 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:31.307670 [info ] [Thread-2 (]: 42 of 89 START sql incremental model test.join_sheets_periodstat ............... [RUN]
[0m10:30:31.309072 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m10:30:31.309450 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m10:30:31.309613 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:31.312847 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_sheets__%'
    GROUP BY table

...
[0m10:30:31.318108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.319666 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_sheets__%' AND 
        name='__date'

  ...
[0m10:30:31.326068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.328031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_sheets_periodstat_default_planCosts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_sheets_periodstat_default_planCosts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:31.344580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.350938 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m10:30:31.358864 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.364356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.369801 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.372179 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m10:30:31.372733 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-04-26 10:30:31.309707 => 2024-04-26 10:30:31.372643
[0m10:30:31.372958 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:31.378136 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    __date,
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )




    )
        ...
[0m10:30:31.396340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.399739 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.404449 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.405992 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m10:30:31.406499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

        
  
    
    
        
        insert into test.join_sheets_periodstat__dbt_tmp ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    __date,
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )




  
    ...
[0m10:30:31.413806 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.417213 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    drop table if exists test.join_sheets_periodstat__dbt_backup 
  
  ...
[0m10:30:31.420645 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.422229 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    rename table test.join_sheets_periodstat__dbt_tmp to test.join_sheets_periodstat__dbt_backup 
  
  ...
[0m10:30:31.425973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.427216 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m10:30:31.431736 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.436125 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m10:30:31.439902 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.441098 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-04-26 10:30:31.373056 => 2024-04-26 10:30:31.441042
[0m10:30:31.441617 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad66148fa0>]}
[0m10:30:31.441940 [info ] [Thread-2 (]: 42 of 89 OK created sql incremental model test.join_sheets_periodstat .......... [[32mOK[0m in 0.13s]
[0m10:30:31.442411 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m10:30:31.442818 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:31.444911 [info ] [Thread-2 (]: 43 of 89 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m10:30:31.446546 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m10:30:31.446996 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m10:30:31.447181 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:31.451167 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_utmcraft__%'
    GROUP BY table

...
[0m10:30:31.456643 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.462817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m10:30:31.464916 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.17 seconds
[0m10:30:31.469036 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:30:31.472843 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.473832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.479960 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.482347 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m10:30:31.488558 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.489967 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
EXCHANGE TABLES test.join_appmetrica_events__dbt_backup AND test.join_appmetrica_events 
  
  ...
[0m10:30:31.490710 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.494203 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m10:30:31.495401 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-04-26 10:30:31.447301 => 2024-04-26 10:30:31.495153
[0m10:30:31.495920 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:31.501720 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )





    )
        ...
[0m10:30:31.502839 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.508848 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m10:30:31.513105 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.515141 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-04-26 10:30:31.185295 => 2024-04-26 10:30:31.515061
[0m10:30:31.516123 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c10b190>]}
[0m10:30:31.516860 [info ] [Thread-1 (]: 39 of 89 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 0.68s]
[0m10:30:31.517633 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m10:30:31.518224 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:31.518829 [info ] [Thread-1 (]: 44 of 89 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m10:30:31.520337 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m10:30:31.520686 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m10:30:31.520863 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:31.524917 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m10:30:31.526565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.533720 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.534938 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.538339 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m10:30:31.540959 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.542737 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m10:30:31.543783 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.545958 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:31.548500 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )





  ...
[0m10:30:31.563846 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.573084 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m10:30:31.574639 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:31.576109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m10:30:31.580557 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.585523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:31.586968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.590972 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.592105 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.594213 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-04-26 10:30:31.496047 => 2024-04-26 10:30:31.594138
[0m10:30:31.595285 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dc45cc0>]}
[0m10:30:31.595899 [info ] [Thread-2 (]: 43 of 89 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.15s]
[0m10:30:31.596395 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m10:30:31.596868 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:31.597966 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.599406 [info ] [Thread-2 (]: 45 of 89 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m10:30:31.604290 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m10:30:31.604979 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m10:30:31.606521 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m10:30:31.607135 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:31.610793 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m10:30:31.612240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.616642 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.618723 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.620147 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m10:30:31.625011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.626584 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:31.627567 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.632127 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:30:31.633237 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-04-26 10:30:31.520963 => 2024-04-26 10:30:31.633033
[0m10:30:31.634051 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:31.641777 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    --'' AS productName,
    ad_plans.name AS adCampaignName,
    --'' AS adGroupName,
    ad_plans.id AS adId,
    --'' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    --'' AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id






    )
        ...
[0m10:30:31.642654 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.649499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m10:30:31.657382 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.660955 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.668593 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.671637 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:30:31.672130 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-04-26 10:30:31.607343 => 2024-04-26 10:30:31.672043
[0m10:30:31.672351 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:31.677338 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps





    )
        ...
[0m10:30:31.678648 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:31.682082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.687676 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.689445 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m10:30:31.689974 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    --'' AS productName,
    ad_plans.name AS adCampaignName,
    --'' AS adGroupName,
    ad_plans.id AS adId,
    --'' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    --'' AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id






  
    ...
[0m10:30:31.701924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.704713 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.707701 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.710571 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:30:31.711462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.714863 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m10:30:31.715769 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps





  
    ...
[0m10:30:31.717019 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.718391 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m10:30:31.722015 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.723319 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
EXCHANGE TABLES test.join_vkads_datestat__dbt_backup AND test.join_vkads_datestat 
  
  ...
[0m10:30:31.726793 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.733113 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m10:30:31.734172 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.737777 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:30:31.738643 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.740805 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-04-26 10:30:31.634332 => 2024-04-26 10:30:31.740745
[0m10:30:31.741487 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1306a0>]}
[0m10:30:31.741954 [info ] [Thread-1 (]: 44 of 89 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.22s]
[0m10:30:31.742316 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m10:30:31.742617 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m10:30:31.743617 [info ] [Thread-1 (]: 46 of 89 START sql incremental model test.join_ym_events ....................... [RUN]
[0m10:30:31.744856 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.745583 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m10:30:31.746931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat__dbt_backup 
  
  ...
[0m10:30:31.747248 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m10:30:31.749377 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m10:30:31.753844 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m10:30:31.755130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.759032 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
EXCHANGE TABLES test.join_yd_datestat__dbt_backup AND test.join_yd_datestat 
  
  ...
[0m10:30:31.762765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.764412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m10:30:31.766041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.770842 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m10:30:31.774866 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.775619 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.776916 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-04-26 10:30:31.672446 => 2024-04-26 10:30:31.776857
[0m10:30:31.779164 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m10:30:31.780244 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0c6e60>]}
[0m10:30:31.782203 [info ] [Thread-2 (]: 45 of 89 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.18s]
[0m10:30:31.782927 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m10:30:31.783369 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:31.784448 [info ] [Thread-2 (]: 47 of 89 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m10:30:31.786510 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m10:30:31.786848 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m10:30:31.787008 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:31.797003 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m10:30:31.798883 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.808135 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m10:30:31.809427 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.815275 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.817602 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.822405 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.824682 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.827485 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m10:30:31.828276 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-04-26 10:30:31.787099 => 2024-04-26 10:30:31.828187
[0m10:30:31.828509 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:31.832866 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_appprofilematching
        )

        ) 


    )
        ...
[0m10:30:31.834054 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.839794 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:30:31.840414 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-04-26 10:30:31.749777 => 2024-04-26 10:30:31.840302
[0m10:30:31.840754 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m10:30:31.846065 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events





    )
        ...
[0m10:30:31.851722 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.855341 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.860421 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.861860 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m10:30:31.862263 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_appprofilematching
        )

        ) 


  ...
[0m10:30:31.871456 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.874261 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.875105 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.878546 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m10:30:31.880807 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.883325 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m10:30:31.884053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.889908 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:31.890940 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_tmp ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events





  
    ...
[0m10:30:31.894802 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.896264 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-04-26 10:30:31.828616 => 2024-04-26 10:30:31.896195
[0m10:30:31.896926 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad66148fa0>]}
[0m10:30:31.897500 [info ] [Thread-2 (]: 47 of 89 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.11s]
[0m10:30:31.898070 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m10:30:31.898449 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:31.898965 [info ] [Thread-2 (]: 48 of 89 START sql incremental model test.combine_periodstat ................... [RUN]
[0m10:30:31.900296 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m10:30:31.900687 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m10:30:31.900859 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:31.904307 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m10:30:31.910467 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.911381 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.915178 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m10:30:31.919124 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.922987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.924557 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events__dbt_backup 
  
  ...
[0m10:30:31.926066 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.927938 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m10:30:31.928618 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.930487 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
EXCHANGE TABLES test.join_ym_events__dbt_backup AND test.join_ym_events 
  
  ...
[0m10:30:31.931929 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-04-26 10:30:31.900951 => 2024-04-26 10:30:31.931700
[0m10:30:31.932455 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:31.938645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_sheets_periodstat
        )

        ) 


    )
        ...
[0m10:30:31.940040 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.946927 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m10:30:31.951465 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.953100 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-04-26 10:30:31.840869 => 2024-04-26 10:30:31.953026
[0m10:30:31.954080 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c131f00>]}
[0m10:30:31.954827 [info ] [Thread-1 (]: 46 of 89 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.21s]
[0m10:30:31.955176 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m10:30:31.955493 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:31.957094 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:31.956162 [info ] [Thread-1 (]: 49 of 89 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m10:30:31.960523 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.961608 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m10:30:31.963224 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m10:30:31.963665 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:31.968922 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m10:30:31.970965 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.972902 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m10:30:31.973365 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

        
  
    
    
        
        insert into test.combine_periodstat__dbt_tmp ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_sheets_periodstat
        )

        ) 


  
    ...
[0m10:30:31.977092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.981007 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:31.981810 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.986907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    drop table if exists test.combine_periodstat__dbt_backup 
  
  ...
[0m10:30:31.987729 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:31.990744 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m10:30:31.991420 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:31.993123 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    rename table test.combine_periodstat__dbt_tmp to test.combine_periodstat__dbt_backup 
  
  ...
[0m10:30:31.994254 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-04-26 10:30:31.964300 => 2024-04-26 10:30:31.994132
[0m10:30:31.994665 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:31.999533 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_utmcraft_registry_utmhashregistry
        )

        ) 


    )
        ...
[0m10:30:32.000231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.004046 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m10:30:32.008749 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.016516 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m10:30:32.018236 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.021280 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.022957 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.024295 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-04-26 10:30:31.932740 => 2024-04-26 10:30:32.024234
[0m10:30:32.025011 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad6657bf70>]}
[0m10:30:32.025729 [info ] [Thread-2 (]: 48 of 89 OK created sql incremental model test.combine_periodstat .............. [[32mOK[0m in 0.12s]
[0m10:30:32.026319 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m10:30:32.026873 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m10:30:32.027682 [info ] [Thread-2 (]: 50 of 89 START sql incremental model test.combine_datestat ..................... [RUN]
[0m10:30:32.028849 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m10:30:32.029736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.030186 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m10:30:32.032748 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m10:30:32.033478 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m10:30:32.038259 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m10:30:32.040218 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_utmcraft_registry_utmhashregistry
        )

        ) 


  ...
[0m10:30:32.046207 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.049956 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.051358 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.053882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m10:30:32.056014 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.060109 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.061283 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.065284 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:32.069802 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.070916 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.072296 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-04-26 10:30:31.994837 => 2024-04-26 10:30:32.072237
[0m10:30:32.078418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.079378 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f625450>]}
[0m10:30:32.080868 [info ] [Thread-1 (]: 49 of 89 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.12s]
[0m10:30:32.081308 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m10:30:32.081669 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:32.082085 [info ] [Thread-1 (]: 51 of 89 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m10:30:32.084134 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m10:30:32.084559 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m10:30:32.084863 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:32.171631 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:30:32.173516 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_registry_appprofilematching')        
...
[0m10:30:32.177598 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:30:32.179942 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-04-26 10:30:32.033997 => 2024-04-26 10:30:32.179815
[0m10:30:32.180327 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m10:30:32.185854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adPhraseId 

            from test.join_mt_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString('') as adGroupName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adPhraseId 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adPhraseId") as adPhraseId 

            from test.join_yd_datestat
        )

        ) 


    )
        ...
[0m10:30:32.186749 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.191466 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.196348 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.198825 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m10:30:32.199270 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-04-26 10:30:32.085048 => 2024-04-26 10:30:32.199202
[0m10:30:32.199442 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:32.204439 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_appprofilematching
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:32.208013 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.210560 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.216216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.218027 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m10:30:32.218623 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adPhraseId 

            from test.join_mt_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString('') as adGroupName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adPhraseId 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adPhraseId") as adPhraseId 

            from test.join_yd_datestat
        )

        ) 


  
    ...
[0m10:30:32.223849 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.226527 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.231371 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.233018 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m10:30:32.233456 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_appprofilematching
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m10:30:32.238550 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.241626 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m10:30:32.245343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.246615 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat__dbt_backup 
  
  ...
[0m10:30:32.248518 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.249719 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m10:30:32.250455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.253140 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
EXCHANGE TABLES test.combine_datestat__dbt_backup AND test.combine_datestat 
  
  ...
[0m10:30:32.256789 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.257868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.262734 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:32.266841 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m10:30:32.271600 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.273050 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-04-26 10:30:32.180585 => 2024-04-26 10:30:32.272988
[0m10:30:32.273658 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.274530 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2df820>]}
[0m10:30:32.276202 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-04-26 10:30:32.199531 => 2024-04-26 10:30:32.276146
[0m10:30:32.277197 [info ] [Thread-2 (]: 50 of 89 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.25s]
[0m10:30:32.278535 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f624f70>]}
[0m10:30:32.279175 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m10:30:32.280053 [info ] [Thread-1 (]: 51 of 89 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.19s]
[0m10:30:32.280913 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m10:30:32.281763 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m10:30:32.283625 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:32.282902 [info ] [Thread-2 (]: 52 of 89 START sql incremental model test.combine_events ....................... [RUN]
[0m10:30:32.284957 [info ] [Thread-1 (]: 53 of 89 START sql incremental model test.hash_periodstat ...................... [RUN]
[0m10:30:32.286282 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m10:30:32.287138 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m10:30:32.287460 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m10:30:32.287786 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m10:30:32.288143 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m10:30:32.288450 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:32.295829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m10:30:32.303747 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_periodstat')        
...
[0m10:30:32.311240 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.314731 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.316374 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.320586 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.321679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.325456 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m10:30:32.326431 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-04-26 10:30:32.296291 => 2024-04-26 10:30:32.326290
[0m10:30:32.326857 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:32.333523 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.334434 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
        THEN toDateTime(__date)
    










    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as ManualAdCostStatHash
    
    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_periodstat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:32.341058 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.346879 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.351737 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m10:30:32.352277 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-04-26 10:30:32.288748 => 2024-04-26 10:30:32.352196
[0m10:30:32.352503 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m10:30:32.357739 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        ) 


    )
        ...
[0m10:30:32.360173 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.363424 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.369700 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.371475 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m10:30:32.372067 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

        
  
    
    
        
        insert into test.hash_periodstat__dbt_tmp ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
        THEN toDateTime(__date)
    










    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as ManualAdCostStatHash
    
    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_periodstat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m10:30:32.381220 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.384210 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.389202 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.390077 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.393326 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    drop table if exists test.hash_periodstat__dbt_backup 
  
  ...
[0m10:30:32.396013 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m10:30:32.399052 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        ) 


  
    ...
[0m10:30:32.400463 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.402029 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    rename table test.hash_periodstat__dbt_tmp to test.hash_periodstat__dbt_backup 
  
  ...
[0m10:30:32.406082 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.407300 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m10:30:32.410764 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.417305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m10:30:32.421483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.423304 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-04-26 10:30:32.327028 => 2024-04-26 10:30:32.423243
[0m10:30:32.423964 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.424856 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c376770>]}
[0m10:30:32.428487 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m10:30:32.429666 [info ] [Thread-1 (]: 53 of 89 OK created sql incremental model test.hash_periodstat ................. [[32mOK[0m in 0.14s]
[0m10:30:32.432535 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m10:30:32.433361 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:32.434108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.434507 [info ] [Thread-1 (]: 54 of 89 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m10:30:32.436184 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events__dbt_backup 
  
  ...
[0m10:30:32.437515 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m10:30:32.438987 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m10:30:32.439584 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:32.445298 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_registry_utmhashregistry')        
...
[0m10:30:32.447216 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.449110 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
EXCHANGE TABLES test.combine_events__dbt_backup AND test.combine_events 
  
  ...
[0m10:30:32.453493 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.454472 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.457945 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.462800 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m10:30:32.469338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.470072 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.471636 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-04-26 10:30:32.352606 => 2024-04-26 10:30:32.471567
[0m10:30:32.475804 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m10:30:32.477248 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2fe2f0>]}
[0m10:30:32.478291 [info ] [Thread-2 (]: 52 of 89 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.19s]
[0m10:30:32.479001 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m10:30:32.479394 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m10:30:32.479878 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-04-26 10:30:32.439803 => 2024-04-26 10:30:32.479778
[0m10:30:32.480387 [info ] [Thread-2 (]: 55 of 89 START sql incremental model test.hash_datestat ........................ [RUN]
[0m10:30:32.481357 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:32.482182 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m10:30:32.489278 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as UtmHashRegistryHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_utmhashregistry
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:32.489642 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m10:30:32.491755 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m10:30:32.498605 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m10:30:32.505995 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.509390 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.510798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.513612 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.515906 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.520794 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:30:32.521786 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.523920 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m10:30:32.525279 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-04-26 10:30:32.492052 => 2024-04-26 10:30:32.525065
[0m10:30:32.526049 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m10:30:32.533079 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 


WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adPhraseId") as adPhraseId 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:32.534493 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as UtmHashRegistryHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_utmhashregistry
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m10:30:32.551914 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.553396 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m10:30:32.557123 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.562005 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:32.564471 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:32.568057 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.568835 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.571720 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-04-26 10:30:32.482581 => 2024-04-26 10:30:32.571641
[0m10:30:32.572764 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c31b130>]}
[0m10:30:32.573377 [info ] [Thread-1 (]: 54 of 89 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.14s]
[0m10:30:32.574602 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.575309 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m10:30:32.578515 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m10:30:32.579472 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:32.582711 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 


WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adGroupName") as adGroupName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adPhraseId") as adPhraseId 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m10:30:32.581992 [info ] [Thread-1 (]: 56 of 89 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m10:30:32.584905 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m10:30:32.585454 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m10:30:32.585709 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:32.591729 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.596776 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.598917 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m10:30:32.599939 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-04-26 10:30:32.585804 => 2024-04-26 10:30:32.599728
[0m10:30:32.600406 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:32.605148 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


    )
        ...
[0m10:30:32.615398 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:32.621988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m10:30:32.622798 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:32.627308 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:32.630076 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.631388 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat__dbt_backup 
  
  ...
[0m10:30:32.632705 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.634448 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m10:30:32.635506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.637352 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
EXCHANGE TABLES test.hash_datestat__dbt_backup AND test.hash_datestat 
  
  ...
[0m10:30:32.638672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


  ...
[0m10:30:32.641338 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.646689 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m10:30:32.650032 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:32.650907 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.652134 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m10:30:32.653490 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-04-26 10:30:32.526178 => 2024-04-26 10:30:32.653425
[0m10:30:32.655642 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c142fe0>]}
[0m10:30:32.657913 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.662208 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m10:30:32.666877 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:32.668198 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-04-26 10:30:32.600587 => 2024-04-26 10:30:32.668122
[0m10:30:32.668760 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c318af0>]}
[0m10:30:33.379105 [info ] [Thread-2 (]: 55 of 89 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.17s]
[0m10:30:33.379775 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m10:30:33.380180 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m10:30:33.380913 [info ] [Thread-1 (]: 56 of 89 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.08s]
[0m10:30:33.381378 [info ] [Thread-2 (]: 57 of 89 START sql table model test.link_periodstat ............................ [RUN]
[0m10:30:33.382885 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m10:30:33.383764 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m10:30:33.384319 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m10:30:33.384761 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m10:30:33.385853 [info ] [Thread-1 (]: 58 of 89 START sql incremental model test.hash_events .......................... [RUN]
[0m10:30:33.386900 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m10:30:33.388036 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m10:30:33.394897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.395556 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m10:30:33.397558 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m10:30:33.404034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.408266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m10:30:33.410597 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m10:30:33.412918 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-04-26 10:30:33.388558 => 2024-04-26 10:30:33.412741
[0m10:30:33.413357 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m10:30:33.418858 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT __date,campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY __date, campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime


    )
        ...
[0m10:30:33.420676 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.425052 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.431297 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.438892 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m10:30:33.439849 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:33.442538 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.443868 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-04-26 10:30:33.398099 => 2024-04-26 10:30:33.443690
[0m10:30:33.444960 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m10:30:33.452219 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE 




WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m10:30:33.453166 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.456454 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m10:30:33.457308 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT __date,campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY __date, campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime


  ...
[0m10:30:33.466636 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.467795 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m10:30:33.471319 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.475781 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m10:30:33.479090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.481134 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-04-26 10:30:33.413557 => 2024-04-26 10:30:33.481070
[0m10:30:33.481731 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbcbd60>]}
[0m10:30:33.482103 [info ] [Thread-2 (]: 57 of 89 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.10s]
[0m10:30:33.482422 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m10:30:33.482730 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:33.483089 [info ] [Thread-2 (]: 59 of 89 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m10:30:33.484252 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m10:30:33.484506 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m10:30:33.484729 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:33.489567 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.496577 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.499131 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m10:30:33.500228 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-04-26 10:30:33.484828 => 2024-04-26 10:30:33.499922
[0m10:30:33.500729 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:33.505094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime


    )
        ...
[0m10:30:33.505977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m10:30:33.511025 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.517580 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.520479 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m10:30:33.521039 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE 




WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m10:30:33.526484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:33.529228 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.534963 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.537328 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m10:30:33.537983 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime


  ...
[0m10:30:33.548116 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.549443 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m10:30:33.554004 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.557804 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m10:30:33.561720 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.562932 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-04-26 10:30:33.500905 => 2024-04-26 10:30:33.562877
[0m10:30:33.563708 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dbca9b0>]}
[0m10:30:33.564270 [info ] [Thread-2 (]: 59 of 89 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.08s]
[0m10:30:33.564747 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m10:30:33.565404 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m10:30:33.566963 [info ] [Thread-2 (]: 60 of 89 START sql table model test.link_datestat .............................. [RUN]
[0m10:30:33.567790 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m10:30:33.567981 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m10:30:33.568145 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m10:30:33.573103 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.579195 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.581877 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m10:30:33.582542 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-04-26 10:30:33.568251 => 2024-04-26 10:30:33.582437
[0m10:30:33.582904 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m10:30:33.587214 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adGroupName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adGroupName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime


    )
        ...
[0m10:30:33.588388 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m10:30:33.593784 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m10:30:33.596837 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.598642 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events__dbt_backup 
  
  ...
[0m10:30:33.604320 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.605722 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
EXCHANGE TABLES test.hash_events__dbt_backup AND test.hash_events 
  
  ...
[0m10:30:33.609307 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.613064 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m10:30:33.615035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:33.618884 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.622270 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.623489 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-04-26 10:30:33.445380 => 2024-04-26 10:30:33.623430
[0m10:30:33.624112 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c3754b0>]}
[0m10:30:33.624536 [info ] [Thread-1 (]: 58 of 89 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.24s]
[0m10:30:33.625343 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.625859 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m10:30:33.627727 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m10:30:33.628433 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m10:30:33.629693 [info ] [Thread-1 (]: 61 of 89 START sql incremental model test.full_periodstat ...................... [RUN]
[0m10:30:33.631052 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m10:30:33.632080 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m10:30:33.632756 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adGroupName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adGroupName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime


  ...
[0m10:30:33.633631 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m10:30:33.642083 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m10:30:33.647441 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.649586 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m10:30:33.650748 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:33.653872 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m10:30:33.656954 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.658406 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m10:30:33.659746 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.665477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m10:30:33.667193 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.669057 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m10:30:33.670133 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.672992 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-04-26 10:30:33.583043 => 2024-04-26 10:30:33.672917
[0m10:30:33.673703 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2df820>]}
[0m10:30:33.674200 [info ] [Thread-2 (]: 60 of 89 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.11s]
[0m10:30:33.674680 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m10:30:33.675358 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.675995 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.link_events
[0m10:30:33.677859 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m10:30:33.678866 [info ] [Thread-2 (]: 62 of 89 START sql table model test.link_events ................................ [RUN]
[0m10:30:33.681718 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m10:30:33.682153 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m10:30:33.682347 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m10:30:33.689704 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.691467 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.692818 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m10:30:33.695307 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.698087 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m10:30:33.699023 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.700679 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m10:30:33.702360 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-04-26 10:30:33.682447 => 2024-04-26 10:30:33.702074
[0m10:30:33.702950 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m10:30:33.708225 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,UtmHashHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, UtmHashHash, YmClientHash, __id, __datetime


    )
        ...
[0m10:30:33.709532 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.710941 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m10:30:33.716328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.717759 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m10:30:33.724660 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.726424 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m10:30:33.731517 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.732472 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:33.736606 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.739988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.745946 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.751897 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.752743 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.756239 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m10:30:33.756777 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,UtmHashHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, UtmHashHash, YmClientHash, __id, __datetime


  ...
[0m10:30:33.757957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.830317 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.835781 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.837666 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m10:30:33.838267 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-04-26 10:30:33.635129 => 2024-04-26 10:30:33.838176
[0m10:30:33.838519 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m10:30:33.843408 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat
WITH unnest_dates AS (
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
__date
,
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days
FROM test.link_periodstat
)
SELECT period_date, 
__date,
campaign,
periodStart,
periodEnd,
__emitted_at,
__table_name,
__link,
ManualAdCostStatHash,
__id,
__datetime,
 
cost/divide_by_days AS cost_per_day

 

FROM unnest_dates
    )
        ...
[0m10:30:33.848150 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:30:33.849705 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m10:30:33.855493 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.859144 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m10:30:33.863007 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:33.865753 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.866589 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.869086 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-04-26 10:30:33.703153 => 2024-04-26 10:30:33.869013
[0m10:30:33.870256 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0e9b10>]}
[0m10:30:33.870809 [info ] [Thread-2 (]: 62 of 89 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.19s]
[0m10:30:33.871202 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m10:30:33.871565 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m10:30:33.873538 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.872795 [info ] [Thread-2 (]: 63 of 89 START sql incremental model test.full_datestat ........................ [RUN]
[0m10:30:33.875651 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m10:30:33.876638 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m10:30:33.877698 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m10:30:33.878129 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m10:30:33.890876 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

        
  
    
    
        
        insert into test.full_periodstat__dbt_tmp ("period_date", "__date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat
WITH unnest_dates AS (
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
__date
,
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days
FROM test.link_periodstat
)
SELECT period_date, 
__date,
campaign,
periodStart,
periodEnd,
__emitted_at,
__table_name,
__link,
ManualAdCostStatHash,
__id,
__datetime,
 
cost/divide_by_days AS cost_per_day

 

FROM unnest_dates
  
    ...
[0m10:30:33.894403 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m10:30:33.901651 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.904630 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m10:30:33.910177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.911164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:33.916362 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m10:30:33.922383 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    drop table if exists test.full_periodstat__dbt_backup 
  
  ...
[0m10:30:33.927195 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.928536 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    rename table test.full_periodstat__dbt_tmp to test.full_periodstat__dbt_backup 
  
  ...
[0m10:30:33.929380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.933310 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m10:30:33.934086 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.936529 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m10:30:33.938983 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.940305 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m10:30:33.941696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.946388 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m10:30:33.947582 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.950890 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m10:30:33.952497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.954349 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-04-26 10:30:33.838638 => 2024-04-26 10:30:33.954272
[0m10:30:33.955015 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f71d1b0>]}
[0m10:30:33.956104 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.955476 [info ] [Thread-1 (]: 61 of 89 OK created sql incremental model test.full_periodstat ................. [[32mOK[0m in 0.32s]
[0m10:30:33.957820 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m10:30:33.958305 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m10:30:33.959919 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m10:30:33.960483 [info ] [Thread-1 (]: 64 of 89 START sql table model test.graph_tuples ............................... [RUN]
[0m10:30:33.962060 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m10:30:33.962399 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m10:30:33.962576 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m10:30:33.968892 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:30:33.970272 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.971791 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m10:30:33.972862 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-04-26 10:30:33.962673 => 2024-04-26 10:30:33.972744
[0m10:30:33.973220 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m10:30:33.978334 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m10:30:33.979917 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.982325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m10:30:33.986991 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:33.988420 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m10:30:33.993771 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:33.997319 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:33.998160 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.003062 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.008611 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.009294 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.012650 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.014936 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m10:30:34.017026 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m10:30:34.023119 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.026108 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m10:30:34.026580 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-04-26 10:30:33.878564 => 2024-04-26 10:30:34.026511
[0m10:30:34.026767 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m10:30:34.031927 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry


WITH t1 AS (
SELECT * FROM test.link_datestat
)
, t2 AS (
SELECT * FROM 

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
                            toString("UtmHashHash") as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as crmUserId ,
                            toString('') as cityName ,
                            toString('') as AppProfileMatchingHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash 

            from test.link_registry_utmhashregistry
        )

        union all
        

        (
            select
                            toString('') as utmHash ,
                            toString('') as utm_base_url ,
                            toString('') as utm_utmSource ,
                            toString('') as utm_utmMedium ,
                            toString('') as utm_utmCampaign ,
                            toString('') as utm_project ,
                            toString('') as utm_utmContent ,
                            toString('') as utm_strategy ,
                            toString('') as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString('') as UtmHashRegistryHash ,
                            toString('') as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash 

            from test.link_registry_appprofilematching
        )

        
)
, t3 AS (
SELECT * FROM t1
LEFT JOIN t2 USING (__id, __link, __datetime)
)
SELECT * --COLUMNS('^[a-z|_][^2]') 
FROM t3
    )
        ...
[0m10:30:34.033218 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.036217 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m10:30:34.040845 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.046412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m10:30:34.050597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.052024 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-04-26 10:30:33.973406 => 2024-04-26 10:30:34.051931
[0m10:30:34.052762 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1ee6e0>]}
[0m10:30:34.053255 [info ] [Thread-1 (]: 64 of 89 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.09s]
[0m10:30:34.053729 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m10:30:34.054748 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m10:30:34.055328 [info ] [Thread-1 (]: 65 of 89 START sql table model test.graph_lookup ............................... [RUN]
[0m10:30:34.056115 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m10:30:34.056387 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m10:30:34.056541 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m10:30:34.059535 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m10:30:34.060098 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-04-26 10:30:34.056632 => 2024-04-26 10:30:34.060006
[0m10:30:34.060352 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m10:30:34.065332 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m10:30:34.066035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:34.070061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.076431 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.078797 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m10:30:34.079437 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "appmetricaDeviceId", "crmUserId", "cityName", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry


WITH t1 AS (
SELECT * FROM test.link_datestat
)
, t2 AS (
SELECT * FROM 

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
                            toString("UtmHashHash") as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as crmUserId ,
                            toString('') as cityName ,
                            toString('') as AppProfileMatchingHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash 

            from test.link_registry_utmhashregistry
        )

        union all
        

        (
            select
                            toString('') as utmHash ,
                            toString('') as utm_base_url ,
                            toString('') as utm_utmSource ,
                            toString('') as utm_utmMedium ,
                            toString('') as utm_utmCampaign ,
                            toString('') as utm_project ,
                            toString('') as utm_utmContent ,
                            toString('') as utm_strategy ,
                            toString('') as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString('') as UtmHashRegistryHash ,
                            toString('') as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash 

            from test.link_registry_appprofilematching
        )

        
)
, t3 AS (
SELECT * FROM t1
LEFT JOIN t2 USING (__id, __link, __datetime)
)
SELECT * --COLUMNS('^[a-z|_][^2]') 
FROM t3
  
    ...
[0m10:30:34.081765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.085266 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.091056 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.092537 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m10:30:34.093044 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m10:30:34.103238 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.105077 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m10:30:34.109160 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.113693 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m10:30:34.114715 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:34.120946 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    drop table if exists test.full_datestat__dbt_backup 
  
  ...
[0m10:30:34.122968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.124549 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-04-26 10:30:34.060457 => 2024-04-26 10:30:34.124480
[0m10:30:34.125334 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dc46020>]}
[0m10:30:34.125909 [info ] [Thread-1 (]: 65 of 89 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.07s]
[0m10:30:34.126467 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m10:30:34.127119 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.128813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    rename table test.full_datestat__dbt_tmp to test.full_datestat__dbt_backup 
  
  ...
[0m10:30:34.130088 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m10:30:34.130655 [info ] [Thread-1 (]: 66 of 89 START sql table model test.graph_unique ............................... [RUN]
[0m10:30:34.131680 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m10:30:34.132776 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m10:30:34.133387 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m10:30:34.136796 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m10:30:34.137797 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.139086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m10:30:34.140467 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-04-26 10:30:34.133624 => 2024-04-26 10:30:34.140232
[0m10:30:34.141022 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m10:30:34.145335 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m10:30:34.146206 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.152771 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m10:30:34.157896 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.159406 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-04-26 10:30:34.026865 => 2024-04-26 10:30:34.159334
[0m10:30:34.160076 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f78fb50>]}
[0m10:30:34.160526 [info ] [Thread-2 (]: 63 of 89 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.28s]
[0m10:30:34.160871 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m10:30:34.161676 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.165532 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.171501 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.172997 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m10:30:34.173804 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m10:30:34.178734 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.179862 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m10:30:34.184122 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.188087 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m10:30:34.192403 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.193744 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-04-26 10:30:34.141187 => 2024-04-26 10:30:34.193671
[0m10:30:34.194325 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dc45660>]}
[0m10:30:34.194662 [info ] [Thread-1 (]: 66 of 89 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m10:30:34.194977 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m10:30:34.196705 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m10:30:34.197203 [info ] [Thread-2 (]: 67 of 89 START sql table model test.graph_edge ................................. [RUN]
[0m10:30:34.197894 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m10:30:34.198110 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m10:30:34.198283 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m10:30:34.203180 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m10:30:34.203704 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-04-26 10:30:34.198396 => 2024-04-26 10:30:34.203623
[0m10:30:34.203936 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m10:30:34.208163 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m10:30:34.224769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.227480 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.233909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.236075 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m10:30:34.236637 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m10:30:34.245105 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.246224 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m10:30:34.250302 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.254505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m10:30:34.260516 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.263856 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m10:30:34.267653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.269040 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-04-26 10:30:34.204037 => 2024-04-26 10:30:34.268979
[0m10:30:34.269745 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f743880>]}
[0m10:30:34.270337 [info ] [Thread-2 (]: 67 of 89 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m10:30:34.270939 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m10:30:34.272500 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m10:30:34.273132 [info ] [Thread-1 (]: 68 of 89 START sql table model test.graph_glue ................................. [RUN]
[0m10:30:34.273827 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m10:30:34.274068 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m10:30:34.274248 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m10:30:34.277140 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m10:30:34.277571 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-04-26 10:30:34.274348 => 2024-04-26 10:30:34.277509
[0m10:30:34.277735 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m10:30:34.281562 [debug] [Thread-1 (]: Running iteration 0
[0m10:30:34.282252 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:30:34.309381 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:34.310404 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:30:34.337216 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:34.338297 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:30:34.344996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.346022 [debug] [Thread-1 (]: VALUE: 1
[0m10:30:34.346197 [debug] [Thread-1 (]: Running iteration 1
[0m10:30:34.346531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:30:34.371578 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.372613 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:30:34.395297 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.396411 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:30:34.402309 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.403410 [debug] [Thread-1 (]: VALUE: 0
[0m10:30:34.403635 [debug] [Thread-1 (]: Running iteration 2
[0m10:30:34.403766 [debug] [Thread-1 (]: Running iteration 3
[0m10:30:34.403942 [debug] [Thread-1 (]: Running iteration 4
[0m10:30:34.404044 [debug] [Thread-1 (]: Running iteration 5
[0m10:30:34.404137 [debug] [Thread-1 (]: Running iteration 6
[0m10:30:34.404230 [debug] [Thread-1 (]: Running iteration 7
[0m10:30:34.404323 [debug] [Thread-1 (]: Running iteration 8
[0m10:30:34.404414 [debug] [Thread-1 (]: Running iteration 9
[0m10:30:34.404508 [debug] [Thread-1 (]: Running iteration 10
[0m10:30:34.404602 [debug] [Thread-1 (]: Running iteration 11
[0m10:30:34.404693 [debug] [Thread-1 (]: Running iteration 12
[0m10:30:34.404784 [debug] [Thread-1 (]: Running iteration 13
[0m10:30:34.406059 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m10:30:34.419605 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.423687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.428332 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.429715 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m10:30:34.430123 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    max(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m10:30:34.438247 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.439397 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m10:30:34.443785 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.447559 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m10:30:34.450976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.452422 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-04-26 10:30:34.277822 => 2024-04-26 10:30:34.452365
[0m10:30:34.452963 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c188e80>]}
[0m10:30:34.453302 [info ] [Thread-1 (]: 68 of 89 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.18s]
[0m10:30:34.453626 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m10:30:34.455586 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m10:30:34.456092 [info ] [Thread-2 (]: 69 of 89 START sql table model test.graph_qid .................................. [RUN]
[0m10:30:34.456761 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m10:30:34.457000 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m10:30:34.457161 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m10:30:34.460466 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m10:30:34.461023 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-04-26 10:30:34.457293 => 2024-04-26 10:30:34.460891
[0m10:30:34.461315 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m10:30:34.465972 [debug] [Thread-2 (]: Running iteration 0
[0m10:30:34.466442 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m10:30:34.491050 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.492493 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m10:30:34.517373 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.518649 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m10:30:34.526080 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.527151 [debug] [Thread-2 (]: VALUE: 0
[0m10:30:34.527334 [debug] [Thread-2 (]: Running iteration 1
[0m10:30:34.527442 [debug] [Thread-2 (]: Running iteration 2
[0m10:30:34.527540 [debug] [Thread-2 (]: Running iteration 3
[0m10:30:34.527635 [debug] [Thread-2 (]: Running iteration 4
[0m10:30:34.527729 [debug] [Thread-2 (]: Running iteration 5
[0m10:30:34.527822 [debug] [Thread-2 (]: Running iteration 6
[0m10:30:34.527914 [debug] [Thread-2 (]: Running iteration 7
[0m10:30:34.528006 [debug] [Thread-2 (]: Running iteration 8
[0m10:30:34.528100 [debug] [Thread-2 (]: Running iteration 9
[0m10:30:34.528192 [debug] [Thread-2 (]: Running iteration 10
[0m10:30:34.528284 [debug] [Thread-2 (]: Running iteration 11
[0m10:30:34.528376 [debug] [Thread-2 (]: Running iteration 12
[0m10:30:34.528468 [debug] [Thread-2 (]: Running iteration 13
[0m10:30:34.529755 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m10:30:34.546899 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.550563 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.555647 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.557023 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m10:30:34.557458 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m10:30:34.565575 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.566837 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m10:30:34.571094 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.575854 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m10:30:34.579394 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.580713 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-04-26 10:30:34.461455 => 2024-04-26 10:30:34.580636
[0m10:30:34.581334 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c31cc70>]}
[0m10:30:34.581688 [info ] [Thread-2 (]: 69 of 89 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.12s]
[0m10:30:34.582038 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m10:30:34.583317 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.full_events
[0m10:30:34.583970 [info ] [Thread-1 (]: 70 of 89 START sql table model test.full_events ................................ [RUN]
[0m10:30:34.584542 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m10:30:34.584675 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m10:30:34.584807 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m10:30:34.590312 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m10:30:34.594730 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.596782 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m10:30:34.601765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.603753 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m10:30:34.608596 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.610032 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m10:30:34.614767 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.616335 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m10:30:34.621764 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.623200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m10:30:34.627716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.629098 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m10:30:34.634006 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.636291 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m10:30:34.640594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.642045 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m10:30:34.647057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.648951 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m10:30:34.653808 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.657047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.662516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.667085 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.672060 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.674979 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m10:30:34.675427 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-04-26 10:30:34.584906 => 2024-04-26 10:30:34.675360
[0m10:30:34.675598 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m10:30:34.680835 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry


WITH t1 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t2 AS (
SELECT * FROM 

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
                            toString("UtmHashHash") as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as crmUserId ,
                            toString('') as cityName ,
                            toString('') as AppProfileMatchingHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash 

            from test.link_registry_utmhashregistry
        )

        union all
        

        (
            select
                            toString('') as utmHash ,
                            toString('') as utm_base_url ,
                            toString('') as utm_utmSource ,
                            toString('') as utm_utmMedium ,
                            toString('') as utm_utmCampaign ,
                            toString('') as utm_project ,
                            toString('') as utm_utmContent ,
                            toString('') as utm_strategy ,
                            toString('') as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString('') as UtmHashRegistryHash ,
                            toString('') as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash 

            from test.link_registry_appprofilematching
        )

        
)
, t3 AS (
SELECT * 
FROM t1
LEFT JOIN t2 USING (__id, __link, __datetime)
)
SELECT * --COLUMNS('^[a-z|_][^2]') 
FROM t3
    )
        ...
[0m10:30:34.718043 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:34.720715 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.726462 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.728638 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m10:30:34.729114 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "qid", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash")
  -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry


WITH t1 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t2 AS (
SELECT * FROM 

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString("UtmHashRegistryHash") as UtmHashRegistryHash ,
                            toString("UtmHashHash") as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as crmUserId ,
                            toString('') as cityName ,
                            toString('') as AppProfileMatchingHash ,
                            toString('') as AppMetricaDeviceHash ,
                            toString('') as CrmUserHash 

            from test.link_registry_utmhashregistry
        )

        union all
        

        (
            select
                            toString('') as utmHash ,
                            toString('') as utm_base_url ,
                            toString('') as utm_utmSource ,
                            toString('') as utm_utmMedium ,
                            toString('') as utm_utmCampaign ,
                            toString('') as utm_project ,
                            toString('') as utm_utmContent ,
                            toString('') as utm_strategy ,
                            toString('') as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link ,
                            toString('') as UtmHashRegistryHash ,
                            toString('') as UtmHashHash ,
                            toString("__id") as __id ,
                            toDateTime("__datetime") as __datetime ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toString("AppProfileMatchingHash") as AppProfileMatchingHash ,
                            toString("AppMetricaDeviceHash") as AppMetricaDeviceHash ,
                            toString("CrmUserHash") as CrmUserHash 

            from test.link_registry_appprofilematching
        )

        
)
, t3 AS (
SELECT * 
FROM t1
LEFT JOIN t2 USING (__id, __link, __datetime)
)
SELECT * --COLUMNS('^[a-z|_][^2]') 
FROM t3
  ...
[0m10:30:34.773279 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m10:30:34.774834 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m10:30:34.778346 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.781993 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m10:30:34.785476 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.786828 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-04-26 10:30:34.675685 => 2024-04-26 10:30:34.786767
[0m10:30:34.787368 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3dec4250>]}
[0m10:30:34.787694 [info ] [Thread-1 (]: 70 of 89 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.20s]
[0m10:30:34.788017 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m10:30:34.789835 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:34.790565 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:34.791224 [info ] [Thread-2 (]: 71 of 89 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m10:30:34.792205 [info ] [Thread-1 (]: 72 of 89 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m10:30:34.793887 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m10:30:34.794802 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m10:30:34.795208 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m10:30:34.795737 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m10:30:34.796284 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:34.796611 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:34.799958 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m10:30:34.803882 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m10:30:34.805725 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-04-26 10:30:34.796850 => 2024-04-26 10:30:34.805540
[0m10:30:34.806513 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-04-26 10:30:34.800628 => 2024-04-26 10:30:34.806303
[0m10:30:34.807036 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:34.807618 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:34.812116 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m10:30:34.819043 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m10:30:34.844323 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.847779 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.849713 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:34.854771 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.856628 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.859089 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m10:30:34.860278 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m10:30:34.863316 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.866274 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m10:30:34.866770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m10:30:34.881176 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.883035 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m10:30:34.887155 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.891579 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m10:30:34.893016 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:34.895054 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m10:30:34.896197 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.897875 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-04-26 10:30:34.807974 => 2024-04-26 10:30:34.897713
[0m10:30:34.898807 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f742e90>]}
[0m10:30:34.899696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.900468 [info ] [Thread-2 (]: 71 of 89 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.11s]
[0m10:30:34.904798 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m10:30:34.905565 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m10:30:34.907151 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m10:30:34.907488 [info ] [Thread-2 (]: 73 of 89 START sql view model test.dataset_event_table ......................... [RUN]
[0m10:30:34.908870 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m10:30:34.910449 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.911083 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m10:30:34.912663 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-04-26 10:30:34.812638 => 2024-04-26 10:30:34.912587
[0m10:30:34.913195 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m10:30:34.914226 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0d88b0>]}
[0m10:30:34.918196 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m10:30:34.919214 [info ] [Thread-1 (]: 72 of 89 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.12s]
[0m10:30:34.920454 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m10:30:34.921348 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:34.923001 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-04-26 10:30:34.914700 => 2024-04-26 10:30:34.922890
[0m10:30:34.922438 [info ] [Thread-1 (]: 74 of 89 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m10:30:34.924051 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m10:30:34.925617 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m10:30:34.931932 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m10:30:34.932693 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m10:30:34.933661 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:34.940100 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m10:30:34.940783 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-04-26 10:30:34.933875 => 2024-04-26 10:30:34.940694
[0m10:30:34.941049 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:34.945074 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m10:30:34.945562 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */


  create view test.dataset_event_table__dbt_tmp 
  
  as (
    SELECT *
FROM test.full_events


  )...
[0m10:30:34.960992 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.964526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    drop table if exists test.dataset_event_table__dbt_backup 
  
  ...
[0m10:30:34.965522 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:34.970981 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:34.972540 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.974178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    rename table test.dataset_event_table to test.dataset_event_table__dbt_backup 
  
  ...
[0m10:30:34.977221 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.980452 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    drop table if exists test.dataset_event_table 
  
  ...
[0m10:30:34.981406 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:34.985336 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m10:30:34.986078 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.987914 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    rename table test.dataset_event_table__dbt_tmp to test.dataset_event_table 
  
  ...
[0m10:30:34.988878 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m10:30:34.991760 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:34.997765 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m10:30:34.999050 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.000589 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m10:30:35.001403 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.004479 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-04-26 10:30:34.925903 => 2024-04-26 10:30:35.004416
[0m10:30:35.005100 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad2f7cbb80>]}
[0m10:30:35.005572 [info ] [Thread-2 (]: 73 of 89 OK created sql view model test.dataset_event_table .................... [[32mOK[0m in 0.10s]
[0m10:30:35.006510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.006978 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m10:30:35.010626 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m10:30:35.011288 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:35.013102 [info ] [Thread-2 (]: 75 of 89 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m10:30:35.014769 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m10:30:35.015212 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m10:30:35.015619 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:35.016329 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.021641 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m10:30:35.023480 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-04-26 10:30:34.941186 => 2024-04-26 10:30:35.023418
[0m10:30:35.024915 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c15d540>]}
[0m10:30:35.025390 [info ] [Thread-1 (]: 74 of 89 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.10s]
[0m10:30:35.026002 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-04-26 10:30:35.016584 => 2024-04-26 10:30:35.025883
[0m10:30:35.026540 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m10:30:35.026974 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:35.033537 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:35.034423 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m10:30:35.035333 [info ] [Thread-1 (]: 76 of 89 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m10:30:35.037515 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m10:30:35.037952 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m10:30:35.038268 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:35.042621 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m10:30:35.043137 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-04-26 10:30:35.038583 => 2024-04-26 10:30:35.043052
[0m10:30:35.043339 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:35.048515 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m10:30:35.051696 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.055997 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.061551 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.063010 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m10:30:35.063526 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m10:30:35.065015 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.069992 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.072957 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.074338 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m10:30:35.075842 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.077409 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m10:30:35.078258 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.082244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m10:30:35.083289 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m10:30:35.086218 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.087902 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-04-26 10:30:35.028020 => 2024-04-26 10:30:35.087830
[0m10:30:35.088531 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1401f0>]}
[0m10:30:35.088883 [info ] [Thread-2 (]: 75 of 89 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.07s]
[0m10:30:35.089232 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m10:30:35.090388 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:35.091560 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.093725 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m10:30:35.092193 [info ] [Thread-2 (]: 77 of 89 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m10:30:35.095559 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m10:30:35.095900 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m10:30:35.096266 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:35.102318 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m10:30:35.103340 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.107305 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m10:30:35.108527 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-04-26 10:30:35.096735 => 2024-04-26 10:30:35.108368
[0m10:30:35.109036 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:35.113640 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m10:30:35.115265 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.117582 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-04-26 10:30:35.043444 => 2024-04-26 10:30:35.117516
[0m10:30:35.118229 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2dcac0>]}
[0m10:30:35.118712 [info ] [Thread-1 (]: 76 of 89 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.08s]
[0m10:30:35.119248 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m10:30:35.120795 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:35.121367 [info ] [Thread-1 (]: 78 of 89 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m10:30:35.122131 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m10:30:35.122463 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m10:30:35.122650 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:35.128322 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m10:30:35.128830 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-04-26 10:30:35.122750 => 2024-04-26 10:30:35.128734
[0m10:30:35.129124 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:35.135237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m10:30:35.136603 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.141077 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.146077 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.147771 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m10:30:35.148340 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m10:30:35.155765 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.156528 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.160097 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.162564 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m10:30:35.168788 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.170579 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m10:30:35.171423 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.175751 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m10:30:35.177006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m10:30:35.179043 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.180713 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-04-26 10:30:35.109283 => 2024-04-26 10:30:35.180619
[0m10:30:35.181502 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0cfd60>]}
[0m10:30:35.182106 [info ] [Thread-2 (]: 77 of 89 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.09s]
[0m10:30:35.182694 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m10:30:35.184053 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:35.184842 [info ] [Thread-2 (]: 79 of 89 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m10:30:35.186196 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m10:30:35.186500 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m10:30:35.186704 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:35.192828 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m10:30:35.193922 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.196267 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m10:30:35.196671 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-04-26 10:30:35.186830 => 2024-04-26 10:30:35.196532
[0m10:30:35.198943 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:35.281448 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m10:30:35.284469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m10:30:35.288529 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m10:30:35.291739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.293184 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-04-26 10:30:35.129252 => 2024-04-26 10:30:35.293101
[0m10:30:35.294058 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2dd540>]}
[0m10:30:35.294556 [info ] [Thread-1 (]: 78 of 89 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.17s]
[0m10:30:35.294975 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m10:30:35.296087 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:35.296553 [info ] [Thread-1 (]: 80 of 89 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m10:30:35.297421 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m10:30:35.297819 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m10:30:35.298015 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:35.300995 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m10:30:35.301990 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.305462 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.306674 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-04-26 10:30:35.298112 => 2024-04-26 10:30:35.306550
[0m10:30:35.307045 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:35.311244 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m10:30:35.312068 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.315348 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m10:30:35.316418 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m10:30:35.326840 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.328051 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m10:30:35.328759 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.335180 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.336224 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.341505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m10:30:35.345597 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.347387 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-04-26 10:30:35.199236 => 2024-04-26 10:30:35.347312
[0m10:30:35.348266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.349281 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1e0940>]}
[0m10:30:35.351602 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m10:30:35.352830 [info ] [Thread-2 (]: 79 of 89 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.16s]
[0m10:30:35.354334 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m10:30:35.354815 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m10:30:35.356664 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:35.357072 [info ] [Thread-2 (]: 81 of 89 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m10:30:35.357750 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m10:30:35.357965 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m10:30:35.358119 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:35.361108 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m10:30:35.361634 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-04-26 10:30:35.358218 => 2024-04-26 10:30:35.361540
[0m10:30:35.362458 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.362923 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:35.364904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m10:30:35.370322 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m10:30:35.375497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.379766 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m10:30:35.383827 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.385231 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-04-26 10:30:35.307196 => 2024-04-26 10:30:35.385156
[0m10:30:35.386336 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c2dfc40>]}
[0m10:30:35.387134 [info ] [Thread-1 (]: 80 of 89 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m10:30:35.387599 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m10:30:35.388346 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.391086 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.392972 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:35.393885 [info ] [Thread-1 (]: 82 of 89 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m10:30:35.394904 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m10:30:35.395689 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m10:30:35.396186 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:35.401341 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m10:30:35.402897 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.405864 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m10:30:35.406824 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-04-26 10:30:35.396635 => 2024-04-26 10:30:35.406637
[0m10:30:35.407539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m10:30:35.408300 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:35.414730 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m10:30:35.422824 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.424499 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m10:30:35.429143 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.433900 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m10:30:35.437662 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.438428 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.440276 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-04-26 10:30:35.365739 => 2024-04-26 10:30:35.440198
[0m10:30:35.444663 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.445609 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c0b2440>]}
[0m10:30:35.447214 [info ] [Thread-2 (]: 81 of 89 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m10:30:35.448060 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m10:30:35.449838 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:35.450509 [info ] [Thread-2 (]: 83 of 89 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m10:30:35.451480 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m10:30:35.452611 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.453148 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m10:30:35.455905 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m10:30:35.456527 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:35.460185 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m10:30:35.460800 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-04-26 10:30:35.457294 => 2024-04-26 10:30:35.460664
[0m10:30:35.461119 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:35.465817 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m10:30:35.467904 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m10:30:35.485687 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.486716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.491590 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.493202 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m10:30:35.498185 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.502719 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m10:30:35.504166 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.506484 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m10:30:35.507822 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.509494 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-04-26 10:30:35.410046 => 2024-04-26 10:30:35.509403
[0m10:30:35.510119 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c1250f0>]}
[0m10:30:35.510621 [info ] [Thread-1 (]: 82 of 89 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.12s]
[0m10:30:35.511049 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m10:30:35.511283 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m10:30:35.513163 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.513800 [info ] [Thread-1 (]: 84 of 89 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m10:30:35.515238 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m10:30:35.515511 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m10:30:35.515675 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.522170 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m10:30:35.522647 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-26 10:30:35.515782 => 2024-04-26 10:30:35.522573
[0m10:30:35.522823 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.526847 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m10:30:35.527536 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.530741 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m10:30:35.536266 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.541893 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m10:30:35.546539 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.548348 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-04-26 10:30:35.461344 => 2024-04-26 10:30:35.548253
[0m10:30:35.549255 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad6611b6a0>]}
[0m10:30:35.550106 [info ] [Thread-2 (]: 83 of 89 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.10s]
[0m10:30:35.550894 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m10:30:35.551963 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.552478 [info ] [Thread-2 (]: 85 of 89 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m10:30:35.553039 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m10:30:35.553157 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m10:30:35.553285 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.558770 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m10:30:35.559890 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:35.562385 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.563784 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-04-26 10:30:35.553375 => 2024-04-26 10:30:35.563591
[0m10:30:35.564330 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.569994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m10:30:35.571350 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.575000 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m10:30:35.576025 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m10:30:35.593532 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.597067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.598190 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.601373 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m10:30:35.603374 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.606280 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m10:30:35.607118 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.612223 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m10:30:35.613410 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m10:30:35.617202 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.618560 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-26 10:30:35.522913 => 2024-04-26 10:30:35.618491
[0m10:30:35.619146 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c259fc0>]}
[0m10:30:35.619493 [info ] [Thread-1 (]: 84 of 89 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.10s]
[0m10:30:35.619825 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m10:30:35.620862 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:30:35.621303 [info ] [Thread-1 (]: 86 of 89 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m10:30:35.621935 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m10:30:35.622127 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m10:30:35.622283 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:30:35.628707 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m10:30:35.629311 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-04-26 10:30:35.622389 => 2024-04-26 10:30:35.629213
[0m10:30:35.629630 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:30:35.633792 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m10:30:35.635578 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.636907 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m10:30:35.641117 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.645724 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m10:30:35.651407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.654096 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-04-26 10:30:35.564457 => 2024-04-26 10:30:35.653779
[0m10:30:35.654891 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c09fee0>]}
[0m10:30:35.659366 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:35.662768 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:35.668855 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:35.670645 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m10:30:35.671119 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m10:30:35.693935 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:35.695469 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m10:30:35.699858 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.704325 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m10:30:35.707561 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:35.708794 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-04-26 10:30:35.629744 => 2024-04-26 10:30:35.708737
[0m10:30:35.709316 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c25bb20>]}
[0m10:30:36.454230 [info ] [Thread-2 (]: 85 of 89 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.10s]
[0m10:30:36.455894 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m10:30:36.454761 [info ] [Thread-1 (]: 86 of 89 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.09s]
[0m10:30:36.457673 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m10:30:36.458263 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:30:36.459060 [info ] [Thread-2 (]: 87 of 89 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m10:30:36.459846 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m10:30:36.460642 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m10:30:36.461976 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:30:36.462696 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:30:36.470633 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m10:30:36.471393 [info ] [Thread-1 (]: 88 of 89 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m10:30:36.473478 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m10:30:36.473853 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m10:30:36.474272 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:30:36.474861 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-04-26 10:30:36.463021 => 2024-04-26 10:30:36.474755
[0m10:30:36.477930 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m10:30:36.478583 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:30:36.487246 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m10:30:36.488279 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-04-26 10:30:36.475094 => 2024-04-26 10:30:36.488148
[0m10:30:36.488673 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:30:36.492587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m10:30:36.519407 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:36.522423 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:36.523246 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:36.528006 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:36.529505 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:36.532540 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m10:30:36.533151 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m10:30:36.535435 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:36.538067 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m10:30:36.538585 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m10:30:36.552416 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m10:30:36.553710 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m10:30:36.558515 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:36.562181 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m10:30:36.567034 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:36.568662 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-04-26 10:30:36.479440 => 2024-04-26 10:30:36.568584
[0m10:30:36.569350 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c318f40>]}
[0m10:30:36.570041 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:36.570557 [info ] [Thread-2 (]: 87 of 89 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.11s]
[0m10:30:36.572381 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m10:30:36.572932 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m10:30:36.575121 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:30:36.575566 [info ] [Thread-2 (]: 89 of 89 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m10:30:36.576294 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m10:30:36.576598 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m10:30:36.576864 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:30:36.577551 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:36.581533 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m10:30:36.588344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m10:30:36.590394 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-04-26 10:30:36.577871 => 2024-04-26 10:30:36.590194
[0m10:30:36.590926 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:30:36.595191 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m10:30:36.595926 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:36.599783 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-04-26 10:30:36.488875 => 2024-04-26 10:30:36.599667
[0m10:30:36.601143 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c15d5a0>]}
[0m10:30:36.601864 [info ] [Thread-1 (]: 88 of 89 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.13s]
[0m10:30:36.602384 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m10:30:36.624769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:36.628004 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m10:30:36.634711 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m10:30:36.637201 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m10:30:36.637626 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "t2.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "t2.__emitted_at", "t2.__table_name", "UtmHashRegistryHash", "t2.UtmHashHash", "t2.appmetricaDeviceId", "t2.crmUserId", "t2.cityName", "AppProfileMatchingHash", "t2.AppMetricaDeviceHash", "t2.CrmUserHash", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m10:30:36.663313 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m10:30:36.666251 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m10:30:36.670361 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:36.674845 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m10:30:36.678108 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m10:30:36.679395 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-04-26 10:30:36.591093 => 2024-04-26 10:30:36.679338
[0m10:30:36.679933 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6a743fd5-5311-4122-8c02-967069e711a6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad3c094310>]}
[0m10:30:36.680316 [info ] [Thread-2 (]: 89 of 89 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.10s]
[0m10:30:36.680764 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m10:30:36.684322 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m10:30:36.684806 [debug] [MainThread]: Connection 'master' was properly closed.
[0m10:30:36.684931 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table' was left open.
[0m10:30:36.685128 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: Close
[0m10:30:36.685231 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table' was left open.
[0m10:30:36.685332 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: Close
[0m10:30:36.685789 [info ] [MainThread]: 
[0m10:30:36.686030 [info ] [MainThread]: Finished running 20 view models, 27 incremental models, 42 table models in 0 hours 0 minutes and 10.76 seconds (10.76s).
[0m10:30:36.688598 [debug] [MainThread]: Command end result
[0m10:30:36.707714 [info ] [MainThread]: 
[0m10:30:36.708098 [info ] [MainThread]: [32mCompleted successfully[0m
[0m10:30:36.708336 [info ] [MainThread]: 
[0m10:30:36.708530 [info ] [MainThread]: Done. PASS=89 WARN=0 ERROR=0 SKIP=0 TOTAL=89
[0m10:30:36.709046 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad6600e0b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad665ceef0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fad665c6230>]}
[0m10:30:36.709336 [debug] [MainThread]: Flushing usage events


============================== 2024-05-07 09:23:38.217479 | 1b788de0-fb66-4eb2-b9c0-386281ae00a2 ==============================
[0m09:23:38.217479 [info ] [MainThread]: Running with dbt=1.4.7
[0m09:23:38.220397 [debug] [MainThread]: running dbt with arguments {'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/natalia/.dbt', 'send_anonymous_usage_stats': True, 'quiet': False, 'no_print': False, 'cache_selected_only': False, 'select': ['models/1_silos/1_normalize/+'], 'full_refresh': True, 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}
[0m09:23:38.220839 [debug] [MainThread]: Tracking: tracking
[0m09:23:38.223040 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6fbc1cf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6fd7f8b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6fd7e680>]}
[0m09:23:38.260212 [debug] [MainThread]: checksum: f4f4cdde9b257b3a8e3791263c44f34b0bd0facc33ef1ba84a563bd63785ce73, vars: {}, profile: None, target: None, version: 1.4.7
[0m09:23:38.499063 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 1 files added, 26 files changed.
[0m09:23:38.499645 [debug] [MainThread]: Partial parsing: added file: etlcraft://macros/other/custom_union_relations_source.sql
[0m09:23:38.499869 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m09:23:38.500067 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m09:23:38.500241 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m09:23:38.500399 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners.sql
[0m09:23:38.500561 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m09:23:38.500728 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/join/join_mt_datestat.sql
[0m09:23:38.500890 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m09:23:38.501051 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/graphs/graph_glue.sql
[0m09:23:38.502607 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/hash/hash.sql
[0m09:23:38.502818 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_campaigns.sql
[0m09:23:38.504339 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/normalize/normalize.sql
[0m09:23:38.504561 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_events.sql
[0m09:23:38.504735 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m09:23:38.504868 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m09:23:38.504993 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/adjust/normalize_adjust_events_default_events.sql
[0m09:23:38.505118 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m09:23:38.505237 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m09:23:38.505355 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans.sql
[0m09:23:38.505471 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_install.sql
[0m09:23:38.505587 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_screen_view.sql
[0m09:23:38.505705 [debug] [MainThread]: Partial parsing: updated file: etlcraft://tests/test_normalize.sql
[0m09:23:38.505871 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/full/full.sql
[0m09:23:38.506003 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m09:23:38.506509 [debug] [MainThread]: Partial parsing: updated file: etlcraft://macros/metadata/metadata.sql
[0m09:23:38.506641 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m09:23:38.506761 [debug] [MainThread]: Partial parsing: updated file: etlcraft_integration_tests://models/1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m09:23:38.625059 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m09:23:38.647611 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_network.sql
[0m09:23:38.648858 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m09:23:38.653560 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/utmcraft/normalize_utmcraft_registry_default_utmresult.sql
[0m09:23:38.654816 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m09:23:38.659809 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_deeplinks.sql
[0m09:23:38.661064 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners.sql
[0m09:23:38.665237 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners.sql
[0m09:23:38.666659 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m09:23:38.671105 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_event_metrics.sql
[0m09:23:38.672272 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m09:23:38.676456 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans_statistics.sql
[0m09:23:38.677591 [debug] [MainThread]: 1603: static parser failed on 5_full/full_datestat.sql
[0m09:23:38.709702 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_datestat.sql
[0m09:23:38.710875 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_datestat.sql
[0m09:23:38.724402 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_datestat.sql
[0m09:23:38.725511 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_datestat.sql
[0m09:23:38.783111 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_datestat.sql
[0m09:23:38.784288 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m09:23:38.792134 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_myfirstfunnel_final_table.sql
[0m09:23:38.793321 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m09:23:38.806824 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_myfirstfunnel_model.sql
[0m09:23:38.808103 [debug] [MainThread]: 1603: static parser failed on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m09:23:38.812169 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/9_final_table/attr_mysecondfunnel_final_table.sql
[0m09:23:38.813335 [debug] [MainThread]: 1603: static parser failed on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m09:23:38.820280 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/8_model/attr_mysecondfunnel_model.sql
[0m09:23:38.821464 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m09:23:38.833533 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_myfirstfunnel_join_to_attr_prepare_with_qid.sql
[0m09:23:38.834788 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m09:23:38.840778 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_myfirstfunnel_create_missed_steps.sql
[0m09:23:38.841940 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m09:23:38.847995 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_myfirstfunnel_calculate_period_number.sql
[0m09:23:38.849175 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m09:23:38.859562 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_myfirstfunnel_find_new_period.sql
[0m09:23:38.860733 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m09:23:38.866278 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_myfirstfunnel_add_row_number.sql
[0m09:23:38.867381 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m09:23:38.880390 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_myfirstfunnel_create_events.sql
[0m09:23:38.881655 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m09:23:38.888156 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_myfirstfunnel_prepare_with_qid.sql
[0m09:23:38.889472 [debug] [MainThread]: 1603: static parser failed on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m09:23:38.896082 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/7_join_to_attr_prepare_with_qid/attr_mysecondfunnel_join_to_attr_prepare_with_qid.sql
[0m09:23:38.897261 [debug] [MainThread]: 1603: static parser failed on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m09:23:38.901415 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/6_create_missed_steps/attr_mysecondfunnel_create_missed_steps.sql
[0m09:23:38.902563 [debug] [MainThread]: 1603: static parser failed on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m09:23:38.951458 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/5_calculate_period_number/attr_mysecondfunnel_calculate_period_number.sql
[0m09:23:38.952700 [debug] [MainThread]: 1603: static parser failed on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m09:23:38.959036 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/4_find_new_period/attr_mysecondfunnel_find_new_period.sql
[0m09:23:38.960246 [debug] [MainThread]: 1603: static parser failed on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m09:23:38.964561 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/3_add_row_number/attr_mysecondfunnel_add_row_number.sql
[0m09:23:38.965682 [debug] [MainThread]: 1603: static parser failed on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m09:23:38.972594 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/2_create_events/attr_mysecondfunnel_create_events.sql
[0m09:23:38.973717 [debug] [MainThread]: 1603: static parser failed on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m09:23:38.977767 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 6_attribution/1_prepare/attr_mysecondfunnel_prepare_with_qid.sql
[0m09:23:38.986706 [debug] [MainThread]: 1699: static parser successfully parsed 7_dataset/dataset_event_table.sql
[0m09:23:38.989270 [debug] [MainThread]: 1603: static parser failed on 5_full/full_events.sql
[0m09:23:38.996427 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_events.sql
[0m09:23:38.997515 [debug] [MainThread]: 1603: static parser failed on 4_graph/6_qid/graph_qid.sql
[0m09:23:39.011602 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/6_qid/graph_qid.sql
[0m09:23:39.012852 [debug] [MainThread]: 1603: static parser failed on 4_graph/5_glue/graph_glue.sql
[0m09:23:39.019006 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/5_glue/graph_glue.sql
[0m09:23:39.020308 [debug] [MainThread]: 1603: static parser failed on 4_graph/4_edge/graph_edge.sql
[0m09:23:39.027147 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/4_edge/graph_edge.sql
[0m09:23:39.028315 [debug] [MainThread]: 1603: static parser failed on 4_graph/3_unique/graph_unique.sql
[0m09:23:39.033594 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/3_unique/graph_unique.sql
[0m09:23:39.034680 [debug] [MainThread]: 1603: static parser failed on 4_graph/2_lookup/graph_lookup.sql
[0m09:23:39.039992 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/2_lookup/graph_lookup.sql
[0m09:23:39.041057 [debug] [MainThread]: 1603: static parser failed on 4_graph/1_tuples/graph_tuples.sql
[0m09:23:39.052300 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 4_graph/1_tuples/graph_tuples.sql
[0m09:23:39.053540 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_events.sql
[0m09:23:39.057619 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_events.sql
[0m09:23:39.058742 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_events.sql
[0m09:23:39.068818 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_events.sql
[0m09:23:39.070047 [debug] [MainThread]: 1603: static parser failed on 5_full/full_periodstat.sql
[0m09:23:39.077945 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 5_full/full_periodstat.sql
[0m09:23:39.079086 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_periodstat.sql
[0m09:23:39.083192 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_periodstat.sql
[0m09:23:39.084366 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_periodstat.sql
[0m09:23:39.091410 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_periodstat.sql
[0m09:23:39.092555 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_appprofilematching.sql
[0m09:23:39.096613 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_appprofilematching.sql
[0m09:23:39.097746 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m09:23:39.106806 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_appprofilematching.sql
[0m09:23:39.108445 [debug] [MainThread]: 1603: static parser failed on 3_raw/link_registry_utmhashregistry.sql
[0m09:23:39.112655 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 3_raw/link_registry_utmhashregistry.sql
[0m09:23:39.113762 [debug] [MainThread]: 1603: static parser failed on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m09:23:39.120691 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/3_hash/hash_registry_utmhashregistry.sql
[0m09:23:39.122015 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_campaigns.sql
[0m09:23:39.126844 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_campaigns.sql
[0m09:23:39.127946 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m09:23:39.148834 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_cohorts.sql
[0m09:23:39.150195 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m09:23:39.154553 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_cohorts.sql
[0m09:23:39.155613 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/adjust/incremental_adjust_events_default_events.sql
[0m09:23:39.159387 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/adjust/incremental_adjust_events_default_events.sql
[0m09:23:39.160581 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/adjust/normalize_adjust_events_default_events.sql
[0m09:23:39.164820 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/adjust/normalize_adjust_events_default_events.sql
[0m09:23:39.165901 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_events.sql
[0m09:23:39.177261 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_events.sql
[0m09:23:39.178437 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_events.sql
[0m09:23:39.230632 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_events.sql
[0m09:23:39.231806 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m09:23:39.236231 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_events.sql
[0m09:23:39.237599 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_events.sql
[0m09:23:39.241899 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_events.sql
[0m09:23:39.243053 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_install.sql
[0m09:23:39.248412 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_install.sql
[0m09:23:39.249500 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_install.sql
[0m09:23:39.253908 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_install.sql
[0m09:23:39.255154 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m09:23:39.259593 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_screen_view.sql
[0m09:23:39.260832 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_screen_view.sql
[0m09:23:39.265249 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_screen_view.sql
[0m09:23:39.266303 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m09:23:39.270701 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_events_default_sessions_starts.sql
[0m09:23:39.271870 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m09:23:39.276277 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_events_default_sessions_starts.sql
[0m09:23:39.277403 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m09:23:39.282444 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_registry_appprofilematching.sql
[0m09:23:39.283597 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m09:23:39.291246 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_appmetrica_registry_appprofilematching.sql
[0m09:23:39.292482 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m09:23:39.296476 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/appmetrica/incremental_appmetrica_registry_default_profiles.sql
[0m09:23:39.297652 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m09:23:39.301860 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/appmetrica/normalize_appmetrica_registry_default_profiles.sql
[0m09:23:39.302971 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_datestat.sql
[0m09:23:39.307593 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_datestat.sql
[0m09:23:39.308769 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_mt_datestat.sql
[0m09:23:39.321911 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_mt_datestat.sql
[0m09:23:39.323062 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m09:23:39.327331 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/mytarget/incremental_mt_datestat_default_banners_statistics.sql
[0m09:23:39.328468 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m09:23:39.332605 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/mytarget/normalize_mt_datestat_default_banners_statistics.sql
[0m09:23:39.333723 [debug] [MainThread]: 1603: static parser failed on 2_staging/2_combine/combine_periodstat.sql
[0m09:23:39.337990 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/2_combine/combine_periodstat.sql
[0m09:23:39.339098 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_sheets_periodstat.sql
[0m09:23:39.347055 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_sheets_periodstat.sql
[0m09:23:39.348155 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m09:23:39.352512 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/sheets/incremental_sheets_periodstat_default_planCosts.sql
[0m09:23:39.353773 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m09:23:39.358873 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/sheets/normalize_sheets_periodstat_default_planCosts.sql
[0m09:23:39.360103 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_vkads_datestat.sql
[0m09:23:39.370074 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_vkads_datestat.sql
[0m09:23:39.371231 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans.sql
[0m09:23:39.375348 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/vk_ads/incremental_vkads_datestat_default_ad_plans.sql
[0m09:23:39.376464 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans.sql
[0m09:23:39.380765 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/vk_ads/normalize_vkads_datestat_default_ad_plans.sql
[0m09:23:39.381941 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_yd_datestat.sql
[0m09:23:39.390345 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_yd_datestat.sql
[0m09:23:39.391519 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m09:23:39.396948 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/yandex_direct/incremental_yd_datestat_default_custom_report.sql
[0m09:23:39.398149 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m09:23:39.402346 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/yandex_direct/normalize_yd_datestat_default_custom_report.sql
[0m09:23:39.403526 [debug] [MainThread]: 1603: static parser failed on 2_staging/1_join/join_ym_events.sql
[0m09:23:39.413354 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 2_staging/1_join/join_ym_events.sql
[0m09:23:39.414763 [debug] [MainThread]: 1603: static parser failed on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m09:23:39.419133 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/2_incremental/ym/incremental_ym_events_default_yandex_metrika_stream.sql
[0m09:23:39.420516 [debug] [MainThread]: 1603: static parser failed on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m09:23:39.425092 [debug] [MainThread]: 1602: parser fallback to jinja rendering on 1_silos/1_normalize/ym/normalize_ym_events_default_yandex_metrika_stream.sql
[0m09:23:39.477876 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6f0f45b0>]}
[0m09:23:39.557489 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6f1c6bc0>]}
[0m09:23:39.557954 [info ] [MainThread]: Found 89 models, 8 tests, 0 snapshots, 0 analyses, 530 macros, 0 operations, 23 seed files, 0 sources, 0 exposures, 0 metrics
[0m09:23:39.558257 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6f1c6260>]}
[0m09:23:39.564428 [info ] [MainThread]: 
[0m09:23:39.566505 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m09:23:39.571502 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_schemas'
[0m09:23:39.577696 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m09:23:40.767418 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_schemas: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_schemas"} */

    select name from system.databases
  ...
[0m09:23:40.770953 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:40.778328 [debug] [ThreadPool]: Acquiring new clickhouse connection 'list_None_test'
[0m09:23:40.778881 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_None_test)
[0m09:23:40.784180 [debug] [ThreadPool]: dbt_clickhouse adapter: On list_None_test: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "connection_name": "list_None_test"} */
select
      t.name as name,
      t.database as schema,
      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type,
      db.engine as db_engine
    from system.tables as t JOIN system.databases as db on t.database = db.name
    where schema = 'test'
  ...
[0m09:23:40.818234 [debug] [ThreadPool]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:40.828335 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6e6086a0>]}
[0m09:23:40.829219 [info ] [MainThread]: Concurrency: 2 threads (target='dev')
[0m09:23:40.829590 [info ] [MainThread]: 
[0m09:23:40.838324 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m09:23:40.839202 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m09:23:40.839805 [info ] [Thread-1 (]: 1 of 89 START sql view model test.normalize_adjust_events_default_cohorts ...... [RUN]
[0m09:23:40.840729 [info ] [Thread-2 (]: 2 of 89 START sql view model test.normalize_adjust_events_default_event_metrics  [RUN]
[0m09:23:40.841936 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts'
[0m09:23:40.842766 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics'
[0m09:23:40.843088 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts)
[0m09:23:40.843383 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m09:23:40.843675 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m09:23:40.854013 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m09:23:40.860413 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_cohorts$')        
...
[0m09:23:40.919969 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m09:23:40.945913 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_cohorts'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:40.958887 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:40.982930 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m09:23:40.986603 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (compile): 2024-05-07 09:23:40.854532 => 2024-05-07 09:23:40.986433
[0m09:23:40.987037 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m09:23:41.050408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_event_metrics$')        
...
[0m09:23:41.077192 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"
[0m09:23:41.081382 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */


  create view test.normalize_adjust_events_default_cohorts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'period') AS period, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_adjust_events_default_testaccount_cohorts') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_adjust_events_default_testaccount_cohorts
)

)
  )...
[0m09:23:41.088858 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:41.092662 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_event_metrics'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.096104 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.102882 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m09:23:41.103884 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.113397 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m09:23:41.114327 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.116783 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts to test.normalize_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m09:23:41.117825 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (compile): 2024-05-07 09:23:40.843902 => 2024-05-07 09:23:41.117708
[0m09:23:41.118234 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m09:23:41.122829 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"
[0m09:23:41.123819 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.127465 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    drop table if exists test.normalize_adjust_events_default_cohorts 
  
  ...
[0m09:23:41.128679 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */


  create view test.normalize_adjust_events_default_event_metrics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'event_token') AS event_token, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'tracker_token') AS tracker_token,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_adjust_events_default_testaccount_event_metrics') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_adjust_events_default_testaccount_event_metrics
)

)
  )...
[0m09:23:41.131723 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.132981 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */

    rename table test.normalize_adjust_events_default_cohorts__dbt_tmp to test.normalize_adjust_events_default_cohorts 
  
  ...
[0m09:23:41.136291 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.151402 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:41.160477 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m09:23:41.167253 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts"} */
drop table if exists test.normalize_adjust_events_default_cohorts__dbt_backup 
  ...
[0m09:23:41.170397 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.171476 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics to test.normalize_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m09:23:41.172832 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.174413 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts (execute): 2024-05-07 09:23:40.987240 => 2024-05-07 09:23:41.174334
[0m09:23:41.175220 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46c28250>]}
[0m09:23:41.176304 [info ] [Thread-1 (]: 1 of 89 OK created sql view model test.normalize_adjust_events_default_cohorts . [[32mOK[0m in 0.33s]
[0m09:23:41.178078 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_cohorts
[0m09:23:41.178507 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m09:23:41.178825 [info ] [Thread-1 (]: 3 of 89 START sql view model test.normalize_adjust_events_default_events ....... [RUN]
[0m09:23:41.180076 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_events'
[0m09:23:41.180930 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.181152 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_events)
[0m09:23:41.184435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    drop table if exists test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m09:23:41.184914 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m09:23:41.190899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_events$')        
...
[0m09:23:41.191545 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.193912 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */

    rename table test.normalize_adjust_events_default_event_metrics__dbt_tmp to test.normalize_adjust_events_default_event_metrics 
  
  ...
[0m09:23:41.197365 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.202409 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics"} */
drop table if exists test.normalize_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m09:23:41.203718 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.209794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.214171 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.215540 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics (execute): 2024-05-07 09:23:41.118401 => 2024-05-07 09:23:41.215466
[0m09:23:41.216341 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.217086 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6efeea10>]}
[0m09:23:41.228644 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m09:23:41.229724 [info ] [Thread-2 (]: 2 of 89 OK created sql view model test.normalize_adjust_events_default_event_metrics  [[32mOK[0m in 0.37s]
[0m09:23:41.230588 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_event_metrics
[0m09:23:41.231044 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m09:23:41.231500 [info ] [Thread-2 (]: 4 of 89 START sql view model test.normalize_adjust_events_default_network ...... [RUN]
[0m09:23:41.232943 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_adjust_events_default_network'
[0m09:23:41.233430 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (compile): 2024-05-07 09:23:41.185950 => 2024-05-07 09:23:41.233345
[0m09:23:41.233683 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_adjust_events_default_network)
[0m09:23:41.234054 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m09:23:41.234384 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m09:23:41.239524 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_events"
[0m09:23:41.245123 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_adjust_events_default_[^_]+_network$')        
...
[0m09:23:41.247228 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */


  create view test.normalize_adjust_events_default_events__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'app_token') AS app_token, 
        JSONExtractString(_airbyte_data, 'description') AS description, 
        JSONExtractString(_airbyte_data, 'formatting') AS formatting, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'is_skad_event') AS is_skad_event, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'section') AS section, 
        JSONExtractString(_airbyte_data, 'short_name') AS short_name, 
        JSONExtractString(_airbyte_data, 'tokens') AS tokens,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_adjust_events_default_testaccount_events') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_adjust_events_default_testaccount_events
)

)
  )...
[0m09:23:41.256199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.260461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    select name, type from system.columns where table = '_airbyte_raw_adjust_events_default_testaccount_network'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.261474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.266785 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m09:23:41.269418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.270938 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events to test.normalize_adjust_events_default_events__dbt_backup 
  
  ...
[0m09:23:41.271649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.284602 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.287414 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m09:23:41.291653 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    drop table if exists test.normalize_adjust_events_default_events 
  
  ...
[0m09:23:41.293969 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (compile): 2024-05-07 09:23:41.240181 => 2024-05-07 09:23:41.293661
[0m09:23:41.294493 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m09:23:41.299735 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_adjust_events_default_network"
[0m09:23:41.301057 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.302723 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */

    rename table test.normalize_adjust_events_default_events__dbt_tmp to test.normalize_adjust_events_default_events 
  
  ...
[0m09:23:41.304171 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */


  create view test.normalize_adjust_events_default_network__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'clicks') AS clicks, 
        JSONExtractString(_airbyte_data, 'country') AS country, 
        JSONExtractString(_airbyte_data, 'country_code') AS country_code, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'impressions') AS impressions, 
        JSONExtractString(_airbyte_data, 'installs') AS installs, 
        JSONExtractString(_airbyte_data, 'network') AS network, 
        JSONExtractString(_airbyte_data, 'rejected_installs') AS rejected_installs, 
        JSONExtractString(_airbyte_data, 'sessions') AS sessions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_adjust_events_default_testaccount_network') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_adjust_events_default_testaccount_network
)

)
  )...
[0m09:23:41.306469 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.310950 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_events"} */
drop table if exists test.normalize_adjust_events_default_events__dbt_backup 
  ...
[0m09:23:41.314863 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.316364 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_events (execute): 2024-05-07 09:23:41.234633 => 2024-05-07 09:23:41.316292
[0m09:23:41.317122 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.318057 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b9e140>]}
[0m09:23:41.321533 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m09:23:41.322192 [info ] [Thread-1 (]: 3 of 89 OK created sql view model test.normalize_adjust_events_default_events .. [[32mOK[0m in 0.14s]
[0m09:23:41.324261 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_events
[0m09:23:41.325130 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m09:23:41.325426 [info ] [Thread-1 (]: 5 of 89 START sql view model test.normalize_appmetrica_events_default_deeplinks  [RUN]
[0m09:23:41.326691 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.327978 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks'
[0m09:23:41.329517 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network to test.normalize_adjust_events_default_network__dbt_backup 
  
  ...
[0m09:23:41.329956 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks)
[0m09:23:41.331476 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m09:23:41.335793 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_deeplinks$')        
...
[0m09:23:41.337909 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.341070 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    drop table if exists test.normalize_adjust_events_default_network 
  
  ...
[0m09:23:41.345074 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.346277 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */

    rename table test.normalize_adjust_events_default_network__dbt_tmp to test.normalize_adjust_events_default_network 
  
  ...
[0m09:23:41.348145 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.352562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.354267 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.360630 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_adjust_events_default_network"} */
drop table if exists test.normalize_adjust_events_default_network__dbt_backup 
  ...
[0m09:23:41.361972 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.375266 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m09:23:41.376184 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:41.378052 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_adjust_events_default_network (execute): 2024-05-07 09:23:41.294691 => 2024-05-07 09:23:41.377981
[0m09:23:41.378854 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b9f2e0>]}
[0m09:23:41.379720 [info ] [Thread-2 (]: 4 of 89 OK created sql view model test.normalize_adjust_events_default_network . [[32mOK[0m in 0.15s]
[0m09:23:41.380264 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_adjust_events_default_network
[0m09:23:41.380693 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m09:23:41.381484 [info ] [Thread-2 (]: 6 of 89 START sql view model test.normalize_appmetrica_events_default_events ... [RUN]
[0m09:23:41.382731 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_events'
[0m09:23:41.383082 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_events)
[0m09:23:41.383324 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m09:23:41.387685 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m09:23:41.388189 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (compile): 2024-05-07 09:23:41.331710 => 2024-05-07 09:23:41.388030
[0m09:23:41.389833 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m09:23:41.395807 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"
[0m09:23:41.397328 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */


  create view test.normalize_appmetrica_events_default_deeplinks__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'deeplink_url_parameters') AS deeplink_url_parameters, 
        JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_appmetrica_events_default_testaccount_deeplinks') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_appmetrica_events_default_testaccount_deeplinks
)

)
  )...
[0m09:23:41.400271 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.403912 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.410974 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.417681 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:41.427269 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m09:23:41.435540 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m09:23:41.436696 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (compile): 2024-05-07 09:23:41.383465 => 2024-05-07 09:23:41.436416
[0m09:23:41.437415 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m09:23:41.443058 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"
[0m09:23:41.444014 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.445923 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks to test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m09:23:41.447083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */


  create view test.normalize_appmetrica_events_default_events__dbt_tmp 
  
  as (
    SELECT * FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_appmetrica_events_default_testaccount_events') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_appmetrica_events_default_testaccount_events
)

)
)
WHERE event_name != 'screen_view'
  )...
[0m09:23:41.449875 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.453106 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    drop table if exists test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m09:23:41.457097 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.458953 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */

    rename table test.normalize_appmetrica_events_default_deeplinks__dbt_tmp to test.normalize_appmetrica_events_default_deeplinks 
  
  ...
[0m09:23:41.462427 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.466529 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks"} */
drop table if exists test.normalize_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m09:23:41.471056 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.471950 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:41.473296 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks (execute): 2024-05-07 09:23:41.390285 => 2024-05-07 09:23:41.473232
[0m09:23:41.476534 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m09:23:41.477541 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46be00d0>]}
[0m09:23:41.478687 [info ] [Thread-1 (]: 5 of 89 OK created sql view model test.normalize_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.15s]
[0m09:23:41.479682 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_deeplinks
[0m09:23:41.480394 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m09:23:41.481540 [info ] [Thread-1 (]: 7 of 89 START sql view model test.normalize_appmetrica_events_default_install .. [RUN]
[0m09:23:41.482424 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.483344 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_install'
[0m09:23:41.484783 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events to test.normalize_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m09:23:41.485228 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_install)
[0m09:23:41.487039 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m09:23:41.491912 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_installations$')        
...
[0m09:23:41.493377 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.498456 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    drop table if exists test.normalize_appmetrica_events_default_events 
  
  ...
[0m09:23:41.501143 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.505082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_installations'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.506416 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.508192 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */

    rename table test.normalize_appmetrica_events_default_events__dbt_tmp to test.normalize_appmetrica_events_default_events 
  
  ...
[0m09:23:41.511255 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.518165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.528075 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_events"} */
drop table if exists test.normalize_appmetrica_events_default_events__dbt_backup 
  ...
[0m09:23:41.531550 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m09:23:41.533144 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (compile): 2024-05-07 09:23:41.487644 => 2024-05-07 09:23:41.533022
[0m09:23:41.533510 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m09:23:41.538609 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"
[0m09:23:41.539886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.541835 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_events (execute): 2024-05-07 09:23:41.437739 => 2024-05-07 09:23:41.541763
[0m09:23:41.542642 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a35210>]}
[0m09:23:41.543575 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */


  create view test.normalize_appmetrica_events_default_install__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'install_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'click_datetime') AS click_datetime, 
        JSONExtractString(_airbyte_data, 'click_url_parameters') AS click_url_parameters, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'install_datetime') AS install_datetime, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'is_reinstallation') AS is_reinstallation, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'publisher_name') AS publisher_name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_appmetrica_events_default_testaccount_installations') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_appmetrica_events_default_testaccount_installations
)

)
  )...
[0m09:23:41.544288 [info ] [Thread-2 (]: 6 of 89 OK created sql view model test.normalize_appmetrica_events_default_events  [[32mOK[0m in 0.16s]
[0m09:23:41.545952 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_events
[0m09:23:41.546473 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m09:23:41.547363 [info ] [Thread-2 (]: 8 of 89 START sql view model test.normalize_appmetrica_events_default_screen_view  [RUN]
[0m09:23:41.548505 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view'
[0m09:23:41.548869 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view)
[0m09:23:41.549436 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m09:23:41.554802 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_events$')        
...
[0m09:23:41.559628 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.564473 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m09:23:41.565812 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.569897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.573651 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.575003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install to test.normalize_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m09:23:41.575868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.588495 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.597740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    drop table if exists test.normalize_appmetrica_events_default_install 
  
  ...
[0m09:23:41.600050 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m09:23:41.601128 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (compile): 2024-05-07 09:23:41.549806 => 2024-05-07 09:23:41.600950
[0m09:23:41.601710 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m09:23:41.602504 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.607830 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"
[0m09:23:41.609669 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */

    rename table test.normalize_appmetrica_events_default_install__dbt_tmp to test.normalize_appmetrica_events_default_install 
  
  ...
[0m09:23:41.611613 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */


  create view test.normalize_appmetrica_events_default_screen_view__dbt_tmp 
  
  as (
    WITH events_are_screen_view AS (SELECT *, 1 AS screen_view FROM (
SELECT
        JSONExtractString(_airbyte_data, 'event_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'app_version_name') AS app_version_name, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'event_datetime') AS event_datetime, 
        JSONExtractString(_airbyte_data, 'event_json') AS event_json, 
        JSONExtractString(_airbyte_data, 'event_name') AS event_name, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_id') AS session_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_appmetrica_events_default_testaccount_events') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_appmetrica_events_default_testaccount_events
)

)
)
WHERE event_name = 'screen_view')


SELECT
    toDate(__date) AS __date,
    toDateTime(event_datetime) AS event_datetime,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    '3101143' AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    city AS cityName,
    os_name AS osName,
    profile_id AS crmUserId,
    __table_name,
    __emitted_at,
    session_id,
    sum(screen_view) AS screen_view
FROM events_are_screen_view
GROUP BY 
    __date,
    event_datetime,
    mobileAdsId,
    accountName,
    appmetricaDeviceId,
    cityName,
    osName,
    crmUserId,
    __table_name,
    __emitted_at,
    session_id
  )...
[0m09:23:41.613983 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.617825 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_install"} */
drop table if exists test.normalize_appmetrica_events_default_install__dbt_backup 
  ...
[0m09:23:41.621658 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.623683 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_install (execute): 2024-05-07 09:23:41.533642 => 2024-05-07 09:23:41.623594
[0m09:23:41.624736 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a85d50>]}
[0m09:23:41.625361 [info ] [Thread-1 (]: 7 of 89 OK created sql view model test.normalize_appmetrica_events_default_install  [[32mOK[0m in 0.14s]
[0m09:23:41.625909 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_install
[0m09:23:41.626248 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m09:23:41.627320 [info ] [Thread-1 (]: 9 of 89 START sql view model test.normalize_appmetrica_events_default_sessions_starts  [RUN]
[0m09:23:41.628116 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts'
[0m09:23:41.628320 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts)
[0m09:23:41.628483 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m09:23:41.632619 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_events_default_[^_]+_sessions_starts$')        
...
[0m09:23:41.636176 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:41.641152 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m09:23:41.642718 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.646577 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.649103 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.650558 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view to test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m09:23:41.652200 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.660232 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.664839 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m09:23:41.668316 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    drop table if exists test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m09:23:41.670297 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (compile): 2024-05-07 09:23:41.628587 => 2024-05-07 09:23:41.670015
[0m09:23:41.670954 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m09:23:41.679035 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.682210 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"
[0m09:23:41.683959 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */

    rename table test.normalize_appmetrica_events_default_screen_view__dbt_tmp to test.normalize_appmetrica_events_default_screen_view 
  
  ...
[0m09:23:41.686892 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */


  create view test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'google_aid') AS google_aid, 
        JSONExtractString(_airbyte_data, 'installation_id') AS installation_id, 
        JSONExtractString(_airbyte_data, 'ios_ifa') AS ios_ifa, 
        JSONExtractString(_airbyte_data, 'os_name') AS os_name, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id, 
        JSONExtractString(_airbyte_data, 'session_start_datetime') AS session_start_datetime,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_appmetrica_events_default_testaccount_sessions_starts') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_appmetrica_events_default_testaccount_sessions_starts
)

)
  )...
[0m09:23:41.689583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.694509 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view"} */
drop table if exists test.normalize_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m09:23:41.698409 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.699333 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.703386 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m09:23:41.705548 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view (execute): 2024-05-07 09:23:41.602806 => 2024-05-07 09:23:41.705465
[0m09:23:41.707992 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b40430>]}
[0m09:23:41.708754 [info ] [Thread-2 (]: 8 of 89 OK created sql view model test.normalize_appmetrica_events_default_screen_view  [[32mOK[0m in 0.16s]
[0m09:23:41.709883 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_screen_view
[0m09:23:41.710987 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.711725 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m09:23:41.713910 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts to test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m09:23:41.714869 [info ] [Thread-2 (]: 10 of 89 START sql view model test.normalize_appmetrica_registry_default_profiles  [RUN]
[0m09:23:41.717196 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles'
[0m09:23:41.717821 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles)
[0m09:23:41.718384 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m09:23:41.719321 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.726208 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_appmetrica_registry_default_[^_]+_profiles$')        
...
[0m09:23:41.729281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m09:23:41.735056 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.736240 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */

    rename table test.normalize_appmetrica_events_default_sessions_starts__dbt_tmp to test.normalize_appmetrica_events_default_sessions_starts 
  
  ...
[0m09:23:41.738696 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.742419 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = '_airbyte_raw_appmetrica_registry_default_testaccount_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.743979 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.749416 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts"} */
drop table if exists test.normalize_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m09:23:41.750993 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.757100 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.759360 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts (execute): 2024-05-07 09:23:41.671257 => 2024-05-07 09:23:41.759257
[0m09:23:41.760979 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m09:23:41.762309 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a85d50>]}
[0m09:23:41.764003 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (compile): 2024-05-07 09:23:41.719849 => 2024-05-07 09:23:41.763914
[0m09:23:41.763686 [info ] [Thread-1 (]: 9 of 89 OK created sql view model test.normalize_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.13s]
[0m09:23:41.764635 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m09:23:41.765121 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_events_default_sessions_starts
[0m09:23:41.769282 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"
[0m09:23:41.770449 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m09:23:41.772847 [info ] [Thread-1 (]: 11 of 89 START sql view model test.normalize_mt_datestat_default_banners ....... [RUN]
[0m09:23:41.774094 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */


  create view test.normalize_appmetrica_registry_default_profiles__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'appmetrica_device_id') AS appmetrica_device_id, 
        JSONExtractString(_airbyte_data, 'city') AS city, 
        JSONExtractString(_airbyte_data, 'profile_id') AS profile_id,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_appmetrica_registry_default_testaccount_profiles') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_appmetrica_registry_default_testaccount_profiles
)

)
  )...
[0m09:23:41.775274 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners'
[0m09:23:41.777037 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners)
[0m09:23:41.777524 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m09:23:41.782531 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners$')        
...
[0m09:23:41.790441 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.796286 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.797140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:41.801589 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m09:23:41.805380 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.806945 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles to test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  
  ...
[0m09:23:41.807977 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.818039 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m09:23:41.818701 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.822541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    drop table if exists test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m09:23:41.824652 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (compile): 2024-05-07 09:23:41.777810 => 2024-05-07 09:23:41.824226
[0m09:23:41.825492 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m09:23:41.831008 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"
[0m09:23:41.831660 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.833146 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */

    rename table test.normalize_appmetrica_registry_default_profiles__dbt_tmp to test.normalize_appmetrica_registry_default_profiles 
  
  ...
[0m09:23:41.834534 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */


  create view test.normalize_mt_datestat_default_banners__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'campaign_id') AS campaign_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'textblocks') AS textblocks, 
        JSONExtractString(_airbyte_data, 'urls') AS urls,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_mt_datestat_default_testaccount_banners') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_mt_datestat_default_testaccount_banners
)

)
  )...
[0m09:23:41.837437 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.842899 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles"} */
drop table if exists test.normalize_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m09:23:41.844290 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.848617 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m09:23:41.849704 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.852727 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles (execute): 2024-05-07 09:23:41.765402 => 2024-05-07 09:23:41.852645
[0m09:23:41.854021 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6efed7e0>]}
[0m09:23:41.855936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.855219 [info ] [Thread-2 (]: 10 of 89 OK created sql view model test.normalize_appmetrica_registry_default_profiles  [[32mOK[0m in 0.14s]
[0m09:23:41.857694 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners to test.normalize_mt_datestat_default_banners__dbt_backup 
  
  ...
[0m09:23:41.858396 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_appmetrica_registry_default_profiles
[0m09:23:41.860857 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m09:23:41.861693 [info ] [Thread-2 (]: 12 of 89 START sql view model test.normalize_mt_datestat_default_banners_statistics  [RUN]
[0m09:23:41.863476 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics'
[0m09:23:41.863862 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics)
[0m09:23:41.864093 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m09:23:41.946738 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m09:23:41.950846 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_banners_statistics$')        
...
[0m09:23:41.955360 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    drop table if exists test.normalize_mt_datestat_default_banners 
  
  ...
[0m09:23:41.959829 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:41.961341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */

    rename table test.normalize_mt_datestat_default_banners__dbt_tmp to test.normalize_mt_datestat_default_banners 
  
  ...
[0m09:23:41.962657 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.966718 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:41.967514 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.973395 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners"} */
drop table if exists test.normalize_mt_datestat_default_banners__dbt_backup 
  ...
[0m09:23:41.974357 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.982471 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m09:23:41.983446 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:41.985815 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners (execute): 2024-05-07 09:23:41.825828 => 2024-05-07 09:23:41.985751
[0m09:23:41.986064 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (compile): 2024-05-07 09:23:41.864284 => 2024-05-07 09:23:41.986011
[0m09:23:41.987030 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449c0e50>]}
[0m09:23:41.987775 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m09:23:41.993006 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"
[0m09:23:41.988452 [info ] [Thread-1 (]: 11 of 89 OK created sql view model test.normalize_mt_datestat_default_banners .. [[32mOK[0m in 0.21s]
[0m09:23:41.994055 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners
[0m09:23:41.994539 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */


  create view test.normalize_mt_datestat_default_banners_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'banner_id') AS banner_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'date') AS date,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_mt_datestat_default_testaccount_banners_statistics') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_mt_datestat_default_testaccount_banners_statistics
)

)
  )...
[0m09:23:41.995111 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m09:23:41.998588 [info ] [Thread-1 (]: 13 of 89 START sql view model test.normalize_mt_datestat_default_campaigns ..... [RUN]
[0m09:23:41.999505 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns'
[0m09:23:42.000127 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns)
[0m09:23:42.000692 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m09:23:42.006773 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_mt_datestat_default_[^_]+_campaigns$')        
...
[0m09:23:42.008244 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.011996 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m09:23:42.015130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.018288 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = '_airbyte_raw_mt_datestat_default_testaccount_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.018973 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.021556 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics to test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m09:23:42.025622 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.026500 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.030363 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    drop table if exists test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m09:23:42.038026 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m09:23:42.039480 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (compile): 2024-05-07 09:23:42.000890 => 2024-05-07 09:23:42.039317
[0m09:23:42.040101 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m09:23:42.045101 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"
[0m09:23:42.046405 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.047546 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */

    rename table test.normalize_mt_datestat_default_banners_statistics__dbt_tmp to test.normalize_mt_datestat_default_banners_statistics 
  
  ...
[0m09:23:42.048646 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */


  create view test.normalize_mt_datestat_default_campaigns__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'name') AS name,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_mt_datestat_default_testaccount_campaigns') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_mt_datestat_default_testaccount_campaigns
)

)
  )...
[0m09:23:42.052401 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.057325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics"} */
drop table if exists test.normalize_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m09:23:42.059475 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.063716 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m09:23:42.065061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.067016 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics (execute): 2024-05-07 09:23:41.988659 => 2024-05-07 09:23:42.066932
[0m09:23:42.067797 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b2b4c0>]}
[0m09:23:42.068442 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.069202 [info ] [Thread-2 (]: 12 of 89 OK created sql view model test.normalize_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.20s]
[0m09:23:42.071174 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns to test.normalize_mt_datestat_default_campaigns__dbt_backup 
  
  ...
[0m09:23:42.072085 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_banners_statistics
[0m09:23:42.074422 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m09:23:42.075595 [info ] [Thread-2 (]: 14 of 89 START sql view model test.normalize_sheets_periodstat_default_planCosts  [RUN]
[0m09:23:42.076742 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.077721 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts'
[0m09:23:42.080794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    drop table if exists test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m09:23:42.081284 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts)
[0m09:23:42.082931 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m09:23:42.087464 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_sheets_periodstat_default_[^_]+_planCosts$')        
...
[0m09:23:42.089801 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.092212 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */

    rename table test.normalize_mt_datestat_default_campaigns__dbt_tmp to test.normalize_mt_datestat_default_campaigns 
  
  ...
[0m09:23:42.096178 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.096996 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.101242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = '_airbyte_raw_sheets_periodstat_default_testaccount_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.105763 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns"} */
drop table if exists test.normalize_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m09:23:42.111538 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.112831 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns (execute): 2024-05-07 09:23:42.040346 => 2024-05-07 09:23:42.112771
[0m09:23:42.113477 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44876c50>]}
[0m09:23:42.114524 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.115340 [info ] [Thread-1 (]: 13 of 89 OK created sql view model test.normalize_mt_datestat_default_campaigns  [[32mOK[0m in 0.11s]
[0m09:23:42.122123 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m09:23:42.122613 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_mt_datestat_default_campaigns
[0m09:23:42.124227 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m09:23:42.125702 [info ] [Thread-1 (]: 15 of 89 START sql view model test.normalize_utmcraft_registry_default_utmresult  [RUN]
[0m09:23:42.127339 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult'
[0m09:23:42.127714 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (compile): 2024-05-07 09:23:42.083591 => 2024-05-07 09:23:42.127628
[0m09:23:42.127985 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult)
[0m09:23:42.128510 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m09:23:42.129082 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m09:23:42.134045 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"
[0m09:23:42.141948 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_utmcraft_registry_default_[^_]+_utmresult$')        
...
[0m09:23:42.144091 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */


  create view test.normalize_sheets_periodstat_default_planCosts__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Period_start') AS __date, 
        JSONExtractString(_airbyte_data, 'Campaign') AS Campaign, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Period_end') AS Period_end, 
        JSONExtractString(_airbyte_data, 'Period_start') AS Period_start,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_sheets_periodstat_default_testaccount_planCosts') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_sheets_periodstat_default_testaccount_planCosts
)

)
  )...
[0m09:23:42.149645 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.153105 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = '_airbyte_raw_utmcraft_registry_default_testaccount_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.157311 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.161628 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m09:23:42.163073 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.169298 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.173325 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m09:23:42.174551 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts to test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m09:23:42.176652 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (compile): 2024-05-07 09:23:42.134515 => 2024-05-07 09:23:42.176477
[0m09:23:42.177148 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m09:23:42.181873 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"
[0m09:23:42.182705 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.186914 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    drop table if exists test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m09:23:42.188770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */


  create view test.normalize_utmcraft_registry_default_utmresult__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'created_at') AS created_at, 
        JSONExtractString(_airbyte_data, 'created_by_id') AS created_by_id, 
        JSONExtractString(_airbyte_data, 'data') AS data, 
        JSONExtractString(_airbyte_data, 'form_id') AS form_id, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'updated_at') AS updated_at, 
        JSONExtractString(_airbyte_data, 'updated_by_id') AS updated_by_id, 
        JSONExtractString(_airbyte_data, 'utm_hashcode') AS utm_hashcode,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_utmcraft_registry_default_testaccount_utmresult') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_utmcraft_registry_default_testaccount_utmresult
)

)
  )...
[0m09:23:42.191823 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.193085 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */

    rename table test.normalize_sheets_periodstat_default_planCosts__dbt_tmp to test.normalize_sheets_periodstat_default_planCosts 
  
  ...
[0m09:23:42.196976 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.201260 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts"} */
drop table if exists test.normalize_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m09:23:42.201986 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.208579 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m09:23:42.211959 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.213350 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult to test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  
  ...
[0m09:23:42.214262 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.217228 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts (execute): 2024-05-07 09:23:42.129590 => 2024-05-07 09:23:42.217057
[0m09:23:42.218337 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44831570>]}
[0m09:23:42.218977 [info ] [Thread-2 (]: 14 of 89 OK created sql view model test.normalize_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.14s]
[0m09:23:42.220160 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.221065 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_sheets_periodstat_default_planCosts
[0m09:23:42.224554 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    drop table if exists test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m09:23:42.225279 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m09:23:42.226870 [info ] [Thread-2 (]: 16 of 89 START sql view model test.normalize_vkads_datestat_default_ad_plans ... [RUN]
[0m09:23:42.228735 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans'
[0m09:23:42.229617 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.230140 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans)
[0m09:23:42.231869 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */

    rename table test.normalize_utmcraft_registry_default_utmresult__dbt_tmp to test.normalize_utmcraft_registry_default_utmresult 
  
  ...
[0m09:23:42.232771 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m09:23:42.239388 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans$')        
...
[0m09:23:42.240408 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.249173 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult"} */
drop table if exists test.normalize_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m09:23:42.250175 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.257672 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.256836 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.260373 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult (execute): 2024-05-07 09:23:42.177298 => 2024-05-07 09:23:42.260269
[0m09:23:42.263059 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448df0d0>]}
[0m09:23:42.263775 [info ] [Thread-1 (]: 15 of 89 OK created sql view model test.normalize_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.14s]
[0m09:23:42.264598 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_utmcraft_registry_default_utmresult
[0m09:23:42.265216 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m09:23:42.267577 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.266261 [info ] [Thread-1 (]: 17 of 89 START sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m09:23:42.285020 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics'
[0m09:23:42.285519 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics)
[0m09:23:42.288166 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m09:23:42.288858 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m09:23:42.297811 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_vkads_datestat_default_[^_]+_ad_plans_statistics$')        
...
[0m09:23:42.300081 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (compile): 2024-05-07 09:23:42.233938 => 2024-05-07 09:23:42.299828
[0m09:23:42.300791 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m09:23:42.310605 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"
[0m09:23:42.311716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.316429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = '_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.318285 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */


  create view test.normalize_vkads_datestat_default_ad_plans__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ad_groups') AS ad_groups, 
        JSONExtractString(_airbyte_data, 'autobidding_mode') AS autobidding_mode, 
        JSONExtractString(_airbyte_data, 'budget_limit') AS budget_limit, 
        JSONExtractString(_airbyte_data, 'budget_limit_day') AS budget_limit_day, 
        JSONExtractString(_airbyte_data, 'created') AS created, 
        JSONExtractString(_airbyte_data, 'date_end') AS date_end, 
        JSONExtractString(_airbyte_data, 'date_start') AS date_start, 
        JSONExtractString(_airbyte_data, 'id') AS id, 
        JSONExtractString(_airbyte_data, 'max_price') AS max_price, 
        JSONExtractString(_airbyte_data, 'name') AS name, 
        JSONExtractString(_airbyte_data, 'objective') AS objective, 
        JSONExtractString(_airbyte_data, 'priced_goal') AS priced_goal, 
        JSONExtractString(_airbyte_data, 'pricelist_id') AS pricelist_id, 
        JSONExtractString(_airbyte_data, 'status') AS status, 
        JSONExtractString(_airbyte_data, 'updated') AS updated, 
        JSONExtractString(_airbyte_data, 'vkads_status') AS vkads_status,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_vkads_datestat_default_testaccount_ad_plans') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans
)

)
  )...
[0m09:23:42.323776 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.337334 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:42.341163 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m09:23:42.344575 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m09:23:42.346893 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (compile): 2024-05-07 09:23:42.289826 => 2024-05-07 09:23:42.346720
[0m09:23:42.347309 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m09:23:42.351823 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"
[0m09:23:42.352755 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.354106 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans to test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  
  ...
[0m09:23:42.355422 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */


  create view test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'date') AS __date, 
        JSONExtractString(_airbyte_data, 'ad_offers') AS ad_offers, 
        JSONExtractString(_airbyte_data, 'ad_plan_id') AS ad_plan_id, 
        JSONExtractString(_airbyte_data, 'base') AS base, 
        JSONExtractString(_airbyte_data, 'carousel') AS carousel, 
        JSONExtractString(_airbyte_data, 'date') AS date, 
        JSONExtractString(_airbyte_data, 'events') AS events, 
        JSONExtractString(_airbyte_data, 'moat') AS moat, 
        JSONExtractString(_airbyte_data, 'playable') AS playable, 
        JSONExtractString(_airbyte_data, 'romi') AS romi, 
        JSONExtractString(_airbyte_data, 'social_network') AS social_network, 
        JSONExtractString(_airbyte_data, 'tps') AS tps, 
        JSONExtractString(_airbyte_data, 'uniques') AS uniques, 
        JSONExtractString(_airbyte_data, 'uniques_video') AS uniques_video, 
        JSONExtractString(_airbyte_data, 'video') AS video,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_vkads_datestat_default_testaccount_ad_plans_statistics
)

)
  )...
[0m09:23:42.359821 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.363201 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m09:23:42.367088 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.368656 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */

    rename table test.normalize_vkads_datestat_default_ad_plans__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans 
  
  ...
[0m09:23:42.370335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.374757 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m09:23:42.376069 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.380698 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m09:23:42.381538 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.383474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics to test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m09:23:42.386764 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.388315 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans (execute): 2024-05-07 09:23:42.301550 => 2024-05-07 09:23:42.388250
[0m09:23:42.388966 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44810c10>]}
[0m09:23:42.389436 [info ] [Thread-2 (]: 16 of 89 OK created sql view model test.normalize_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.16s]
[0m09:23:42.389828 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans
[0m09:23:42.390146 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m09:23:42.391228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.391898 [info ] [Thread-2 (]: 18 of 89 START sql view model test.normalize_yd_datestat_default_custom_report . [RUN]
[0m09:23:42.395917 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m09:23:42.397046 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report'
[0m09:23:42.398284 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report)
[0m09:23:42.398733 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m09:23:42.403639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_yd_datestat_default_[^_]+_custom_report$')        
...
[0m09:23:42.404455 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.407045 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.normalize_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m09:23:42.411553 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.415644 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.normalize_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m09:23:42.416588 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.422719 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = '_airbyte_raw_yd_datestat_default_testaccount_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.423716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.427066 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics (execute): 2024-05-07 09:23:42.347441 => 2024-05-07 09:23:42.426988
[0m09:23:42.428190 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46c80d60>]}
[0m09:23:42.428748 [info ] [Thread-1 (]: 17 of 89 OK created sql view model test.normalize_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.14s]
[0m09:23:42.429634 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.430374 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_vkads_datestat_default_ad_plans_statistics
[0m09:23:42.443939 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m09:23:42.444840 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m09:23:42.446361 [info ] [Thread-1 (]: 19 of 89 START sql view model test.normalize_ym_events_default_yandex_metrika_stream  [RUN]
[0m09:23:42.447174 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream'
[0m09:23:42.447705 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream)
[0m09:23:42.448407 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m09:23:42.452764 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, '_airbyte_raw_ym_events_default_[^_]+_yandex_metrika_stream$')        
...
[0m09:23:42.454079 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (compile): 2024-05-07 09:23:42.398951 => 2024-05-07 09:23:42.453920
[0m09:23:42.454543 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m09:23:42.461503 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"
[0m09:23:42.462988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */


  create view test.normalize_yd_datestat_default_custom_report__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'Date') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'AdId') AS AdId, 
        JSONExtractString(_airbyte_data, 'CampaignId') AS CampaignId, 
        JSONExtractString(_airbyte_data, 'CampaignName') AS CampaignName, 
        JSONExtractString(_airbyte_data, 'CampaignType') AS CampaignType, 
        JSONExtractString(_airbyte_data, 'Clicks') AS Clicks, 
        JSONExtractString(_airbyte_data, 'Cost') AS Cost, 
        JSONExtractString(_airbyte_data, 'Date') AS Date, 
        JSONExtractString(_airbyte_data, 'Impressions') AS Impressions,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_yd_datestat_default_testaccount_custom_report') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_yd_datestat_default_testaccount_custom_report
)

)
  )...
[0m09:23:42.465001 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.468957 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = '_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.474743 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.486988 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:42.496674 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m09:23:42.504577 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m09:23:42.506061 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (compile): 2024-05-07 09:23:42.448644 => 2024-05-07 09:23:42.505852
[0m09:23:42.506557 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m09:23:42.512273 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"
[0m09:23:42.513613 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.514714 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report to test.normalize_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m09:23:42.515917 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */


  create view test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp 
  
  as (
    SELECT
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS __date, 
        JSONExtractString(_airbyte_data, '__clientName') AS __clientName, 
        JSONExtractString(_airbyte_data, '__productName') AS __productName, 
        JSONExtractString(_airbyte_data, 'ym:s:clientID') AS ymsclientID, 
        JSONExtractString(_airbyte_data, 'ym:s:dateTime') AS ymsdateTime, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsID') AS ymsgoalsID, 
        JSONExtractString(_airbyte_data, 'ym:s:goalsOrder') AS ymsgoalsOrder, 
        JSONExtractString(_airbyte_data, 'ym:s:lastAdvEngine') AS ymslastAdvEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastReferalSource') AS ymslastReferalSource, 
        JSONExtractString(_airbyte_data, 'ym:s:lastSearchEngine') AS ymslastSearchEngine, 
        JSONExtractString(_airbyte_data, 'ym:s:lastTrafficSource') AS ymslastTrafficSource, 
        JSONExtractString(_airbyte_data, 'ym:s:pageViews') AS ymspageViews, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey1') AS ymsparsedParamsKey1, 
        JSONExtractString(_airbyte_data, 'ym:s:parsedParamsKey2') AS ymsparsedParamsKey2, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseCoupon') AS ymspurchaseCoupon, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseID') AS ymspurchaseID, 
        JSONExtractString(_airbyte_data, 'ym:s:purchaseRevenue') AS ymspurchaseRevenue, 
        JSONExtractString(_airbyte_data, 'ym:s:regionCity') AS ymsregionCity, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMCampaign') AS ymsUTMCampaign, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMContent') AS ymsUTMContent, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMMedium') AS ymsUTMMedium, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMSource') AS ymsUTMSource, 
        JSONExtractString(_airbyte_data, 'ym:s:UTMTerm') AS ymsUTMTerm, 
        JSONExtractString(_airbyte_data, 'ym:s:visitID') AS ymsvisitID,
        toLowCardinality(_dbt_source_relation) AS __table_name,  
        toDateTime32(substring(_airbyte_emitted_at, 1, 19)) AS __emitted_at, 
        NOW() AS __normalized_at
FROM (

(
SELECT
        toLowCardinality('_airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream') AS _dbt_source_relation,
        toString("_airbyte_ab_id") AS _airbyte_ab_id ,
        toString("_airbyte_data") AS _airbyte_data ,
        toString("_airbyte_emitted_at") AS _airbyte_emitted_at 
FROM test._airbyte_raw_ym_events_default_testaccount_yandex_metrika_stream
)

)
  )...
[0m09:23:42.517689 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.521018 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    drop table if exists test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m09:23:42.524484 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.526206 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */

    rename table test.normalize_yd_datestat_default_custom_report__dbt_tmp to test.normalize_yd_datestat_default_custom_report 
  
  ...
[0m09:23:42.529832 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.534461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report"} */
drop table if exists test.normalize_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m09:23:42.535129 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:42.539082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m09:23:42.543189 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.543857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.545037 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream to test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m09:23:42.546598 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report (execute): 2024-05-07 09:23:42.454779 => 2024-05-07 09:23:42.546497
[0m09:23:42.548501 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44bb0a60>]}
[0m09:23:42.549106 [info ] [Thread-2 (]: 18 of 89 OK created sql view model test.normalize_yd_datestat_default_custom_report  [[32mOK[0m in 0.15s]
[0m09:23:42.549618 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.normalize_yd_datestat_default_custom_report
[0m09:23:42.550075 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m09:23:42.551075 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.551490 [info ] [Thread-2 (]: 20 of 89 START sql incremental model test.incremental_adjust_events_default_cohorts  [RUN]
[0m09:23:42.554780 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m09:23:42.556277 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts'
[0m09:23:42.557948 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts)
[0m09:23:42.558545 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m09:23:42.562634 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m09:23:42.563745 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.565260 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */

    rename table test.normalize_ym_events_default_yandex_metrika_stream__dbt_tmp to test.normalize_ym_events_default_yandex_metrika_stream 
  
  ...
[0m09:23:42.567544 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (compile): 2024-05-07 09:23:42.558790 => 2024-05-07 09:23:42.567312
[0m09:23:42.567927 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m09:23:42.574936 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.597218 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.normalize_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m09:23:42.614944 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.622333 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream (execute): 2024-05-07 09:23:42.506717 => 2024-05-07 09:23:42.622249
[0m09:23:42.628967 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c4491c8e0>]}
[0m09:23:42.635262 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

            

    
        create table test.incremental_adjust_events_default_cohorts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

    )
        ...
[0m09:23:42.634958 [info ] [Thread-1 (]: 19 of 89 OK created sql view model test.normalize_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.18s]
[0m09:23:42.637430 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.normalize_ym_events_default_yandex_metrika_stream
[0m09:23:42.638764 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m09:23:42.640225 [info ] [Thread-1 (]: 21 of 89 START sql incremental model test.incremental_adjust_events_default_event_metrics  [RUN]
[0m09:23:42.641047 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics'
[0m09:23:42.641304 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics)
[0m09:23:42.641503 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m09:23:42.645490 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m09:23:42.645980 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (compile): 2024-05-07 09:23:42.641604 => 2024-05-07 09:23:42.645893
[0m09:23:42.646216 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m09:23:42.652343 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

            

    
        create table test.incremental_adjust_events_default_event_metrics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

    )
        ...
[0m09:23:42.662131 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:42.670810 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_cohorts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.672486 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:42.675839 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_event_metrics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.681521 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.683150 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"
[0m09:23:42.684148 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.685835 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"
[0m09:23:42.686789 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_event_metrics__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_event_metrics

  
    ...
[0m09:23:42.689384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_cohorts__dbt_tmp ("__date", "country", "date", "event_name", "event_token", "events", "network", "period", "tracker_token", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_cohorts

  
    ...
[0m09:23:42.717958 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:42.718555 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:42.722233 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m09:23:42.725846 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m09:23:42.730168 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.731337 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */

    rename table test.incremental_adjust_events_default_event_metrics__dbt_tmp to test.incremental_adjust_events_default_event_metrics__dbt_backup 
  
  ...
[0m09:23:42.732009 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.734920 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */

    rename table test.incremental_adjust_events_default_cohorts__dbt_tmp to test.incremental_adjust_events_default_cohorts__dbt_backup 
  
  ...
[0m09:23:42.736609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.740940 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
EXCHANGE TABLES test.incremental_adjust_events_default_event_metrics__dbt_backup AND test.incremental_adjust_events_default_event_metrics 
  
  ...
[0m09:23:42.742269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.744113 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
EXCHANGE TABLES test.incremental_adjust_events_default_cohorts__dbt_backup AND test.incremental_adjust_events_default_cohorts 
  
  ...
[0m09:23:42.746037 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.753313 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics"} */
drop table if exists test.incremental_adjust_events_default_event_metrics__dbt_backup 
  ...
[0m09:23:42.754291 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.760218 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts"} */
drop table if exists test.incremental_adjust_events_default_cohorts__dbt_backup 
  ...
[0m09:23:42.761056 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.763314 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics (execute): 2024-05-07 09:23:42.646354 => 2024-05-07 09:23:42.763228
[0m09:23:42.764596 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44831630>]}
[0m09:23:42.765324 [info ] [Thread-1 (]: 21 of 89 OK created sql incremental model test.incremental_adjust_events_default_event_metrics  [[32mOK[0m in 0.12s]
[0m09:23:42.765838 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_event_metrics
[0m09:23:42.766273 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m09:23:42.767156 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.768119 [info ] [Thread-1 (]: 22 of 89 START sql table model test.incremental_adjust_events_default_events ... [RUN]
[0m09:23:42.770816 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts (execute): 2024-05-07 09:23:42.568036 => 2024-05-07 09:23:42.770714
[0m09:23:42.771811 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_events'
[0m09:23:42.772465 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6f1c6e30>]}
[0m09:23:42.772841 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_events)
[0m09:23:42.773738 [info ] [Thread-2 (]: 20 of 89 OK created sql incremental model test.incremental_adjust_events_default_cohorts  [[32mOK[0m in 0.22s]
[0m09:23:42.774451 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m09:23:42.775095 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_cohorts
[0m09:23:42.779813 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m09:23:42.780834 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m09:23:42.781578 [info ] [Thread-2 (]: 23 of 89 START sql incremental model test.incremental_adjust_events_default_network  [RUN]
[0m09:23:42.782711 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_adjust_events_default_network'
[0m09:23:42.783110 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_adjust_events_default_network)
[0m09:23:42.783727 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (compile): 2024-05-07 09:23:42.775446 => 2024-05-07 09:23:42.783516
[0m09:23:42.784253 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m09:23:42.784594 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m09:23:42.788222 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m09:23:42.803631 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

            

    
        create table test.incremental_adjust_events_default_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_adjust_events_default_events

    )
        ...
[0m09:23:42.806055 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (compile): 2024-05-07 09:23:42.784790 => 2024-05-07 09:23:42.805688
[0m09:23:42.806717 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m09:23:42.812784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

            

    
        create table test.incremental_adjust_events_default_network__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

    )
        ...
[0m09:23:42.827682 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:42.830948 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.835650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.837721 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_events"
[0m09:23:42.838727 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:42.843149 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    select name, type from system.columns where table = 'incremental_adjust_events_default_network__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:42.844851 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */

  
    
    
        
        insert into test.incremental_adjust_events_default_events__dbt_backup ("app_token", "description", "formatting", "id", "is_skad_event", "name", "section", "short_name", "tokens", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_adjust_events_default_events

  ...
[0m09:23:42.849231 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.851013 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_adjust_events_default_network"
[0m09:23:42.851678 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

        
  
    
    
        
        insert into test.incremental_adjust_events_default_network__dbt_tmp ("__date", "clicks", "country", "country_code", "date", "events", "impressions", "installs", "network", "rejected_installs", "sessions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_adjust_events_default_network

  
    ...
[0m09:23:42.856346 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.858078 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
EXCHANGE TABLES test.incremental_adjust_events_default_events__dbt_backup AND test.incremental_adjust_events_default_events 
  
  ...
[0m09:23:42.863650 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.941308 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.09 seconds
[0m09:23:42.942386 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_events"} */
drop table if exists test.incremental_adjust_events_default_events__dbt_backup 
  ...
[0m09:23:42.945441 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m09:23:42.949224 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.950609 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_events (execute): 2024-05-07 09:23:42.788705 => 2024-05-07 09:23:42.950543
[0m09:23:42.951290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.952421 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a6fcd0>]}
[0m09:23:42.953992 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */

    rename table test.incremental_adjust_events_default_network__dbt_tmp to test.incremental_adjust_events_default_network__dbt_backup 
  
  ...
[0m09:23:42.955018 [info ] [Thread-1 (]: 22 of 89 OK created sql table model test.incremental_adjust_events_default_events  [[32mOK[0m in 0.18s]
[0m09:23:42.956515 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_events
[0m09:23:42.957429 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m09:23:42.958398 [info ] [Thread-1 (]: 24 of 89 START sql incremental model test.incremental_appmetrica_events_default_deeplinks  [RUN]
[0m09:23:42.959266 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks'
[0m09:23:42.959615 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks)
[0m09:23:42.960193 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m09:23:42.964683 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m09:23:42.965667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.967329 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
EXCHANGE TABLES test.incremental_adjust_events_default_network__dbt_backup AND test.incremental_adjust_events_default_network 
  
  ...
[0m09:23:42.969088 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (compile): 2024-05-07 09:23:42.960384 => 2024-05-07 09:23:42.968758
[0m09:23:42.969783 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m09:23:42.976709 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

            

    
        create table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

    )
        ...
[0m09:23:42.977528 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:42.983933 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_adjust_events_default_network: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_adjust_events_default_network"} */
drop table if exists test.incremental_adjust_events_default_network__dbt_backup 
  ...
[0m09:23:42.988482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:42.990532 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_adjust_events_default_network (execute): 2024-05-07 09:23:42.806959 => 2024-05-07 09:23:42.990442
[0m09:23:42.991241 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c4482b580>]}
[0m09:23:42.991660 [info ] [Thread-2 (]: 23 of 89 OK created sql incremental model test.incremental_adjust_events_default_network  [[32mOK[0m in 0.21s]
[0m09:23:42.992075 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_adjust_events_default_network
[0m09:23:42.992385 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m09:23:42.993075 [info ] [Thread-2 (]: 25 of 89 START sql incremental model test.incremental_appmetrica_events_default_events  [RUN]
[0m09:23:42.993973 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_events'
[0m09:23:42.994209 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_events)
[0m09:23:42.994386 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m09:23:42.998249 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m09:23:42.998731 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (compile): 2024-05-07 09:23:42.994495 => 2024-05-07 09:23:42.998649
[0m09:23:42.998945 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m09:23:43.005540 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

            

    
        create table test.incremental_appmetrica_events_default_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

    )
        ...
[0m09:23:43.006860 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:43.011341 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:43.017998 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.019862 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"
[0m09:23:43.021447 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_deeplinks__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "deeplink_url_parameters", "event_datetime", "google_aid", "ios_ifa", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_deeplinks

  
    ...
[0m09:23:43.026630 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:43.029844 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:43.034062 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.034570 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.038285 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m09:23:43.040746 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"
[0m09:23:43.042780 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_events__dbt_tmp ("__date", "__clientName", "__productName", "app_version_name", "appmetrica_device_id", "city", "event_datetime", "event_json", "event_name", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_id", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_events

  
    ...
[0m09:23:43.044555 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.045615 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */

    rename table test.incremental_appmetrica_events_default_deeplinks__dbt_tmp to test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  
  ...
[0m09:23:43.050058 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.051373 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_deeplinks__dbt_backup AND test.incremental_appmetrica_events_default_deeplinks 
  
  ...
[0m09:23:43.058276 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.062824 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks"} */
drop table if exists test.incremental_appmetrica_events_default_deeplinks__dbt_backup 
  ...
[0m09:23:43.067212 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.069164 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks (execute): 2024-05-07 09:23:42.970328 => 2024-05-07 09:23:43.069096
[0m09:23:43.070154 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a6efe0>]}
[0m09:23:43.071036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:43.071614 [info ] [Thread-1 (]: 24 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_deeplinks  [[32mOK[0m in 0.11s]
[0m09:23:43.074988 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m09:23:43.075591 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_deeplinks
[0m09:23:43.077046 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m09:23:43.078012 [info ] [Thread-1 (]: 26 of 89 START sql incremental model test.incremental_appmetrica_events_default_install  [RUN]
[0m09:23:43.078829 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_install'
[0m09:23:43.079155 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_install)
[0m09:23:43.079386 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m09:23:43.085064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.085863 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m09:23:43.087488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */

    rename table test.incremental_appmetrica_events_default_events__dbt_tmp to test.incremental_appmetrica_events_default_events__dbt_backup 
  
  ...
[0m09:23:43.090058 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (compile): 2024-05-07 09:23:43.079583 => 2024-05-07 09:23:43.089799
[0m09:23:43.090468 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m09:23:43.095642 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

            

    
        create table test.incremental_appmetrica_events_default_install__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

    )
        ...
[0m09:23:43.096478 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.098797 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_events__dbt_backup AND test.incremental_appmetrica_events_default_events 
  
  ...
[0m09:23:43.106597 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.113448 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_events"} */
drop table if exists test.incremental_appmetrica_events_default_events__dbt_backup 
  ...
[0m09:23:43.118469 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.120027 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_events (execute): 2024-05-07 09:23:42.999049 => 2024-05-07 09:23:43.119913
[0m09:23:43.121279 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b64820>]}
[0m09:23:43.122222 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:43.127076 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:43.133654 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.135253 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"
[0m09:23:43.135726 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_install__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "click_datetime", "click_url_parameters", "google_aid", "install_datetime", "ios_ifa", "is_reinstallation", "os_name", "profile_id", "publisher_name", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_install

  
    ...
[0m09:23:43.149836 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.154113 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m09:23:43.158570 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.159695 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */

    rename table test.incremental_appmetrica_events_default_install__dbt_tmp to test.incremental_appmetrica_events_default_install__dbt_backup 
  
  ...
[0m09:23:43.164952 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.166058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_install__dbt_backup AND test.incremental_appmetrica_events_default_install 
  
  ...
[0m09:23:43.171794 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.176759 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_install: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_install"} */
drop table if exists test.incremental_appmetrica_events_default_install__dbt_backup 
  ...
[0m09:23:43.180585 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.181926 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_install (execute): 2024-05-07 09:23:43.090592 => 2024-05-07 09:23:43.181848
[0m09:23:43.182551 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a6db70>]}
[0m09:23:43.905444 [info ] [Thread-2 (]: 25 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_events  [[32mOK[0m in 0.13s]
[0m09:23:43.907423 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_events
[0m09:23:43.906189 [info ] [Thread-1 (]: 26 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_install  [[32mOK[0m in 0.10s]
[0m09:23:43.908376 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m09:23:43.908981 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_install
[0m09:23:43.909786 [info ] [Thread-2 (]: 27 of 89 START sql incremental model test.incremental_appmetrica_events_default_screen_view  [RUN]
[0m09:23:43.910805 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m09:23:43.911834 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view'
[0m09:23:43.913028 [info ] [Thread-1 (]: 28 of 89 START sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [RUN]
[0m09:23:43.913910 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view)
[0m09:23:43.914883 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts'
[0m09:23:43.915530 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m09:23:43.916028 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts)
[0m09:23:43.923157 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m09:23:43.923939 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m09:23:43.927918 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m09:23:43.928733 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (compile): 2024-05-07 09:23:43.916505 => 2024-05-07 09:23:43.928516
[0m09:23:43.929360 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m09:23:43.934026 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

            

    
        create table test.incremental_appmetrica_events_default_screen_view__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

    )
        ...
[0m09:23:43.935301 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (compile): 2024-05-07 09:23:43.924516 => 2024-05-07 09:23:43.935102
[0m09:23:43.935856 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m09:23:43.942258 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

            

    
        create table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

    )
        ...
[0m09:23:43.957009 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:43.961255 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:43.966482 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:43.968383 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"
[0m09:23:43.969245 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:43.975543 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:43.977082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_screen_view__dbt_tmp ("__date", "event_datetime", "mobileAdsId", "accountName", "appmetricaDeviceId", "cityName", "osName", "crmUserId", "__table_name", "__emitted_at", "session_id", "screen_view")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_screen_view

  
    ...
[0m09:23:43.981938 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:43.984066 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"
[0m09:23:43.984639 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

        
  
    
    
        
        insert into test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp ("__date", "__clientName", "__productName", "appmetrica_device_id", "city", "google_aid", "installation_id", "ios_ifa", "os_name", "profile_id", "session_start_datetime", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_appmetrica_events_default_sessions_starts

  
    ...
[0m09:23:44.004085 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.007842 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m09:23:44.011222 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.012587 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */

    rename table test.incremental_appmetrica_events_default_sessions_starts__dbt_tmp to test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  
  ...
[0m09:23:44.017261 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.018485 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_sessions_starts__dbt_backup AND test.incremental_appmetrica_events_default_sessions_starts 
  
  ...
[0m09:23:44.021270 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:44.025330 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m09:23:44.026003 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.031338 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts"} */
drop table if exists test.incremental_appmetrica_events_default_sessions_starts__dbt_backup 
  ...
[0m09:23:44.032020 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.034188 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */

    rename table test.incremental_appmetrica_events_default_screen_view__dbt_tmp to test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  
  ...
[0m09:23:44.036716 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.038172 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts (execute): 2024-05-07 09:23:43.936082 => 2024-05-07 09:23:44.038102
[0m09:23:44.038973 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a6f8e0>]}
[0m09:23:44.040090 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.039528 [info ] [Thread-1 (]: 28 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_sessions_starts  [[32mOK[0m in 0.12s]
[0m09:23:44.042428 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
EXCHANGE TABLES test.incremental_appmetrica_events_default_screen_view__dbt_backup AND test.incremental_appmetrica_events_default_screen_view 
  
  ...
[0m09:23:44.043057 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_sessions_starts
[0m09:23:44.044621 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m09:23:44.045740 [info ] [Thread-1 (]: 29 of 89 START sql table model test.incremental_appmetrica_registry_default_profiles  [RUN]
[0m09:23:44.046550 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles'
[0m09:23:44.047008 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles)
[0m09:23:44.047495 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m09:23:44.051886 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m09:23:44.053434 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (compile): 2024-05-07 09:23:44.047877 => 2024-05-07 09:23:44.053218
[0m09:23:44.053947 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m09:23:44.058634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

            

    
        create table test.incremental_appmetrica_registry_default_profiles__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

    )
        ...
[0m09:23:44.060468 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.066032 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view"} */
drop table if exists test.incremental_appmetrica_events_default_screen_view__dbt_backup 
  ...
[0m09:23:44.072665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.074146 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view (execute): 2024-05-07 09:23:43.929514 => 2024-05-07 09:23:44.074058
[0m09:23:44.074954 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b87160>]}
[0m09:23:44.075701 [info ] [Thread-2 (]: 27 of 89 OK created sql incremental model test.incremental_appmetrica_events_default_screen_view  [[32mOK[0m in 0.16s]
[0m09:23:44.076247 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_events_default_screen_view
[0m09:23:44.076654 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m09:23:44.077046 [info ] [Thread-2 (]: 30 of 89 START sql table model test.incremental_mt_datestat_default_banners .... [RUN]
[0m09:23:44.078598 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners'
[0m09:23:44.078989 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners)
[0m09:23:44.079194 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m09:23:44.082364 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m09:23:44.083785 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (compile): 2024-05-07 09:23:44.079363 => 2024-05-07 09:23:44.083619
[0m09:23:44.084248 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m09:23:44.090488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

            

    
        create table test.incremental_mt_datestat_default_banners__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_mt_datestat_default_banners

    )
        ...
[0m09:23:44.091345 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:44.096426 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.103478 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.105700 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"
[0m09:23:44.106417 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */

  
    
    
        
        insert into test.incremental_appmetrica_registry_default_profiles__dbt_backup ("__clientName", "__productName", "appmetrica_device_id", "city", "profile_id", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_appmetrica_registry_default_profiles

  ...
[0m09:23:44.114265 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.117971 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.121462 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.123082 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
EXCHANGE TABLES test.incremental_appmetrica_registry_default_profiles__dbt_backup AND test.incremental_appmetrica_registry_default_profiles 
  
  ...
[0m09:23:44.123792 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.126973 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"
[0m09:23:44.128067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */

  
    
    
        
        insert into test.incremental_mt_datestat_default_banners__dbt_backup ("__clientName", "__productName", "campaign_id", "id", "textblocks", "urls", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_mt_datestat_default_banners

  ...
[0m09:23:44.131228 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.136551 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles"} */
drop table if exists test.incremental_appmetrica_registry_default_profiles__dbt_backup 
  ...
[0m09:23:44.141886 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.143167 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners__dbt_backup AND test.incremental_mt_datestat_default_banners 
  
  ...
[0m09:23:44.143919 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.146532 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles (execute): 2024-05-07 09:23:44.054134 => 2024-05-07 09:23:44.146304
[0m09:23:44.147542 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46c42380>]}
[0m09:23:44.148398 [info ] [Thread-1 (]: 29 of 89 OK created sql table model test.incremental_appmetrica_registry_default_profiles  [[32mOK[0m in 0.10s]
[0m09:23:44.148918 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_appmetrica_registry_default_profiles
[0m09:23:44.149320 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m09:23:44.150611 [info ] [Thread-1 (]: 31 of 89 START sql incremental model test.incremental_mt_datestat_default_banners_statistics  [RUN]
[0m09:23:44.151514 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics'
[0m09:23:44.151891 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics)
[0m09:23:44.152160 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m09:23:44.156651 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m09:23:44.157663 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.161977 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners"} */
drop table if exists test.incremental_mt_datestat_default_banners__dbt_backup 
  ...
[0m09:23:44.162405 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (compile): 2024-05-07 09:23:44.152313 => 2024-05-07 09:23:44.162311
[0m09:23:44.164295 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m09:23:44.169412 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

            

    
        create table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

    )
        ...
[0m09:23:44.171084 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.173023 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners (execute): 2024-05-07 09:23:44.084395 => 2024-05-07 09:23:44.172947
[0m09:23:44.173808 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b86b90>]}
[0m09:23:44.174872 [info ] [Thread-2 (]: 30 of 89 OK created sql table model test.incremental_mt_datestat_default_banners  [[32mOK[0m in 0.10s]
[0m09:23:44.175768 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners
[0m09:23:44.176285 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m09:23:44.177232 [info ] [Thread-2 (]: 32 of 89 START sql table model test.incremental_mt_datestat_default_campaigns .. [RUN]
[0m09:23:44.178378 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns'
[0m09:23:44.178723 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns)
[0m09:23:44.178910 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m09:23:44.182424 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m09:23:44.183039 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (compile): 2024-05-07 09:23:44.179010 => 2024-05-07 09:23:44.182915
[0m09:23:44.183357 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m09:23:44.188099 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

            

    
        create table test.incremental_mt_datestat_default_campaigns__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_mt_datestat_default_campaigns

    )
        ...
[0m09:23:44.196354 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:44.200841 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.207644 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.210125 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"
[0m09:23:44.210784 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

        
  
    
    
        
        insert into test.incremental_mt_datestat_default_banners_statistics__dbt_tmp ("__date", "__clientName", "__productName", "banner_id", "base", "date", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_mt_datestat_default_banners_statistics

  
    ...
[0m09:23:44.212151 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.214828 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.222168 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.224033 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"
[0m09:23:44.224700 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */

  
    
    
        
        insert into test.incremental_mt_datestat_default_campaigns__dbt_backup ("__clientName", "__productName", "id", "name", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_mt_datestat_default_campaigns

  ...
[0m09:23:44.227183 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.230345 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m09:23:44.232925 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.234230 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */

    rename table test.incremental_mt_datestat_default_banners_statistics__dbt_tmp to test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  
  ...
[0m09:23:44.235867 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.237380 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_campaigns__dbt_backup AND test.incremental_mt_datestat_default_campaigns 
  
  ...
[0m09:23:44.238978 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.241150 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
EXCHANGE TABLES test.incremental_mt_datestat_default_banners_statistics__dbt_backup AND test.incremental_mt_datestat_default_banners_statistics 
  
  ...
[0m09:23:44.243943 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.248171 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns"} */
drop table if exists test.incremental_mt_datestat_default_campaigns__dbt_backup 
  ...
[0m09:23:44.249132 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.255234 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics"} */
drop table if exists test.incremental_mt_datestat_default_banners_statistics__dbt_backup 
  ...
[0m09:23:44.256302 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.258490 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns (execute): 2024-05-07 09:23:44.183467 => 2024-05-07 09:23:44.258422
[0m09:23:44.259103 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449e5c30>]}
[0m09:23:44.259577 [info ] [Thread-2 (]: 32 of 89 OK created sql table model test.incremental_mt_datestat_default_campaigns  [[32mOK[0m in 0.08s]
[0m09:23:44.260005 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_campaigns
[0m09:23:44.260337 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m09:23:44.261165 [info ] [Thread-2 (]: 33 of 89 START sql incremental model test.incremental_sheets_periodstat_default_planCosts  [RUN]
[0m09:23:44.262080 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.262776 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts'
[0m09:23:44.264438 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics (execute): 2024-05-07 09:23:44.164757 => 2024-05-07 09:23:44.264375
[0m09:23:44.264746 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts)
[0m09:23:44.265778 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a6fdc0>]}
[0m09:23:44.266343 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m09:23:44.266879 [info ] [Thread-1 (]: 31 of 89 OK created sql incremental model test.incremental_mt_datestat_default_banners_statistics  [[32mOK[0m in 0.11s]
[0m09:23:44.271987 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m09:23:44.272797 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_mt_datestat_default_banners_statistics
[0m09:23:44.273643 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m09:23:44.274369 [info ] [Thread-1 (]: 34 of 89 START sql table model test.incremental_utmcraft_registry_default_utmresult  [RUN]
[0m09:23:44.276430 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (compile): 2024-05-07 09:23:44.267401 => 2024-05-07 09:23:44.276219
[0m09:23:44.277168 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult'
[0m09:23:44.277503 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m09:23:44.277704 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult)
[0m09:23:44.284220 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

            

    
        create table test.incremental_sheets_periodstat_default_planCosts__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_sheets_periodstat_default_planCosts

    )
        ...
[0m09:23:44.284728 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m09:23:44.290296 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m09:23:44.291982 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (compile): 2024-05-07 09:23:44.285691 => 2024-05-07 09:23:44.291744
[0m09:23:44.292667 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m09:23:44.297792 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

            

    
        create table test.incremental_utmcraft_registry_default_utmresult__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

    )
        ...
[0m09:23:44.307964 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.311217 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.316915 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.318592 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"
[0m09:23:44.319352 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.322843 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.324508 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

        
  
    
    
        
        insert into test.incremental_sheets_periodstat_default_planCosts__dbt_tmp ("__date", "Campaign", "Cost", "Period_end", "Period_start", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_sheets_periodstat_default_planCosts

  
    ...
[0m09:23:44.328564 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.330293 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"
[0m09:23:44.331488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */

  
    
    
        
        insert into test.incremental_utmcraft_registry_default_utmresult__dbt_backup ("created_at", "created_by_id", "data", "form_id", "id", "updated_at", "updated_by_id", "utm_hashcode", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_utmcraft_registry_default_utmresult

  ...
[0m09:23:44.336213 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.341409 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m09:23:44.342602 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.345521 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
EXCHANGE TABLES test.incremental_utmcraft_registry_default_utmresult__dbt_backup AND test.incremental_utmcraft_registry_default_utmresult 
  
  ...
[0m09:23:44.346294 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.350083 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */

    rename table test.incremental_sheets_periodstat_default_planCosts__dbt_tmp to test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  
  ...
[0m09:23:44.353125 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.358075 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult"} */
drop table if exists test.incremental_utmcraft_registry_default_utmresult__dbt_backup 
  ...
[0m09:23:44.359428 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.361153 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
EXCHANGE TABLES test.incremental_sheets_periodstat_default_planCosts__dbt_backup AND test.incremental_sheets_periodstat_default_planCosts 
  
  ...
[0m09:23:44.363408 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.364863 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult (execute): 2024-05-07 09:23:44.292883 => 2024-05-07 09:23:44.364788
[0m09:23:44.365574 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c4485c9a0>]}
[0m09:23:44.366130 [info ] [Thread-1 (]: 34 of 89 OK created sql table model test.incremental_utmcraft_registry_default_utmresult  [[32mOK[0m in 0.09s]
[0m09:23:44.366602 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_utmcraft_registry_default_utmresult
[0m09:23:44.367180 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m09:23:44.367807 [info ] [Thread-1 (]: 35 of 89 START sql table model test.incremental_vkads_datestat_default_ad_plans  [RUN]
[0m09:23:44.368560 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans'
[0m09:23:44.369942 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.370455 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans)
[0m09:23:44.374916 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts"} */
drop table if exists test.incremental_sheets_periodstat_default_planCosts__dbt_backup 
  ...
[0m09:23:44.375525 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m09:23:44.380555 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m09:23:44.382611 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (compile): 2024-05-07 09:23:44.377333 => 2024-05-07 09:23:44.382420
[0m09:23:44.383012 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m09:23:44.387404 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        

SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

    )
        ...
[0m09:23:44.388665 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.390945 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts (execute): 2024-05-07 09:23:44.277900 => 2024-05-07 09:23:44.390833
[0m09:23:44.391985 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449c2620>]}
[0m09:23:44.392702 [info ] [Thread-2 (]: 33 of 89 OK created sql incremental model test.incremental_sheets_periodstat_default_planCosts  [[32mOK[0m in 0.13s]
[0m09:23:44.393127 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_sheets_periodstat_default_planCosts
[0m09:23:44.393594 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m09:23:44.395049 [info ] [Thread-2 (]: 36 of 89 START sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [RUN]
[0m09:23:44.395961 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics'
[0m09:23:44.396237 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics)
[0m09:23:44.396506 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m09:23:44.400402 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m09:23:44.400858 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (compile): 2024-05-07 09:23:44.396678 => 2024-05-07 09:23:44.400790
[0m09:23:44.401088 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m09:23:44.407023 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

            

    
        create table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

    )
        ...
[0m09:23:44.422925 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:44.426494 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.428383 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.431931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.437073 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.438125 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.440390 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"
[0m09:23:44.442770 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"
[0m09:23:44.444295 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */

  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans__dbt_backup ("ad_groups", "autobidding_mode", "budget_limit", "budget_limit_day", "created", "date_end", "date_start", "id", "max_price", "name", "objective", "priced_goal", "pricelist_id", "status", "updated", "vkads_status", "__table_name", "__emitted_at", "__normalized_at")
  

SELECT *
FROM test.normalize_vkads_datestat_default_ad_plans

  ...
[0m09:23:44.445450 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

        
  
    
    
        
        insert into test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp ("__date", "ad_offers", "ad_plan_id", "base", "carousel", "date", "events", "moat", "playable", "romi", "social_network", "tps", "uniques", "uniques_video", "video", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_vkads_datestat_default_ad_plans_statistics

  
    ...
[0m09:23:44.456048 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.459635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m09:23:44.460673 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.463380 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans 
  
  ...
[0m09:23:44.464088 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.466052 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */

    rename table test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_tmp to test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  
  ...
[0m09:23:44.468790 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.472802 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans__dbt_backup 
  ...
[0m09:23:44.473673 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.476451 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
EXCHANGE TABLES test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup AND test.incremental_vkads_datestat_default_ad_plans_statistics 
  
  ...
[0m09:23:44.477609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.479171 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans (execute): 2024-05-07 09:23:44.383176 => 2024-05-07 09:23:44.479100
[0m09:23:44.480176 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a1b1c0>]}
[0m09:23:44.480788 [info ] [Thread-1 (]: 35 of 89 OK created sql table model test.incremental_vkads_datestat_default_ad_plans  [[32mOK[0m in 0.11s]
[0m09:23:44.481252 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans
[0m09:23:44.481751 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m09:23:44.482450 [info ] [Thread-1 (]: 37 of 89 START sql incremental model test.incremental_yd_datestat_default_custom_report  [RUN]
[0m09:23:44.483353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.484044 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report'
[0m09:23:44.488874 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics"} */
drop table if exists test.incremental_vkads_datestat_default_ad_plans_statistics__dbt_backup 
  ...
[0m09:23:44.489516 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report)
[0m09:23:44.491257 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m09:23:44.496383 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m09:23:44.497211 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.498771 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics (execute): 2024-05-07 09:23:44.401183 => 2024-05-07 09:23:44.498704
[0m09:23:44.499552 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449cfc70>]}
[0m09:23:44.500492 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (compile): 2024-05-07 09:23:44.491492 => 2024-05-07 09:23:44.500402
[0m09:23:44.500800 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m09:23:44.500178 [info ] [Thread-2 (]: 36 of 89 OK created sql incremental model test.incremental_vkads_datestat_default_ad_plans_statistics  [[32mOK[0m in 0.10s]
[0m09:23:44.506866 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

            

    
        create table test.incremental_yd_datestat_default_custom_report__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

    )
        ...
[0m09:23:44.507420 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_vkads_datestat_default_ad_plans_statistics
[0m09:23:44.509042 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m09:23:44.510218 [info ] [Thread-2 (]: 38 of 89 START sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [RUN]
[0m09:23:44.511750 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream'
[0m09:23:44.512332 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream)
[0m09:23:44.513327 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m09:23:44.517348 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m09:23:44.518393 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (compile): 2024-05-07 09:23:44.513548 => 2024-05-07 09:23:44.518243
[0m09:23:44.518806 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m09:23:44.525602 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

            

    
        create table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

    )
        ...
[0m09:23:44.529884 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.533365 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.539471 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.541556 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"
[0m09:23:44.542849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

        
  
    
    
        
        insert into test.incremental_yd_datestat_default_custom_report__dbt_tmp ("__date", "__clientName", "__productName", "AdId", "CampaignId", "CampaignName", "CampaignType", "Clicks", "Cost", "Date", "Impressions", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_yd_datestat_default_custom_report

  
    ...
[0m09:23:44.546619 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.549648 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.555787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.559133 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m09:23:44.560875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.563279 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"
[0m09:23:44.564389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.565501 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */

    rename table test.incremental_yd_datestat_default_custom_report__dbt_tmp to test.incremental_yd_datestat_default_custom_report__dbt_backup 
  
  ...
[0m09:23:44.566774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

        
  
    
    
        
        insert into test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp ("__date", "__clientName", "__productName", "ymsclientID", "ymsdateTime", "ymsgoalsID", "ymsgoalsOrder", "ymslastAdvEngine", "ymslastReferalSource", "ymslastSearchEngine", "ymslastTrafficSource", "ymspageViews", "ymsparsedParamsKey1", "ymsparsedParamsKey2", "ymspurchaseCoupon", "ymspurchaseID", "ymspurchaseRevenue", "ymsregionCity", "ymsUTMCampaign", "ymsUTMContent", "ymsUTMMedium", "ymsUTMSource", "ymsUTMTerm", "ymsvisitID", "__table_name", "__emitted_at", "__normalized_at")
  
SELECT * 
REPLACE(toDate(__date, 'UTC') AS __date)
FROM test.normalize_ym_events_default_yandex_metrika_stream

  
    ...
[0m09:23:44.569610 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.571894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
EXCHANGE TABLES test.incremental_yd_datestat_default_custom_report__dbt_backup AND test.incremental_yd_datestat_default_custom_report 
  
  ...
[0m09:23:44.578473 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.579765 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.584555 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report"} */
drop table if exists test.incremental_yd_datestat_default_custom_report__dbt_backup 
  ...
[0m09:23:44.587936 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m09:23:44.592816 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.593398 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.594886 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */

    rename table test.incremental_ym_events_default_yandex_metrika_stream__dbt_tmp to test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  
  ...
[0m09:23:44.596738 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report (execute): 2024-05-07 09:23:44.501248 => 2024-05-07 09:23:44.596675
[0m09:23:44.598696 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c4485c9a0>]}
[0m09:23:44.599221 [info ] [Thread-1 (]: 37 of 89 OK created sql incremental model test.incremental_yd_datestat_default_custom_report  [[32mOK[0m in 0.11s]
[0m09:23:44.599633 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.incremental_yd_datestat_default_custom_report
[0m09:23:44.600054 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_events
[0m09:23:44.601843 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.601190 [info ] [Thread-1 (]: 39 of 89 START sql incremental model test.join_appmetrica_events ............... [RUN]
[0m09:23:44.603809 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
EXCHANGE TABLES test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup AND test.incremental_ym_events_default_yandex_metrika_stream 
  
  ...
[0m09:23:44.604530 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_events'
[0m09:23:44.606081 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_events)
[0m09:23:44.606622 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_events
[0m09:23:44.611035 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m09:23:44.613269 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.617785 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream"} */
drop table if exists test.incremental_ym_events_default_yandex_metrika_stream__dbt_backup 
  ...
[0m09:23:44.622922 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.624661 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream (execute): 2024-05-07 09:23:44.518974 => 2024-05-07 09:23:44.624469
[0m09:23:44.625631 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b85ea0>]}
[0m09:23:44.626337 [info ] [Thread-2 (]: 38 of 89 OK created sql incremental model test.incremental_ym_events_default_yandex_metrika_stream  [[32mOK[0m in 0.11s]
[0m09:23:44.626692 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.incremental_ym_events_default_yandex_metrika_stream
[0m09:23:44.627095 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m09:23:44.628408 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:44.629315 [info ] [Thread-2 (]: 40 of 89 START sql table model test.join_appmetrica_registry_appprofilematching  [RUN]
[0m09:23:44.631522 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_appmetrica__%' AND 
        name='__date'

  ...
[0m09:23:44.632464 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching'
[0m09:23:44.634110 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching)
[0m09:23:44.634902 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m09:23:44.640299 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_appmetrica__%'
    GROUP BY table

...
[0m09:23:44.642162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.646189 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_appmetrica_events_default_deeplinks' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_deeplinks
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_events' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_events
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_install' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_install
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_screen_view' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_screen_view
    
    
    WHERE toDate(__date) > '1972-01-01'
    
        UNION ALL
    

    SELECT 
        'normalize_appmetrica_events_default_sessions_starts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_appmetrica_events_default_sessions_starts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m09:23:44.651348 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.747254 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m09:23:44.748188 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_registry_[^_]+_profiles$')        
...
[0m09:23:44.751095 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_deeplinks$')        
...
[0m09:23:44.759685 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.763144 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'incremental_appmetrica_registry_default_profiles'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.763899 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.768562 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_deeplinks'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.771098 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.777416 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m09:23:44.778124 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.781429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_events$')        
...
[0m09:23:44.782882 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (compile): 2024-05-07 09:23:44.635134 => 2024-05-07 09:23:44.782714
[0m09:23:44.783260 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m09:23:44.787653 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

            

    
        create table test.join_appmetrica_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )




    )
        ...
[0m09:23:44.789164 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.792681 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.797989 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.801885 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_install$')        
...
[0m09:23:44.808222 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.813387 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_install'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.814130 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:44.818095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.823915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.827047 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_screen_view$')        
...
[0m09:23:44.828489 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.830470 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"
[0m09:23:44.833027 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */

  
    
    
        
        insert into test.join_appmetrica_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_appmetrica_registry_default_profiles
SELECT
    appmetrica_device_id AS appmetricaDeviceId,
    profile_id AS crmUserId,
    city AS cityName,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    toLowCardinality('AppProfileMatching') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_registry_default_profiles' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_registry_default_profiles

            
        )

        )




  ...
[0m09:23:44.834356 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.839376 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_screen_view'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.843841 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.846925 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_appmetrica_events_[^_]+_sessions_starts$')        
...
[0m09:23:44.847684 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.849951 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
EXCHANGE TABLES test.join_appmetrica_registry_appprofilematching__dbt_backup AND test.join_appmetrica_registry_appprofilematching 
  
  ...
[0m09:23:44.854756 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.858829 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching"} */
drop table if exists test.join_appmetrica_registry_appprofilematching__dbt_backup 
  ...
[0m09:23:44.859692 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.864620 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'incremental_appmetrica_events_default_sessions_starts'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.868590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.869445 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:44.870901 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching (execute): 2024-05-07 09:23:44.783368 => 2024-05-07 09:23:44.870834
[0m09:23:44.873948 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m09:23:44.874747 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449b82b0>]}
[0m09:23:44.875547 [info ] [Thread-2 (]: 40 of 89 OK created sql table model test.join_appmetrica_registry_appprofilematching  [[32mOK[0m in 0.24s]
[0m09:23:44.875949 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_registry_appprofilematching
[0m09:23:44.876608 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_mt_datestat
[0m09:23:44.877917 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (compile): 2024-05-07 09:23:44.606810 => 2024-05-07 09:23:44.877780
[0m09:23:44.877449 [info ] [Thread-2 (]: 41 of 89 START sql incremental model test.join_mt_datestat ..................... [RUN]
[0m09:23:44.879007 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_appmetrica_events
[0m09:23:44.879646 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_mt_datestat'
[0m09:23:44.885106 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

            

    
        create table test.join_appmetrica_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId, --
    --'' AS clientId, -- 
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    --'' AS visitId,
    --'' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts





    )
        ...
[0m09:23:44.885545 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_mt_datestat)
[0m09:23:44.886839 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_mt_datestat
[0m09:23:44.892774 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_mt__%'
    GROUP BY table

...
[0m09:23:44.902179 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.903969 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_mt__%' AND 
        name='__date'

  ...
[0m09:23:44.910987 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.913161 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_mt_datestat_default_banners_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_mt_datestat_default_banners_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m09:23:44.941954 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:44.944519 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners_statistics$')        
...
[0m09:23:44.953668 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.959803 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.966684 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.969671 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_banners$')        
...
[0m09:23:44.977549 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.981031 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_banners'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:44.987109 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:44.990306 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_mt_datestat_[^_]+_campaigns$')        
...
[0m09:23:44.996409 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.000429 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'incremental_mt_datestat_default_campaigns'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.006293 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.008768 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m09:23:45.009367 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (compile): 2024-05-07 09:23:44.887631 => 2024-05-07 09:23:45.009224
[0m09:23:45.009729 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_mt_datestat
[0m09:23:45.015137 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

            

    
        create table test.join_mt_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id






    )
        ...
[0m09:23:45.020423 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.13 seconds
[0m09:23:45.025059 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.030781 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.032886 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_appmetrica_events"
[0m09:23:45.033532 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

        
  
    
    
        
        insert into test.join_appmetrica_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link")
  -- depends_on: test.incremental_appmetrica_events_default_deeplinks
-- depends_on: test.incremental_appmetrica_events_default_events
-- depends_on: test.incremental_appmetrica_events_default_install
-- depends_on: test.incremental_appmetrica_events_default_screen_view
-- depends_on: test.incremental_appmetrica_events_default_sessions_starts
WITH join_appmetrica_events_deeplinks AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime,
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId, --
    --'' AS clientId, -- 
    '' AS promoCode, --
    os_name AS osName,
    city AS cityName,
    assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, '')) AS adSourceDirty,
    extract(deeplink_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(deeplink_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(deeplink_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(deeplink_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(deeplink_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions, --
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppDeeplinkStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_deeplinks' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("deeplink_url_parameters" as String) as "deeplink_url_parameters" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_deeplinks

            
        )

        )
), union_events AS (
SELECT
    __emitted_at,
    splitByChar('_', __table_name)[6] AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    city AS cityName,
    event_name AS eventName,
    event_json AS eventJson,
    session_id AS sessionId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    JSONExtractString(event_json, 'transaction_id') AS transactionId,
    appmetrica_device_id AS appmetricaDeviceId,
    os_name AS osName,
    profile_id AS crmUserId,
    JSONExtractString(event_json, 'coupon') AS promoCode,    
    toDate(__date) AS __date, 
    toDateTime(event_datetime) AS event_datetime, 
    0 AS screen_view
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_events' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("app_version_name" as String) as "app_version_name" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("event_datetime" as String) as "event_datetime" ,
                    cast("event_json" as String) as "event_json" ,
                    cast("event_name" as String) as "event_name" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_events

            
        )

        )
)
, join_appmetrica_events_prepare AS (
SELECT 
    __date,
    toLowCardinality(__table_name) AS __table_name,
    event_datetime,
    toLowCardinality(accountName) AS accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId,   
    --'' AS visitId,
    --'' AS clientId,
    promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    transactionId,
    '' AS UtmHash,
    0 AS sessions,
    eventName = 'add_to_cart' AS addToCartSessions,
    eventName = 'view_cart' AS cartViewSessions,
    eventName = 'begin_checkout' AS checkoutSessions,
    eventName = 'purchase' AS webSalesSessions,
    eventName = 'purchase' AS sales,    
    assumeNotNull(coalesce(if(eventName = 'purchase', toFloat64(nullif(JSONExtractString(JSONExtractString(JSONExtractString(eventJson, 'value'), 'fiat'), 'value'), '')), 0), 0)) AS amountSales,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindVirtualCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS registrationCardSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'IntroRegistrationButtonClick' AND (JSONExtractString(eventJson, 'item_name') = 'AdventCalendar' or JSONExtractString(eventJson, 'item_name') = 'ScratchCards') as registrationButtonClick,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'BindPlasticCard' AND  JSONExtractString(eventJson, 'item_name') = 'Auth' AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CashbackButtonRegistration' AND  JSONExtractString(eventJson, 'item_name') = 'Cashback' AS registrationCashbackSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'ButtonActivate' AS instantDiscountActivationSessions,
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponDetailActivate' AND  JSONExtractString(eventJson, 'item_name') = 'Coupons') OR 
    (eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'CouponListActivateCoupon' AND  JSONExtractString(eventJson, 'item_name') = 'Club') AS couponActivationSessions,
    eventName = 'select_content' AND  JSONExtractString(eventJson, 'item_category') = 'TakePartButton' AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link,
    JSONExtractString(eventJson, 'item_category') AS __itemCategory, 
    JSONExtractString(eventJson, 'item_name') AS __itemName,
    row_number() over() AS __rn,
    eventName AS __eventName, 
    sessionId AS __sessionId
FROM union_events
WHERE addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 OR registrationButtonClick > 0
  OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
  OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
  OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 
  OR couponActivationSessions > 0 OR participationInLotterySessions > 0 or screenView > 0
ORDER BY __date
)
, min_event AS (
SELECT MIN(__rn) AS __rn 
FROM join_appmetrica_events_prepare
GROUP BY appmetricaDeviceId, __sessionId, __eventName, __itemCategory, __itemName
), join_appmetrica_events_events AS (
SELECT * EXCEPT(__itemCategory, __itemName, __rn, __eventName, __sessionId)
FROM join_appmetrica_events_prepare
WHERE __rn IN (SELECT __rn FROM min_event) AND  
    (addToCartSessions > 0 OR cartViewSessions > 0 OR checkoutSessions > 0 
    OR webSalesSessions > 0  OR sales > 0 OR amountSales > 0 
    OR registrationCardSessions > 0 OR linkingCardToPhoneNumberSessions > 0 
    OR registrationCashbackSessions > 0 OR instantDiscountActivationSessions > 0 OR registrationButtonClick > 0
    OR couponActivationSessions > 0 OR participationInLotterySessions > 0)
), join_appmetrica_events_install AS (
SELECT
    toDateTime(__date) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(install_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    assumeNotNull(COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id, '')) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    if(match(click_url_parameters, 'organic'), 'Органическая установка', assumeNotNull(coalesce(lower(if(length(utmSource) > 0, concat(utmSource, ' / ', utmMedium), null)), publisher_name, ''))) AS adSourceDirty,
    extract(click_url_parameters, 'utm_source=([^&]*)') AS utmSource,
    extract(click_url_parameters, 'utm_medium=([^&]*)') AS utmMedium,
    extract(click_url_parameters, 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(click_url_parameters, 'utm_term=([^&]*)') AS utmTerm,
    extract(click_url_parameters, 'utm_content=([^&]*)') AS utmContent,
    '' AS transactionId,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    is_reinstallation = 'false' AS installApp,
    1 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppInstallStat') AS __link
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_install' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("click_datetime" as String) as "click_datetime" ,
                    cast("click_url_parameters" as String) as "click_url_parameters" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("install_datetime" as String) as "install_datetime" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("is_reinstallation" as String) as "is_reinstallation" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("publisher_name" as String) as "publisher_name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_install

            
        )

        )
), join_appmetrica_events_screen_view AS (
SELECT
    toDateTime(date_add(hour, 23, date_add(minute, 59, toDateTime(__date)))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(event_datetime) AS event_datetime, 
    accountName,
    appmetricaDeviceId,
    mobileAdsId,
    crmUserId, 
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    osName,
    cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS utmHash,
    0 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,    
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    screen_view AS screenView,
    0 AS installApp,
    0 AS installs,
    '' AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppEventStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_screen_view' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("event_datetime" as DateTime) as "event_datetime" ,
                    cast("mobileAdsId" as String) as "mobileAdsId" ,
                    cast("accountName" as String) as "accountName" ,
                    cast("appmetricaDeviceId" as String) as "appmetricaDeviceId" ,
                    cast("cityName" as String) as "cityName" ,
                    cast("osName" as String) as "osName" ,
                    cast("crmUserId" as String) as "crmUserId" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("session_id" as String) as "session_id" ,
                    cast("screen_view" as UInt64) as "screen_view" 

            from test.incremental_appmetrica_events_default_screen_view

            
        )

        )
), join_appmetrica_events_sessions_starts AS (
SELECT
    toDateTime(date_add(minute, 1, toDateTime(__date))) AS __date, 
    toLowCardinality(__table_name) AS __table_name,
    toDateTime(session_start_datetime) AS event_datetime, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    appmetrica_device_id AS appmetricaDeviceId,
    COALESCE(nullIf(google_aid, ''), nullIf(ios_ifa, ''), appmetrica_device_id) AS mobileAdsId,
    profile_id AS crmUserId,
    --'' AS visitId,
    --'' AS clientId,
    '' AS promoCode,
    os_name AS osName,
    city AS cityName,
    '' AS adSourceDirty,
    '' AS utmSource,
    '' AS utmMedium,
    '' AS utmCampaign,
    '' AS utmTerm,
    '' AS utmContent,
    '' AS transactionId,
    '' AS UtmHash,
    1 AS sessions,
    0 AS addToCartSessions,
    0 AS cartViewSessions,
    0 AS checkoutSessions,
    0 AS webSalesSessions,
    0 AS sales,
    0 AS amountSales,
    0 AS registrationCardSessions,
    0 AS registrationButtonClick,
    0 AS linkingCardToPhoneNumberSessions,
    0 AS registrationLendingPromotionsSessions,
    0 AS registrationCashbackSessions,
    0 AS instantDiscountActivationSessions,
    0 AS couponActivationSessions,
    0 AS participationInLotterySessions,
    0 AS pagesViews,
    0 AS screenView,
    0 AS installApp,
    0 AS installs,
    CONCAT(installation_id, appmetrica_device_id) AS installationDeviceId,
    __emitted_at,
    toLowCardinality('AppSessionStat') AS __link 
FROM (
    

        (
            select
                cast('test.incremental_appmetrica_events_default_sessions_starts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("appmetrica_device_id" as String) as "appmetrica_device_id" ,
                    cast("city" as String) as "city" ,
                    cast("google_aid" as String) as "google_aid" ,
                    cast("installation_id" as String) as "installation_id" ,
                    cast("ios_ifa" as String) as "ios_ifa" ,
                    cast("os_name" as String) as "os_name" ,
                    cast("profile_id" as String) as "profile_id" ,
                    cast("session_start_datetime" as String) as "session_start_datetime" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_appmetrica_events_default_sessions_starts

            
        )

        )
)SELECT * 
FROM join_appmetrica_events_deeplinks
UNION ALL
SELECT * 
FROM join_appmetrica_events_events
UNION ALL
SELECT * 
FROM join_appmetrica_events_install
UNION ALL
SELECT * 
FROM join_appmetrica_events_screen_view
UNION ALL
SELECT * 
FROM join_appmetrica_events_sessions_starts





  
    ...
[0m09:23:45.068286 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m09:23:45.071391 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.076645 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.078815 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_mt_datestat"
[0m09:23:45.079591 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

        
  
    
    
        
        insert into test.join_mt_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_mt_datestat_default_banners_statistics
-- depends_on: test.incremental_mt_datestat_default_banners
-- depends_on: test.incremental_mt_datestat_default_campaigns
WITH banners_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("banner_id" as String) as "banner_id" ,
                    cast("base" as String) as "base" ,
                    cast("date" as String) as "date" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners_statistics

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-22' AND '2024-02-23'),

banners AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_banners' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("campaign_id" as String) as "campaign_id" ,
                    cast("id" as String) as "id" ,
                    cast("textblocks" as String) as "textblocks" ,
                    cast("urls" as String) as "urls" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_banners

            
        )

        )
),

campaigns AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_mt_datestat_default_campaigns' as String) as _dbt_source_relation,

                
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("id" as String) as "id" ,
                    cast("name" as String) as "name" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_mt_datestat_default_campaigns

            
        )

        )
)

SELECT 
    toDate(banners_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,  
    toLowCardinality(splitByChar('_', banners_statistics.__table_name)[6]) AS accountName,
    toLowCardinality(banners_statistics.__table_name) AS __table_name,
    'MyTarget' AS adSourceDirty,
    --'' AS productName,
    campaigns.name AS adCampaignName,
    --'' AS adGroupName,
    banners.id AS adId,
    --'' AS adPhraseId,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_source=([^&]*)') AS utmSource,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_medium=([^&]*)') AS utmMedium,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_campaign=([^&]*)') AS utmCampaign,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_term=([^&]*)') AS utmTerm,
    extract(JSON_VALUE(replaceAll(banners.urls, '''', '"'), '$.primary.url'), 'utm_content=([^&]*)') AS utmContent,
    greatest(coalesce(extract(utmContent, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(utmCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(adCampaignName, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.title_25.text') AS adTitle1,
    --'' AS adTitle2,
    assumeNotNull(coalesce(nullif(JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_90.text'), ''),
    JSON_VALUE(replaceAll(banners.textblocks, '''', '"'), '$.text_220.text'), '')) AS adText,
    --'' AS adPhraseName,
    toFloat64(JSONExtractString(banners_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(banners_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(banners_statistics.base, 'clicks')) AS clicks,
    banners_statistics.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM banners_statistics
JOIN banners ON banners_statistics.banner_id = banners.id 
JOIN campaigns ON banners.campaign_id = campaigns.id






  
    ...
[0m09:23:45.120938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:45.124393 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    drop table if exists test.join_mt_datestat__dbt_backup 
  
  ...
[0m09:23:45.128462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.129605 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */

    rename table test.join_mt_datestat__dbt_tmp to test.join_mt_datestat__dbt_backup 
  
  ...
[0m09:23:45.134123 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.135502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
EXCHANGE TABLES test.join_mt_datestat__dbt_backup AND test.join_mt_datestat 
  
  ...
[0m09:23:45.139874 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.144381 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_mt_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_mt_datestat"} */
drop table if exists test.join_mt_datestat__dbt_backup 
  ...
[0m09:23:45.149406 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.150843 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_mt_datestat (execute): 2024-05-07 09:23:45.009846 => 2024-05-07 09:23:45.150777
[0m09:23:45.151432 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a68fd0>]}
[0m09:23:45.151809 [info ] [Thread-2 (]: 41 of 89 OK created sql incremental model test.join_mt_datestat ................ [[32mOK[0m in 0.27s]
[0m09:23:45.152148 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_mt_datestat
[0m09:23:45.152432 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m09:23:45.152770 [info ] [Thread-2 (]: 42 of 89 START sql table model test.join_utmcraft_registry_utmhashregistry ..... [RUN]
[0m09:23:45.153850 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry'
[0m09:23:45.154131 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry)
[0m09:23:45.154349 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m09:23:45.158301 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_utmcraft__%'
    GROUP BY table

...
[0m09:23:45.168653 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.174192 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_utmcraft_registry_[^_]+_utmresult$')        
...
[0m09:23:45.180781 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.184743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'incremental_utmcraft_registry_default_utmresult'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.191920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.194537 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m09:23:45.195169 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (compile): 2024-05-07 09:23:45.154456 => 2024-05-07 09:23:45.195052
[0m09:23:45.195457 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m09:23:45.201460 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

            

    
        create table test.join_utmcraft_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )





    )
        ...
[0m09:23:45.227455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.230395 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.235337 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.237930 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"
[0m09:23:45.238689 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */

  
    
    
        
        insert into test.join_utmcraft_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_utmcraft_registry_default_utmresult
SELECT
    utm_hashcode AS utmHash,
    JSONExtractString(data, '4') AS utm_base_url,
    JSONExtractString(data, '5') AS utm_utmSource,
    if(JSONExtractString(data, '6') = 'указать вручную', JSONExtractString(data, '95'), JSONExtractString(data, '6')) AS utm_utmMedium,
    JSONExtractString(data, '9') AS utm_utmCampaign,
    JSONExtractString(data, '97') AS utm_project,
    if(JSONExtractString(data, '7') = 'custom-value-input-field',JSONExtractString(data, 'custom-7'),JSONExtractString(data, '7')) AS utm_utmContent,
    JSONExtractString(data, '66') AS utm_strategy,
    concat(if(JSONExtractString(data, '69') = 'custom-value-input-field',JSONExtractString(data, 'custom-69'),JSONExtractString(data, '69')),
            if(JSONExtractString(data, '69') != '' or JSONExtractString(data, 'custom-69') != '', ';', ''),
           if(JSONExtractString(data, '88') = 'custom-value-input-field',JSONExtractString(data, 'custom-88'),JSONExtractString(data, '88')),
           if(JSONExtractString(data, '88') != '' or JSONExtractString(data, 'custom-88') != '', ';', ''),
           if(JSONExtractString(data, '87') = 'custom-value-input-field',JSONExtractString(data, 'custom-87'),JSONExtractString(data, '87')),
           if(JSONExtractString(data, '87') != '' or JSONExtractString(data, 'custom-87') != '', ';', ''),
           if(JSONExtractString(data, '89') = 'custom-value-input-field',JSONExtractString(data, 'custom-89'),JSONExtractString(data, '89')),
           if(JSONExtractString(data, '89') != '' or JSONExtractString(data, 'custom-89') != '', ';', ''),
           if(JSONExtractString(data, '90') = 'custom-value-input-field',JSONExtractString(data, 'custom-90'),JSONExtractString(data, '90')),
           if(JSONExtractString(data, '90') != '' or JSONExtractString(data, 'custom-90') != '', ';', ''),
           if(JSONExtractString(data, '91') = 'custom-value-input-field',JSONExtractString(data, 'custom-91'),JSONExtractString(data, '91')),
           if(JSONExtractString(data, '91') != '' or JSONExtractString(data, 'custom-91') != '', ';', ''),
           if(JSONExtractString(data, '93') = 'custom-value-input-field',JSONExtractString(data, 'custom-93'),JSONExtractString(data, '93')),
           if(JSONExtractString(data, '93') != '' or JSONExtractString(data, 'custom-93') != '', ';', ''),
           if(JSONExtractString(data, '85') = 'custom-value-input-field',JSONExtractString(data, 'custom-85'),JSONExtractString(data, '85')),
           if(JSONExtractString(data, '85') != '' or JSONExtractString(data, 'custom-85') != '', ';', ''),
           if(JSONExtractString(data, '92') = 'custom-value-input-field',JSONExtractString(data, 'custom-92'),JSONExtractString(data, '92')),
           if(JSONExtractString(data, '92') != '' or JSONExtractString(data, 'custom-92') != '', ';', ''),
           if(JSONExtractString(data, '86') = 'custom-value-input-field',JSONExtractString(data, 'custom-86'),JSONExtractString(data, '86'))) AS utm_audience,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name,
    'UtmHashRegistry' AS __link         
FROM (
    

        (
            select
                cast('test.incremental_utmcraft_registry_default_utmresult' as String) as _dbt_source_relation,

                
                    cast("created_at" as String) as "created_at" ,
                    cast("created_by_id" as String) as "created_by_id" ,
                    cast("data" as String) as "data" ,
                    cast("form_id" as String) as "form_id" ,
                    cast("id" as String) as "id" ,
                    cast("updated_at" as String) as "updated_at" ,
                    cast("updated_by_id" as String) as "updated_by_id" ,
                    cast("utm_hashcode" as String) as "utm_hashcode" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_utmcraft_registry_default_utmresult

            
        )

        )





  ...
[0m09:23:45.253672 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.255046 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
EXCHANGE TABLES test.join_utmcraft_registry_utmhashregistry__dbt_backup AND test.join_utmcraft_registry_utmhashregistry 
  
  ...
[0m09:23:45.259342 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.264100 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry"} */
drop table if exists test.join_utmcraft_registry_utmhashregistry__dbt_backup 
  ...
[0m09:23:45.268465 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.270692 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry (execute): 2024-05-07 09:23:45.195575 => 2024-05-07 09:23:45.270589
[0m09:23:45.271642 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44930ee0>]}
[0m09:23:45.272347 [info ] [Thread-2 (]: 42 of 89 OK created sql table model test.join_utmcraft_registry_utmhashregistry  [[32mOK[0m in 0.12s]
[0m09:23:45.272894 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_utmcraft_registry_utmhashregistry
[0m09:23:45.273254 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m09:23:45.274345 [info ] [Thread-2 (]: 43 of 89 START sql incremental model test.join_sheets_periodstat ............... [RUN]
[0m09:23:45.275325 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_sheets_periodstat'
[0m09:23:45.275588 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_sheets_periodstat)
[0m09:23:45.275759 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_sheets_periodstat
[0m09:23:45.279689 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_sheets__%'
    GROUP BY table

...
[0m09:23:45.289353 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.291244 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_sheets__%' AND 
        name='__date'

  ...
[0m09:23:45.295350 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.26 seconds
[0m09:23:45.299495 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    drop table if exists test.join_appmetrica_events__dbt_backup 
  
  ...
[0m09:23:45.300389 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.302635 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_sheets_periodstat_default_planCosts' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_sheets_periodstat_default_planCosts
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m09:23:45.305791 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.307141 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */

    rename table test.join_appmetrica_events__dbt_tmp to test.join_appmetrica_events__dbt_backup 
  
  ...
[0m09:23:45.312266 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.314370 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
EXCHANGE TABLES test.join_appmetrica_events__dbt_backup AND test.join_appmetrica_events 
  
  ...
[0m09:23:45.319838 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.327088 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_appmetrica_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_appmetrica_events"} */
drop table if exists test.join_appmetrica_events__dbt_backup 
  ...
[0m09:23:45.331497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.333100 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_appmetrica_events (execute): 2024-05-07 09:23:44.879992 => 2024-05-07 09:23:45.333017
[0m09:23:45.333860 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449b9690>]}
[0m09:23:45.334435 [info ] [Thread-1 (]: 39 of 89 OK created sql incremental model test.join_appmetrica_events .......... [[32mOK[0m in 0.73s]
[0m09:23:45.334916 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_appmetrica_events
[0m09:23:45.335474 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_vkads_datestat
[0m09:23:45.336310 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.337375 [info ] [Thread-1 (]: 44 of 89 START sql incremental model test.join_vkads_datestat .................. [RUN]
[0m09:23:45.340701 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_sheets_periodstat_[^_]+_planCosts$')        
...
[0m09:23:45.341781 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_vkads_datestat'
[0m09:23:45.343172 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_vkads_datestat)
[0m09:23:45.343747 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_vkads_datestat
[0m09:23:45.351862 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_vkads__%'
    GROUP BY table

...
[0m09:23:45.352563 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.358476 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'incremental_sheets_periodstat_default_planCosts'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.362696 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.364299 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_vkads__%' AND 
        name='__date'

  ...
[0m09:23:45.365798 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.368163 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m09:23:45.368776 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (compile): 2024-05-07 09:23:45.275853 => 2024-05-07 09:23:45.368662
[0m09:23:45.369076 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_sheets_periodstat
[0m09:23:45.375429 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.377084 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

            

    
        create table test.join_sheets_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    __date,
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )




    )
        ...
[0m09:23:45.379058 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_vkads_datestat_default_ad_plans_statistics' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_vkads_datestat_default_ad_plans_statistics
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m09:23:45.398339 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.401690 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.408114 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.410098 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_sheets_periodstat"
[0m09:23:45.411362 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.413397 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans_statistics$')        
...
[0m09:23:45.414784 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

        
  
    
    
        
        insert into test.join_sheets_periodstat__dbt_tmp ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.incremental_sheets_periodstat_default_planCosts
SELECT
    __date,
    Campaign AS campaign,
    toFloat64(Cost) AS cost,
    toDate(Period_start) AS periodStart,
    toDate(Period_end) AS periodEnd,
    __emitted_at,
    toLowCardinality(__table_name) AS __table_name, 
    toLowCardinality('ManualAdCostStat') AS __link

FROM (
    

        (
            select
                cast('test.incremental_sheets_periodstat_default_planCosts' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("Campaign" as String) as "Campaign" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Period_end" as String) as "Period_end" ,
                    cast("Period_start" as String) as "Period_start" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_sheets_periodstat_default_planCosts

            
        )

        )




  
    ...
[0m09:23:45.420845 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.424946 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans_statistics'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.425565 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.432371 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    drop table if exists test.join_sheets_periodstat__dbt_backup 
  
  ...
[0m09:23:45.434943 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.438321 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_vkads_datestat_[^_]+_ad_plans$')        
...
[0m09:23:45.439036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.441883 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */

    rename table test.join_sheets_periodstat__dbt_tmp to test.join_sheets_periodstat__dbt_backup 
  
  ...
[0m09:23:45.447436 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.448609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.450556 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
EXCHANGE TABLES test.join_sheets_periodstat__dbt_backup AND test.join_sheets_periodstat 
  
  ...
[0m09:23:45.458180 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'incremental_vkads_datestat_default_ad_plans'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.464649 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.471388 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.470488 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_sheets_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_sheets_periodstat"} */
drop table if exists test.join_sheets_periodstat__dbt_backup 
  ...
[0m09:23:45.474177 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m09:23:45.476052 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (compile): 2024-05-07 09:23:45.343983 => 2024-05-07 09:23:45.475919
[0m09:23:45.476450 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_vkads_datestat
[0m09:23:45.481547 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

            

    
        create table test.join_vkads_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    --'' AS productName,
    ad_plans.name AS adCampaignName,
    --'' AS adGroupName,
    ad_plans.id AS adId,
    --'' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    --'' AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id






    )
        ...
[0m09:23:45.482372 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.485099 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_sheets_periodstat (execute): 2024-05-07 09:23:45.369231 => 2024-05-07 09:23:45.485034
[0m09:23:45.485867 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44854e80>]}
[0m09:23:45.486630 [info ] [Thread-2 (]: 43 of 89 OK created sql incremental model test.join_sheets_periodstat .......... [[32mOK[0m in 0.21s]
[0m09:23:45.487577 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_sheets_periodstat
[0m09:23:45.488100 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.join_yd_datestat
[0m09:23:45.489144 [info ] [Thread-2 (]: 45 of 89 START sql incremental model test.join_yd_datestat ..................... [RUN]
[0m09:23:45.490139 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_yd_datestat'
[0m09:23:45.490516 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_yd_datestat)
[0m09:23:45.490754 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.join_yd_datestat
[0m09:23:45.494277 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_yd__%'
    GROUP BY table

...
[0m09:23:45.503652 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.505420 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_yd__%' AND 
        name='__date'

  ...
[0m09:23:45.510400 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.511964 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_yd_datestat_default_custom_report' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_yd_datestat_default_custom_report
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m09:23:45.513739 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.518672 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.524976 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.527107 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_vkads_datestat"
[0m09:23:45.527706 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

        
  
    
    
        
        insert into test.join_vkads_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_vkads_datestat_default_ad_plans_statistics
-- depends_on: test.incremental_vkads_datestat_default_ad_plans
WITH ad_plans_statistics AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans_statistics' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("ad_offers" as String) as "ad_offers" ,
                    cast("ad_plan_id" as String) as "ad_plan_id" ,
                    cast("base" as String) as "base" ,
                    cast("carousel" as String) as "carousel" ,
                    cast("date" as String) as "date" ,
                    cast("events" as String) as "events" ,
                    cast("moat" as String) as "moat" ,
                    cast("playable" as String) as "playable" ,
                    cast("romi" as String) as "romi" ,
                    cast("social_network" as String) as "social_network" ,
                    cast("tps" as String) as "tps" ,
                    cast("uniques" as String) as "uniques" ,
                    cast("uniques_video" as String) as "uniques_video" ,
                    cast("video" as String) as "video" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans_statistics

            
        )

        ) 
WHERE toDate(__date) between '2024-02-26' and '2024-03-02'),

ad_plans AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_vkads_datestat_default_ad_plans' as String) as _dbt_source_relation,

                
                    cast("ad_groups" as String) as "ad_groups" ,
                    cast("autobidding_mode" as String) as "autobidding_mode" ,
                    cast("budget_limit" as String) as "budget_limit" ,
                    cast("budget_limit_day" as String) as "budget_limit_day" ,
                    cast("created" as String) as "created" ,
                    cast("date_end" as String) as "date_end" ,
                    cast("date_start" as String) as "date_start" ,
                    cast("id" as String) as "id" ,
                    cast("max_price" as String) as "max_price" ,
                    cast("name" as String) as "name" ,
                    cast("objective" as String) as "objective" ,
                    cast("priced_goal" as String) as "priced_goal" ,
                    cast("pricelist_id" as String) as "pricelist_id" ,
                    cast("status" as String) as "status" ,
                    cast("updated" as String) as "updated" ,
                    cast("vkads_status" as String) as "vkads_status" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_vkads_datestat_default_ad_plans

            
        )

        )
)

SELECT
    toDate(ad_plans_statistics.__date) AS __date,
    toLowCardinality('*') AS reportType,
    toLowCardinality(splitByChar('_', ad_plans.__table_name)[6]) AS accountName,
    toLowCardinality(ad_plans.__table_name) AS __table_name,
    'VK Ads' AS adSourceDirty,
    --'' AS productName,
    ad_plans.name AS adCampaignName,
    --'' AS adGroupName,
    ad_plans.id AS adId,
    --'' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    --'' AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    toFloat64(JSONExtractString(ad_plans_statistics.base, 'spent'))* 1.2 AS adCost,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'shows')) AS impressions,
    toInt32(JSONExtractString(ad_plans_statistics.base, 'clicks')) AS clicks,
    ad_plans.__emitted_at AS __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM ad_plans
JOIN ad_plans_statistics ON ad_plans.id = ad_plans_statistics.ad_plan_id






  
    ...
[0m09:23:45.537301 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.540212 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_yd_datestat_[^_]+')        
...
[0m09:23:45.547081 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.550598 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    drop table if exists test.join_vkads_datestat__dbt_backup 
  
  ...
[0m09:23:45.551369 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.557551 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'incremental_yd_datestat_default_custom_report'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.558609 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.561228 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */

    rename table test.join_vkads_datestat__dbt_tmp to test.join_vkads_datestat__dbt_backup 
  
  ...
[0m09:23:45.564804 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.565497 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.567812 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m09:23:45.569676 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
EXCHANGE TABLES test.join_vkads_datestat__dbt_backup AND test.join_vkads_datestat 
  
  ...
[0m09:23:45.572160 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (compile): 2024-05-07 09:23:45.490868 => 2024-05-07 09:23:45.571907
[0m09:23:45.572777 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.join_yd_datestat
[0m09:23:45.579095 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

            

    
        create table test.join_yd_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps





    )
        ...
[0m09:23:45.581026 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.586344 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_vkads_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_vkads_datestat"} */
drop table if exists test.join_vkads_datestat__dbt_backup 
  ...
[0m09:23:45.590510 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.591938 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_vkads_datestat (execute): 2024-05-07 09:23:45.476614 => 2024-05-07 09:23:45.591841
[0m09:23:45.592718 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46c42080>]}
[0m09:23:45.593339 [info ] [Thread-1 (]: 44 of 89 OK created sql incremental model test.join_vkads_datestat ............. [[32mOK[0m in 0.25s]
[0m09:23:45.593806 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_vkads_datestat
[0m09:23:45.594230 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.join_ym_events
[0m09:23:45.595043 [info ] [Thread-1 (]: 46 of 89 START sql incremental model test.join_ym_events ....................... [RUN]
[0m09:23:45.595838 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.join_ym_events'
[0m09:23:45.596113 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.join_ym_events)
[0m09:23:45.596283 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.join_ym_events
[0m09:23:45.599735 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    SELECT 
        table, 
        groupArray(name) AS fields
    
    FROM system.columns
    
    WHERE database = '' AND table LIKE 'incremental_ym__%'
    GROUP BY table

...
[0m09:23:45.606970 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.608423 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    
    SELECT 
        table 
    
    FROM system.columns 
    
    WHERE 
        database ='test' AND 
        table LIKE 'normalize_ym__%' AND 
        name='__date'

  ...
[0m09:23:45.609657 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.615056 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.620172 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.621890 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

SELECT max(toDate(min_date)) as date_from,
       max(toDate(max_date)) as date_to
FROM (

    SELECT 
        'normalize_ym_events_default_yandex_metrika_stream' as table_name,
        max(toDate(__date)) as max_date, 
        min(toDate(__date)) as min_date,
        True as should_full_refresh
    
    FROM test.normalize_ym_events_default_yandex_metrika_stream
    
    
    WHERE toDate(__date) > '1972-01-01'
    

)
WHERE min_date > '1972-01-01'
...
[0m09:23:45.623283 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.626208 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_yd_datestat"
[0m09:23:45.626753 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

        
  
    
    
        
        insert into test.join_yd_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adGroupName", "adId", "adPhraseId", "utmHash", "adCost", "impressions", "clicks", "__emitted_at", "__link")
  -- depends_on: test.incremental_yd_datestat_default_custom_report
WITH cmps AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_yd_datestat_default_custom_report' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("AdId" as String) as "AdId" ,
                    cast("CampaignId" as String) as "CampaignId" ,
                    cast("CampaignName" as String) as "CampaignName" ,
                    cast("CampaignType" as String) as "CampaignType" ,
                    cast("Clicks" as String) as "Clicks" ,
                    cast("Cost" as String) as "Cost" ,
                    cast("Date" as String) as "Date" ,
                    cast("Impressions" as String) as "Impressions" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_yd_datestat_default_custom_report

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-15' AND '2024-02-28')

SELECT  
    toDate(__date) AS __date,
    toLowCardinality('*') AS reportType, 
    toLowCardinality(splitByChar('_', __table_name)[6]) AS accountName,
    toLowCardinality(__table_name) AS __table_name,
    'Yandex Direct Ads' AS adSourceDirty,
    --'' AS productName,
    CampaignName AS adCampaignName,
    CampaignType AS adGroupName,
    CampaignId AS adId,
    '' AS adPhraseId,
    --'' AS utmSource,
    --'' AS utmMedium,
    --'' AS utmCampaign,
    --'' AS utmTerm,
    --'' AS utmContent,
    arrayElement(splitByChar('~', CampaignName), 2) AS utmHash,
    --'' AS adTitle1,
    --'' AS adTitle2,
    --'' AS adText,
    --'' AS adPhraseName,  
    (toFloat64(Cost)/1000000)*1.2 AS adCost,
    toInt32(Impressions) AS impressions,
    toInt32(Clicks) AS clicks,
    __emitted_at,
    toLowCardinality('AdCostStat') AS __link 
FROM cmps





  
    ...
[0m09:23:45.649746 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.653195 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    drop table if exists test.join_yd_datestat__dbt_backup 
  
  ...
[0m09:23:45.654022 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.657714 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'incremental_ym_events_[^_]+_yandex_metrika_stream$')        
...
[0m09:23:45.660462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.661836 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */

    rename table test.join_yd_datestat__dbt_tmp to test.join_yd_datestat__dbt_backup 
  
  ...
[0m09:23:45.665642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.666176 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.667417 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
EXCHANGE TABLES test.join_yd_datestat__dbt_backup AND test.join_yd_datestat 
  
  ...
[0m09:23:45.671283 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'incremental_ym_events_default_yandex_metrika_stream'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.677038 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.681148 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_yd_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_yd_datestat"} */
drop table if exists test.join_yd_datestat__dbt_backup 
  ...
[0m09:23:45.682224 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.686765 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.join_ym_events"
[0m09:23:45.688112 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (compile): 2024-05-07 09:23:45.596383 => 2024-05-07 09:23:45.687834
[0m09:23:45.688769 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.join_ym_events
[0m09:23:45.693605 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

            

    
        create table test.join_ym_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events





    )
        ...
[0m09:23:45.694982 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.696406 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.join_yd_datestat (execute): 2024-05-07 09:23:45.572992 => 2024-05-07 09:23:45.696337
[0m09:23:45.697187 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46cbea10>]}
[0m09:23:45.697652 [info ] [Thread-2 (]: 45 of 89 OK created sql incremental model test.join_yd_datestat ................ [[32mOK[0m in 0.21s]
[0m09:23:45.698038 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.join_yd_datestat
[0m09:23:45.698813 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m09:23:45.700213 [info ] [Thread-2 (]: 47 of 89 START sql table model test.combine_registry_appprofilematching ........ [RUN]
[0m09:23:45.700916 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_appprofilematching'
[0m09:23:45.701135 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_appprofilematching)
[0m09:23:45.701297 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m09:23:45.706902 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_appprofilematching')        
...
[0m09:23:45.715958 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.719619 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'join_appmetrica_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.724744 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.725546 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.728573 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    select name, type from system.columns where table = 'join_ym_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.730858 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m09:23:45.733230 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (compile): 2024-05-07 09:23:45.701395 => 2024-05-07 09:23:45.733090
[0m09:23:45.733629 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m09:23:45.738733 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

            

    
        create table test.combine_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_appprofilematching
        )

        ) 


    )
        ...
[0m09:23:45.739720 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.742791 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.join_ym_events"
[0m09:23:45.743578 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

        
  
    
    
        
        insert into test.join_ym_events__dbt_tmp ("__date", "__table_name", "visitId", "clientId", "promoCode", "osName", "cityName", "cityCode", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "registrationCardSessions", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "couponActivationSessions", "participationInLotterySessions", "pageViews", "__emitted_at", "__link")
  -- depends_on: test.incremental_ym_events_default_yandex_metrika_stream
WITH events AS (
SELECT * FROM (
    

        (
            select
                cast('test.incremental_ym_events_default_yandex_metrika_stream' as String) as _dbt_source_relation,

                
                    cast("__date" as Date) as "__date" ,
                    cast("__clientName" as String) as "__clientName" ,
                    cast("__productName" as String) as "__productName" ,
                    cast("ymsclientID" as String) as "ymsclientID" ,
                    cast("ymsdateTime" as String) as "ymsdateTime" ,
                    cast("ymsgoalsID" as String) as "ymsgoalsID" ,
                    cast("ymsgoalsOrder" as String) as "ymsgoalsOrder" ,
                    cast("ymslastAdvEngine" as String) as "ymslastAdvEngine" ,
                    cast("ymslastReferalSource" as String) as "ymslastReferalSource" ,
                    cast("ymslastSearchEngine" as String) as "ymslastSearchEngine" ,
                    cast("ymslastTrafficSource" as String) as "ymslastTrafficSource" ,
                    cast("ymspageViews" as String) as "ymspageViews" ,
                    cast("ymsparsedParamsKey1" as String) as "ymsparsedParamsKey1" ,
                    cast("ymsparsedParamsKey2" as String) as "ymsparsedParamsKey2" ,
                    cast("ymspurchaseCoupon" as String) as "ymspurchaseCoupon" ,
                    cast("ymspurchaseID" as String) as "ymspurchaseID" ,
                    cast("ymspurchaseRevenue" as String) as "ymspurchaseRevenue" ,
                    cast("ymsregionCity" as String) as "ymsregionCity" ,
                    cast("ymsUTMCampaign" as String) as "ymsUTMCampaign" ,
                    cast("ymsUTMContent" as String) as "ymsUTMContent" ,
                    cast("ymsUTMMedium" as String) as "ymsUTMMedium" ,
                    cast("ymsUTMSource" as String) as "ymsUTMSource" ,
                    cast("ymsUTMTerm" as String) as "ymsUTMTerm" ,
                    cast("ymsvisitID" as String) as "ymsvisitID" ,
                    cast("__table_name" as String) as "__table_name" ,
                    cast("__emitted_at" as DateTime) as "__emitted_at" ,
                    cast("__normalized_at" as DateTime) as "__normalized_at" 

            from test.incremental_ym_events_default_yandex_metrika_stream

            
        )

        ) 
WHERE toDate(__date) BETWEEN '2024-02-16' AND '2024-02-29')

SELECT  
    __date, 
    __table_name,  
    ymsvisitID As visitId,
    ymsclientID AS clientId,
    extract(ymspurchaseCoupon, '\'([^\'\[\],]+)') AS promoCode,   
    'web' AS osName,
    ymsregionCity AS cityName,
    lower(ymsregionCity) AS cityCode,
    assumeNotNull(coalesce(lower(if(length(ymsUTMSource) > 0, concat(ymsUTMSource, ' / ', ymsUTMMedium), null)), 
    multiIf(ymslastTrafficSource = 'ad', lower(if(length(ymslastAdvEngine) > 0, concat(ymslastAdvEngine, ' / ', ymslastTrafficSource), null)),  
    ymslastTrafficSource = 'organic', lower(if(length(ymslastSearchEngine) > 0, concat(ymslastSearchEngine, ' / ', ymslastTrafficSource), null)),  
    lower(if(length(ymslastReferalSource) > 0, concat(ymslastReferalSource, ' / ', ymslastTrafficSource), null))), '')) AS adSourceDirty, 
    ymsUTMSource AS utmSource,
    ymsUTMMedium AS utmMedium,
    ymsUTMCampaign AS utmCampaign,
    ymsUTMTerm AS utmTerm,
    ymsUTMContent AS utmContent,
    ymspurchaseID AS transactionId,
    greatest(coalesce(extract(ymsUTMCampaign, '__([a-zA-Z0-9]{8})'), ''), coalesce(extract(ymsUTMContent, '__([a-zA-Z0-9]{8})'), '')) AS utmHash,
    1 AS sessions,
    if(countSubstrings(ymsgoalsID, '131126368')>0,1,0) AS addToCartSessions, 
    if(countSubstrings(ymsgoalsID, '229829884')>0,1,0) AS cartViewSessions, 
    if(countSubstrings(ymsgoalsID, '131126557')>0,1,0) AS checkoutSessions, 
    if(countSubstrings(ymsgoalsID, '131127241')>0,1,0) AS webSalesSessions, 
    countSubstrings(ymsgoalsID, '131127241') AS sales, 
    --0.0 AS amountSales,
    if(countSubstrings(ymsgoalsID, '199402504')>0,1,0) AS registrationCardSessions,
    if(countSubstrings(ymsgoalsID, '199402597')>0,1,0) AS linkingCardToPhoneNumberSessions, 
    if(countSubstrings(ymsgoalsID, '226410025')>0,1,0) AS registrationLendingPromotionsSessions, 
    if(countSubstrings(ymsgoalsID, '232977064')>0,1,0) AS registrationCashbackSessions, 
    if(countSubstrings(ymsgoalsID, '232977580')>0,1,0) AS couponActivationSessions, 
    if(countSubstrings(ymsgoalsID, '232977647')>0,1,0) AS participationInLotterySessions,
    toUInt32(ymspageViews) AS pageViews,
    __emitted_at,
    toLowCardinality('VisitStat') AS __link 

FROM events





  
    ...
[0m09:23:45.758616 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.762496 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.767590 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.769303 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_appprofilematching"
[0m09:23:45.770925 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */

  
    
    
        
        insert into test.combine_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_appmetrica_registry_appprofilematching
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_appmetrica_registry_appprofilematching
        )

        ) 


  ...
[0m09:23:45.778354 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:45.781475 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    drop table if exists test.join_ym_events__dbt_backup 
  
  ...
[0m09:23:45.782302 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.785772 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
EXCHANGE TABLES test.combine_registry_appprofilematching__dbt_backup AND test.combine_registry_appprofilematching 
  
  ...
[0m09:23:45.788932 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.790480 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */

    rename table test.join_ym_events__dbt_tmp to test.join_ym_events__dbt_backup 
  
  ...
[0m09:23:45.791867 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.798057 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_appprofilematching"} */
drop table if exists test.combine_registry_appprofilematching__dbt_backup 
  ...
[0m09:23:45.798653 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.800557 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
EXCHANGE TABLES test.join_ym_events__dbt_backup AND test.join_ym_events 
  
  ...
[0m09:23:45.802875 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.804846 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_appprofilematching (execute): 2024-05-07 09:23:45.733846 => 2024-05-07 09:23:45.804770
[0m09:23:45.805732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.806885 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b3cbb0>]}
[0m09:23:45.811025 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.join_ym_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.join_ym_events"} */
drop table if exists test.join_ym_events__dbt_backup 
  ...
[0m09:23:45.811920 [info ] [Thread-2 (]: 47 of 89 OK created sql table model test.combine_registry_appprofilematching ... [[32mOK[0m in 0.11s]
[0m09:23:45.813537 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_appprofilematching
[0m09:23:45.814032 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m09:23:45.815506 [info ] [Thread-2 (]: 48 of 89 START sql table model test.combine_registry_utmhashregistry ........... [RUN]
[0m09:23:45.816371 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_registry_utmhashregistry'
[0m09:23:45.817091 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.817406 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_registry_utmhashregistry)
[0m09:23:45.818744 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.join_ym_events (execute): 2024-05-07 09:23:45.688875 => 2024-05-07 09:23:45.818681
[0m09:23:45.819248 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m09:23:45.820302 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b6e440>]}
[0m09:23:45.824225 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_registry_utmhashregistry')        
...
[0m09:23:45.825178 [info ] [Thread-1 (]: 46 of 89 OK created sql incremental model test.join_ym_events .................. [[32mOK[0m in 0.22s]
[0m09:23:45.827346 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.join_ym_events
[0m09:23:45.828389 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_periodstat
[0m09:23:45.828880 [info ] [Thread-1 (]: 49 of 89 START sql incremental model test.combine_periodstat ................... [RUN]
[0m09:23:45.830285 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_periodstat'
[0m09:23:45.831059 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_periodstat)
[0m09:23:45.831423 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_periodstat
[0m09:23:45.835247 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_periodstat')        
...
[0m09:23:45.836203 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.842322 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'join_utmcraft_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.848233 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.849037 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.852858 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'join_sheets_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.855763 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m09:23:45.858328 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (compile): 2024-05-07 09:23:45.820667 => 2024-05-07 09:23:45.858098
[0m09:23:45.858816 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m09:23:45.865381 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

            

    
        create table test.combine_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_utmcraft_registry_utmhashregistry
        )

        ) 


    )
        ...
[0m09:23:45.866371 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.869367 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_periodstat"
[0m09:23:45.870599 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (compile): 2024-05-07 09:23:45.831575 => 2024-05-07 09:23:45.870424
[0m09:23:45.871089 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_periodstat
[0m09:23:45.877993 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

            

    
        create table test.combine_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_sheets_periodstat
        )

        ) 


    )
        ...
[0m09:23:45.888314 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.892722 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.895310 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:45.898326 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:45.899041 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.902016 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_registry_utmhashregistry"
[0m09:23:45.902931 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */

  
    
    
        
        insert into test.combine_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_utmcraft_registry_utmhashregistry
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_utmcraft_registry_utmhashregistry
        )

        ) 


  ...
[0m09:23:45.905129 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.906621 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_periodstat"
[0m09:23:45.907159 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

        
  
    
    
        
        insert into test.combine_periodstat__dbt_tmp ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link")
  -- depends_on: test.join_sheets_periodstat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.join_sheets_periodstat
        )

        ) 


  
    ...
[0m09:23:45.913316 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.914362 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.915576 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
EXCHANGE TABLES test.combine_registry_utmhashregistry__dbt_backup AND test.combine_registry_utmhashregistry 
  
  ...
[0m09:23:45.919263 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    drop table if exists test.combine_periodstat__dbt_backup 
  
  ...
[0m09:23:45.924331 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.925508 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */

    rename table test.combine_periodstat__dbt_tmp to test.combine_periodstat__dbt_backup 
  
  ...
[0m09:23:45.926193 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.932541 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_registry_utmhashregistry"} */
drop table if exists test.combine_registry_utmhashregistry__dbt_backup 
  ...
[0m09:23:45.933426 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.935849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
EXCHANGE TABLES test.combine_periodstat__dbt_backup AND test.combine_periodstat 
  
  ...
[0m09:23:45.937989 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:45.939534 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_registry_utmhashregistry (execute): 2024-05-07 09:23:45.858976 => 2024-05-07 09:23:45.939458
[0m09:23:45.940369 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a5f430>]}
[0m09:23:45.940954 [info ] [Thread-2 (]: 48 of 89 OK created sql table model test.combine_registry_utmhashregistry ...... [[32mOK[0m in 0.12s]
[0m09:23:45.941355 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_registry_utmhashregistry
[0m09:23:45.941686 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.combine_datestat
[0m09:23:45.942389 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:45.942964 [info ] [Thread-2 (]: 50 of 89 START sql incremental model test.combine_datestat ..................... [RUN]
[0m09:23:46.038137 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_periodstat"} */
drop table if exists test.combine_periodstat__dbt_backup 
  ...
[0m09:23:46.039343 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_datestat'
[0m09:23:46.040594 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_datestat)
[0m09:23:46.040920 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.combine_datestat
[0m09:23:46.044773 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_datestat')        
...
[0m09:23:46.048565 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.050449 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_periodstat (execute): 2024-05-07 09:23:45.871232 => 2024-05-07 09:23:46.050365
[0m09:23:46.051291 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44963c10>]}
[0m09:23:46.052651 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.052022 [info ] [Thread-1 (]: 49 of 89 OK created sql incremental model test.combine_periodstat .............. [[32mOK[0m in 0.22s]
[0m09:23:46.056221 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_mt_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.056885 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_periodstat
[0m09:23:46.059223 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m09:23:46.059891 [info ] [Thread-1 (]: 51 of 89 START sql table model test.hash_registry_appprofilematching ........... [RUN]
[0m09:23:46.061296 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_appprofilematching'
[0m09:23:46.061776 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_appprofilematching)
[0m09:23:46.062101 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m09:23:46.066075 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_registry_appprofilematching')        
...
[0m09:23:46.066941 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.072596 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_vkads_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.073678 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.078146 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'combine_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.080506 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.086046 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'join_yd_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.087750 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.094638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.093577 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m09:23:46.098725 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_datestat"
[0m09:23:46.099897 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (compile): 2024-05-07 09:23:46.041179 => 2024-05-07 09:23:46.099745
[0m09:23:46.100400 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.combine_datestat
[0m09:23:46.105439 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

            

    
        create table test.combine_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adGroupName ,
                            toString('') as adPhraseId 

            from test.join_mt_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adGroupName ,
                            toString('') as adPhraseId 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adGroupName") as adGroupName ,
                            toString("adPhraseId") as adPhraseId 

            from test.join_yd_datestat
        )

        ) 


    )
        ...
[0m09:23:46.106996 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (compile): 2024-05-07 09:23:46.062267 => 2024-05-07 09:23:46.106790
[0m09:23:46.107826 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m09:23:46.113237 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

            

    
        create table test.hash_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_appprofilematching
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m09:23:46.133188 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:46.136692 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    select name, type from system.columns where table = 'combine_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.141179 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:46.141938 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.145378 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.147475 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_datestat"
[0m09:23:46.149572 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

        
  
    
    
        
        insert into test.combine_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId")
  -- depends_on: test.join_mt_datestat
-- depends_on: test.join_vkads_datestat
-- depends_on: test.join_yd_datestat
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adGroupName ,
                            toString('') as adPhraseId 

            from test.join_mt_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString('') as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as adGroupName ,
                            toString('') as adPhraseId 

            from test.join_vkads_datestat
        )

        union all
        

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString('') as utmSource ,
                            toString('') as utmMedium ,
                            toString('') as utmCampaign ,
                            toString('') as utmTerm ,
                            toString('') as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString('') as adTitle1 ,
                            toString('') as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adGroupName") as adGroupName ,
                            toString("adPhraseId") as adPhraseId 

            from test.join_yd_datestat
        )

        ) 


  
    ...
[0m09:23:46.153747 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.155427 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_appprofilematching"
[0m09:23:46.157098 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */

  
    
    
        
        insert into test.hash_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_appprofilematching
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppProfileMatching' 
    THEN AppProfileMatchingHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('AppProfileMatching' || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as AppProfileMatchingHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash


    
FROM (

        (
            select
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("crmUserId") as crmUserId ,
                            toString("cityName") as cityName ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_appprofilematching
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m09:23:46.176732 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.178083 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
EXCHANGE TABLES test.hash_registry_appprofilematching__dbt_backup AND test.hash_registry_appprofilematching 
  
  ...
[0m09:23:46.183027 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.187700 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_appprofilematching"} */
drop table if exists test.hash_registry_appprofilematching__dbt_backup 
  ...
[0m09:23:46.189071 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:46.192165 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    drop table if exists test.combine_datestat__dbt_backup 
  
  ...
[0m09:23:46.196346 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.197707 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.hash_registry_appprofilematching (execute): 2024-05-07 09:23:46.108358 => 2024-05-07 09:23:46.197647
[0m09:23:46.198432 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.199776 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44bb19f0>]}
[0m09:23:46.200994 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */

    rename table test.combine_datestat__dbt_tmp to test.combine_datestat__dbt_backup 
  
  ...
[0m09:23:46.201651 [info ] [Thread-1 (]: 51 of 89 OK created sql table model test.hash_registry_appprofilematching ...... [[32mOK[0m in 0.14s]
[0m09:23:46.203143 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.hash_registry_appprofilematching
[0m09:23:46.203600 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.combine_events
[0m09:23:46.203967 [info ] [Thread-1 (]: 52 of 89 START sql incremental model test.combine_events ....................... [RUN]
[0m09:23:46.205302 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.combine_events'
[0m09:23:46.206091 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.206726 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.combine_events)
[0m09:23:46.207985 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
EXCHANGE TABLES test.combine_datestat__dbt_backup AND test.combine_datestat 
  
  ...
[0m09:23:46.208356 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.combine_events
[0m09:23:46.214254 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'join_[^_]+_events')        
...
[0m09:23:46.215119 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.221495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_datestat"} */
drop table if exists test.combine_datestat__dbt_backup 
  ...
[0m09:23:46.222437 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.227606 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_appmetrica_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.228290 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.231225 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.combine_datestat (execute): 2024-05-07 09:23:46.100635 => 2024-05-07 09:23:46.231157
[0m09:23:46.232046 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448ba290>]}
[0m09:23:46.232924 [info ] [Thread-2 (]: 50 of 89 OK created sql incremental model test.combine_datestat ................ [[32mOK[0m in 0.19s]
[0m09:23:46.233385 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.combine_datestat
[0m09:23:46.233696 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m09:23:46.234397 [info ] [Thread-2 (]: 53 of 89 START sql table model test.hash_registry_utmhashregistry .............. [RUN]
[0m09:23:46.236208 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_registry_utmhashregistry'
[0m09:23:46.236674 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_registry_utmhashregistry)
[0m09:23:46.237337 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.237780 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m09:23:46.244200 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'join_ym_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.248153 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_registry_utmhashregistry')        
...
[0m09:23:46.254386 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.259441 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.combine_events"
[0m09:23:46.260696 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.264848 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'combine_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.266180 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (compile): 2024-05-07 09:23:46.209910 => 2024-05-07 09:23:46.266041
[0m09:23:46.266573 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.combine_events
[0m09:23:46.272096 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

            

    
        create table test.combine_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        ) 


    )
        ...
[0m09:23:46.273055 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.281008 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m09:23:46.282283 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (compile): 2024-05-07 09:23:46.244647 => 2024-05-07 09:23:46.282088
[0m09:23:46.282773 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m09:23:46.288278 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

            

    
        create table test.hash_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as UtmHashRegistryHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_utmhashregistry
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m09:23:46.308092 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:46.310982 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    select name, type from system.columns where table = 'combine_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.311651 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.315422 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.317431 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.320533 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.combine_events"
[0m09:23:46.321251 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.323120 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_registry_utmhashregistry"
[0m09:23:46.323740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

        
  
    
    
        
        insert into test.combine_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews")
  -- depends_on: test.join_appmetrica_events
-- depends_on: test.join_ym_events
SELECT * REPLACE(toLowCardinality(__table_name) AS __table_name)
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString('') as visitId ,
                            toString('') as clientId ,
                            toString('') as cityCode ,
                            toUInt32(0) as pageViews 

            from test.join_appmetrica_events
        )

        union all
        

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime(0) as event_datetime ,
                            toString('') as accountName ,
                            toString('') as appmetricaDeviceId ,
                            toString('') as mobileAdsId ,
                            toString('') as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64(0) as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8(0) as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8(0) as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8(0) as pagesViews ,
                            toUInt64(0) as screenView ,
                            toUInt8(0) as installApp ,
                            toUInt8(0) as installs ,
                            toString('') as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.join_ym_events
        )

        ) 


  
    ...
[0m09:23:46.324172 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */

  
    
    
        
        insert into test.hash_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_registry_utmhashregistry
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'UtmHashRegistry' 
    THEN UtmHashRegistryHash 

    END) as __id
  , assumeNotNull(CASE 

WHEN __link = 'UtmHashRegistry' 
        THEN toDateTime(toDateTime(0))
    







WHEN __link = 'AppProfileMatching' 
        THEN toDateTime(toDateTime(0))
    

    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '') = '', null, hex(MD5('UtmHashRegistry' || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(toDateTime(0)))), ''), '')))))) as UtmHashRegistryHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toString("utmHash") as utmHash ,
                            toString("utm_base_url") as utm_base_url ,
                            toString("utm_utmSource") as utm_utmSource ,
                            toString("utm_utmMedium") as utm_utmMedium ,
                            toString("utm_utmCampaign") as utm_utmCampaign ,
                            toString("utm_project") as utm_project ,
                            toString("utm_utmContent") as utm_utmContent ,
                            toString("utm_strategy") as utm_strategy ,
                            toString("utm_audience") as utm_audience ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_registry_utmhashregistry
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  ...
[0m09:23:46.340776 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.342252 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
EXCHANGE TABLES test.hash_registry_utmhashregistry__dbt_backup AND test.hash_registry_utmhashregistry 
  
  ...
[0m09:23:46.347257 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.351743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_registry_utmhashregistry"} */
drop table if exists test.hash_registry_utmhashregistry__dbt_backup 
  ...
[0m09:23:46.355011 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.356361 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_registry_utmhashregistry (execute): 2024-05-07 09:23:46.282940 => 2024-05-07 09:23:46.356284
[0m09:23:46.357110 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c4482b130>]}
[0m09:23:46.357595 [info ] [Thread-2 (]: 53 of 89 OK created sql table model test.hash_registry_utmhashregistry ......... [[32mOK[0m in 0.12s]
[0m09:23:46.357991 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_registry_utmhashregistry
[0m09:23:46.358349 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_periodstat
[0m09:23:46.358881 [info ] [Thread-2 (]: 54 of 89 START sql incremental model test.hash_periodstat ...................... [RUN]
[0m09:23:46.359823 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_periodstat'
[0m09:23:46.360807 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_periodstat)
[0m09:23:46.361469 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_periodstat
[0m09:23:46.365512 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_periodstat')        
...
[0m09:23:46.372144 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.375618 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'combine_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.378291 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m09:23:46.383069 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    drop table if exists test.combine_events__dbt_backup 
  
  ...
[0m09:23:46.383942 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.390915 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.391255 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_periodstat"
[0m09:23:46.392914 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */

    rename table test.combine_events__dbt_tmp to test.combine_events__dbt_backup 
  
  ...
[0m09:23:46.394271 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (compile): 2024-05-07 09:23:46.361665 => 2024-05-07 09:23:46.394092
[0m09:23:46.394788 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_periodstat
[0m09:23:46.399724 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

            

    
        create table test.hash_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
        THEN toDateTime(__date)
    










    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as ManualAdCostStatHash
    
    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_periodstat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m09:23:46.401158 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.402740 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
EXCHANGE TABLES test.combine_events__dbt_backup AND test.combine_events 
  
  ...
[0m09:23:46.407614 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.413281 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.combine_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.combine_events"} */
drop table if exists test.combine_events__dbt_backup 
  ...
[0m09:23:46.416500 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.417863 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.combine_events (execute): 2024-05-07 09:23:46.266715 => 2024-05-07 09:23:46.417798
[0m09:23:46.418547 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44bb04f0>]}
[0m09:23:46.419624 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.419094 [info ] [Thread-1 (]: 52 of 89 OK created sql incremental model test.combine_events .................. [[32mOK[0m in 0.21s]
[0m09:23:46.423865 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.424693 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.combine_events
[0m09:23:46.426246 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m09:23:46.426750 [info ] [Thread-1 (]: 55 of 89 START sql table model test.link_registry_appprofilematching ........... [RUN]
[0m09:23:46.427937 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_appprofilematching'
[0m09:23:46.429283 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_appprofilematching)
[0m09:23:46.430106 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.430499 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m09:23:46.432280 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_periodstat"
[0m09:23:46.442174 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'hash_registry_appprofilematching'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.443887 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

        
  
    
    
        
        insert into test.hash_periodstat__dbt_tmp ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.combine_periodstat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
    THEN ManualAdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 
WHEN __link = 'ManualAdCostStat' 
        THEN toDateTime(__date)
    










    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') = '', null, hex(MD5('ManualAdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodStart))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(periodEnd))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '')))))) as ManualAdCostStatHash
    
    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("campaign") as campaign ,
                            toFloat64("cost") as cost ,
                            toDate("periodStart") as periodStart ,
                            toDate("periodEnd") as periodEnd ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__table_name") as __table_name ,
                            toString("__link") as __link 

            from test.combine_periodstat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m09:23:46.448901 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.450629 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m09:23:46.451859 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (compile): 2024-05-07 09:23:46.432667 => 2024-05-07 09:23:46.451702
[0m09:23:46.452326 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m09:23:46.459655 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

            

    
        create table test.link_registry_appprofilematching__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


    )
        ...
[0m09:23:46.462004 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.465197 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    drop table if exists test.hash_periodstat__dbt_backup 
  
  ...
[0m09:23:46.469500 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.472367 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */

    rename table test.hash_periodstat__dbt_tmp to test.hash_periodstat__dbt_backup 
  
  ...
[0m09:23:46.477016 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.478385 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
EXCHANGE TABLES test.hash_periodstat__dbt_backup AND test.hash_periodstat 
  
  ...
[0m09:23:46.479130 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.482729 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

    select name, type from system.columns where table = 'link_registry_appprofilematching__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.484704 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.490325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_periodstat"} */
drop table if exists test.hash_periodstat__dbt_backup 
  ...
[0m09:23:46.491430 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.494264 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_appprofilematching"
[0m09:23:46.495533 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */

  
    
    
        
        insert into test.link_registry_appprofilematching__dbt_backup ("appmetricaDeviceId", "crmUserId", "cityName", "__emitted_at", "__table_name", "__link", "AppProfileMatchingHash", "AppMetricaDeviceHash", "CrmUserHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_appprofilematching
SELECT appmetricaDeviceId,crmUserId,cityName,__emitted_at,__table_name,__link,AppProfileMatchingHash,AppMetricaDeviceHash,CrmUserHash,__id,__datetime 
FROM test.hash_registry_appprofilematching
GROUP BY appmetricaDeviceId, crmUserId, cityName, __emitted_at, __table_name, __link, AppProfileMatchingHash, AppMetricaDeviceHash, CrmUserHash, __id, __datetime


  ...
[0m09:23:46.497512 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.498842 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_periodstat (execute): 2024-05-07 09:23:46.395012 => 2024-05-07 09:23:46.498769
[0m09:23:46.500133 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44832590>]}
[0m09:23:46.500666 [info ] [Thread-2 (]: 54 of 89 OK created sql incremental model test.hash_periodstat ................. [[32mOK[0m in 0.14s]
[0m09:23:46.501085 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_periodstat
[0m09:23:46.501498 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_datestat
[0m09:23:46.502017 [info ] [Thread-2 (]: 56 of 89 START sql incremental model test.hash_datestat ........................ [RUN]
[0m09:23:46.503485 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_datestat'
[0m09:23:46.503965 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_datestat)
[0m09:23:46.504180 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_datestat
[0m09:23:46.511356 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_datestat')        
...
[0m09:23:46.516747 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.520138 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'combine_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.521587 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:46.524987 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
EXCHANGE TABLES test.link_registry_appprofilematching__dbt_backup AND test.link_registry_appprofilematching 
  
  ...
[0m09:23:46.528278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.533913 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_datestat"
[0m09:23:46.534456 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (compile): 2024-05-07 09:23:46.504301 => 2024-05-07 09:23:46.534375
[0m09:23:46.534744 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_datestat
[0m09:23:46.540777 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:46.541134 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

            

    
        create table test.hash_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 


WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adGroupName") as adGroupName ,
                            toString("adPhraseId") as adPhraseId 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m09:23:46.545812 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_appprofilematching: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_appprofilematching"} */
drop table if exists test.link_registry_appprofilematching__dbt_backup 
  ...
[0m09:23:46.551779 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.553506 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_appprofilematching (execute): 2024-05-07 09:23:46.452517 => 2024-05-07 09:23:46.553408
[0m09:23:46.554423 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a151b0>]}
[0m09:23:46.580998 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:46.584999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    select name, type from system.columns where table = 'hash_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:46.591731 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:46.593589 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_datestat"
[0m09:23:46.594023 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

        
  
    
    
        
        insert into test.hash_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.combine_datestat
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AdCostStat' 
    THEN AdCostStatHash 

    END) as __id
  , assumeNotNull(CASE 


WHEN __link = 'AdCostStat' 
        THEN toDateTime(__date)
    








    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(reportType))), ''), '') = '', null, hex(MD5('AdCostStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adCampaignName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adGroupName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adPhraseId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(reportType))), ''), '')))))) as AdCostStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash


    
FROM (

        (
            select
                            toDate("__date") as __date ,
                            toString("reportType") as reportType ,
                            toString("accountName") as accountName ,
                            toString("__table_name") as __table_name ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("adCampaignName") as adCampaignName ,
                            toString("adId") as adId ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("utmHash") as utmHash ,
                            toString("adTitle1") as adTitle1 ,
                            toString("adText") as adText ,
                            toFloat64("adCost") as adCost ,
                            toInt32("impressions") as impressions ,
                            toInt32("clicks") as clicks ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("adGroupName") as adGroupName ,
                            toString("adPhraseId") as adPhraseId 

            from test.combine_datestat
        )

        ) 
    WHERE 
    
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m09:23:46.620959 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:46.623796 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    drop table if exists test.hash_datestat__dbt_backup 
  
  ...
[0m09:23:46.626704 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.627781 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */

    rename table test.hash_datestat__dbt_tmp to test.hash_datestat__dbt_backup 
  
  ...
[0m09:23:46.632447 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.633639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
EXCHANGE TABLES test.hash_datestat__dbt_backup AND test.hash_datestat 
  
  ...
[0m09:23:46.638321 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.642268 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_datestat"} */
drop table if exists test.hash_datestat__dbt_backup 
  ...
[0m09:23:46.645891 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:46.647173 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_datestat (execute): 2024-05-07 09:23:46.534900 => 2024-05-07 09:23:46.647113
[0m09:23:46.647711 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44bb0c10>]}
[0m09:23:47.274427 [info ] [Thread-1 (]: 55 of 89 OK created sql table model test.link_registry_appprofilematching ...... [[32mOK[0m in 0.13s]
[0m09:23:47.276261 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_appprofilematching
[0m09:23:47.275640 [info ] [Thread-2 (]: 56 of 89 OK created sql incremental model test.hash_datestat ................... [[32mOK[0m in 0.14s]
[0m09:23:47.277183 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m09:23:47.277804 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_datestat
[0m09:23:47.278266 [info ] [Thread-1 (]: 57 of 89 START sql table model test.link_registry_utmhashregistry .............. [RUN]
[0m09:23:47.279005 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.hash_events
[0m09:23:47.280811 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_registry_utmhashregistry'
[0m09:23:47.281866 [info ] [Thread-2 (]: 58 of 89 START sql incremental model test.hash_events .......................... [RUN]
[0m09:23:47.282480 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_registry_utmhashregistry)
[0m09:23:47.283542 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.hash_events'
[0m09:23:47.284198 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m09:23:47.284775 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.hash_events)
[0m09:23:47.290648 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.hash_events
[0m09:23:47.292826 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'hash_registry_utmhashregistry'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.297061 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */


      
        select distinct
            table_schema as "table_schema",
            table_name as "table_name",
            
            case toString(table_type)
                when 'BASE TABLE' then 'table'
                when 'EXTERNAL TABLE' then 'external'
                when 'MATERIALIZED VIEW' then 'materializedview'
                else lower(toString(table_type))
            end as "table_type"

        from information_schema.tables
        where match(table_schema, 'test')
        and match(table_name, 'combine_events')        
...
[0m09:23:47.302818 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.305113 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m09:23:47.305744 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (compile): 2024-05-07 09:23:47.285143 => 2024-05-07 09:23:47.305649
[0m09:23:47.305994 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m09:23:47.312958 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

            

    
        create table test.link_registry_utmhashregistry__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime


    )
        ...
[0m09:23:47.316056 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:47.319804 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'combine_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.327340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.336519 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.hash_events"
[0m09:23:47.337591 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:47.341033 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

    select name, type from system.columns where table = 'link_registry_utmhashregistry__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.342734 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (compile): 2024-05-07 09:23:47.293291 => 2024-05-07 09:23:47.342485
[0m09:23:47.343152 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.hash_events
[0m09:23:47.347955 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

            

    
        create table test.hash_events__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE 




WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


    )
        ...
[0m09:23:47.349008 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.352018 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_registry_utmhashregistry"
[0m09:23:47.353195 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */

  
    
    
        
        insert into test.link_registry_utmhashregistry__dbt_backup ("utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "__emitted_at", "__table_name", "__link", "UtmHashRegistryHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_registry_utmhashregistry
SELECT utmHash,utm_base_url,utm_utmSource,utm_utmMedium,utm_utmCampaign,utm_project,utm_utmContent,utm_strategy,utm_audience,__emitted_at,__table_name,__link,UtmHashRegistryHash,UtmHashHash,__id,__datetime 
FROM test.hash_registry_utmhashregistry
GROUP BY utmHash, utm_base_url, utm_utmSource, utm_utmMedium, utm_utmCampaign, utm_project, utm_utmContent, utm_strategy, utm_audience, __emitted_at, __table_name, __link, UtmHashRegistryHash, UtmHashHash, __id, __datetime


  ...
[0m09:23:47.385594 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:47.386987 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
EXCHANGE TABLES test.link_registry_utmhashregistry__dbt_backup AND test.link_registry_utmhashregistry 
  
  ...
[0m09:23:47.392335 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.397998 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_registry_utmhashregistry: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_registry_utmhashregistry"} */
drop table if exists test.link_registry_utmhashregistry__dbt_backup 
  ...
[0m09:23:47.401665 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.403052 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_registry_utmhashregistry (execute): 2024-05-07 09:23:47.306111 => 2024-05-07 09:23:47.402968
[0m09:23:47.403901 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c447f6ef0>]}
[0m09:23:47.404395 [info ] [Thread-1 (]: 57 of 89 OK created sql table model test.link_registry_utmhashregistry ......... [[32mOK[0m in 0.12s]
[0m09:23:47.404827 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_registry_utmhashregistry
[0m09:23:47.405243 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_periodstat
[0m09:23:47.405890 [info ] [Thread-1 (]: 59 of 89 START sql table model test.link_periodstat ............................ [RUN]
[0m09:23:47.406652 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_periodstat'
[0m09:23:47.406921 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_periodstat)
[0m09:23:47.407102 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_periodstat
[0m09:23:47.413081 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'hash_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.416390 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m09:23:47.419339 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    select name, type from system.columns where table = 'hash_events__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.421336 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.423468 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_periodstat"
[0m09:23:47.424365 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (compile): 2024-05-07 09:23:47.407196 => 2024-05-07 09:23:47.424202
[0m09:23:47.424980 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_periodstat
[0m09:23:47.429642 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

            

    
        create table test.link_periodstat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_periodstat
SELECT __date,campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY __date, campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime


    )
        ...
[0m09:23:47.430816 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.435636 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.hash_events"
[0m09:23:47.436190 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

        
  
    
    
        
        insert into test.hash_events__dbt_tmp ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.combine_events
SELECT *,
  assumeNotNull(CASE 
WHEN __link = 'AppInstallStat' 
    THEN AppInstallStatHash 
WHEN __link = 'AppEventStat' 
    THEN AppEventStatHash 
WHEN __link = 'AppSessionStat' 
    THEN AppSessionStatHash 
WHEN __link = 'AppDeeplinkStat' 
    THEN AppDeeplinkStatHash 
WHEN __link = 'VisitStat' 
    THEN VisitStatHash 

    END) as __id
  , assumeNotNull(CASE 




WHEN __link = 'AppInstallStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppEventStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppSessionStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'AppDeeplinkStat' 
        THEN toDateTime(event_datetime)
    
WHEN __link = 'VisitStat' 
        THEN toDateTime(__date)
    


    END) as __datetime

FROM (

SELECT 
    *, 
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppInstallStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppInstallStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppEventStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(transactionId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(promoCode))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppEventStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppSessionStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(installationDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppSessionStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('AppDeeplinkStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(accountName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(mobileAdsId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(osName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(cityName))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(adSourceDirty))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmSource))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmMedium))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmCampaign))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmTerm))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmContent))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(utmHash))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as AppDeeplinkStatHash,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(__date))), ''), '') || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '') = '', null, hex(MD5('VisitStat' || ';' || ifnull(nullif(upper(trim(toString(__date))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(visitId))), ''), '') || ';' || ifnull(nullif(upper(trim(toString(event_datetime))), ''), '')))))) as VisitStatHash
    ,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(appmetricaDeviceId))), ''), '')))))) as AppMetricaDeviceHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(crmUserId))), ''), '')))))) as CrmUserHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(utmHash))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(utmHash))), ''), '')))))) as UtmHashHash

,
    
        
        assumeNotNull(coalesce(if(ifnull(nullif(upper(trim(toString(clientId))), ''), '') = '', null, hex(MD5(ifnull(nullif(upper(trim(toString(clientId))), ''), '')))))) as YmClientHash


    
FROM (

        (
            select
                            toDateTime("__date") as __date ,
                            toString("__table_name") as __table_name ,
                            toDateTime("event_datetime") as event_datetime ,
                            toString("accountName") as accountName ,
                            toString("appmetricaDeviceId") as appmetricaDeviceId ,
                            toString("mobileAdsId") as mobileAdsId ,
                            toString("crmUserId") as crmUserId ,
                            toString("promoCode") as promoCode ,
                            toString("osName") as osName ,
                            toString("cityName") as cityName ,
                            toString("adSourceDirty") as adSourceDirty ,
                            toString("utmSource") as utmSource ,
                            toString("utmMedium") as utmMedium ,
                            toString("utmCampaign") as utmCampaign ,
                            toString("utmTerm") as utmTerm ,
                            toString("utmContent") as utmContent ,
                            toString("transactionId") as transactionId ,
                            toString("utmHash") as utmHash ,
                            toUInt8("sessions") as sessions ,
                            toUInt8("addToCartSessions") as addToCartSessions ,
                            toUInt8("cartViewSessions") as cartViewSessions ,
                            toUInt8("checkoutSessions") as checkoutSessions ,
                            toUInt8("webSalesSessions") as webSalesSessions ,
                            toUInt8("sales") as sales ,
                            toFloat64("amountSales") as amountSales ,
                            toUInt8("registrationCardSessions") as registrationCardSessions ,
                            toUInt8("registrationButtonClick") as registrationButtonClick ,
                            toUInt8("linkingCardToPhoneNumberSessions") as linkingCardToPhoneNumberSessions ,
                            toUInt8("registrationLendingPromotionsSessions") as registrationLendingPromotionsSessions ,
                            toUInt8("registrationCashbackSessions") as registrationCashbackSessions ,
                            toUInt8("instantDiscountActivationSessions") as instantDiscountActivationSessions ,
                            toUInt8("couponActivationSessions") as couponActivationSessions ,
                            toUInt8("participationInLotterySessions") as participationInLotterySessions ,
                            toUInt8("pagesViews") as pagesViews ,
                            toUInt64("screenView") as screenView ,
                            toUInt8("installApp") as installApp ,
                            toUInt8("installs") as installs ,
                            toString("installationDeviceId") as installationDeviceId ,
                            toDateTime("__emitted_at") as __emitted_at ,
                            toString("__link") as __link ,
                            toString("visitId") as visitId ,
                            toString("clientId") as clientId ,
                            toString("cityCode") as cityCode ,
                            toUInt32("pageViews") as pageViews 

            from test.combine_events
        )

        ) 
    WHERE 
    
        True AND 
        True AND 
        True AND 
        True AND 
        True
    )

-- SETTINGS short_circuit_function_evaluation=force_enable


  
    ...
[0m09:23:47.447719 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:47.450838 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.455299 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.457107 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_periodstat"
[0m09:23:47.457896 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */

  
    
    
        
        insert into test.link_periodstat__dbt_backup ("__date", "campaign", "cost", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime")
  -- depends_on: test.hash_periodstat
SELECT __date,campaign,SUM(cost) AS cost,periodStart,periodEnd,__emitted_at,__table_name,__link,ManualAdCostStatHash,__id,__datetime 
FROM test.hash_periodstat
GROUP BY __date, campaign, periodStart, periodEnd, __emitted_at, __table_name, __link, ManualAdCostStatHash, __id, __datetime


  ...
[0m09:23:47.489447 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:47.491625 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
EXCHANGE TABLES test.link_periodstat__dbt_backup AND test.link_periodstat 
  
  ...
[0m09:23:47.497152 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.503030 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_periodstat"} */
drop table if exists test.link_periodstat__dbt_backup 
  ...
[0m09:23:47.505217 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m09:23:47.508152 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    drop table if exists test.hash_events__dbt_backup 
  
  ...
[0m09:23:47.508957 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.512647 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_periodstat (execute): 2024-05-07 09:23:47.425368 => 2024-05-07 09:23:47.512582
[0m09:23:47.513697 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a17190>]}
[0m09:23:47.514550 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.515058 [info ] [Thread-1 (]: 59 of 89 OK created sql table model test.link_periodstat ....................... [[32mOK[0m in 0.11s]
[0m09:23:47.517001 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */

    rename table test.hash_events__dbt_tmp to test.hash_events__dbt_backup 
  
  ...
[0m09:23:47.517616 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_periodstat
[0m09:23:47.519435 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_datestat
[0m09:23:47.520309 [info ] [Thread-1 (]: 60 of 89 START sql table model test.link_datestat .............................. [RUN]
[0m09:23:47.521855 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_datestat'
[0m09:23:47.522828 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.523171 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_datestat)
[0m09:23:47.524783 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
EXCHANGE TABLES test.hash_events__dbt_backup AND test.hash_events 
  
  ...
[0m09:23:47.525305 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_datestat
[0m09:23:47.532160 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.533169 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'hash_datestat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.537999 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.hash_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.hash_events"} */
drop table if exists test.hash_events__dbt_backup 
  ...
[0m09:23:47.542766 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.544350 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.hash_events (execute): 2024-05-07 09:23:47.343257 => 2024-05-07 09:23:47.544264
[0m09:23:47.545223 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44854d90>]}
[0m09:23:47.546132 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.547152 [info ] [Thread-2 (]: 58 of 89 OK created sql incremental model test.hash_events ..................... [[32mOK[0m in 0.26s]
[0m09:23:47.550298 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_datestat"
[0m09:23:47.550861 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.hash_events
[0m09:23:47.551687 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_periodstat
[0m09:23:47.552487 [info ] [Thread-2 (]: 61 of 89 START sql incremental model test.full_periodstat ...................... [RUN]
[0m09:23:47.554321 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (compile): 2024-05-07 09:23:47.526217 => 2024-05-07 09:23:47.554050
[0m09:23:47.555367 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_periodstat'
[0m09:23:47.555876 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_datestat
[0m09:23:47.556188 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_periodstat)
[0m09:23:47.561101 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

            

    
        create table test.link_datestat__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime


    )
        ...
[0m09:23:47.561822 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_periodstat
[0m09:23:47.665317 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.10 seconds
[0m09:23:47.673905 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

    select name, type from system.columns where table = 'link_datestat__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.674973 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m09:23:47.682285 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.684114 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m09:23:47.685904 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.688753 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_datestat"
[0m09:23:47.689718 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.691413 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m09:23:47.692880 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */

  
    
    
        
        insert into test.link_datestat__dbt_backup ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime")
  -- depends_on: test.hash_datestat
SELECT __date,reportType,accountName,__table_name,adSourceDirty,adCampaignName,adId,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,utmHash,adTitle1,adText,SUM(adCost) AS adCost,SUM(impressions) AS impressions,SUM(clicks) AS clicks,__emitted_at,__link,adGroupName,adPhraseId,AdCostStatHash,UtmHashHash,__id,__datetime 
FROM test.hash_datestat
GROUP BY __date, reportType, accountName, __table_name, adSourceDirty, adCampaignName, adId, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, utmHash, adTitle1, adText, __emitted_at, __link, adGroupName, adPhraseId, AdCostStatHash, UtmHashHash, __id, __datetime


  ...
[0m09:23:47.697749 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.699641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m09:23:47.704417 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.706196 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m09:23:47.710693 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.712286 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m09:23:47.717462 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.719325 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m09:23:47.720902 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:47.722109 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
EXCHANGE TABLES test.link_datestat__dbt_backup AND test.link_datestat 
  
  ...
[0m09:23:47.723975 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.725471 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m09:23:47.727081 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.731974 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_datestat"} */
drop table if exists test.link_datestat__dbt_backup 
  ...
[0m09:23:47.732858 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.735837 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m09:23:47.737761 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.739627 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_datestat (execute): 2024-05-07 09:23:47.556453 => 2024-05-07 09:23:47.739543
[0m09:23:47.740609 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44945e70>]}
[0m09:23:47.742501 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.741521 [info ] [Thread-1 (]: 60 of 89 OK created sql table model test.link_datestat ......................... [[32mOK[0m in 0.22s]
[0m09:23:47.744178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m09:23:47.744837 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_datestat
[0m09:23:47.746513 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.link_events
[0m09:23:47.748286 [info ] [Thread-1 (]: 62 of 89 START sql table model test.link_events ................................ [RUN]
[0m09:23:47.749882 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.link_events'
[0m09:23:47.750961 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.751395 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.link_events)
[0m09:23:47.756831 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'link_periodstat'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.757467 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.link_events
[0m09:23:47.764650 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.767720 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'hash_events'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.771095 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_periodstat"
[0m09:23:47.774113 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (compile): 2024-05-07 09:23:47.563320 => 2024-05-07 09:23:47.773871
[0m09:23:47.774816 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_periodstat
[0m09:23:47.781641 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

            

    
        create table test.full_periodstat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
__date
,
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
__date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * FROM t0
)
, t2 AS ( 
SELECT * FROM t1
) 
SELECT * FROM t2 





    )
        ...
[0m09:23:47.782853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.787171 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.link_events"
[0m09:23:47.787930 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_events (compile): 2024-05-07 09:23:47.758624 => 2024-05-07 09:23:47.787814
[0m09:23:47.788290 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.link_events
[0m09:23:47.794474 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

            

    
        create table test.link_events__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,UtmHashHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, UtmHashHash, YmClientHash, __id, __datetime


    )
        ...
[0m09:23:47.814177 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:47.818011 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    select name, type from system.columns where table = 'full_periodstat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.819263 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:47.826687 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

    select name, type from system.columns where table = 'link_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:47.829455 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.831274 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_periodstat"
[0m09:23:47.832336 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.834893 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.link_events"
[0m09:23:47.835708 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

        
  
    
    
        
        insert into test.full_periodstat__dbt_tmp ("period_date", "__date", "campaign", "periodStart", "periodEnd", "__emitted_at", "__table_name", "__link", "ManualAdCostStatHash", "__id", "__datetime", "cost_per_day")
  -- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
-- depends_on: test.link_periodstat


WITH unnest_dates AS ( 
SELECT *, 
    dateAdd(periodStart, arrayJoin(range( 0, 1 + toUInt16(date_diff('day', periodStart, periodEnd))))) AS period_date
	, COUNT(*) OVER(PARTITION BY 
__date
,
campaign
,
periodStart
,
periodEnd
,
__emitted_at
,
__table_name
,
__link
,
ManualAdCostStatHash
,
__id
,
__datetime

 
    ) AS divide_by_days 
FROM test.link_periodstat
)
, t0 AS (
SELECT period_date, 
__date, 
campaign, 
periodStart, 
periodEnd, 
__emitted_at, 
__table_name, 
__link, 
ManualAdCostStatHash, 
__id, 
__datetime, 
   
cost/divide_by_days AS cost_per_day 
   
 
FROM unnest_dates
)
, t1 AS ( 
SELECT * FROM t0
)
, t2 AS ( 
SELECT * FROM t1
) 
SELECT * FROM t2 





  
    ...
[0m09:23:47.836074 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */

  
    
    
        
        insert into test.link_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime")
  -- depends_on: test.hash_events
SELECT __date,__table_name,event_datetime,accountName,appmetricaDeviceId,mobileAdsId,crmUserId,promoCode,osName,cityName,adSourceDirty,utmSource,utmMedium,utmCampaign,utmTerm,utmContent,transactionId,utmHash,SUM(sessions) AS sessions,SUM(addToCartSessions) AS addToCartSessions,SUM(cartViewSessions) AS cartViewSessions,SUM(checkoutSessions) AS checkoutSessions,SUM(webSalesSessions) AS webSalesSessions,SUM(sales) AS sales,SUM(amountSales) AS amountSales,SUM(registrationCardSessions) AS registrationCardSessions,SUM(registrationButtonClick) AS registrationButtonClick,SUM(linkingCardToPhoneNumberSessions) AS linkingCardToPhoneNumberSessions,SUM(registrationLendingPromotionsSessions) AS registrationLendingPromotionsSessions,SUM(registrationCashbackSessions) AS registrationCashbackSessions,SUM(instantDiscountActivationSessions) AS instantDiscountActivationSessions,SUM(couponActivationSessions) AS couponActivationSessions,SUM(participationInLotterySessions) AS participationInLotterySessions,SUM(pagesViews) AS pagesViews,SUM(screenView) AS screenView,SUM(installApp) AS installApp,SUM(installs) AS installs,installationDeviceId,__emitted_at,__link,visitId,clientId,cityCode,SUM(pageViews) AS pageViews,AppInstallStatHash,AppEventStatHash,AppSessionStatHash,AppDeeplinkStatHash,VisitStatHash,AppMetricaDeviceHash,CrmUserHash,UtmHashHash,YmClientHash,__id,__datetime 
FROM test.hash_events
GROUP BY __date, __table_name, event_datetime, accountName, appmetricaDeviceId, mobileAdsId, crmUserId, promoCode, osName, cityName, adSourceDirty, utmSource, utmMedium, utmCampaign, utmTerm, utmContent, transactionId, utmHash, installationDeviceId, __emitted_at, __link, visitId, clientId, cityCode, AppInstallStatHash, AppEventStatHash, AppSessionStatHash, AppDeeplinkStatHash, VisitStatHash, AppMetricaDeviceHash, CrmUserHash, UtmHashHash, YmClientHash, __id, __datetime


  ...
[0m09:23:47.859694 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:47.864344 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    drop table if exists test.full_periodstat__dbt_backup 
  
  ...
[0m09:23:47.867787 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.869318 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */

    rename table test.full_periodstat__dbt_tmp to test.full_periodstat__dbt_backup 
  
  ...
[0m09:23:47.873204 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.874708 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
EXCHANGE TABLES test.full_periodstat__dbt_backup AND test.full_periodstat 
  
  ...
[0m09:23:47.879289 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.884578 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_periodstat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_periodstat"} */
drop table if exists test.full_periodstat__dbt_backup 
  ...
[0m09:23:47.889751 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.891352 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_periodstat (execute): 2024-05-07 09:23:47.775015 => 2024-05-07 09:23:47.891247
[0m09:23:47.892248 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448c0cd0>]}
[0m09:23:47.893053 [info ] [Thread-2 (]: 61 of 89 OK created sql incremental model test.full_periodstat ................. [[32mOK[0m in 0.34s]
[0m09:23:47.893620 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_periodstat
[0m09:23:47.893991 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_datestat
[0m09:23:47.894836 [info ] [Thread-2 (]: 63 of 89 START sql incremental model test.full_datestat ........................ [RUN]
[0m09:23:47.895653 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_datestat'
[0m09:23:47.895920 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_datestat)
[0m09:23:47.896113 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_datestat
[0m09:23:47.902814 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m09:23:47.908754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.910930 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m09:23:47.916538 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.918448 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m09:23:47.925085 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.926937 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m09:23:47.931559 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.933078 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m09:23:47.938340 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.940515 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m09:23:47.947632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.949097 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m09:23:47.955295 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.957955 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m09:23:47.963239 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:47.964862 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m09:23:47.970642 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.972606 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m09:23:47.978173 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:47.980067 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_datestat"
[0m09:23:47.980640 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (compile): 2024-05-07 09:23:47.896215 => 2024-05-07 09:23:47.980533
[0m09:23:47.981011 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_datestat
[0m09:23:47.989268 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

            

    
        create table test.full_datestat__dbt_tmp
        
  
        
  engine = MergeTree()
        order by (__date,__table_name)
        
        
        
        empty
    as (
        -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT * FROM t0
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * FROM t1
) 
SELECT * FROM t2 





    )
        ...
[0m09:23:48.010626 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:48.014740 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    select name, type from system.columns where table = 'full_datestat__dbt_tmp'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.024722 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.028008 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_datestat"
[0m09:23:48.029274 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

        
  
    
    
        
        insert into test.full_datestat__dbt_tmp ("__date", "reportType", "accountName", "__table_name", "adSourceDirty", "adCampaignName", "adId", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "utmHash", "adTitle1", "adText", "adCost", "impressions", "clicks", "__emitted_at", "__link", "adGroupName", "adPhraseId", "AdCostStatHash", "UtmHashHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime")
  -- depends_on: test.link_datestat
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry
 
WITH t0 AS (
SELECT * FROM test.link_datestat
)
, t1 AS ( 
SELECT * FROM t0
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * FROM t1
) 
SELECT * FROM t2 





  
    ...
[0m09:23:48.060477 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.063729 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    drop table if exists test.full_datestat__dbt_backup 
  
  ...
[0m09:23:48.066908 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.068178 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */

    rename table test.full_datestat__dbt_tmp to test.full_datestat__dbt_backup 
  
  ...
[0m09:23:48.071983 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.073336 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
EXCHANGE TABLES test.full_datestat__dbt_backup AND test.full_datestat 
  
  ...
[0m09:23:48.078109 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.082561 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_datestat: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_datestat"} */
drop table if exists test.full_datestat__dbt_backup 
  ...
[0m09:23:48.085754 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.087206 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_datestat (execute): 2024-05-07 09:23:47.981200 => 2024-05-07 09:23:48.087136
[0m09:23:48.087909 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448765f0>]}
[0m09:23:48.088350 [info ] [Thread-2 (]: 63 of 89 OK created sql incremental model test.full_datestat ................... [[32mOK[0m in 0.19s]
[0m09:23:48.088696 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_datestat
[0m09:23:48.231505 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.39 seconds
[0m09:23:48.232762 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
EXCHANGE TABLES test.link_events__dbt_backup AND test.link_events 
  
  ...
[0m09:23:48.236238 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.240849 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.link_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.link_events"} */
drop table if exists test.link_events__dbt_backup 
  ...
[0m09:23:48.244961 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.247061 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.link_events (execute): 2024-05-07 09:23:47.788428 => 2024-05-07 09:23:48.247003
[0m09:23:48.247681 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449d6290>]}
[0m09:23:48.248222 [info ] [Thread-1 (]: 62 of 89 OK created sql table model test.link_events ........................... [[32mOK[0m in 0.50s]
[0m09:23:48.248577 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.link_events
[0m09:23:48.250458 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_tuples
[0m09:23:48.250982 [info ] [Thread-2 (]: 64 of 89 START sql table model test.graph_tuples ............................... [RUN]
[0m09:23:48.251632 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_tuples'
[0m09:23:48.251828 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_tuples)
[0m09:23:48.252010 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_tuples
[0m09:23:48.258249 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_tuples"
[0m09:23:48.260289 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (compile): 2024-05-07 09:23:48.252158 => 2024-05-07 09:23:48.260105
[0m09:23:48.260866 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_tuples
[0m09:23:48.265067 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

            

    
        create table test.graph_tuples__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null



    )
        ...
[0m09:23:48.296632 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.299384 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

    select name, type from system.columns where table = 'graph_tuples__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.304560 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.306671 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_tuples"
[0m09:23:48.309016 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */

  
    
    
        
        insert into test.graph_tuples__dbt_backup ("hash", "node_left")
  -- depends_on: test.link_events

    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_events
            where nullIf(CrmUserHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('YmClientHash'), toDateTime(0),  YmClientHash) as node_left
            from test.hash_events
            where nullIf(YmClientHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), __datetime,  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_events
            where nullIf(AppMetricaDeviceHash, '') is not null
    
        union all
    
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('AppMetricaDeviceHash'), toDateTime(0),  AppMetricaDeviceHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(AppMetricaDeviceHash, '') is not null
            union all
        
        
        
        
        
            select
                    tuple(toLowCardinality(__link), toDateTime(0),  __id) as hash,
                    tuple(toLowCardinality('CrmUserHash'), toDateTime(0),  CrmUserHash) as node_left
            from test.hash_registry_appprofilematching
            where nullIf(CrmUserHash, '') is not null



  ...
[0m09:23:48.341509 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.342639 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
EXCHANGE TABLES test.graph_tuples__dbt_backup AND test.graph_tuples 
  
  ...
[0m09:23:48.347463 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.351408 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_tuples: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_tuples"} */
drop table if exists test.graph_tuples__dbt_backup 
  ...
[0m09:23:48.354819 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.356157 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_tuples (execute): 2024-05-07 09:23:48.260979 => 2024-05-07 09:23:48.356088
[0m09:23:48.356887 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46be2860>]}
[0m09:23:48.357365 [info ] [Thread-2 (]: 64 of 89 OK created sql table model test.graph_tuples .......................... [[32mOK[0m in 0.11s]
[0m09:23:48.357716 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_tuples
[0m09:23:48.359211 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_lookup
[0m09:23:48.359721 [info ] [Thread-1 (]: 65 of 89 START sql table model test.graph_lookup ............................... [RUN]
[0m09:23:48.360390 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_lookup'
[0m09:23:48.360634 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_lookup)
[0m09:23:48.360811 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_lookup
[0m09:23:48.363673 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_lookup"
[0m09:23:48.365100 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (compile): 2024-05-07 09:23:48.360910 => 2024-05-07 09:23:48.364964
[0m09:23:48.365504 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_lookup
[0m09:23:48.369673 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

            

    
        create table test.graph_lookup__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_number)
        
        
        
        empty
    as (
        -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





    )
        ...
[0m09:23:48.385184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:48.391184 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

    select name, type from system.columns where table = 'graph_lookup__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.396680 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.398098 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_lookup"
[0m09:23:48.399140 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */

  
    
    
        
        insert into test.graph_lookup__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_tuples




with all_keys as
(
    
    select distinct hash as key_hash from test.graph_tuples
    union distinct select distinct node_left as key_hash from test.graph_tuples
)


select *, row_number() over() as key_number from all_keys





  ...
[0m09:23:48.425262 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.426610 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
EXCHANGE TABLES test.graph_lookup__dbt_backup AND test.graph_lookup 
  
  ...
[0m09:23:48.430504 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.435280 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_lookup: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_lookup"} */
drop table if exists test.graph_lookup__dbt_backup 
  ...
[0m09:23:48.440964 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.442564 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_lookup (execute): 2024-05-07 09:23:48.365716 => 2024-05-07 09:23:48.442493
[0m09:23:48.443151 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44bce950>]}
[0m09:23:48.443499 [info ] [Thread-1 (]: 65 of 89 OK created sql table model test.graph_lookup .......................... [[32mOK[0m in 0.08s]
[0m09:23:48.443830 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_lookup
[0m09:23:48.445156 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_unique
[0m09:23:48.446313 [info ] [Thread-2 (]: 66 of 89 START sql table model test.graph_unique ............................... [RUN]
[0m09:23:48.446920 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_unique'
[0m09:23:48.447094 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_unique)
[0m09:23:48.447258 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_unique
[0m09:23:48.450459 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_unique"
[0m09:23:48.451834 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (compile): 2024-05-07 09:23:48.447349 => 2024-05-07 09:23:48.451639
[0m09:23:48.452325 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_unique
[0m09:23:48.456645 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

            

    
        create table test.graph_unique__dbt_backup
        
  
        
  engine = MergeTree()
        order by (key_hash)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup




select * from test.graph_lookup





    )
        ...
[0m09:23:48.472096 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:48.475242 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

    select name, type from system.columns where table = 'graph_unique__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.480667 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.482272 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_unique"
[0m09:23:48.483638 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */

  
    
    
        
        insert into test.graph_unique__dbt_backup ("key_hash", "key_number")
  -- depends_on: test.graph_lookup




select * from test.graph_lookup





  ...
[0m09:23:48.492446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.494103 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
EXCHANGE TABLES test.graph_unique__dbt_backup AND test.graph_unique 
  
  ...
[0m09:23:48.499120 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.504603 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_unique: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_unique"} */
drop table if exists test.graph_unique__dbt_backup 
  ...
[0m09:23:48.508924 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.510823 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_unique (execute): 2024-05-07 09:23:48.452528 => 2024-05-07 09:23:48.510738
[0m09:23:48.511474 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44837250>]}
[0m09:23:48.511833 [info ] [Thread-2 (]: 66 of 89 OK created sql table model test.graph_unique .......................... [[32mOK[0m in 0.06s]
[0m09:23:48.512154 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_unique
[0m09:23:48.513662 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_edge
[0m09:23:48.514313 [info ] [Thread-1 (]: 67 of 89 START sql table model test.graph_edge ................................. [RUN]
[0m09:23:48.514896 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_edge'
[0m09:23:48.515093 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_edge)
[0m09:23:48.515261 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_edge
[0m09:23:48.518423 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_edge"
[0m09:23:48.519878 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (compile): 2024-05-07 09:23:48.515367 => 2024-05-07 09:23:48.519706
[0m09:23:48.520603 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_edge
[0m09:23:48.525488 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

            

    
        create table test.graph_edge__dbt_backup
        
  
        
  engine = MergeTree()
        
      order by (tuple())
        
        
        
        empty
    as (
        -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





    )
        ...
[0m09:23:48.539597 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.543446 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

    select name, type from system.columns where table = 'graph_edge__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.548418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.550115 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_edge"
[0m09:23:48.551108 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

  
    
    
        
        insert into test.graph_edge__dbt_backup ("node_id_left", "node_id_right", "group_id", "has_changed")
  -- depends_on: test.graph_unique
-- depends_on: test.graph_tuples




with join_left as (
    select key_number as node_id_left, node_left
    from test.graph_tuples x
    join test.graph_unique  y on x.hash = y.key_hash
)


select node_id_left, key_number as node_id_right, node_id_left as group_id, 1 as has_changed 
from join_left x
join test.graph_unique  y on x.node_left = y.key_hash





  ...
[0m09:23:48.560693 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.561893 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
EXCHANGE TABLES test.graph_edge__dbt_backup AND test.graph_edge 
  
  ...
[0m09:23:48.565958 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.568429 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */

        insert into test.graph_edge(node_id_left, node_id_right, group_id, has_changed)
                    select
                        node_id_right,
                        node_id_left,
                        group_id,
                        has_changed
                    from test.graph_edge;
      ...
[0m09:23:48.573968 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.578003 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_edge: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_edge"} */
drop table if exists test.graph_edge__dbt_backup 
  ...
[0m09:23:48.581948 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.583353 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_edge (execute): 2024-05-07 09:23:48.520833 => 2024-05-07 09:23:48.583289
[0m09:23:48.583907 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44834100>]}
[0m09:23:48.584369 [info ] [Thread-1 (]: 67 of 89 OK created sql table model test.graph_edge ............................ [[32mOK[0m in 0.07s]
[0m09:23:48.584721 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_edge
[0m09:23:48.586218 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.graph_glue
[0m09:23:48.587481 [info ] [Thread-2 (]: 68 of 89 START sql table model test.graph_glue ................................. [RUN]
[0m09:23:48.588200 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_glue'
[0m09:23:48.588481 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_glue)
[0m09:23:48.588688 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.graph_glue
[0m09:23:48.592234 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_glue"
[0m09:23:48.593552 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (compile): 2024-05-07 09:23:48.588798 => 2024-05-07 09:23:48.593392
[0m09:23:48.594008 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.graph_glue
[0m09:23:48.599246 [debug] [Thread-2 (]: Running iteration 0
[0m09:23:48.599705 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m09:23:48.649671 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.05 seconds
[0m09:23:48.650751 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m09:23:48.689092 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:48.690268 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m09:23:48.702758 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.703978 [debug] [Thread-2 (]: VALUE: 1
[0m09:23:48.704295 [debug] [Thread-2 (]: Running iteration 1
[0m09:23:48.704678 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m09:23:48.739054 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.740245 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m09:23:48.772199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.773203 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m09:23:48.783459 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.784896 [debug] [Thread-2 (]: VALUE: 0
[0m09:23:48.785148 [debug] [Thread-2 (]: Running iteration 2
[0m09:23:48.785265 [debug] [Thread-2 (]: Running iteration 3
[0m09:23:48.785372 [debug] [Thread-2 (]: Running iteration 4
[0m09:23:48.785469 [debug] [Thread-2 (]: Running iteration 5
[0m09:23:48.785565 [debug] [Thread-2 (]: Running iteration 6
[0m09:23:48.785660 [debug] [Thread-2 (]: Running iteration 7
[0m09:23:48.785754 [debug] [Thread-2 (]: Running iteration 8
[0m09:23:48.785847 [debug] [Thread-2 (]: Running iteration 9
[0m09:23:48.785941 [debug] [Thread-2 (]: Running iteration 10
[0m09:23:48.786033 [debug] [Thread-2 (]: Running iteration 11
[0m09:23:48.786126 [debug] [Thread-2 (]: Running iteration 12
[0m09:23:48.786219 [debug] [Thread-2 (]: Running iteration 13
[0m09:23:48.787501 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

            

    
        create table test.graph_glue__dbt_backup
        
  
        
  engine = MergeTree()
        order by (node_id_left)
        
        
        
        empty
    as (
        -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left





    )
        ...
[0m09:23:48.799145 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.801885 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

    select name, type from system.columns where table = 'graph_glue__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.807999 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.809405 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_glue"
[0m09:23:48.810652 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */

  
    
    
        
        insert into test.graph_glue__dbt_backup ("node_id_left", "qid")
  -- depends_on: test.graph_edge




select 
    node_id_left,
    min(group_id) as qid
from test.graph_edge
group by node_id_left





  ...
[0m09:23:48.825276 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.826494 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
EXCHANGE TABLES test.graph_glue__dbt_backup AND test.graph_glue 
  
  ...
[0m09:23:48.831583 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.835111 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_glue: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_glue"} */
drop table if exists test.graph_glue__dbt_backup 
  ...
[0m09:23:48.838450 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:48.840053 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.graph_glue (execute): 2024-05-07 09:23:48.594375 => 2024-05-07 09:23:48.839960
[0m09:23:48.840682 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b12920>]}
[0m09:23:48.841063 [info ] [Thread-2 (]: 68 of 89 OK created sql table model test.graph_glue ............................ [[32mOK[0m in 0.25s]
[0m09:23:48.841383 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.graph_glue
[0m09:23:48.842941 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.graph_qid
[0m09:23:48.843382 [info ] [Thread-1 (]: 69 of 89 START sql table model test.graph_qid .................................. [RUN]
[0m09:23:48.843961 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.graph_qid'
[0m09:23:48.844211 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.graph_qid)
[0m09:23:48.844390 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.graph_qid
[0m09:23:48.847724 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.graph_qid"
[0m09:23:48.849335 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (compile): 2024-05-07 09:23:48.844489 => 2024-05-07 09:23:48.849145
[0m09:23:48.850013 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.graph_qid
[0m09:23:48.854274 [debug] [Thread-1 (]: Running iteration 0
[0m09:23:48.855029 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_right engine=Log() as
        with
        min_group_id as (
            select
                node_id_left,
                min(group_id) as min_group_id
            from test.graph_edge
            group by node_id_left
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_edge e
        join min_group_id r on r.node_id_left = e.node_id_left
    
  ...
[0m09:23:48.890459 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.891891 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        create or replace table test.graph_edge engine=Log() as
        with
        min_group_id as (
            select
                node_id_right,
                min(group_id) as min_group_id
            from test.graph_right
            group by node_id_right
        )

        select
            node_id_left,
            node_id_right,
            min_group_id as group_id,
            min_group_id != e.group_id as has_changed
        from test.graph_right e
        join min_group_id r on r.node_id_right = e.node_id_right
    
  ...
[0m09:23:48.925094 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:48.926795 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    
        select 
            max(has_changed) 
        from test.graph_edge
    
  ...
[0m09:23:48.940211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.941327 [debug] [Thread-1 (]: VALUE: 0
[0m09:23:48.941542 [debug] [Thread-1 (]: Running iteration 1
[0m09:23:48.941653 [debug] [Thread-1 (]: Running iteration 2
[0m09:23:48.941753 [debug] [Thread-1 (]: Running iteration 3
[0m09:23:48.941860 [debug] [Thread-1 (]: Running iteration 4
[0m09:23:48.941959 [debug] [Thread-1 (]: Running iteration 5
[0m09:23:48.942064 [debug] [Thread-1 (]: Running iteration 6
[0m09:23:48.942158 [debug] [Thread-1 (]: Running iteration 7
[0m09:23:48.942252 [debug] [Thread-1 (]: Running iteration 8
[0m09:23:48.942346 [debug] [Thread-1 (]: Running iteration 9
[0m09:23:48.942473 [debug] [Thread-1 (]: Running iteration 10
[0m09:23:48.942587 [debug] [Thread-1 (]: Running iteration 11
[0m09:23:48.942684 [debug] [Thread-1 (]: Running iteration 12
[0m09:23:48.942778 [debug] [Thread-1 (]: Running iteration 13
[0m09:23:48.944196 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

            

    
        create table test.graph_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





    )
        ...
[0m09:23:48.960853 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:48.964116 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

    select name, type from system.columns where table = 'graph_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:48.971041 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.972416 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.graph_qid"
[0m09:23:48.973779 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */

  
    
    
        
        insert into test.graph_qid__dbt_backup ("__link", "__datetime", "__id", "qid")
  -- depends_on: test.graph_lookup
-- depends_on: test.graph_glue




select  
    toLowCardinality(
        tupleElement(key_hash, 1)
    ) as __link,
    tupleElement(key_hash, 2) as __datetime,
    tupleElement(key_hash, 3) as __id,
    qid
from test.graph_glue  -- Объединение с таблицей graph_glue
join test.graph_lookup on key_number = node_id_left  -- Соединение с таблицей graph_lookup





  ...
[0m09:23:48.983950 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.985168 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
EXCHANGE TABLES test.graph_qid__dbt_backup AND test.graph_qid 
  
  ...
[0m09:23:48.992784 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:48.997095 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.graph_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.graph_qid"} */
drop table if exists test.graph_qid__dbt_backup 
  ...
[0m09:23:49.001486 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.002746 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.graph_qid (execute): 2024-05-07 09:23:48.850251 => 2024-05-07 09:23:49.002685
[0m09:23:49.003284 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46be2230>]}
[0m09:23:49.003607 [info ] [Thread-1 (]: 69 of 89 OK created sql table model test.graph_qid ............................. [[32mOK[0m in 0.16s]
[0m09:23:49.003975 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.graph_qid
[0m09:23:49.005158 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.full_events
[0m09:23:49.005664 [info ] [Thread-2 (]: 70 of 89 START sql table model test.full_events ................................ [RUN]
[0m09:23:49.006303 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.full_events'
[0m09:23:49.006578 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.full_events)
[0m09:23:49.006766 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.full_events
[0m09:23:49.012565 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_manualadcoststat'
    
  ...
[0m09:23:49.016959 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.018473 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_utmhashregistry'
    
  ...
[0m09:23:49.023043 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.024958 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_adcoststat'
    
  ...
[0m09:23:49.030147 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.031406 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_mediaplanstat'
    
  ...
[0m09:23:49.035194 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.036461 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appinstallstat'
    
  ...
[0m09:23:49.041431 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.042813 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appeventstat'
    
  ...
[0m09:23:49.047511 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.048732 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appsessionstat'
    
  ...
[0m09:23:49.054036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.055791 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appdeeplinkstat'
    
  ...
[0m09:23:49.060501 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.061766 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_visitstat'
    
  ...
[0m09:23:49.066580 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.067838 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    
        SELECT 1 FROM system.tables WHERE database = 'test' AND name = 'link_registry_appprofilematching'
    
  ...
[0m09:23:49.073255 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.075949 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.full_events"
[0m09:23:49.076481 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (compile): 2024-05-07 09:23:49.006878 => 2024-05-07 09:23:49.076393
[0m09:23:49.076698 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.full_events
[0m09:23:49.080735 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

            

    
        create table test.full_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT * FROM t0
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * FROM t1
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT * FROM t2 





    )
        ...
[0m09:23:49.148446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.07 seconds
[0m09:23:49.151734 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

    select name, type from system.columns where table = 'full_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.156537 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.159066 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.full_events"
[0m09:23:49.159514 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */

  
    
    
        
        insert into test.full_events__dbt_backup ("__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "qid", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime")
  -- depends_on: test.graph_qid
-- depends_on: test.link_registry_appprofilematching
-- depends_on: test.link_registry_utmhashregistry

WITH t0 AS (
SELECT * FROM test.link_events
LEFT JOIN test.graph_qid USING (__id, __link, __datetime)
)
, t1 AS ( 
SELECT * FROM t0
LEFT JOIN link_registry_utmhashregistry USING (UtmHashHash) 
)
, t2 AS ( 
SELECT * FROM t1
LEFT JOIN link_registry_appprofilematching USING (AppMetricaDeviceHash,CrmUserHash) 
) 
SELECT * FROM t2 





  ...
[0m09:23:49.217715 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.06 seconds
[0m09:23:49.218902 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
EXCHANGE TABLES test.full_events__dbt_backup AND test.full_events 
  
  ...
[0m09:23:49.222868 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.226632 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.full_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.full_events"} */
drop table if exists test.full_events__dbt_backup 
  ...
[0m09:23:49.230874 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.232335 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.full_events (execute): 2024-05-07 09:23:49.076791 => 2024-05-07 09:23:49.232270
[0m09:23:49.232893 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a19330>]}
[0m09:23:49.233240 [info ] [Thread-2 (]: 70 of 89 OK created sql table model test.full_events ........................... [[32mOK[0m in 0.23s]
[0m09:23:49.233571 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.full_events
[0m09:23:49.235194 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m09:23:49.235481 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m09:23:49.235859 [info ] [Thread-1 (]: 71 of 89 START sql table model test.attr_myfirstfunnel_prepare_with_qid ........ [RUN]
[0m09:23:49.236507 [info ] [Thread-2 (]: 72 of 89 START sql table model test.attr_mysecondfunnel_prepare_with_qid ....... [RUN]
[0m09:23:49.237498 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid'
[0m09:23:49.238098 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid'
[0m09:23:49.238471 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid)
[0m09:23:49.238859 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid)
[0m09:23:49.239380 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m09:23:49.239704 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m09:23:49.243099 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m09:23:49.247664 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m09:23:49.249666 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (compile): 2024-05-07 09:23:49.243562 => 2024-05-07 09:23:49.249549
[0m09:23:49.250013 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m09:23:49.255082 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m09:23:49.257466 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (compile): 2024-05-07 09:23:49.239930 => 2024-05-07 09:23:49.257337
[0m09:23:49.258088 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m09:23:49.263559 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



    )
        ...
[0m09:23:49.289556 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:49.294743 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.295472 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:49.300125 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.300908 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.305395 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"
[0m09:23:49.307814 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m09:23:49.310889 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.313282 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"
[0m09:23:49.313770 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_prepare_with_qid__dbt_backup ("qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "adSourceDirty", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime")
  -- depends_on: test.full_events
-- depends_on: test.graph_qid

WITH full_events_without_qid AS (
SELECT *EXCEPT(qid) FROM test.full_events
)

SELECT y.qid, x.*
FROM full_events_without_qid AS x
LEFT JOIN test.graph_qid AS y
    USING (__datetime,__link, __id)



  ...
[0m09:23:49.330458 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.331935 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_prepare_with_qid 
  
  ...
[0m09:23:49.336479 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.341324 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_prepare_with_qid__dbt_backup 
  ...
[0m09:23:49.345666 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:49.346373 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.347600 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_prepare_with_qid 
  
  ...
[0m09:23:49.349972 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid (execute): 2024-05-07 09:23:49.250171 => 2024-05-07 09:23:49.349832
[0m09:23:49.352328 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448f38e0>]}
[0m09:23:49.353318 [info ] [Thread-2 (]: 72 of 89 OK created sql table model test.attr_mysecondfunnel_prepare_with_qid .. [[32mOK[0m in 0.11s]
[0m09:23:49.353901 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_prepare_with_qid
[0m09:23:49.354320 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.dataset_event_table
[0m09:23:49.355328 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.356116 [info ] [Thread-2 (]: 73 of 89 START sql view model test.dataset_event_table ......................... [RUN]
[0m09:23:49.361079 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_prepare_with_qid__dbt_backup 
  ...
[0m09:23:49.362027 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.dataset_event_table'
[0m09:23:49.363076 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.dataset_event_table)
[0m09:23:49.363999 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.dataset_event_table
[0m09:23:49.367552 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.dataset_event_table"
[0m09:23:49.368322 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.370545 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid (execute): 2024-05-07 09:23:49.258737 => 2024-05-07 09:23:49.370395
[0m09:23:49.371658 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448f1570>]}
[0m09:23:49.372331 [info ] [Thread-1 (]: 71 of 89 OK created sql table model test.attr_myfirstfunnel_prepare_with_qid ... [[32mOK[0m in 0.13s]
[0m09:23:49.372801 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (compile): 2024-05-07 09:23:49.364551 => 2024-05-07 09:23:49.372616
[0m09:23:49.373363 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_prepare_with_qid
[0m09:23:49.373888 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.dataset_event_table
[0m09:23:49.374419 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m09:23:49.379940 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.dataset_event_table"
[0m09:23:49.381401 [info ] [Thread-1 (]: 74 of 89 START sql table model test.attr_mysecondfunnel_create_events .......... [RUN]
[0m09:23:49.382549 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_events'
[0m09:23:49.382972 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_events)
[0m09:23:49.383245 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m09:23:49.392242 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m09:23:49.392892 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */


  create view test.dataset_event_table__dbt_tmp 
  
  as (
    SELECT *
FROM test.full_events


  )...
[0m09:23:49.394549 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (compile): 2024-05-07 09:23:49.383472 => 2024-05-07 09:23:49.394334
[0m09:23:49.395091 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m09:23:49.400352 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

            

    
        create table test.attr_mysecondfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





    )
        ...
[0m09:23:49.417921 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.421789 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    drop table if exists test.dataset_event_table__dbt_backup 
  
  ...
[0m09:23:49.422652 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.427419 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.428278 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.430240 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    rename table test.dataset_event_table to test.dataset_event_table__dbt_backup 
  
  ...
[0m09:23:49.433824 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.435806 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"
[0m09:23:49.436756 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.442650 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    drop table if exists test.dataset_event_table 
  
  ...
[0m09:23:49.444175 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  1
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  2
        WHEN __link = 'AppDeeplinkStat'  THEN  2
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  3
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_mysecondfunnel_prepare_with_qid





  ...
[0m09:23:49.447017 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.448361 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */

    rename table test.dataset_event_table__dbt_tmp to test.dataset_event_table 
  
  ...
[0m09:23:49.451280 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.455575 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.dataset_event_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.dataset_event_table"} */
drop table if exists test.dataset_event_table__dbt_backup 
  ...
[0m09:23:49.456870 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.458502 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_events__dbt_backup AND test.attr_mysecondfunnel_create_events 
  
  ...
[0m09:23:49.459694 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.461028 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.dataset_event_table (execute): 2024-05-07 09:23:49.374937 => 2024-05-07 09:23:49.460957
[0m09:23:49.461731 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44acd870>]}
[0m09:23:49.462460 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.466634 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_events"} */
drop table if exists test.attr_mysecondfunnel_create_events__dbt_backup 
  ...
[0m09:23:49.467374 [info ] [Thread-2 (]: 73 of 89 OK created sql view model test.dataset_event_table .................... [[32mOK[0m in 0.10s]
[0m09:23:49.468677 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.dataset_event_table
[0m09:23:49.469205 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m09:23:49.470354 [info ] [Thread-2 (]: 75 of 89 START sql table model test.attr_myfirstfunnel_create_events ........... [RUN]
[0m09:23:49.471440 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_events'
[0m09:23:49.471690 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_events)
[0m09:23:49.471879 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m09:23:49.476975 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m09:23:49.477951 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.479293 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_events (execute): 2024-05-07 09:23:49.395280 => 2024-05-07 09:23:49.479208
[0m09:23:49.480451 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46f33850>]}
[0m09:23:49.481374 [info ] [Thread-1 (]: 74 of 89 OK created sql table model test.attr_mysecondfunnel_create_events ..... [[32mOK[0m in 0.10s]
[0m09:23:49.481859 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_events
[0m09:23:49.482381 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (compile): 2024-05-07 09:23:49.472004 => 2024-05-07 09:23:49.482277
[0m09:23:49.483096 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m09:23:49.483616 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m09:23:49.484314 [info ] [Thread-1 (]: 76 of 89 START sql table model test.attr_mysecondfunnel_add_row_number ......... [RUN]
[0m09:23:49.490626 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

            

    
        create table test.attr_myfirstfunnel_create_events__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





    )
        ...
[0m09:23:49.491697 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number'
[0m09:23:49.492956 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number)
[0m09:23:49.493479 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m09:23:49.604850 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.11 seconds
[0m09:23:49.608824 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_events__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.613840 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m09:23:49.615743 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (compile): 2024-05-07 09:23:49.494015 => 2024-05-07 09:23:49.615555
[0m09:23:49.616253 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m09:23:49.622743 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

            

    
        create table test.attr_mysecondfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





    )
        ...
[0m09:23:49.623719 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.626926 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"
[0m09:23:49.627589 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_events__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid




select
    qid, 
    __link,
    CASE
    WHEN __link = 'VisitStat'  and osName = 'web'  THEN  1
        
    WHEN __link = 'AppInstallStat'  and installs >= 1  THEN  2
        
    WHEN __link = 'AppSessionStat'  and sessions >= 1  THEN  3
        WHEN __link = 'AppDeeplinkStat'  THEN  3
        
    WHEN __link = 'AppEventStat'  and screenView >= 1  THEN  4
        
    
    ELSE 0
    END as __priority, 
    __id,
    __datetime,
    toLowCardinality(
    CASE
    WHEN __link = 'VisitStat' THEN 'visits_step'
        
    WHEN __link = 'AppInstallStat' THEN 'install_step'
        
    WHEN __link = 'AppSessionStat' THEN 'app_visits_step'
        WHEN __link = 'AppDeeplinkStat' THEN 'app_visits_step'
        
    WHEN __link = 'AppEventStat' THEN 'event_step'
        
    
    END) as __step
 from test.attr_myfirstfunnel_prepare_with_qid





  ...
[0m09:23:49.643184 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.648019 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.648920 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.652160 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_events__dbt_backup AND test.attr_myfirstfunnel_create_events 
  
  ...
[0m09:23:49.657112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.659628 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"
[0m09:23:49.661199 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.668430 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_events: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_events"} */
drop table if exists test.attr_myfirstfunnel_create_events__dbt_backup 
  ...
[0m09:23:49.670304 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_mysecondfunnel_create_events





  ...
[0m09:23:49.673942 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.676176 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_events (execute): 2024-05-07 09:23:49.484774 => 2024-05-07 09:23:49.676048
[0m09:23:49.677380 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a4b6d0>]}
[0m09:23:49.678270 [info ] [Thread-2 (]: 75 of 89 OK created sql table model test.attr_myfirstfunnel_create_events ...... [[32mOK[0m in 0.21s]
[0m09:23:49.678859 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_events
[0m09:23:49.680122 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m09:23:49.681113 [info ] [Thread-2 (]: 77 of 89 START sql table model test.attr_myfirstfunnel_add_row_number .......... [RUN]
[0m09:23:49.682256 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number'
[0m09:23:49.682596 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number)
[0m09:23:49.682796 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m09:23:49.686428 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m09:23:49.687474 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.689718 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_add_row_number__dbt_backup AND test.attr_mysecondfunnel_add_row_number 
  
  ...
[0m09:23:49.691401 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (compile): 2024-05-07 09:23:49.682907 => 2024-05-07 09:23:49.691122
[0m09:23:49.691902 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m09:23:49.699679 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.702969 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

            

    
        create table test.attr_myfirstfunnel_add_row_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





    )
        ...
[0m09:23:49.709484 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number"} */
drop table if exists test.attr_mysecondfunnel_add_row_number__dbt_backup 
  ...
[0m09:23:49.716204 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.718118 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number (execute): 2024-05-07 09:23:49.616431 => 2024-05-07 09:23:49.718003
[0m09:23:49.719069 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b374f0>]}
[0m09:23:49.719925 [info ] [Thread-1 (]: 76 of 89 OK created sql table model test.attr_mysecondfunnel_add_row_number .... [[32mOK[0m in 0.23s]
[0m09:23:49.720664 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_add_row_number
[0m09:23:49.722118 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m09:23:49.722799 [info ] [Thread-1 (]: 78 of 89 START sql table model test.attr_mysecondfunnel_find_new_period ........ [RUN]
[0m09:23:49.723718 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period'
[0m09:23:49.724097 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period)
[0m09:23:49.724317 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m09:23:49.733133 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m09:23:49.734064 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.738798 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_add_row_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.740449 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (compile): 2024-05-07 09:23:49.724431 => 2024-05-07 09:23:49.740237
[0m09:23:49.740978 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m09:23:49.748516 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

            

    
        create table test.attr_mysecondfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m09:23:49.749376 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.752122 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"
[0m09:23:49.753695 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_add_row_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_create_events




select
    *,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from test.attr_myfirstfunnel_create_events





  ...
[0m09:23:49.763811 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.765231 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_add_row_number__dbt_backup AND test.attr_myfirstfunnel_add_row_number 
  
  ...
[0m09:23:49.769994 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.776015 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number"} */
drop table if exists test.attr_myfirstfunnel_add_row_number__dbt_backup 
  ...
[0m09:23:49.780787 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:49.781569 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.784684 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.787111 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number (execute): 2024-05-07 09:23:49.692027 => 2024-05-07 09:23:49.786929
[0m09:23:49.790537 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a49ea0>]}
[0m09:23:49.791645 [info ] [Thread-2 (]: 77 of 89 OK created sql table model test.attr_myfirstfunnel_add_row_number ..... [[32mOK[0m in 0.11s]
[0m09:23:49.792723 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_add_row_number
[0m09:23:49.794218 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m09:23:49.794860 [info ] [Thread-2 (]: 79 of 89 START sql table model test.attr_myfirstfunnel_find_new_period ......... [RUN]
[0m09:23:49.796165 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period'
[0m09:23:49.796650 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period)
[0m09:23:49.796974 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m09:23:49.803158 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.806519 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m09:23:49.808838 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"
[0m09:23:49.810989 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (compile): 2024-05-07 09:23:49.797236 => 2024-05-07 09:23:49.810680
[0m09:23:49.811835 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m09:23:49.812371 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_mysecondfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_mysecondfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m09:23:49.819502 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

            

    
        create table test.attr_myfirstfunnel_find_new_period__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





    )
        ...
[0m09:23:49.835466 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.836945 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_mysecondfunnel_find_new_period__dbt_backup AND test.attr_mysecondfunnel_find_new_period 
  
  ...
[0m09:23:49.839541 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.843234 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_find_new_period__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.844151 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.849649 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period"} */
drop table if exists test.attr_mysecondfunnel_find_new_period__dbt_backup 
  ...
[0m09:23:49.850770 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.854339 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"
[0m09:23:49.855846 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_find_new_period__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period")
  -- depends_on: test.attr_myfirstfunnel_add_row_number






with prep_new_period as (
    select
        *,
        max(case when __priority in [1, 2, 3, 4] then __datetime else null end) over (partition by qid order by __rn rows between unbounded preceding and 1 preceding) as prep_new_period
    from test.attr_myfirstfunnel_add_row_number
)


select
    qid, 
    __link,
    __priority,
    __id,
    __datetime,
    __rn,
    __step,
    CASE
    
            WHEN __link = 'VisitStat' and toDate(__datetime) - toDate(prep_new_period) < 
             90  THEN false
        
            WHEN __link = 'AppInstallStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppSessionStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppDeeplinkStat' and toDate(__datetime) - toDate(prep_new_period) < 
             30  THEN false
        
            WHEN __link = 'AppEventStat' and toDate(__datetime) - toDate(prep_new_period) < 
             7  THEN false
        ELSE true
    END as __is_new_period
 from prep_new_period   





  ...
[0m09:23:49.857592 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.859071 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period (execute): 2024-05-07 09:23:49.741281 => 2024-05-07 09:23:49.859000
[0m09:23:49.860036 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44963dc0>]}
[0m09:23:49.860987 [info ] [Thread-1 (]: 78 of 89 OK created sql table model test.attr_mysecondfunnel_find_new_period ... [[32mOK[0m in 0.14s]
[0m09:23:49.861454 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_find_new_period
[0m09:23:49.862366 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m09:23:49.862839 [info ] [Thread-1 (]: 80 of 89 START sql table model test.attr_mysecondfunnel_calculate_period_number  [RUN]
[0m09:23:49.863967 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number'
[0m09:23:49.864251 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number)
[0m09:23:49.864423 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m09:23:49.867937 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m09:23:49.869652 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.870350 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (compile): 2024-05-07 09:23:49.864517 => 2024-05-07 09:23:49.870091
[0m09:23:49.872020 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
EXCHANGE TABLES test.attr_myfirstfunnel_find_new_period__dbt_backup AND test.attr_myfirstfunnel_find_new_period 
  
  ...
[0m09:23:49.872559 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m09:23:49.877665 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

            

    
        create table test.attr_mysecondfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





    )
        ...
[0m09:23:49.879446 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.884876 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period"} */
drop table if exists test.attr_myfirstfunnel_find_new_period__dbt_backup 
  ...
[0m09:23:49.893499 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.894974 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period (execute): 2024-05-07 09:23:49.812802 => 2024-05-07 09:23:49.894900
[0m09:23:49.895678 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c6efef4f0>]}
[0m09:23:49.896221 [info ] [Thread-2 (]: 79 of 89 OK created sql table model test.attr_myfirstfunnel_find_new_period .... [[32mOK[0m in 0.10s]
[0m09:23:49.896899 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_find_new_period
[0m09:23:49.898106 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.901958 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.904021 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m09:23:49.905002 [info ] [Thread-2 (]: 81 of 89 START sql table model test.attr_myfirstfunnel_calculate_period_number . [RUN]
[0m09:23:49.906881 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number'
[0m09:23:49.907540 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number)
[0m09:23:49.908189 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m09:23:49.911895 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m09:23:49.913211 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.915366 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"
[0m09:23:49.916144 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (compile): 2024-05-07 09:23:49.908609 => 2024-05-07 09:23:49.915996
[0m09:23:49.916592 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m09:23:49.921252 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

            

    
        create table test.attr_myfirstfunnel_calculate_period_number__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





    )
        ...
[0m09:23:49.922699 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_mysecondfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_mysecondfunnel_find_new_period





  ...
[0m09:23:49.937320 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.938894 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_mysecondfunnel_calculate_period_number__dbt_backup AND test.attr_mysecondfunnel_calculate_period_number 
  
  ...
[0m09:23:49.940366 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:49.943738 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_calculate_period_number__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:49.950162 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.954271 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number"} */
drop table if exists test.attr_mysecondfunnel_calculate_period_number__dbt_backup 
  ...
[0m09:23:49.956165 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.958096 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"
[0m09:23:49.958896 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_calculate_period_number__dbt_backup ("qid", "__link", "__priority", "__id", "__datetime", "__rn", "__step", "__is_new_period", "__period_number")
  -- depends_on: test.attr_myfirstfunnel_find_new_period




select
    *,
    sum(toInt32(__is_new_period)) over (partition by qid order by __rn) AS __period_number
from test.attr_myfirstfunnel_find_new_period





  ...
[0m09:23:49.961038 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.962354 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number (execute): 2024-05-07 09:23:49.873480 => 2024-05-07 09:23:49.962284
[0m09:23:49.962912 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44963190>]}
[0m09:23:49.963272 [info ] [Thread-1 (]: 80 of 89 OK created sql table model test.attr_mysecondfunnel_calculate_period_number  [[32mOK[0m in 0.10s]
[0m09:23:49.963726 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_calculate_period_number
[0m09:23:49.964773 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m09:23:49.965226 [info ] [Thread-1 (]: 82 of 89 START sql table model test.attr_mysecondfunnel_create_missed_steps .... [RUN]
[0m09:23:49.965939 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps'
[0m09:23:49.966333 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps)
[0m09:23:49.966563 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m09:23:49.971397 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m09:23:49.972799 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.974344 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
EXCHANGE TABLES test.attr_myfirstfunnel_calculate_period_number__dbt_backup AND test.attr_myfirstfunnel_calculate_period_number 
  
  ...
[0m09:23:49.976449 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (compile): 2024-05-07 09:23:49.966730 => 2024-05-07 09:23:49.976275
[0m09:23:49.977012 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m09:23:49.982125 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

            

    
        create table test.attr_mysecondfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m09:23:49.982986 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:49.989125 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number"} */
drop table if exists test.attr_myfirstfunnel_calculate_period_number__dbt_backup 
  ...
[0m09:23:49.995036 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:49.996457 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number (execute): 2024-05-07 09:23:49.916972 => 2024-05-07 09:23:49.996382
[0m09:23:49.997209 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448342b0>]}
[0m09:23:49.997650 [info ] [Thread-2 (]: 81 of 89 OK created sql table model test.attr_myfirstfunnel_calculate_period_number  [[32mOK[0m in 0.09s]
[0m09:23:49.997999 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_calculate_period_number
[0m09:23:49.999000 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m09:23:49.999515 [info ] [Thread-2 (]: 83 of 89 START sql table model test.attr_myfirstfunnel_create_missed_steps ..... [RUN]
[0m09:23:50.000350 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps'
[0m09:23:50.000689 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps)
[0m09:23:50.000878 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m09:23:50.004655 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m09:23:50.005354 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (compile): 2024-05-07 09:23:50.000990 => 2024-05-07 09:23:50.005227
[0m09:23:50.005633 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m09:23:50.011292 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

            

    
        create table test.attr_myfirstfunnel_create_missed_steps__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__link,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





    )
        ...
[0m09:23:50.017056 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:50.021150 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:50.026736 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:50.028402 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"
[0m09:23:50.029573 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_mysecondfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_mysecondfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m09:23:50.039769 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:50.045405 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_create_missed_steps__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:50.050542 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:50.052326 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"
[0m09:23:50.052897 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_create_missed_steps__dbt_backup ("qid", "__link", "__id", "__priority", "__datetime", "__period_number", "__if_missed", "__step", "__rn")
  -- depends_on: test.attr_myfirstfunnel_calculate_period_number




with calc_max_priority as (
    select
        qid, 
        __link,
        __id,
        __datetime,
        __rn,
        __priority,
        __period_number,
        __step,
        max(__priority) over(partition by qid, __period_number) as max_priority
    from test.attr_myfirstfunnel_calculate_period_number
),


generate_all_priorities as (
    select
        distinct qid, __link,
        arrayJoin(range(1, assumeNotNull(max_priority) + 1)) as gen_priority
    from calc_max_priority
),


final as (
    select
        first_value(__id) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __id,
        gen_priority as __priority,
        qid, __link,
        first_value(__datetime) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __datetime,
        first_value(__period_number) OVER (PARTITION BY qid ORDER BY gen_priority ROWS BETWEEN current row AND UNBOUNDED FOLLOWING ) as __period_number,
        case when calc_max_priority.qid = 0 then true else false end as __if_missed,
        __step
    from generate_all_priorities
    left join calc_max_priority
        on generate_all_priorities.qid = calc_max_priority.qid and
           generate_all_priorities.gen_priority = calc_max_priority.__priority
)


select
    qid, __link, __id,
    __priority, __datetime,
    __period_number,
    __if_missed,__step,
    row_number() over (partition by qid order by __datetime, __priority, __id) AS __rn
from final





  ...
[0m09:23:50.055668 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:50.057133 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_mysecondfunnel_create_missed_steps__dbt_backup AND test.attr_mysecondfunnel_create_missed_steps 
  
  ...
[0m09:23:50.063142 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:50.067370 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps"} */
drop table if exists test.attr_mysecondfunnel_create_missed_steps__dbt_backup 
  ...
[0m09:23:50.071690 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:50.073800 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps (execute): 2024-05-07 09:23:49.977182 => 2024-05-07 09:23:50.073727
[0m09:23:50.074857 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:50.075781 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44961450>]}
[0m09:23:50.077133 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
EXCHANGE TABLES test.attr_myfirstfunnel_create_missed_steps__dbt_backup AND test.attr_myfirstfunnel_create_missed_steps 
  
  ...
[0m09:23:50.077784 [info ] [Thread-1 (]: 82 of 89 OK created sql table model test.attr_mysecondfunnel_create_missed_steps  [[32mOK[0m in 0.11s]
[0m09:23:50.079310 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_create_missed_steps
[0m09:23:50.080797 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.081256 [info ] [Thread-1 (]: 84 of 89 START sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m09:23:50.081875 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid'
[0m09:23:50.082023 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid)
[0m09:23:50.082177 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.088202 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m09:23:50.089724 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:50.094599 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps"} */
drop table if exists test.attr_myfirstfunnel_create_missed_steps__dbt_backup 
  ...
[0m09:23:50.095624 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (compile): 2024-05-07 09:23:50.082279 => 2024-05-07 09:23:50.095521
[0m09:23:50.096044 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.103232 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m09:23:50.104418 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:50.107664 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps (execute): 2024-05-07 09:23:50.005736 => 2024-05-07 09:23:50.107589
[0m09:23:50.108859 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449f1870>]}
[0m09:23:50.109561 [info ] [Thread-2 (]: 83 of 89 OK created sql table model test.attr_myfirstfunnel_create_missed_steps  [[32mOK[0m in 0.11s]
[0m09:23:50.110418 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_create_missed_steps
[0m09:23:50.111755 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.112218 [info ] [Thread-2 (]: 85 of 89 START sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [RUN]
[0m09:23:50.112889 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid'
[0m09:23:50.113150 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid)
[0m09:23:50.113323 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.119582 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m09:23:50.120474 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (compile): 2024-05-07 09:23:50.113434 => 2024-05-07 09:23:50.120315
[0m09:23:50.121064 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.126735 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

            

    
        create table test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__period_number,__datetime,__priority,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





    )
        ...
[0m09:23:50.139439 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:50.143150 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:50.148458 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:50.151599 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"
[0m09:23:50.152924 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime", "__last_click_rank", "adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_prepare_with_qid
-- depends_on: test.attr_mysecondfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 2 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 3 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_mysecondfunnel_prepare_with_qid AS x
join test.attr_mysecondfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m09:23:50.165866 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:50.169506 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:50.173418 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:50.175176 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_mysecondfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m09:23:50.176861 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:50.180213 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"
[0m09:23:50.181070 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:50.184900 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_mysecondfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m09:23:50.186053 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_prepare_with_qid
-- depends_on: test.attr_myfirstfunnel_create_missed_steps






select 
    y.__period_number as __period_number, 
    y.__if_missed as __if_missed, 
    y.__priority as __priority, 
    y.__step as __step,
    x.*EXCEPT(adSourceDirty),



    CASE
    WHEN LENGTH (adSourceDirty) < 2 THEN 1
    WHEN match(adSourceDirty, 'Органическая установка') THEN 2
    WHEN __priority = 4 and not __if_missed = 1 THEN 3
    WHEN __priority = 3 and not __if_missed = 1 THEN 4
    WHEN __priority = 2 and not __if_missed = 1 THEN 5
    WHEN __priority = 1 and not __if_missed = 1 THEN 6
    
    ELSE 0
    END as __last_click_rank,

    CASE
    WHEN __priority = 3 and not __if_missed = 1 THEN 1
    WHEN __priority = 2 and not __if_missed = 1 THEN 2
    WHEN __priority = 1 and not __if_missed = 1 THEN 3
    
    ELSE 0
    END as __first_click_rank,



CASE

         WHEN  __if_missed and __priority = 1 
         THEN '[Без веб сессии]'
    

         WHEN  __if_missed and __priority = 2 
         THEN '[Без установки]'
    

         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    
         WHEN  __if_missed and __priority = 3 
         THEN '[Без апп сессии]'
    

         WHEN  __if_missed and __priority = 4 
         THEN ''
    

ELSE adSourceDirty
END as adSourceDirty

from test.attr_myfirstfunnel_prepare_with_qid AS x
join test.attr_myfirstfunnel_create_missed_steps AS y
    using (qid, __datetime, __link, __id)





  ...
[0m09:23:50.189519 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:50.191087 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid (execute): 2024-05-07 09:23:50.096475 => 2024-05-07 09:23:50.191012
[0m09:23:50.191803 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44933910>]}
[0m09:23:50.192224 [info ] [Thread-1 (]: 84 of 89 OK created sql table model test.attr_mysecondfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.11s]
[0m09:23:50.192567 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_join_to_attr_prepare_with_qid
[0m09:23:50.208061 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.02 seconds
[0m09:23:50.209495 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
EXCHANGE TABLES test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup AND test.attr_myfirstfunnel_join_to_attr_prepare_with_qid 
  
  ...
[0m09:23:50.215053 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:50.218806 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid"} */
drop table if exists test.attr_myfirstfunnel_join_to_attr_prepare_with_qid__dbt_backup 
  ...
[0m09:23:50.222974 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:50.224825 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid (execute): 2024-05-07 09:23:50.121243 => 2024-05-07 09:23:50.224715
[0m09:23:50.225554 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c448285e0>]}
[0m09:23:51.025742 [info ] [Thread-2 (]: 85 of 89 OK created sql table model test.attr_myfirstfunnel_join_to_attr_prepare_with_qid  [[32mOK[0m in 0.11s]
[0m09:23:51.026423 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_join_to_attr_prepare_with_qid
[0m09:23:51.027796 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m09:23:51.028491 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m09:23:51.029056 [info ] [Thread-1 (]: 86 of 89 START sql table model test.attr_myfirstfunnel_model ................... [RUN]
[0m09:23:51.029824 [info ] [Thread-2 (]: 87 of 89 START sql table model test.attr_mysecondfunnel_model .................. [RUN]
[0m09:23:51.031519 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_model'
[0m09:23:51.032343 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_model'
[0m09:23:51.032767 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_model)
[0m09:23:51.033175 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_model)
[0m09:23:51.033909 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m09:23:51.034568 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m09:23:51.041287 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m09:23:51.047719 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m09:23:51.049262 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (compile): 2024-05-07 09:23:51.035015 => 2024-05-07 09:23:51.049047
[0m09:23:51.049889 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m09:23:51.050224 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (compile): 2024-05-07 09:23:51.041607 => 2024-05-07 09:23:51.050136
[0m09:23:51.054899 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

            

    
        create table test.attr_myfirstfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m09:23:51.055736 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m09:23:51.063333 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

            

    
        create table test.attr_mysecondfunnel_model__dbt_backup
        
  
        
  engine = MergeTree()
        order by (qid,__datetime,__id)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



    )
        ...
[0m09:23:51.083962 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:51.087521 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:51.092853 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:51.095505 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_model__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:51.096483 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.100341 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_model"
[0m09:23:51.101887 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

        ,max(__first_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_first_click_rank

     from test.attr_myfirstfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

         ,__first_click_rank = __max_first_click_rank as  __first_click__rank_condition
         ,sum(case when __first_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __first_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __myfirstfunnel_last_click_adSourceDirty
        
     

    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number order by __first_click_rank desc,__datetime, __priority, __id) as __myfirstfunnel_first_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m09:23:51.104055 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.107342 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_model"
[0m09:23:51.108435 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_model__dbt_backup ("qid", "__datetime", "__id", "__priority", "__if_missed", "__link", "__period_number", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_join_to_attr_prepare_with_qid







with
max_last_click_rank as (

    select
        *

        ,max(__last_click_rank) over(partition by qid, __period_number order by __datetime, __priority, __id) as __max_last_click_rank

     from test.attr_mysecondfunnel_join_to_attr_prepare_with_qid

),


target_count as (

    select
        *

         ,__last_click_rank = __max_last_click_rank as  __last_click__rank_condition
         ,sum(case when __last_click__rank_condition then 1 else 0 end) over(partition by qid, __period_number order by __datetime, __priority, __id) as __last_click__target_count 

    from max_last_click_rank
)


SELECT 
    qid, __datetime, __id, __priority,`__if_missed`,__link,__period_number


    
        
        
            ,first_value(utmSource) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmSource
        
            ,first_value(utmMedium) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmMedium
        
            ,first_value(utmCampaign) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmCampaign
        
            ,first_value(utmTerm) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmTerm
        
            ,first_value(utmContent) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_utmContent
        
            ,first_value(adSourceDirty) over(partition by qid, __period_number, __last_click__target_count  order by  __datetime, __priority, __id) as __mysecondfunnel_last_click_adSourceDirty
        
     


 FROM target_count



  ...
[0m09:23:51.129093 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:51.130590 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
EXCHANGE TABLES test.attr_myfirstfunnel_model__dbt_backup AND test.attr_myfirstfunnel_model 
  
  ...
[0m09:23:51.135422 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:51.137238 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
EXCHANGE TABLES test.attr_mysecondfunnel_model__dbt_backup AND test.attr_mysecondfunnel_model 
  
  ...
[0m09:23:51.138516 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.144794 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_model"} */
drop table if exists test.attr_myfirstfunnel_model__dbt_backup 
  ...
[0m09:23:51.146209 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.151046 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_model: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_model"} */
drop table if exists test.attr_mysecondfunnel_model__dbt_backup 
  ...
[0m09:23:51.151892 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.154846 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_model (execute): 2024-05-07 09:23:51.050539 => 2024-05-07 09:23:51.154773
[0m09:23:51.155475 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:51.156156 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a4d360>]}
[0m09:23:51.158041 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_model (execute): 2024-05-07 09:23:51.057282 => 2024-05-07 09:23:51.157968
[0m09:23:51.158882 [info ] [Thread-1 (]: 86 of 89 OK created sql table model test.attr_myfirstfunnel_model .............. [[32mOK[0m in 0.13s]
[0m09:23:51.160049 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a4f460>]}
[0m09:23:51.160514 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_model
[0m09:23:51.161333 [info ] [Thread-2 (]: 87 of 89 OK created sql table model test.attr_mysecondfunnel_model ............. [[32mOK[0m in 0.13s]
[0m09:23:51.163260 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_model
[0m09:23:51.163644 [debug] [Thread-2 (]: Began running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m09:23:51.164386 [info ] [Thread-2 (]: 88 of 89 START sql table model test.attr_myfirstfunnel_final_table ............. [RUN]
[0m09:23:51.165411 [debug] [Thread-2 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table'
[0m09:23:51.165989 [debug] [Thread-2 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_myfirstfunnel_final_table)
[0m09:23:51.166374 [debug] [Thread-2 (]: Began compiling node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m09:23:51.166686 [debug] [Thread-1 (]: Began running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m09:23:51.170359 [debug] [Thread-2 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m09:23:51.171039 [info ] [Thread-1 (]: 89 of 89 START sql table model test.attr_mysecondfunnel_final_table ............ [RUN]
[0m09:23:51.172430 [debug] [Thread-1 (]: Acquiring new clickhouse connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table'
[0m09:23:51.173124 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.etlcraft_integration_tests.attr_mysecondfunnel_final_table)
[0m09:23:51.173469 [debug] [Thread-1 (]: Began compiling node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m09:23:51.173828 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (compile): 2024-05-07 09:23:51.166966 => 2024-05-07 09:23:51.173704
[0m09:23:51.177442 [debug] [Thread-1 (]: Writing injected SQL for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m09:23:51.178171 [debug] [Thread-2 (]: Began executing node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m09:23:51.179291 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (compile): 2024-05-07 09:23:51.174066 => 2024-05-07 09:23:51.179142
[0m09:23:51.184194 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

            

    
        create table test.attr_myfirstfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m09:23:51.184690 [debug] [Thread-1 (]: Began executing node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m09:23:51.194324 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

            

    
        create table test.attr_mysecondfunnel_final_table__dbt_backup
        
  
        
  engine = MergeTree()
        order by (__datetime)
        
        
        
        empty
    as (
        -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



    )
        ...
[0m09:23:51.218638 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:51.222583 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_myfirstfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:51.223710 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.03 seconds
[0m09:23:51.228234 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

    select name, type from system.columns where table = 'attr_mysecondfunnel_final_table__dbt_backup'
    
      and database = 'test'
    
    order by position
  ...
[0m09:23:51.231255 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.234001 [debug] [Thread-2 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"
[0m09:23:51.235112 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.239129 [debug] [Thread-1 (]: Writing runtime sql for node "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"
[0m09:23:51.240040 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */

  
    
    
        
        insert into test.attr_mysecondfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime", "__last_click_rank", "adSourceDirty", "__mysecondfunnel_last_click_utmSource", "__mysecondfunnel_last_click_utmMedium", "__mysecondfunnel_last_click_utmCampaign", "__mysecondfunnel_last_click_utmTerm", "__mysecondfunnel_last_click_utmContent", "__mysecondfunnel_last_click_adSourceDirty")
  -- depends_on: test.attr_mysecondfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_mysecondfunnel_join_to_attr_prepare_with_qid
        join  test.attr_mysecondfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m09:23:51.240409 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */

  
    
    
        
        insert into test.attr_myfirstfunnel_final_table__dbt_backup ("__period_number", "__if_missed", "__priority", "__step", "qid", "__date", "__table_name", "event_datetime", "accountName", "appmetricaDeviceId", "mobileAdsId", "crmUserId", "promoCode", "osName", "cityName", "utmSource", "utmMedium", "utmCampaign", "utmTerm", "utmContent", "transactionId", "utmHash", "sessions", "addToCartSessions", "cartViewSessions", "checkoutSessions", "webSalesSessions", "sales", "amountSales", "registrationCardSessions", "registrationButtonClick", "linkingCardToPhoneNumberSessions", "registrationLendingPromotionsSessions", "registrationCashbackSessions", "instantDiscountActivationSessions", "couponActivationSessions", "participationInLotterySessions", "pagesViews", "screenView", "installApp", "installs", "installationDeviceId", "__emitted_at", "__link", "visitId", "clientId", "cityCode", "pageViews", "AppInstallStatHash", "AppEventStatHash", "AppSessionStatHash", "AppDeeplinkStatHash", "VisitStatHash", "AppMetricaDeviceHash", "CrmUserHash", "UtmHashHash", "YmClientHash", "__id", "__datetime", "link_registry_utmhashregistry.utmHash", "utm_base_url", "utm_utmSource", "utm_utmMedium", "utm_utmCampaign", "utm_project", "utm_utmContent", "utm_strategy", "utm_audience", "link_registry_utmhashregistry.__emitted_at", "link_registry_utmhashregistry.__table_name", "link_registry_utmhashregistry.__link", "UtmHashRegistryHash", "link_registry_utmhashregistry.__id", "link_registry_utmhashregistry.__datetime", "link_registry_appprofilematching.appmetricaDeviceId", "link_registry_appprofilematching.crmUserId", "link_registry_appprofilematching.cityName", "link_registry_appprofilematching.__emitted_at", "link_registry_appprofilematching.__table_name", "link_registry_appprofilematching.__link", "AppProfileMatchingHash", "link_registry_appprofilematching.__id", "link_registry_appprofilematching.__datetime", "__last_click_rank", "__first_click_rank", "adSourceDirty", "__myfirstfunnel_last_click_utmSource", "__myfirstfunnel_last_click_utmMedium", "__myfirstfunnel_last_click_utmCampaign", "__myfirstfunnel_last_click_utmTerm", "__myfirstfunnel_last_click_utmContent", "__myfirstfunnel_last_click_adSourceDirty", "__myfirstfunnel_first_click_utmSource", "__myfirstfunnel_first_click_utmMedium", "__myfirstfunnel_first_click_utmCampaign", "__myfirstfunnel_first_click_utmTerm", "__myfirstfunnel_first_click_utmContent", "__myfirstfunnel_first_click_adSourceDirty")
  -- depends_on: test.attr_myfirstfunnel_model




with 
    out as ( 
        select * except(_dbt_source_relation) 
        from  test.attr_myfirstfunnel_join_to_attr_prepare_with_qid
        join  test.attr_myfirstfunnel_model
            using (qid, __datetime, __id, __link, __period_number, __if_missed, __priority)
    )
    
select * from out



  ...
[0m09:23:51.276448 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:51.278370 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
EXCHANGE TABLES test.attr_mysecondfunnel_final_table__dbt_backup AND test.attr_mysecondfunnel_final_table 
  
  ...
[0m09:23:51.283323 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:51.284020 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.04 seconds
[0m09:23:51.288470 [debug] [Thread-1 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_mysecondfunnel_final_table"} */
drop table if exists test.attr_mysecondfunnel_final_table__dbt_backup 
  ...
[0m09:23:51.290289 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
EXCHANGE TABLES test.attr_myfirstfunnel_final_table__dbt_backup AND test.attr_myfirstfunnel_final_table 
  
  ...
[0m09:23:51.296140 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:51.300535 [debug] [Thread-2 (]: dbt_clickhouse adapter: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: /* {"app": "dbt", "dbt_version": "1.4.7", "profile_name": "dbt_local", "target_name": "dev", "node_id": "model.etlcraft_integration_tests.attr_myfirstfunnel_final_table"} */
drop table if exists test.attr_myfirstfunnel_final_table__dbt_backup 
  ...
[0m09:23:51.302404 [debug] [Thread-1 (]: dbt_clickhouse adapter: SQL status: OK in 0.01 seconds
[0m09:23:51.304348 [debug] [Thread-1 (]: Timing info for model.etlcraft_integration_tests.attr_mysecondfunnel_final_table (execute): 2024-05-07 09:23:51.185460 => 2024-05-07 09:23:51.304265
[0m09:23:51.305087 [debug] [Thread-2 (]: dbt_clickhouse adapter: SQL status: OK in 0.00 seconds
[0m09:23:51.306384 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44a6c520>]}
[0m09:23:51.308017 [debug] [Thread-2 (]: Timing info for model.etlcraft_integration_tests.attr_myfirstfunnel_final_table (execute): 2024-05-07 09:23:51.179639 => 2024-05-07 09:23:51.307948
[0m09:23:51.309350 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1b788de0-fb66-4eb2-b9c0-386281ae00a2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c449f38b0>]}
[0m09:23:51.308615 [info ] [Thread-1 (]: 89 of 89 OK created sql table model test.attr_mysecondfunnel_final_table ....... [[32mOK[0m in 0.13s]
[0m09:23:51.310797 [info ] [Thread-2 (]: 88 of 89 OK created sql table model test.attr_myfirstfunnel_final_table ........ [[32mOK[0m in 0.14s]
[0m09:23:51.311456 [debug] [Thread-1 (]: Finished running node model.etlcraft_integration_tests.attr_mysecondfunnel_final_table
[0m09:23:51.312010 [debug] [Thread-2 (]: Finished running node model.etlcraft_integration_tests.attr_myfirstfunnel_final_table
[0m09:23:51.314797 [debug] [MainThread]: Acquiring new clickhouse connection 'master'
[0m09:23:51.315288 [debug] [MainThread]: Connection 'master' was properly closed.
[0m09:23:51.315430 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_mysecondfunnel_final_table' was left open.
[0m09:23:51.315565 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_mysecondfunnel_final_table: Close
[0m09:23:51.315663 [debug] [MainThread]: Connection 'model.etlcraft_integration_tests.attr_myfirstfunnel_final_table' was left open.
[0m09:23:51.315768 [debug] [MainThread]: On model.etlcraft_integration_tests.attr_myfirstfunnel_final_table: Close
[0m09:23:51.316212 [info ] [MainThread]: 
[0m09:23:51.316508 [info ] [MainThread]: Finished running 20 view models, 27 incremental models, 42 table models in 0 hours 0 minutes and 11.75 seconds (11.75s).
[0m09:23:51.319235 [debug] [MainThread]: Command end result
[0m09:23:51.348435 [info ] [MainThread]: 
[0m09:23:51.348925 [info ] [MainThread]: [32mCompleted successfully[0m
[0m09:23:51.349323 [info ] [MainThread]: 
[0m09:23:51.349525 [info ] [MainThread]: Done. PASS=89 WARN=0 ERROR=0 SKIP=0 TOTAL=89
[0m09:23:51.350194 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46f32c80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c46f32ce0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c44b429e0>]}
[0m09:23:51.350481 [debug] [MainThread]: Flushing usage events
